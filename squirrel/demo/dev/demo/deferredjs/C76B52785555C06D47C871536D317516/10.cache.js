function _hb(){}
function iib(){}
function fib(){}
function nib(){}
function mib(){}
function rib(){}
function qib(){}
function Pjb(){}
function $jb(){}
function Xjb(){}
function dkb(){}
function ckb(){}
function hkb(){}
function gkb(){}
function wsb(){}
function Ntb(){}
function Stb(){}
function Vtb(){}
function kub(){}
function oub(){}
function KCb(){}
function lob(a,b){a.r=b}
function MCb(){Qwb.call(this)}
function Wtb(){Gsb.call(this,new Rsb)}
function aib(){ahb.call(this,(eib(),dib))}
function Qjb(){ahb.call(this,(Wjb(),Vjb))}
function Otb(a){Gsb.call(this,a);Fsb(this,a.a)}
function Ttb(){Rsb.call(this);this.a=(Btb(),Atb)}
function vib(){vib=LFb;hib=new rib}
function eib(){eib=LFb;dib=new iib}
function uib(){uib=LFb;gib=new nib}
function Wjb(){Wjb=LFb;Vjb=new $jb}
function kkb(){kkb=LFb;Yjb=new dkb}
function lkb(){lkb=LFb;Zjb=new hkb}
function xsb(){msb.call(this,16777215);this.b=1;this.a=0;new Npb(0,0,0)}
function lub(a){Msb.call(this,a);this.a=a.a;this.b=a.c;this.d=a.f;this.c=a.e;this.j=null;this.g=a.b;Fsb(this,a.d)}
function pub(){Tsb.call(this);this.a=new ynb(328965);this.f=new ynb(1118481);this.c=new ynb(0);this.b=(Ulb(),Tlb);this.d=(Btb(),Atb)}
function LCb(){var a,b,c,d,e,f,g,i;a=bg($doc,sKb);a.width=256;a.height=256;b=a.getContext(tKb);d=b.getImageData(0,0,256,256);i=0;for(c=0,e=0,f=d.data.length;c<f;c+=4,++e){g=e%64;i=g==0?i+1:i;d.data[c]=255;d.data[c+1]=255;d.data[c+2]=255;d.data[c+3]=jp(Math.floor(g^i))}b.putImageData(d,0,0);return a}
_=aib.prototype=_hb.prototype=new Xgb;_.gC=function bib(){return nw};_.Yc=function cib(){Zgb(this,'mNear',new nkb((Ikb(),ukb),new mX(1)));Zgb(this,'mFar',new nkb(ukb,new mX(2000)));Zgb(this,XJb,new nkb(ukb,new mX(1)))};var dib;_=iib.prototype=fib.prototype=new Jb;_.gC=function jib(){return mw};_._c=function kib(){return uib(),gib};_.ad=function lib(){return vib(),hib};var gib=null,hib=null;_=nib.prototype=mib.prototype=new Jb;_.gC=function oib(){return kw};_.Jb=function pib(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\nvoid main() {\r\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n}\r\n'};_.cM={44:1};_=rib.prototype=qib.prototype=new Jb;_.gC=function sib(){return lw};_.Jb=function tib(){return 'void main() {\r\n\r\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n}\r\n'};_.cM={44:1};_=Qjb.prototype=Pjb.prototype=new Xgb;_.gC=function Rjb(){return Dw};_.Yc=function Sjb(){Ygb(this,(Rkb(),Mkb));Ygb(this,Nkb);Ygb(this,Okb);Ygb(this,Qkb);Zgb(this,YJb,new nkb((Ikb(),tkb),new ynb(16777215)));Zgb(this,ZJb,new nkb(tkb,new ynb(0)));Zgb(this,'specular',new nkb(tkb,new ynb(1118481)));Zgb(this,'shininess',new nkb(ukb,new mX(30)));Zgb(this,$Jb,new nkb(Ekb,new Npb(1,1,1)))};_.Zc=function Tjb(a){var b,c;c=new g1(Wo(qA,{78:1,79:1,83:1,94:1},1,[ZIb,_Jb,aKb,bKb,$Ib,'uniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\r\n\t#ifdef PHONG_PER_PIXEL\r\n\t\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\t\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\t#else\r\n\t\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\t#endif\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\r\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\r\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\r\n\tuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\r\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\r\n\r\n\t#ifdef PHONG_PER_PIXEL\r\n\t\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\r\n\t#else\r\n\t\tvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\r\n\t#endif\r\n\r\n\tvarying vec3 vWorldPosition;\r\n\r\n#endif\r\n\r\n#ifdef WRAP_AROUND\r\n\tuniform vec3 wrapRGB;\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\nvarying vec3 vNormal;',_Ib]));b=new g1(Wo(qA,{78:1,79:1,83:1,94:1},1,[cKb,aJb,'vec3 normal = normalize( vNormal );\r\nvec3 viewPosition = normalize( vViewPosition );\r\n\r\n#ifdef DOUBLE_SIDED\r\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tvec3 pointDiffuse  = vec3( 0.0 );\r\n\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\t\t#ifdef PHONG_PER_PIXEL\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\t\t#else\r\n\t\t\tvec3 lVector = normalize( vPointLight[ i ].xyz );\r\n\t\t\tfloat lDistance = vPointLight[ i ].w;\r\n\t\t#endif\r\n\r\n\t\t// diffuse\r\n\r\n\t\tfloat dotProduct = dot( normal, lVector );\r\n\r\n\t\t#ifdef WRAP_AROUND\r\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\r\n\t\t#else\r\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t#endif\r\n\r\n\t\tpointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\r\n\r\n\t\t// specular\r\n\r\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\tfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\r\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\r\n\t\t#else\r\n\t\t\tpointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\r\n\t\t#endif\r\n\t}\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvec3 spotDiffuse  = vec3( 0.0 );\r\n\tvec3 spotSpecular = vec3( 0.0 );\r\n\r\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\r\n\t\t#ifdef PHONG_PER_PIXEL\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\t\t#else\r\n\t\t\tvec3 lVector = normalize( vSpotLight[ i ].xyz );\r\n\t\t\tfloat lDistance = vSpotLight[ i ].w;\r\n\t\t#endif\r\n\r\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\r\n\r\n\t\tif ( spotEffect > spotLightAngle[ i ] ) {\r\n\t\t\tspotEffect = pow( spotEffect, spotLightExponent[ i ] );\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\r\n\t\t\t#ifdef WRAP_AROUND\r\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\r\n\t\t\t#else\r\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t\t#endif\r\n\r\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\r\n\r\n\t\t\t// specular\r\n\r\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\r\n\t\t\tfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\r\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\r\n\t\t\t#else\r\n\t\t\t\tspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\r\n\t\t\t#endif\r\n\t\t}\r\n\t}\r\n\r\n#endif\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tvec3 dirDiffuse  = vec3( 0.0 );\r\n\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\r\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t// diffuse\r\n\r\n\t\tfloat dotProduct = dot( normal, dirVector );\r\n\r\n\t\t#ifdef WRAP_AROUND\r\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\r\n\t\t#else\r\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t#endif\r\n\r\n\t\tdirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\r\n\t\t// specular\r\n\r\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\tfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t/*\r\n\t\t\t// fresnel term from skin shader\r\n\t\t\tconst float F0 = 0.128;\r\n\t\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\r\n\t\t\tfloat exponential = pow( base, 5.0 );\r\n\t\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\r\n\t\t*/\r\n\r\n\t\t/*\r\n\t\t\t// fresnel term from fresnel shader\r\n\t\t\tconst float mFresnelBias = 0.08;\r\n\t\t\tconst float mFresnelScale = 0.3;\r\n\t\t\tconst float mFresnelPower = 5.0;\r\n\t\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\r\n\t\t*/\r\n\r\n\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\t//dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\r\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\r\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\r\n\t\t\r\n\t\t#else\r\n\t\t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\r\n\t\t#endif\r\n\t}\r\n\r\n#endif\r\n\r\nvec3 totalDiffuse = vec3( 0.0 );\r\nvec3 totalSpecular = vec3( 0.0 );\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\ttotalDiffuse += dirDiffuse;\r\n\ttotalSpecular += dirSpecular;\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\ttotalDiffuse += pointDiffuse;\r\n\ttotalSpecular += pointSpecular;\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\ttotalDiffuse += spotDiffuse;\r\n\ttotalSpecular += spotSpecular;\r\n#endif\r\n\r\n#ifdef METAL\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n#else\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\r\n#endif',dKb,bJb,eKb,cJb,fKb,dJb]));$gb(this,ehb(a,Wo(sA,{78:1,94:1},101,[c,b])))};_.$c=function Ujb(a){var b,c,d,e;e=new g1(Wo(qA,{78:1,79:1,83:1,94:1},1,[gKb,hKb,iKb,'#ifndef PHONG_PER_PIXEL\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\t\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n\t\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\t#endif\r\n\r\n\t#if MAX_SPOT_LIGHTS > 0\r\n\t\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\r\n\t\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\r\n\r\n\t\tvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvarying vec3 vWorldPosition;\r\n#endif',ZIb,jKb,kKb,eJb]));b=new g1(Wo(qA,{78:1,79:1,83:1,94:1},1,[lKb,mKb,nKb,fJb]));c=new g1(Wo(qA,{78:1,79:1,83:1,94:1},1,[oKb]));d=new g1(Wo(qA,{78:1,79:1,83:1,94:1},1,['#ifndef PHONG_PER_PIXEL\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\t\t\t\r\n\t\t\tvPointLight[ i ] = vec4( lVector, lDistance );\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t#if MAX_SPOT_LIGHTS > 0\r\n\t\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\r\n\t\t\t\r\n\t\t\tvSpotLight[ i ] = vec4( lVector, lDistance );\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvWorldPosition = mPosition.xyz;\r\n#endif',pKb,qKb,rKb,gJb]));_gb(this,ehb(a,Wo(sA,{78:1,94:1},101,[e,b,c,d])))};var Vjb;_=$jb.prototype=Xjb.prototype=new Jb;_.gC=function _jb(){return Cw};_._c=function akb(){return kkb(),Yjb};_.ad=function bkb(){return lkb(),Zjb};var Yjb=null,Zjb=null;_=dkb.prototype=ckb.prototype=new Jb;_.gC=function ekb(){return Aw};_.Jb=function fkb(){return 'uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\n\r\n//[*]\r\n\t\t\t\r\nvoid main() {\r\n\tgl_FragColor = vec4( vec3 ( 1.0 ), opacity );\r\n\t\t\t\t\r\n//[*]\r\n\t\t\t\t\r\n}\r\n'};_.cM={44:1};_=hkb.prototype=gkb.prototype=new Jb;_.gC=function ikb(){return Bw};_.Jb=function jkb(){return 'varying vec3 vViewPosition;\r\nvarying vec3 vNormal;\r\n\r\n//[*]\r\n\t\t\t\r\nvoid main() {\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t\r\n//[*]\r\n\t\t\t\r\n#ifndef USE_ENVMAP\r\n\tvec4 mPosition = objectMatrix * vec4( position, 1.0 );\r\n#endif\r\n\r\nvViewPosition = -mvPosition.xyz;\r\n\t\t\t\r\n//[*]\r\n\t\t\t\r\nvNormal = transformedNormal;\r\n\r\n//[*]\r\n\r\n}\r\n'};_.cM={44:1};_=xsb.prototype=wsb.prototype=new lsb;_.gC=function ysb(){return Ox};_.cM={145:1,146:1,157:1};_.a=0;_.b=0;_=Otb.prototype=Ntb.prototype=new Asb;_.td=function Ptb(){return null};_.gC=function Qtb(){return ay};_.vd=function Rtb(){return new aib};_.cM={149:1};_=Ttb.prototype=Stb.prototype=new Qsb;_.gC=function Utb(){return _x};_=Wtb.prototype=Vtb.prototype=new Asb;_.gC=function Xtb(){return by};_.cM={149:1,153:1};_=lub.prototype=kub.prototype=new zsb;_.gC=function mub(){return hy};_.vd=function nub(){return new Qjb};_.cM={147:1,149:1,155:1};_.a=null;_.b=null;_.c=0;_.d=null;_.e=null;_=pub.prototype=oub.prototype=new Psb;_.gC=function qub(){return gy};_.e=30;_=FCb.prototype;_.kb=function JCb(){Mwb(this.b,new MCb(this.a))};_=MCb.prototype=KCb.prototype=new Pwb;_.gC=function NCb(){return Gz};_.Xc=function OCb(){B5(this,new knb(45,J5(this.q.z),1,2000))};_.bb=function PCb(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;Jpb(this.p.F,0,200,800);Amb(this.s,this.p);c=new mob;for(i=0;i<=40;++i){w0(c.B,new Npb(-500,-75,i*25-500));w0(c.B,new Npb(500,-75,i*25-500));w0(c.B,new Npb(i*25-500,-75,-500));w0(c.B,new Npb(i*25-500,-75,500))}o=new $sb;o.a=new ynb(16777215);o.t=0.20000000298023224;n=new Wsb(o);k=new Qub(c,n,(Zub(),Xub));Amb(this.s,k);C=new qlb(LCb());C.o=true;this.a=new G0;u=new bub;u.j=C;u.u=true;w0(this.a,new Ztb(u));v=new bub;v.g=new ynb(14540253);v.d=(Btb(),ytb);w0(this.a,new Ztb(v));z=new pub;z.a=new ynb(197379);z.g=new ynb(14540253);z.f=new ynb(39168);z.e=30;z.d=ytb;w0(this.a,new lub(z));w0(this.a,new eub(new iub));q=new Ltb;q.g=new ynb(16755200);q.u=true;q.q=(jtb(),ctb);w0(this.a,new Gtb(q));w=new bub;w.g=new ynb(14540253);w.d=Atb;w0(this.a,new Ztb(w));z.j=C;z.u=true;w0(this.a,new lub(z));y=new iub;y.a=Atb;w0(this.a,new eub(y));r=new Ltb;r.g=new ynb(65450);r.w=true;w0(this.a,new Gtb(r));w0(this.a,new Otb(new Ttb));x=new bub;x.g=new ynb(6710886);x.c=new ynb(16711680);x.a=new ynb(0);x.d=Atb;w0(this.a,new Ztb(x));A=new pub;A.a=new ynb(0);A.c=new ynb(16711680);A.g=new ynb(0);A.f=new ynb(6710886);A.e=10;A.d=Atb;A.t=0.8999999761581421;A.u=true;w0(this.a,new lub(A));s=new Ltb;r.j=C;r.u=true;w0(this.a,new Gtb(s));g=new srb(70,32,16);e=new srb(70,32,16);f=new srb(70,32,16);for(i=0,j=f.n.b;i<j;++i){b=dp(A0(f.n,i),132);b.g=0}lob(f,this.a);w0(this.a,new Wtb);this.b=new G0;for(i=0,j=this.a.b;i<j;++i){p=dp(A0(this.a,i),149);d=p.gC()==by?f:p.N==ytb?e:g;B=new lvb(d,p);xpb(B.F,i%4*200-400);Kpb(B.F,Math.floor(i/4)*200-200);xpb(B.I,Math.random()*200-100);ypb(B.I,Math.random()*200-100);Kpb(B.I,Math.random()*200-100);w0(this.b,B);Amb(this.s,B)}t=new Ltb;t.g=new ynb(16777215);this.c=new lvb(new srb(4,8,8),new Gtb(t));Amb(this.s,this.c);Amb(this.s,new psb(1118481));a=new tsb(0.125);xpb(a.F,Math.random()-0.5);ypb(a.F,Math.random()-0.5);Kpb(a.F,Math.random()-0.5);a.F.pd();Amb(this.s,a);this.d=new xsb;Amb(this.s,this.d)};_.Vc=function QCb(){};_.cb=function RCb(a){var b,c,d,e,f;f=1.0E-4*a;xpb(this.p.F,Math.cos(f)*1000);Kpb(this.p.F,Math.sin(f)*1000);Qmb(this.p,this.s.F);for(b=0,c=this.b.b;b<c;++b){e=dp(A0(this.b,b),160);e.I.c+=0.009999999776482582;e.I.d+=0.004999999888241291;d=dp(A0(this.a,b),149);b>9&&fp(d,155)?tnb(dp(d,155).b,0.5400000214576721,1,0.7*(0.5+0.5*Math.sin(35*f))):b>9&&fp(d,154)&&tnb(dp(d,154).b,0.03999999910593033,1,0.7*(0.5+0.5*Math.cos(35*f)))}xpb(this.c.F,Math.sin(f*7)*300);ypb(this.c.F,Math.cos(f*5)*400);Kpb(this.c.F,Math.cos(f*3)*300);xpb(this.d.F,this.c.F.c);ypb(this.d.F,this.c.F.d);Kpb(this.d.F,this.c.F.b);A5(this)};_.a=null;_.b=null;_.c=null;_.d=null;var nw=TW(DJb,'ShaderDepth'),mw=TW(DJb,'ShaderDepth_Resources_default_InlineClientBundleGenerator'),kw=TW(DJb,'ShaderDepth_Resources_default_InlineClientBundleGenerator$1'),lw=TW(DJb,'ShaderDepth_Resources_default_InlineClientBundleGenerator$2'),Dw=TW(DJb,'ShaderPhong'),Cw=TW(DJb,'ShaderPhong_Resources_default_InlineClientBundleGenerator'),Aw=TW(DJb,'ShaderPhong_Resources_default_InlineClientBundleGenerator$1'),Bw=TW(DJb,'ShaderPhong_Resources_default_InlineClientBundleGenerator$2'),_x=TW(uKb,'MeshDepthMaterial$MeshDepthMaterialOptions'),by=TW(uKb,'MeshFaceMaterial'),gy=TW(uKb,'MeshPhongMaterial$MeshPhongMaterialOptions'),Gz=TW(YIb,'MaterialsCanvas2D$DemoScene');NFb(Md)(10);