function oib(){}
function xib(){}
function uib(){}
function Cib(){}
function Bib(){}
function Gib(){}
function Fib(){}
function ckb(){}
function nkb(){}
function kkb(){}
function skb(){}
function rkb(){}
function wkb(){}
function vkb(){}
function Lsb(){}
function aub(){}
function fub(){}
function iub(){}
function zub(){}
function Dub(){}
function ZCb(){}
function Aob(a,b){a.s=b}
function _Cb(){dxb.call(this)}
function jub(){Vsb.call(this,new etb)}
function pib(){phb.call(this,(tib(),sib))}
function dkb(){phb.call(this,(jkb(),ikb))}
function bub(a){Vsb.call(this,a);Usb(this,a.b)}
function gub(){etb.call(this);this.b=(Qtb(),Ptb)}
function tib(){tib=$Fb;sib=new xib}
function Jib(){Jib=$Fb;vib=new Cib}
function Kib(){Kib=$Fb;wib=new Gib}
function jkb(){jkb=$Fb;ikb=new nkb}
function zkb(){zkb=$Fb;lkb=new skb}
function Akb(){Akb=$Fb;mkb=new wkb}
function Msb(){Bsb.call(this,16777215);this.c=1;this.b=0;new aqb(0,0,0)}
function Aub(a){_sb.call(this,a);this.b=a.b;this.c=a.d;this.e=a.g;this.d=a.f;this.k=null;this.i=a.c;Usb(this,a.e)}
function Eub(){gtb.call(this);this.b=new Nnb(328965);this.g=new Nnb(1118481);this.d=new Nnb(0);this.c=(hmb(),gmb);this.e=(Qtb(),Ptb)}
function $Cb(){var a,b,c,d,e,f,g,i;a=$doc.createElement(GKb);a.width=256;a.height=256;b=a.getContext(HKb);d=b.getImageData(0,0,256,256);i=0;for(c=0,e=0,f=d.data.length;c<f;c+=4,++e){g=e%64;i=g==0?i+1:i;d.data[c]=255;d.data[c+1]=255;d.data[c+2]=255;d.data[c+3]=Lp(Math.floor(g^i))}b.putImageData(d,0,0);return a}
_=pib.prototype=oib.prototype=new khb;_.gC=function qib(){return Uw};_.dd=function rib(){mhb(this,'mNear',new Ckb((Xkb(),Jkb),new BX(1)));mhb(this,'mFar',new Ckb(Jkb,new BX(2000)));mhb(this,jKb,new Ckb(Jkb,new BX(1)))};var sib;_=xib.prototype=uib.prototype=new Jb;_.gC=function yib(){return Tw};_.gd=function zib(){return Jib(),vib};_.hd=function Aib(){return Kib(),wib};var vib=null,wib=null;_=Cib.prototype=Bib.prototype=new Jb;_.gC=function Dib(){return Rw};_.Qb=function Eib(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\nvoid main() {\r\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n}\r\n'};_.cM={44:1};_=Gib.prototype=Fib.prototype=new Jb;_.gC=function Hib(){return Sw};_.Qb=function Iib(){return 'void main() {\r\n\r\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n}\r\n'};_.cM={44:1};_=dkb.prototype=ckb.prototype=new khb;_.gC=function ekb(){return ix};_.dd=function fkb(){lhb(this,(elb(),_kb));lhb(this,alb);lhb(this,blb);lhb(this,dlb);mhb(this,kKb,new Ckb((Xkb(),Ikb),new Nnb(16777215)));mhb(this,lKb,new Ckb(Ikb,new Nnb(0)));mhb(this,'specular',new Ckb(Ikb,new Nnb(1118481)));mhb(this,'shininess',new Ckb(Jkb,new BX(30)));mhb(this,mKb,new Ckb(Tkb,new aqb(1,1,1)))};_.ed=function gkb(a){var b,c;c=new v1(wp(XA,{78:1,79:1,83:1,94:1},1,[lJb,nKb,oKb,pKb,mJb,'uniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\r\n\t#ifdef PHONG_PER_PIXEL\r\n\t\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\t\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\t#else\r\n\t\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\t#endif\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\r\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\r\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\r\n\tuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\r\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\r\n\r\n\t#ifdef PHONG_PER_PIXEL\r\n\t\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\r\n\t#else\r\n\t\tvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\r\n\t#endif\r\n\r\n\tvarying vec3 vWorldPosition;\r\n\r\n#endif\r\n\r\n#ifdef WRAP_AROUND\r\n\tuniform vec3 wrapRGB;\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\nvarying vec3 vNormal;',nJb]));b=new v1(wp(XA,{78:1,79:1,83:1,94:1},1,[qKb,oJb,'vec3 normal = normalize( vNormal );\r\nvec3 viewPosition = normalize( vViewPosition );\r\n\r\n#ifdef DOUBLE_SIDED\r\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tvec3 pointDiffuse  = vec3( 0.0 );\r\n\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\t\t#ifdef PHONG_PER_PIXEL\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\t\t#else\r\n\t\t\tvec3 lVector = normalize( vPointLight[ i ].xyz );\r\n\t\t\tfloat lDistance = vPointLight[ i ].w;\r\n\t\t#endif\r\n\r\n\t\t// diffuse\r\n\r\n\t\tfloat dotProduct = dot( normal, lVector );\r\n\r\n\t\t#ifdef WRAP_AROUND\r\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\r\n\t\t#else\r\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t#endif\r\n\r\n\t\tpointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\r\n\r\n\t\t// specular\r\n\r\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\tfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\r\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\r\n\t\t#else\r\n\t\t\tpointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\r\n\t\t#endif\r\n\t}\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvec3 spotDiffuse  = vec3( 0.0 );\r\n\tvec3 spotSpecular = vec3( 0.0 );\r\n\r\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\r\n\t\t#ifdef PHONG_PER_PIXEL\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\t\t#else\r\n\t\t\tvec3 lVector = normalize( vSpotLight[ i ].xyz );\r\n\t\t\tfloat lDistance = vSpotLight[ i ].w;\r\n\t\t#endif\r\n\r\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\r\n\r\n\t\tif ( spotEffect > spotLightAngle[ i ] ) {\r\n\t\t\tspotEffect = pow( spotEffect, spotLightExponent[ i ] );\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\r\n\t\t\t#ifdef WRAP_AROUND\r\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\r\n\t\t\t#else\r\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t\t#endif\r\n\r\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\r\n\r\n\t\t\t// specular\r\n\r\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\r\n\t\t\tfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\r\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\r\n\t\t\t#else\r\n\t\t\t\tspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\r\n\t\t\t#endif\r\n\t\t}\r\n\t}\r\n\r\n#endif\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tvec3 dirDiffuse  = vec3( 0.0 );\r\n\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\r\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t// diffuse\r\n\r\n\t\tfloat dotProduct = dot( normal, dirVector );\r\n\r\n\t\t#ifdef WRAP_AROUND\r\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\r\n\t\t#else\r\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t#endif\r\n\r\n\t\tdirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\r\n\t\t// specular\r\n\r\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\tfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t/*\r\n\t\t\t// fresnel term from skin shader\r\n\t\t\tconst float F0 = 0.128;\r\n\t\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\r\n\t\t\tfloat exponential = pow( base, 5.0 );\r\n\t\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\r\n\t\t*/\r\n\r\n\t\t/*\r\n\t\t\t// fresnel term from fresnel shader\r\n\t\t\tconst float mFresnelBias = 0.08;\r\n\t\t\tconst float mFresnelScale = 0.3;\r\n\t\t\tconst float mFresnelPower = 5.0;\r\n\t\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\r\n\t\t*/\r\n\r\n\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\t//dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\r\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\r\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\r\n\t\t\r\n\t\t#else\r\n\t\t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\r\n\t\t#endif\r\n\t}\r\n\r\n#endif\r\n\r\nvec3 totalDiffuse = vec3( 0.0 );\r\nvec3 totalSpecular = vec3( 0.0 );\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\ttotalDiffuse += dirDiffuse;\r\n\ttotalSpecular += dirSpecular;\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\ttotalDiffuse += pointDiffuse;\r\n\ttotalSpecular += pointSpecular;\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\ttotalDiffuse += spotDiffuse;\r\n\ttotalSpecular += spotSpecular;\r\n#endif\r\n\r\n#ifdef METAL\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n#else\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\r\n#endif',rKb,pJb,sKb,qJb,tKb,rJb]));nhb(this,thb(a,wp(ZA,{78:1,94:1},101,[c,b])))};_.fd=function hkb(a){var b,c,d,e;e=new v1(wp(XA,{78:1,79:1,83:1,94:1},1,[uKb,vKb,wKb,'#ifndef PHONG_PER_PIXEL\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\t\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n\t\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\t#endif\r\n\r\n\t#if MAX_SPOT_LIGHTS > 0\r\n\t\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\r\n\t\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\r\n\r\n\t\tvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvarying vec3 vWorldPosition;\r\n#endif',lJb,xKb,yKb,sJb]));b=new v1(wp(XA,{78:1,79:1,83:1,94:1},1,[zKb,AKb,BKb,tJb]));c=new v1(wp(XA,{78:1,79:1,83:1,94:1},1,[CKb]));d=new v1(wp(XA,{78:1,79:1,83:1,94:1},1,['#ifndef PHONG_PER_PIXEL\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\t\t\t\r\n\t\t\tvPointLight[ i ] = vec4( lVector, lDistance );\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t#if MAX_SPOT_LIGHTS > 0\r\n\t\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\r\n\t\t\t\r\n\t\t\tvSpotLight[ i ] = vec4( lVector, lDistance );\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvWorldPosition = mPosition.xyz;\r\n#endif',DKb,EKb,FKb,uJb]));ohb(this,thb(a,wp(ZA,{78:1,94:1},101,[e,b,c,d])))};var ikb;_=nkb.prototype=kkb.prototype=new Jb;_.gC=function okb(){return hx};_.gd=function pkb(){return zkb(),lkb};_.hd=function qkb(){return Akb(),mkb};var lkb=null,mkb=null;_=skb.prototype=rkb.prototype=new Jb;_.gC=function tkb(){return fx};_.Qb=function ukb(){return 'uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\n\r\n//[*]\r\n\t\t\t\r\nvoid main() {\r\n\tgl_FragColor = vec4( vec3 ( 1.0 ), opacity );\r\n\t\t\t\t\r\n//[*]\r\n\t\t\t\t\r\n}\r\n'};_.cM={44:1};_=wkb.prototype=vkb.prototype=new Jb;_.gC=function xkb(){return gx};_.Qb=function ykb(){return 'varying vec3 vViewPosition;\r\nvarying vec3 vNormal;\r\n\r\n//[*]\r\n\t\t\t\r\nvoid main() {\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t\r\n//[*]\r\n\t\t\t\r\n#ifndef USE_ENVMAP\r\n\tvec4 mPosition = objectMatrix * vec4( position, 1.0 );\r\n#endif\r\n\r\nvViewPosition = -mvPosition.xyz;\r\n\t\t\t\r\n//[*]\r\n\t\t\t\r\nvNormal = transformedNormal;\r\n\r\n//[*]\r\n\r\n}\r\n'};_.cM={44:1};_=Msb.prototype=Lsb.prototype=new Asb;_.gC=function Nsb(){return ty};_.cM={145:1,146:1,157:1};_.b=0;_.c=0;_=bub.prototype=aub.prototype=new Psb;_.Ad=function cub(){return null};_.gC=function dub(){return Hy};_.Cd=function eub(){return new pib};_.cM={149:1};_=gub.prototype=fub.prototype=new dtb;_.gC=function hub(){return Gy};_=jub.prototype=iub.prototype=new Psb;_.gC=function kub(){return Iy};_.cM={149:1,153:1};_=Aub.prototype=zub.prototype=new Osb;_.gC=function Bub(){return Oy};_.Cd=function Cub(){return new dkb};_.cM={147:1,149:1,155:1};_.b=null;_.c=null;_.d=0;_.e=null;_.f=null;_=Eub.prototype=Dub.prototype=new ctb;_.gC=function Fub(){return Ny};_.f=30;_=UCb.prototype;_.ob=function YCb(){_wb(this.c,new _Cb(this.b))};_=_Cb.prototype=ZCb.prototype=new cxb;_.gC=function aDb(){return lA};_.cd=function bDb(){Q5(this,new znb(45,Y5(this.r.A),1,2000))};_.cb=function cDb(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;Ypb(this.q.G,0,200,800);Pmb(this.t,this.q);c=new Bob;for(i=0;i<=40;++i){L0(c.C,new aqb(-500,-75,i*25-500));L0(c.C,new aqb(500,-75,i*25-500));L0(c.C,new aqb(i*25-500,-75,-500));L0(c.C,new aqb(i*25-500,-75,500))}o=new ntb;o.b=new Nnb(16777215);o.u=0.20000000298023224;n=new jtb(o);k=new dvb(c,n,(mvb(),kvb));Pmb(this.t,k);C=new Flb($Cb());C.p=true;this.b=new V0;u=new qub;u.k=C;u.v=true;L0(this.b,new mub(u));v=new qub;v.i=new Nnb(14540253);v.e=(Qtb(),Ntb);L0(this.b,new mub(v));z=new Eub;z.b=new Nnb(197379);z.i=new Nnb(14540253);z.g=new Nnb(39168);z.f=30;z.e=Ntb;L0(this.b,new Aub(z));L0(this.b,new tub(new xub));q=new $tb;q.i=new Nnb(16755200);q.v=true;q.r=(ytb(),rtb);L0(this.b,new Vtb(q));w=new qub;w.i=new Nnb(14540253);w.e=Ptb;L0(this.b,new mub(w));z.k=C;z.v=true;L0(this.b,new Aub(z));y=new xub;y.b=Ptb;L0(this.b,new tub(y));r=new $tb;r.i=new Nnb(65450);r.x=true;L0(this.b,new Vtb(r));L0(this.b,new bub(new gub));x=new qub;x.i=new Nnb(6710886);x.d=new Nnb(16711680);x.b=new Nnb(0);x.e=Ptb;L0(this.b,new mub(x));A=new Eub;A.b=new Nnb(0);A.d=new Nnb(16711680);A.i=new Nnb(0);A.g=new Nnb(6710886);A.f=10;A.e=Ptb;A.u=0.8999999761581421;A.v=true;L0(this.b,new Aub(A));s=new $tb;r.k=C;r.v=true;L0(this.b,new Vtb(s));g=new Hrb(70,32,16);e=new Hrb(70,32,16);f=new Hrb(70,32,16);for(i=0,j=f.o.c;i<j;++i){b=Fp(P0(f.o,i),132);b.i=0}Aob(f,this.b);L0(this.b,new jub);this.c=new V0;for(i=0,j=this.b.c;i<j;++i){p=Fp(P0(this.b,i),149);d=p.gC()==Iy?f:p.O==Ntb?e:g;B=new Avb(d,p);Mpb(B.G,i%4*200-400);Zpb(B.G,Math.floor(i/4)*200-200);Mpb(B.J,Math.random()*200-100);Npb(B.J,Math.random()*200-100);Zpb(B.J,Math.random()*200-100);L0(this.c,B);Pmb(this.t,B)}t=new $tb;t.i=new Nnb(16777215);this.d=new Avb(new Hrb(4,8,8),new Vtb(t));Pmb(this.t,this.d);Pmb(this.t,new Esb(1118481));a=new Isb(0.125);Mpb(a.G,Math.random()-0.5);Npb(a.G,Math.random()-0.5);Zpb(a.G,Math.random()-0.5);a.G.wd();Pmb(this.t,a);this.e=new Msb;Pmb(this.t,this.e)};_.ad=function dDb(){};_.db=function eDb(a){var b,c,d,e,f;f=1.0E-4*a;Mpb(this.q.G,Math.cos(f)*1000);Zpb(this.q.G,Math.sin(f)*1000);dnb(this.q,this.t.G);for(b=0,c=this.c.c;b<c;++b){e=Fp(P0(this.c,b),160);e.J.d+=0.009999999776482582;e.J.e+=0.004999999888241291;d=Fp(P0(this.b,b),149);b>9&&Hp(d,155)?Inb(Fp(d,155).c,0.5400000214576721,1,0.7*(0.5+0.5*Math.sin(35*f))):b>9&&Hp(d,154)&&Inb(Fp(d,154).c,0.03999999910593033,1,0.7*(0.5+0.5*Math.cos(35*f)))}Mpb(this.d.G,Math.sin(f*7)*300);Npb(this.d.G,Math.cos(f*5)*400);Zpb(this.d.G,Math.cos(f*3)*300);Mpb(this.e.G,this.d.G.d);Npb(this.e.G,this.d.G.e);Zpb(this.e.G,this.d.G.c);P5(this)};_.b=null;_.c=null;_.d=null;_.e=null;var Uw=gX(RJb,'ShaderDepth'),Tw=gX(RJb,'ShaderDepth_Resources_default_InlineClientBundleGenerator'),Rw=gX(RJb,'ShaderDepth_Resources_default_InlineClientBundleGenerator$1'),Sw=gX(RJb,'ShaderDepth_Resources_default_InlineClientBundleGenerator$2'),ix=gX(RJb,'ShaderPhong'),hx=gX(RJb,'ShaderPhong_Resources_default_InlineClientBundleGenerator'),fx=gX(RJb,'ShaderPhong_Resources_default_InlineClientBundleGenerator$1'),gx=gX(RJb,'ShaderPhong_Resources_default_InlineClientBundleGenerator$2'),Gy=gX(IKb,'MeshDepthMaterial$MeshDepthMaterialOptions'),Iy=gX(IKb,'MeshFaceMaterial'),Ny=gX(IKb,'MeshPhongMaterial$MeshPhongMaterialOptions'),lA=gX(kJb,'MaterialsCanvas2D$DemoScene');aGb(Zd)(10);