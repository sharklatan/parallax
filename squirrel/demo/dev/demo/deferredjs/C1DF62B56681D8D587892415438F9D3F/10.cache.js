function phb(){}
function yhb(){}
function vhb(){}
function Dhb(){}
function Chb(){}
function Hhb(){}
function Ghb(){}
function djb(){}
function ojb(){}
function ljb(){}
function tjb(){}
function sjb(){}
function xjb(){}
function wjb(){}
function Mrb(){}
function btb(){}
function gtb(){}
function jtb(){}
function Atb(){}
function Etb(){}
function $Bb(){}
function Bnb(a,b){a.s=b}
function aCb(){ewb.call(this)}
function ktb(){Wrb.call(this,new fsb)}
function qhb(){qgb.call(this,(uhb(),thb))}
function ejb(){qgb.call(this,(kjb(),jjb))}
function ctb(a){Wrb.call(this,a);Vrb(this,a.b)}
function htb(){fsb.call(this);this.b=(Rsb(),Qsb)}
function uhb(){uhb=_Eb;thb=new yhb}
function Khb(){Khb=_Eb;whb=new Dhb}
function Lhb(){Lhb=_Eb;xhb=new Hhb}
function kjb(){kjb=_Eb;jjb=new ojb}
function Ajb(){Ajb=_Eb;mjb=new tjb}
function Bjb(){Bjb=_Eb;njb=new xjb}
function Nrb(){Crb.call(this,16777215);this.c=1;this.b=0;new bpb(0,0,0)}
function Btb(a){asb.call(this,a);this.b=a.b;this.c=a.d;this.e=a.g;this.d=a.f;this.k=null;this.i=a.c;Vrb(this,a.e)}
function Ftb(){hsb.call(this);this.b=new Omb(328965);this.g=new Omb(1118481);this.d=new Omb(0);this.c=(ilb(),hlb);this.e=(Rsb(),Qsb)}
function _Bb(){var a,b,c,d,e,f,g,i;a=$doc.createElement(zJb);a.width=256;a.height=256;b=a.getContext(AJb);d=b.getImageData(0,0,256,256);i=0;for(c=0,e=0,f=d.data.length;c<f;c+=4,++e){g=e%64;i=g==0?i+1:i;d.data[c]=255;d.data[c+1]=255;d.data[c+2]=255;d.data[c+3]=_o(Math.floor(g^i))}b.putImageData(d,0,0);return a}
_=qhb.prototype=phb.prototype=new lgb;_.gC=function rhb(){return bw};_.Yc=function shb(){ngb(this,'mNear',new Djb((Yjb(),Kjb),new CW(1)));ngb(this,'mFar',new Djb(Kjb,new CW(2000)));ngb(this,cJb,new Djb(Kjb,new CW(1)))};var thb;_=yhb.prototype=vhb.prototype=new Jb;_.gC=function zhb(){return aw};_._c=function Ahb(){return Khb(),whb};_.ad=function Bhb(){return Lhb(),xhb};var whb=null,xhb=null;_=Dhb.prototype=Chb.prototype=new Jb;_.gC=function Ehb(){return $v};_.Jb=function Fhb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\nvoid main() {\r\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n}\r\n'};_.cM={44:1};_=Hhb.prototype=Ghb.prototype=new Jb;_.gC=function Ihb(){return _v};_.Jb=function Jhb(){return 'void main() {\r\n\r\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n}\r\n'};_.cM={44:1};_=ejb.prototype=djb.prototype=new lgb;_.gC=function fjb(){return rw};_.Yc=function gjb(){mgb(this,(fkb(),akb));mgb(this,bkb);mgb(this,ckb);mgb(this,ekb);ngb(this,dJb,new Djb((Yjb(),Jjb),new Omb(16777215)));ngb(this,eJb,new Djb(Jjb,new Omb(0)));ngb(this,'specular',new Djb(Jjb,new Omb(1118481)));ngb(this,'shininess',new Djb(Kjb,new CW(30)));ngb(this,fJb,new Djb(Ujb,new bpb(1,1,1)))};_.Zc=function hjb(a){var b,c;c=new w0(Mo(eA,{78:1,79:1,83:1,94:1},1,[eIb,gJb,hJb,iJb,fIb,'uniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\r\n\t#ifdef PHONG_PER_PIXEL\r\n\t\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\t\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\t#else\r\n\t\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\t#endif\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\r\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\r\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\r\n\tuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\r\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\r\n\r\n\t#ifdef PHONG_PER_PIXEL\r\n\t\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\r\n\t#else\r\n\t\tvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\r\n\t#endif\r\n\r\n\tvarying vec3 vWorldPosition;\r\n\r\n#endif\r\n\r\n#ifdef WRAP_AROUND\r\n\tuniform vec3 wrapRGB;\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\nvarying vec3 vNormal;',gIb]));b=new w0(Mo(eA,{78:1,79:1,83:1,94:1},1,[jJb,hIb,'vec3 normal = normalize( vNormal );\r\nvec3 viewPosition = normalize( vViewPosition );\r\n\r\n#ifdef DOUBLE_SIDED\r\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tvec3 pointDiffuse  = vec3( 0.0 );\r\n\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\t\t#ifdef PHONG_PER_PIXEL\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\t\t#else\r\n\t\t\tvec3 lVector = normalize( vPointLight[ i ].xyz );\r\n\t\t\tfloat lDistance = vPointLight[ i ].w;\r\n\t\t#endif\r\n\r\n\t\t// diffuse\r\n\r\n\t\tfloat dotProduct = dot( normal, lVector );\r\n\r\n\t\t#ifdef WRAP_AROUND\r\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\r\n\t\t#else\r\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t#endif\r\n\r\n\t\tpointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\r\n\r\n\t\t// specular\r\n\r\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\tfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\r\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\r\n\t\t#else\r\n\t\t\tpointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\r\n\t\t#endif\r\n\t}\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvec3 spotDiffuse  = vec3( 0.0 );\r\n\tvec3 spotSpecular = vec3( 0.0 );\r\n\r\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\r\n\t\t#ifdef PHONG_PER_PIXEL\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\t\t#else\r\n\t\t\tvec3 lVector = normalize( vSpotLight[ i ].xyz );\r\n\t\t\tfloat lDistance = vSpotLight[ i ].w;\r\n\t\t#endif\r\n\r\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\r\n\r\n\t\tif ( spotEffect > spotLightAngle[ i ] ) {\r\n\t\t\tspotEffect = pow( spotEffect, spotLightExponent[ i ] );\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\r\n\t\t\t#ifdef WRAP_AROUND\r\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\r\n\t\t\t#else\r\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t\t#endif\r\n\r\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\r\n\r\n\t\t\t// specular\r\n\r\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\r\n\t\t\tfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\r\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\r\n\t\t\t#else\r\n\t\t\t\tspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\r\n\t\t\t#endif\r\n\t\t}\r\n\t}\r\n\r\n#endif\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tvec3 dirDiffuse  = vec3( 0.0 );\r\n\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\r\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t// diffuse\r\n\r\n\t\tfloat dotProduct = dot( normal, dirVector );\r\n\r\n\t\t#ifdef WRAP_AROUND\r\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\r\n\t\t#else\r\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t#endif\r\n\r\n\t\tdirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\r\n\t\t// specular\r\n\r\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\tfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t/*\r\n\t\t\t// fresnel term from skin shader\r\n\t\t\tconst float F0 = 0.128;\r\n\t\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\r\n\t\t\tfloat exponential = pow( base, 5.0 );\r\n\t\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\r\n\t\t*/\r\n\r\n\t\t/*\r\n\t\t\t// fresnel term from fresnel shader\r\n\t\t\tconst float mFresnelBias = 0.08;\r\n\t\t\tconst float mFresnelScale = 0.3;\r\n\t\t\tconst float mFresnelPower = 5.0;\r\n\t\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\r\n\t\t*/\r\n\r\n\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\t//dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\r\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\r\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\r\n\t\t\r\n\t\t#else\r\n\t\t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\r\n\t\t#endif\r\n\t}\r\n\r\n#endif\r\n\r\nvec3 totalDiffuse = vec3( 0.0 );\r\nvec3 totalSpecular = vec3( 0.0 );\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\ttotalDiffuse += dirDiffuse;\r\n\ttotalSpecular += dirSpecular;\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\ttotalDiffuse += pointDiffuse;\r\n\ttotalSpecular += pointSpecular;\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\ttotalDiffuse += spotDiffuse;\r\n\ttotalSpecular += spotSpecular;\r\n#endif\r\n\r\n#ifdef METAL\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n#else\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\r\n#endif',kJb,iIb,lJb,jIb,mJb,kIb]));ogb(this,ugb(a,Mo(gA,{78:1,94:1},101,[c,b])))};_.$c=function ijb(a){var b,c,d,e;e=new w0(Mo(eA,{78:1,79:1,83:1,94:1},1,[nJb,oJb,pJb,'#ifndef PHONG_PER_PIXEL\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\t\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n\t\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\t#endif\r\n\r\n\t#if MAX_SPOT_LIGHTS > 0\r\n\t\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\r\n\t\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\r\n\r\n\t\tvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvarying vec3 vWorldPosition;\r\n#endif',eIb,qJb,rJb,lIb]));b=new w0(Mo(eA,{78:1,79:1,83:1,94:1},1,[sJb,tJb,uJb,mIb]));c=new w0(Mo(eA,{78:1,79:1,83:1,94:1},1,[vJb]));d=new w0(Mo(eA,{78:1,79:1,83:1,94:1},1,['#ifndef PHONG_PER_PIXEL\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\t\t\t\r\n\t\t\tvPointLight[ i ] = vec4( lVector, lDistance );\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t#if MAX_SPOT_LIGHTS > 0\r\n\t\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\r\n\t\t\t\r\n\t\t\tvSpotLight[ i ] = vec4( lVector, lDistance );\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvWorldPosition = mPosition.xyz;\r\n#endif',wJb,xJb,yJb,nIb]));pgb(this,ugb(a,Mo(gA,{78:1,94:1},101,[e,b,c,d])))};var jjb;_=ojb.prototype=ljb.prototype=new Jb;_.gC=function pjb(){return qw};_._c=function qjb(){return Ajb(),mjb};_.ad=function rjb(){return Bjb(),njb};var mjb=null,njb=null;_=tjb.prototype=sjb.prototype=new Jb;_.gC=function ujb(){return ow};_.Jb=function vjb(){return 'uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\n\r\n//[*]\r\n\t\t\t\r\nvoid main() {\r\n\tgl_FragColor = vec4( vec3 ( 1.0 ), opacity );\r\n\t\t\t\t\r\n//[*]\r\n\t\t\t\t\r\n}\r\n'};_.cM={44:1};_=xjb.prototype=wjb.prototype=new Jb;_.gC=function yjb(){return pw};_.Jb=function zjb(){return 'varying vec3 vViewPosition;\r\nvarying vec3 vNormal;\r\n\r\n//[*]\r\n\t\t\t\r\nvoid main() {\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t\r\n//[*]\r\n\t\t\t\r\n#ifndef USE_ENVMAP\r\n\tvec4 mPosition = objectMatrix * vec4( position, 1.0 );\r\n#endif\r\n\r\nvViewPosition = -mvPosition.xyz;\r\n\t\t\t\r\n//[*]\r\n\t\t\t\r\nvNormal = transformedNormal;\r\n\r\n//[*]\r\n\r\n}\r\n'};_.cM={44:1};_=Nrb.prototype=Mrb.prototype=new Brb;_.gC=function Orb(){return Cx};_.cM={145:1,146:1,157:1};_.b=0;_.c=0;_=ctb.prototype=btb.prototype=new Qrb;_.td=function dtb(){return null};_.gC=function etb(){return Qx};_.vd=function ftb(){return new qhb};_.cM={149:1};_=htb.prototype=gtb.prototype=new esb;_.gC=function itb(){return Px};_=ktb.prototype=jtb.prototype=new Qrb;_.gC=function ltb(){return Rx};_.cM={149:1,153:1};_=Btb.prototype=Atb.prototype=new Prb;_.gC=function Ctb(){return Xx};_.vd=function Dtb(){return new ejb};_.cM={147:1,149:1,155:1};_.b=null;_.c=null;_.d=0;_.e=null;_.f=null;_=Ftb.prototype=Etb.prototype=new dsb;_.gC=function Gtb(){return Wx};_.f=30;_=VBb.prototype;_.lb=function ZBb(){awb(this.c,new aCb(this.b))};_=aCb.prototype=$Bb.prototype=new dwb;_.gC=function bCb(){return uz};_.Xc=function cCb(){R4(this,new Amb(45,Z4(this.r.A),1,2000))};_.cb=function dCb(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;Zob(this.q.G,0,200,800);Qlb(this.t,this.q);c=new Cnb;for(i=0;i<=40;++i){M_(c.C,new bpb(-500,-75,i*25-500));M_(c.C,new bpb(500,-75,i*25-500));M_(c.C,new bpb(i*25-500,-75,-500));M_(c.C,new bpb(i*25-500,-75,500))}o=new osb;o.b=new Omb(16777215);o.u=0.20000000298023224;n=new ksb(o);k=new eub(c,n,(nub(),lub));Qlb(this.t,k);C=new Gkb(_Bb());C.p=true;this.b=new W_;u=new rtb;u.k=C;u.v=true;M_(this.b,new ntb(u));v=new rtb;v.i=new Omb(14540253);v.e=(Rsb(),Osb);M_(this.b,new ntb(v));z=new Ftb;z.b=new Omb(197379);z.i=new Omb(14540253);z.g=new Omb(39168);z.f=30;z.e=Osb;M_(this.b,new Btb(z));M_(this.b,new utb(new ytb));q=new _sb;q.i=new Omb(16755200);q.v=true;q.r=(zsb(),ssb);M_(this.b,new Wsb(q));w=new rtb;w.i=new Omb(14540253);w.e=Qsb;M_(this.b,new ntb(w));z.k=C;z.v=true;M_(this.b,new Btb(z));y=new ytb;y.b=Qsb;M_(this.b,new utb(y));r=new _sb;r.i=new Omb(65450);r.x=true;M_(this.b,new Wsb(r));M_(this.b,new ctb(new htb));x=new rtb;x.i=new Omb(6710886);x.d=new Omb(16711680);x.b=new Omb(0);x.e=Qsb;M_(this.b,new ntb(x));A=new Ftb;A.b=new Omb(0);A.d=new Omb(16711680);A.i=new Omb(0);A.g=new Omb(6710886);A.f=10;A.e=Qsb;A.u=0.8999999761581421;A.v=true;M_(this.b,new Btb(A));s=new _sb;r.k=C;r.v=true;M_(this.b,new Wsb(s));g=new Iqb(70,32,16);e=new Iqb(70,32,16);f=new Iqb(70,32,16);for(i=0,j=f.o.c;i<j;++i){b=Vo(Q_(f.o,i),132);b.i=0}Bnb(f,this.b);M_(this.b,new ktb);this.c=new W_;for(i=0,j=this.b.c;i<j;++i){p=Vo(Q_(this.b,i),149);d=p.gC()==Rx?f:p.O==Osb?e:g;B=new Bub(d,p);Nob(B.G,i%4*200-400);$ob(B.G,Math.floor(i/4)*200-200);Nob(B.J,Math.random()*200-100);Oob(B.J,Math.random()*200-100);$ob(B.J,Math.random()*200-100);M_(this.c,B);Qlb(this.t,B)}t=new _sb;t.i=new Omb(16777215);this.d=new Bub(new Iqb(4,8,8),new Wsb(t));Qlb(this.t,this.d);Qlb(this.t,new Frb(1118481));a=new Jrb(0.125);Nob(a.G,Math.random()-0.5);Oob(a.G,Math.random()-0.5);$ob(a.G,Math.random()-0.5);a.G.pd();Qlb(this.t,a);this.e=new Nrb;Qlb(this.t,this.e)};_.Vc=function eCb(){};_.db=function fCb(a){var b,c,d,e,f;f=1.0E-4*a;Nob(this.q.G,Math.cos(f)*1000);$ob(this.q.G,Math.sin(f)*1000);emb(this.q,this.t.G);for(b=0,c=this.c.c;b<c;++b){e=Vo(Q_(this.c,b),160);e.J.d+=0.009999999776482582;e.J.e+=0.004999999888241291;d=Vo(Q_(this.b,b),149);b>9&&Xo(d,155)?Jmb(Vo(d,155).c,0.5400000214576721,1,0.7*(0.5+0.5*Math.sin(35*f))):b>9&&Xo(d,154)&&Jmb(Vo(d,154).c,0.03999999910593033,1,0.7*(0.5+0.5*Math.cos(35*f)))}Nob(this.d.G,Math.sin(f*7)*300);Oob(this.d.G,Math.cos(f*5)*400);$ob(this.d.G,Math.cos(f*3)*300);Nob(this.e.G,this.d.G.d);Oob(this.e.G,this.d.G.e);$ob(this.e.G,this.d.G.c);Q4(this)};_.b=null;_.c=null;_.d=null;_.e=null;var bw=hW(KIb,'ShaderDepth'),aw=hW(KIb,'ShaderDepth_Resources_default_InlineClientBundleGenerator'),$v=hW(KIb,'ShaderDepth_Resources_default_InlineClientBundleGenerator$1'),_v=hW(KIb,'ShaderDepth_Resources_default_InlineClientBundleGenerator$2'),rw=hW(KIb,'ShaderPhong'),qw=hW(KIb,'ShaderPhong_Resources_default_InlineClientBundleGenerator'),ow=hW(KIb,'ShaderPhong_Resources_default_InlineClientBundleGenerator$1'),pw=hW(KIb,'ShaderPhong_Resources_default_InlineClientBundleGenerator$2'),Px=hW(BJb,'MeshDepthMaterial$MeshDepthMaterialOptions'),Rx=hW(BJb,'MeshFaceMaterial'),Wx=hW(BJb,'MeshPhongMaterial$MeshPhongMaterialOptions'),uz=hW(dIb,'MaterialsCanvas2D$DemoScene');bFb(Md)(10);