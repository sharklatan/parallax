function dib(){}
function mib(){}
function jib(){}
function rib(){}
function qib(){}
function vib(){}
function uib(){}
function Tjb(){}
function _jb(){}
function ckb(){}
function hkb(){}
function gkb(){}
function lkb(){}
function kkb(){}
function Asb(){}
function Rtb(){}
function Wtb(){}
function Ztb(){}
function oub(){}
function sub(){}
function OCb(){}
function pob(a,b){a.r=b}
function QCb(){Uwb.call(this)}
function $tb(){Ksb.call(this,new Vsb)}
function eib(){ehb.call(this,(iib(),hib))}
function Ujb(){ehb.call(this,($jb(),Zjb))}
function Stb(a){Ksb.call(this,a);Jsb(this,a.a)}
function Xtb(){Vsb.call(this);this.a=(Ftb(),Etb)}
function iib(){iib=PFb;hib=new mib}
function yib(){yib=PFb;kib=new rib}
function zib(){zib=PFb;lib=new vib}
function $jb(){$jb=PFb;Zjb=new ckb}
function okb(){okb=PFb;akb=new hkb}
function pkb(){pkb=PFb;bkb=new lkb}
function Bsb(){qsb.call(this,16777215);this.b=1;this.a=0;new Rpb(0,0,0)}
function pub(a){Qsb.call(this,a);this.a=a.a;this.b=a.c;this.d=a.f;this.c=a.e;this.j=null;this.g=a.b;Jsb(this,a.d)}
function tub(){Xsb.call(this);this.a=new Cnb(328965);this.f=new Cnb(1118481);this.c=new Cnb(0);this.b=(Ylb(),Xlb);this.d=(Ftb(),Etb)}
function PCb(){var a,b,c,d,e,f,g,i;a=$doc.createElement(wKb);a.width=256;a.height=256;b=a.getContext(xKb);d=b.getImageData(0,0,256,256);i=0;for(c=0,e=0,f=d.data.length;c<f;c+=4,++e){g=e%64;i=g==0?i+1:i;d.data[c]=255;d.data[c+1]=255;d.data[c+2]=255;d.data[c+3]=rp(Math.floor(g^i))}b.putImageData(d,0,0);return a}
_=eib.prototype=dib.prototype=new _gb;_.gC=function fib(){return yw};_.Yc=function gib(){bhb(this,'mNear',new rkb((Mkb(),ykb),new qX(1)));bhb(this,'mFar',new rkb(ykb,new qX(2000)));bhb(this,_Jb,new rkb(ykb,new qX(1)))};var hib;_=mib.prototype=jib.prototype=new Jb;_.gC=function nib(){return xw};_._c=function oib(){return yib(),kib};_.ad=function pib(){return zib(),lib};var kib=null,lib=null;_=rib.prototype=qib.prototype=new Jb;_.gC=function sib(){return vw};_.Jb=function tib(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\nvoid main() {\r\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n}\r\n'};_.cM={45:1};_=vib.prototype=uib.prototype=new Jb;_.gC=function wib(){return ww};_.Jb=function xib(){return 'void main() {\r\n\r\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n}\r\n'};_.cM={45:1};_=Ujb.prototype=Tjb.prototype=new _gb;_.gC=function Vjb(){return Ow};_.Yc=function Wjb(){ahb(this,(Vkb(),Qkb));ahb(this,Rkb);ahb(this,Skb);ahb(this,Ukb);bhb(this,aKb,new rkb((Mkb(),xkb),new Cnb(16777215)));bhb(this,bKb,new rkb(xkb,new Cnb(0)));bhb(this,'specular',new rkb(xkb,new Cnb(1118481)));bhb(this,'shininess',new rkb(ykb,new qX(30)));bhb(this,cKb,new rkb(Ikb,new Rpb(1,1,1)))};_.Zc=function Xjb(a){var b,c;c=new k1(cp(CA,{79:1,80:1,84:1,95:1},1,[bJb,dKb,eKb,fKb,cJb,'uniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\r\n\t#ifdef PHONG_PER_PIXEL\r\n\t\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\t\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\t#else\r\n\t\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\t#endif\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\r\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\r\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\r\n\tuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\r\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\r\n\r\n\t#ifdef PHONG_PER_PIXEL\r\n\t\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\r\n\t#else\r\n\t\tvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\r\n\t#endif\r\n\r\n\tvarying vec3 vWorldPosition;\r\n\r\n#endif\r\n\r\n#ifdef WRAP_AROUND\r\n\tuniform vec3 wrapRGB;\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\nvarying vec3 vNormal;',dJb]));b=new k1(cp(CA,{79:1,80:1,84:1,95:1},1,[gKb,eJb,'vec3 normal = normalize( vNormal );\r\nvec3 viewPosition = normalize( vViewPosition );\r\n\r\n#ifdef DOUBLE_SIDED\r\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tvec3 pointDiffuse  = vec3( 0.0 );\r\n\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\t\t#ifdef PHONG_PER_PIXEL\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\t\t#else\r\n\t\t\tvec3 lVector = normalize( vPointLight[ i ].xyz );\r\n\t\t\tfloat lDistance = vPointLight[ i ].w;\r\n\t\t#endif\r\n\r\n\t\t// diffuse\r\n\r\n\t\tfloat dotProduct = dot( normal, lVector );\r\n\r\n\t\t#ifdef WRAP_AROUND\r\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\r\n\t\t#else\r\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t#endif\r\n\r\n\t\tpointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\r\n\r\n\t\t// specular\r\n\r\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\tfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\r\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\r\n\t\t#else\r\n\t\t\tpointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\r\n\t\t#endif\r\n\t}\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvec3 spotDiffuse  = vec3( 0.0 );\r\n\tvec3 spotSpecular = vec3( 0.0 );\r\n\r\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\r\n\t\t#ifdef PHONG_PER_PIXEL\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\t\t#else\r\n\t\t\tvec3 lVector = normalize( vSpotLight[ i ].xyz );\r\n\t\t\tfloat lDistance = vSpotLight[ i ].w;\r\n\t\t#endif\r\n\r\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\r\n\r\n\t\tif ( spotEffect > spotLightAngle[ i ] ) {\r\n\t\t\tspotEffect = pow( spotEffect, spotLightExponent[ i ] );\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\r\n\t\t\t#ifdef WRAP_AROUND\r\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\r\n\t\t\t#else\r\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t\t#endif\r\n\r\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\r\n\r\n\t\t\t// specular\r\n\r\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\r\n\t\t\tfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\r\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\r\n\t\t\t#else\r\n\t\t\t\tspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\r\n\t\t\t#endif\r\n\t\t}\r\n\t}\r\n\r\n#endif\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tvec3 dirDiffuse  = vec3( 0.0 );\r\n\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\r\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t// diffuse\r\n\r\n\t\tfloat dotProduct = dot( normal, dirVector );\r\n\r\n\t\t#ifdef WRAP_AROUND\r\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\r\n\t\t#else\r\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t#endif\r\n\r\n\t\tdirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\r\n\t\t// specular\r\n\r\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\tfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t/*\r\n\t\t\t// fresnel term from skin shader\r\n\t\t\tconst float F0 = 0.128;\r\n\t\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\r\n\t\t\tfloat exponential = pow( base, 5.0 );\r\n\t\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\r\n\t\t*/\r\n\r\n\t\t/*\r\n\t\t\t// fresnel term from fresnel shader\r\n\t\t\tconst float mFresnelBias = 0.08;\r\n\t\t\tconst float mFresnelScale = 0.3;\r\n\t\t\tconst float mFresnelPower = 5.0;\r\n\t\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\r\n\t\t*/\r\n\r\n\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\t//dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\r\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\r\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\r\n\t\t\r\n\t\t#else\r\n\t\t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\r\n\t\t#endif\r\n\t}\r\n\r\n#endif\r\n\r\nvec3 totalDiffuse = vec3( 0.0 );\r\nvec3 totalSpecular = vec3( 0.0 );\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\ttotalDiffuse += dirDiffuse;\r\n\ttotalSpecular += dirSpecular;\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\ttotalDiffuse += pointDiffuse;\r\n\ttotalSpecular += pointSpecular;\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\ttotalDiffuse += spotDiffuse;\r\n\ttotalSpecular += spotSpecular;\r\n#endif\r\n\r\n#ifdef METAL\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n#else\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\r\n#endif',hKb,fJb,iKb,gJb,jKb,hJb]));chb(this,ihb(a,cp(EA,{79:1,95:1},102,[c,b])))};_.$c=function Yjb(a){var b,c,d,e;e=new k1(cp(CA,{79:1,80:1,84:1,95:1},1,[kKb,lKb,mKb,'#ifndef PHONG_PER_PIXEL\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\t\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n\t\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\t#endif\r\n\r\n\t#if MAX_SPOT_LIGHTS > 0\r\n\t\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\r\n\t\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\r\n\r\n\t\tvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvarying vec3 vWorldPosition;\r\n#endif',bJb,nKb,oKb,iJb]));b=new k1(cp(CA,{79:1,80:1,84:1,95:1},1,[pKb,qKb,rKb,jJb]));c=new k1(cp(CA,{79:1,80:1,84:1,95:1},1,[sKb]));d=new k1(cp(CA,{79:1,80:1,84:1,95:1},1,['#ifndef PHONG_PER_PIXEL\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\t\t\t\r\n\t\t\tvPointLight[ i ] = vec4( lVector, lDistance );\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t#if MAX_SPOT_LIGHTS > 0\r\n\t\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\r\n\t\t\t\r\n\t\t\tvSpotLight[ i ] = vec4( lVector, lDistance );\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvWorldPosition = mPosition.xyz;\r\n#endif',tKb,uKb,vKb,kJb]));dhb(this,ihb(a,cp(EA,{79:1,95:1},102,[e,b,c,d])))};var Zjb;_=ckb.prototype=_jb.prototype=new Jb;_.gC=function dkb(){return Nw};_._c=function ekb(){return okb(),akb};_.ad=function fkb(){return pkb(),bkb};var akb=null,bkb=null;_=hkb.prototype=gkb.prototype=new Jb;_.gC=function ikb(){return Lw};_.Jb=function jkb(){return 'uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\n\r\n//[*]\r\n\t\t\t\r\nvoid main() {\r\n\tgl_FragColor = vec4( vec3 ( 1.0 ), opacity );\r\n\t\t\t\t\r\n//[*]\r\n\t\t\t\t\r\n}\r\n'};_.cM={45:1};_=lkb.prototype=kkb.prototype=new Jb;_.gC=function mkb(){return Mw};_.Jb=function nkb(){return 'varying vec3 vViewPosition;\r\nvarying vec3 vNormal;\r\n\r\n//[*]\r\n\t\t\t\r\nvoid main() {\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t\r\n//[*]\r\n\t\t\t\r\n#ifndef USE_ENVMAP\r\n\tvec4 mPosition = objectMatrix * vec4( position, 1.0 );\r\n#endif\r\n\r\nvViewPosition = -mvPosition.xyz;\r\n\t\t\t\r\n//[*]\r\n\t\t\t\r\nvNormal = transformedNormal;\r\n\r\n//[*]\r\n\r\n}\r\n'};_.cM={45:1};_=Bsb.prototype=Asb.prototype=new psb;_.gC=function Csb(){return Zx};_.cM={146:1,147:1,158:1};_.a=0;_.b=0;_=Stb.prototype=Rtb.prototype=new Esb;_.td=function Ttb(){return null};_.gC=function Utb(){return ly};_.vd=function Vtb(){return new eib};_.cM={150:1};_=Xtb.prototype=Wtb.prototype=new Usb;_.gC=function Ytb(){return ky};_=$tb.prototype=Ztb.prototype=new Esb;_.gC=function _tb(){return my};_.cM={150:1,154:1};_=pub.prototype=oub.prototype=new Dsb;_.gC=function qub(){return sy};_.vd=function rub(){return new Ujb};_.cM={148:1,150:1,156:1};_.a=null;_.b=null;_.c=0;_.d=null;_.e=null;_=tub.prototype=sub.prototype=new Tsb;_.gC=function uub(){return ry};_.e=30;_=JCb.prototype;_.kb=function NCb(){Qwb(this.b,new QCb(this.a))};_=QCb.prototype=OCb.prototype=new Twb;_.gC=function RCb(){return Rz};_.Xc=function SCb(){F5(this,new onb(45,N5(this.q.z),1,2000))};_.bb=function TCb(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;Npb(this.p.F,0,200,800);Emb(this.s,this.p);c=new qob;for(i=0;i<=40;++i){A0(c.B,new Rpb(-500,-75,i*25-500));A0(c.B,new Rpb(500,-75,i*25-500));A0(c.B,new Rpb(i*25-500,-75,-500));A0(c.B,new Rpb(i*25-500,-75,500))}o=new ctb;o.a=new Cnb(16777215);o.t=0.20000000298023224;n=new $sb(o);k=new Uub(c,n,(bvb(),_ub));Emb(this.s,k);C=new ulb(PCb());C.o=true;this.a=new K0;u=new fub;u.j=C;u.u=true;A0(this.a,new bub(u));v=new fub;v.g=new Cnb(14540253);v.d=(Ftb(),Ctb);A0(this.a,new bub(v));z=new tub;z.a=new Cnb(197379);z.g=new Cnb(14540253);z.f=new Cnb(39168);z.e=30;z.d=Ctb;A0(this.a,new pub(z));A0(this.a,new iub(new mub));q=new Ptb;q.g=new Cnb(16755200);q.u=true;q.q=(ntb(),gtb);A0(this.a,new Ktb(q));w=new fub;w.g=new Cnb(14540253);w.d=Etb;A0(this.a,new bub(w));z.j=C;z.u=true;A0(this.a,new pub(z));y=new mub;y.a=Etb;A0(this.a,new iub(y));r=new Ptb;r.g=new Cnb(65450);r.w=true;A0(this.a,new Ktb(r));A0(this.a,new Stb(new Xtb));x=new fub;x.g=new Cnb(6710886);x.c=new Cnb(16711680);x.a=new Cnb(0);x.d=Etb;A0(this.a,new bub(x));A=new tub;A.a=new Cnb(0);A.c=new Cnb(16711680);A.g=new Cnb(0);A.f=new Cnb(6710886);A.e=10;A.d=Etb;A.t=0.8999999761581421;A.u=true;A0(this.a,new pub(A));s=new Ptb;r.j=C;r.u=true;A0(this.a,new Ktb(s));g=new wrb(70,32,16);e=new wrb(70,32,16);f=new wrb(70,32,16);for(i=0,j=f.n.b;i<j;++i){b=lp(E0(f.n,i),133);b.g=0}pob(f,this.a);A0(this.a,new $tb);this.b=new K0;for(i=0,j=this.a.b;i<j;++i){p=lp(E0(this.a,i),150);d=p.gC()==my?f:p.N==Ctb?e:g;B=new pvb(d,p);Bpb(B.F,i%4*200-400);Opb(B.F,Math.floor(i/4)*200-200);Bpb(B.I,Math.random()*200-100);Cpb(B.I,Math.random()*200-100);Opb(B.I,Math.random()*200-100);A0(this.b,B);Emb(this.s,B)}t=new Ptb;t.g=new Cnb(16777215);this.c=new pvb(new wrb(4,8,8),new Ktb(t));Emb(this.s,this.c);Emb(this.s,new tsb(1118481));a=new xsb(0.125);Bpb(a.F,Math.random()-0.5);Cpb(a.F,Math.random()-0.5);Opb(a.F,Math.random()-0.5);a.F.pd();Emb(this.s,a);this.d=new Bsb;Emb(this.s,this.d)};_.Vc=function UCb(){};_.cb=function VCb(a){var b,c,d,e,f;f=1.0E-4*a;Bpb(this.p.F,Math.cos(f)*1000);Opb(this.p.F,Math.sin(f)*1000);Umb(this.p,this.s.F);for(b=0,c=this.b.b;b<c;++b){e=lp(E0(this.b,b),161);e.I.c+=0.009999999776482582;e.I.d+=0.004999999888241291;d=lp(E0(this.a,b),150);b>9&&np(d,156)?xnb(lp(d,156).b,0.5400000214576721,1,0.7*(0.5+0.5*Math.sin(35*f))):b>9&&np(d,155)&&xnb(lp(d,155).b,0.03999999910593033,1,0.7*(0.5+0.5*Math.cos(35*f)))}Bpb(this.c.F,Math.sin(f*7)*300);Cpb(this.c.F,Math.cos(f*5)*400);Opb(this.c.F,Math.cos(f*3)*300);Bpb(this.d.F,this.c.F.c);Cpb(this.d.F,this.c.F.d);Opb(this.d.F,this.c.F.b);E5(this)};_.a=null;_.b=null;_.c=null;_.d=null;var yw=XW(HJb,'ShaderDepth'),xw=XW(HJb,'ShaderDepth_Resources_default_InlineClientBundleGenerator'),vw=XW(HJb,'ShaderDepth_Resources_default_InlineClientBundleGenerator$1'),ww=XW(HJb,'ShaderDepth_Resources_default_InlineClientBundleGenerator$2'),Ow=XW(HJb,'ShaderPhong'),Nw=XW(HJb,'ShaderPhong_Resources_default_InlineClientBundleGenerator'),Lw=XW(HJb,'ShaderPhong_Resources_default_InlineClientBundleGenerator$1'),Mw=XW(HJb,'ShaderPhong_Resources_default_InlineClientBundleGenerator$2'),ky=XW(yKb,'MeshDepthMaterial$MeshDepthMaterialOptions'),my=XW(yKb,'MeshFaceMaterial'),ry=XW(yKb,'MeshPhongMaterial$MeshPhongMaterialOptions'),Rz=XW(aJb,'MaterialsCanvas2D$DemoScene');RFb(Md)(10);