function uHb(){}
function yHb(){}
function BHb(){}
function qHb(){qHb=Uzc;pHb=new uHb}
function DHb(){DHb=Uzc;sHb=new yHb}
function EHb(){EHb=Uzc;tHb=new BHb}
function nHb(){ZFb.call(this,(qHb(),pHb))}
function Hgc(){U5b.call(this);this.d=0;this.e=0}
ES(737,719,lBc,nHb);_.Qd=function oHb(){NFb(this,'mRefractionRatio',new UJb((lKb(),ZJb),new Ahb(1.02)));NFb(this,'mFresnelBias',new UJb(ZJb,new Ahb(0.1)));NFb(this,'mFresnelPower',new UJb(ZJb,new Ahb(2)));NFb(this,'mFresnelScale',new UJb(ZJb,new Ahb(1)));NFb(this,EHc,new TJb(dKb))};var pHb;ES(738,1,{},uHb);_.Td=function vHb(){return DHb(),sHb};_.Ud=function wHb(){return EHb(),tHb};var sHb,tHb;ES(739,1,{},yHb);_.ic=function zHb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};ES(740,1,{},BHb);_.ic=function CHb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};ES(1099,1,zBc);_.Cb=function Fgc(){R5b(this.c,new Hgc(this.b))};ES(1100,946,{273:1},Hgc);_.nb=function Igc(){var a,b,c,d,e,f,g,i,j;this.b=new lNb(60,jEb(this.F.o),1,100000);M2b(this.b.ab,3200);this.c=new lNb(60,jEb(this.F.o),1,100000);this.f=new X4b;a=new DTb(100,32,16);j=new aLb('./static/textures/cube/park2/*.jpg');BKb(j,(_zb(),Zzb));g=new nHb;SJb(Xu(KOb(g.j,EHc),174),j);c=new e_b(g);this.g=new nob;for(b=0;b<500;b++){d=new l4b(a,c);$1b(d.ab,Hib()*10000-5000);_1b(d.ab,Hib()*10000-5000);M2b(d.ab,Hib()*10000-5000);J2b(d.fb,Hib()*3+1);mMb(this.G,d);dob(this.g,d)}this.G.X=false;i=new zGb;SJb(Xu(KOb(i.j,EHc),174),j);f=new e_b(i);mWb(f,(_Xb(),YXb));e=new l4b(new QSb(100000,100000,100000),f);mMb(this.f,e);this.F.o.Z=false};_.ob=function Jgc(a){var b,c,d,e;e=1.0E-4*a;V1b(this.b.ab,(this.d-this.b.ab.d)*0.05);W1b(this.b.ab,(-this.e-this.b.ab.e)*0.05);LMb(this.b,this.G.ab);a0b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Xu(gob(this.g,b),252);$1b(d.ab,5000*Math.cos(e+b));_1b(d.ab,5000*Math.sin(e+b*1.1))}eEb(this.F.o);vEb(this.F.o,this.f,this.c,null,false);vEb(this.F.o,this.G,this.b,null,false)};_.d=0;_.e=0;var DM=ohb(rGc,'MaterialsCubemapFresnel$DemoScene',1100),zG=ohb(FHc,'FresnelShader',737),yG=ohb(FHc,'FresnelShader_Resources_default_InlineClientBundleGenerator',738),wG=ohb(FHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',739),xG=ohb(FHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',740);LBc(Hi)(21);