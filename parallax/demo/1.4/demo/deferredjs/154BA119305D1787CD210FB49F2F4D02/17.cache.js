function Omc(){}
function Smc(){}
function Vmc(){}
function Kpc(){}
function Opc(){}
function Rpc(){}
function Gpc(){Gpc=Yzc;Fpc=new Kpc}
function Tpc(){Tpc=Yzc;Ipc=new Opc}
function Upc(){Upc=Yzc;Jpc=new Rpc}
function Kmc(){Kmc=Yzc;Jmc=new Omc}
function Xmc(){Xmc=Yzc;Mmc=new Smc}
function Ymc(){Ymc=Yzc;Nmc=new Vmc}
function ufc(a,b){this.b=a;this.c=b}
function qfc(){W5b.call(this);this.e=0;this.f=0}
function Hmc(){_Fb.call(this,(Kmc(),Jmc))}
function Bpc(){_Fb.call(this,(Gpc(),Fpc))}
function pfc(a,b){var c,d,e,f,g,i;d=new VKb(eHc);d.n=4;_1b(d.C,0.998,0.998);_1b(d.B,0.001,0.001);PKb(d,(iDb(),hDb));QKb(d,hDb);DKb(d,(bAb(),_zb));e=new VKb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');_1b(e.C,0.998,0.998);_1b(e.B,0.001,0.001);PKb(e,hDb);QKb(e,hDb);DKb(e,_zb);c=new VKb('./static/models/obj/leeperrysmith/Map-COL.jpg');_1b(c.C,0.998,0.998);_1b(c.B,0.001,0.001);PKb(c,hDb);QKb(c,hDb);DKb(c,_zb);g=new Bpc;i=g.j;UJb(Xu(i.b[hHc],174),(Ggb(),Ggb(),Fgb));UJb(Xu(i.b[iHc],174),Fgb);UJb(Xu(i.b[jHc],174),a.c.f);UJb(Xu(i.b[kHc],174),c);UJb(Xu(i.b[lHc],174),d);UJb(Xu(i.b[mHc],174),e);U_b(Xu(Xu(i.b[nHc],174).e,241),10526880);U_b(Xu(Xu(i.b[oHc],174).e,241),10526880);U_b(Xu(Xu(i.b[pHc],174).e,241),10526880);UJb(Xu(i.b[qHc],174),new Chb(0.145));UJb(Xu(i.b[rHc],174),new Chb(0.75));UJb(Xu(i.b[sHc],174),new Chb(16));A3b(Xu(Xu(i.b[tHc],174).e,249),0.001,0.001,0.998,0.998);f=new g_b(g);f.d=true;a.d=new n4b(b,f);b2b(a.d.ab,-50);L2b(a.d.fb,100);tMb(a.d,true);a.d.V=true;oMb(a.G,a.d)}
var hHc='enableBump',jHc='tBeckmann',qHc='uRoughness',rHc='uSpecularBrightness';ES(1079,1,DBc);_.Cb=function nfc(){T5b(this.c,new qfc(this.b))};ES(1080,946,{269:1},qfc);_.nb=function rfc(){var b,c,d,e,f,g,i,j;this.b=new nNb(27,lEb(this.F.o),1,10000);O2b(this.b.ab,1200);oMb(this.G,new NUb(5592405));f=new GVb(16777215,1.5,1000);M2b(f.ab,0,0,600);oMb(this.G,f);i=new OVb(1);M2b(i.ab,0.05,0.05,1);oMb(this.G,i);i.ab.rf(700);i.T=true;i.u=true;i.J=2048;i.H=2048;i.B=200;i.A=1500;i.e=40;i.v=-0.005;i.F=0.15;b=new oVb(16777215,0.85);M2b(b.ab,1,-0.5,1);T_b(b.M,0.6,1,0.85);oMb(this.G,b);b.ab.rf(500);b.T=true;b.J=2048;b.H=2048;b.B=200;b.A=1500;b.f=-500;b.g=500;b.i=500;b.e=-500;b.v=-0.005;b.F=0.15;c=new oVb(16777215,0.85);M2b(c.ab,1,-0.5,-1);oMb(this.G,c);new Xxc(new Hmc);d=new Xxc(new ryc);d.b=true;j=new qLb(512,512);IKb(j,(SBb(),MBb));GKb(j,(HBb(),FBb));DKb(j,(bAb(),_zb));j.g=false;this.c=new Nxc(this.F.o,j);e=new Dqc;try{sqc(e,fHc,new ufc(this,e))}catch(a){a=JR(a);if($u(a,46)){cMb();HU(bMb,(Xrb(),Vrb),gHc)}else throw IR(a)}IEb(this.F.o,new X_b(5001561),1);g=new CDb(this.F.o,this.G);g.i=false;this.F.o.Z=false;this.F.o._=true;this.F.o.ab=true};_.ob=function sfc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){b0b(this.d.db,0.05*(b-this.d.db.e));a0b(this.d.db,0.05*(c-this.d.db.d))}gEb(this.F.o);xEb(this.F.o,this.G,this.b,null,false)};_.e=0;_.f=0;ES(1081,1,{},ufc);_.Cf=function vfc(){pfc(this.b,this.c.b)};ES(1181,719,pBc,Hmc);_.Qd=function Imc(){};var Jmc;ES(1182,1,{},Omc);_.Td=function Pmc(){return Xmc(),Mmc};_.Ud=function Qmc(){return Ymc(),Nmc};var Mmc,Nmc;ES(1183,1,{},Smc);_.ic=function Tmc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};ES(1184,1,{},Vmc);_.ic=function Wmc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};ES(1248,719,pBc,Bpc);_.Qd=function Cpc(){WFb(this,rKb());WFb(this,sKb());WFb(this,tKb());PFb(this,hHc,new WJb((nKb(),cKb),iib(0)));PFb(this,iHc,new WJb(cKb,iib(0)));PFb(this,kHc,new VJb(fKb));PFb(this,jHc,new VJb(fKb));PFb(this,oHc,new WJb($Jb,new X_b(15658734)));PFb(this,pHc,new WJb($Jb,new X_b(1118481)));PFb(this,nHc,new WJb($Jb,new X_b(328965)));PFb(this,uHc,new WJb(_Jb,new Chb(1)));PFb(this,qHc,new WJb(_Jb,new Chb(0.15)));PFb(this,rHc,new WJb(_Jb,new Chb(0.75)));PFb(this,lHc,new VJb(fKb));PFb(this,sHc,new WJb(_Jb,new Chb(1)));PFb(this,mHc,new VJb(fKb));PFb(this,tHc,new WJb(lKb,new E3b(0,0,1,1)));PFb(this,'uWrapRGB',new WJb(jKb,new S2b(0.75,0.375,0.1875)))};_.Rd=function Dpc(a){var b,c;c=new Nob(Nu(yQ,cAc,1,[vHc,wHc,xHc]));b=new Nob(Nu(yQ,cAc,1,[yHc,zHc,AHc]));YFb(this,eGb(a,Nu(BQ,cAc,121,[c,b])))};_.Sd=function Epc(a){var b,c;c=new Nob(Nu(yQ,cAc,1,[BHc]));b=new Nob(Nu(yQ,cAc,1,[CHc]));ZFb(this,eGb(a,Nu(BQ,cAc,121,[c,b])))};var Fpc;ES(1249,1,{},Kpc);_.Td=function Lpc(){return Tpc(),Ipc};_.Ud=function Mpc(){return Upc(),Jpc};var Ipc,Jpc;ES(1250,1,{},Opc);_.ic=function Ppc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};ES(1251,1,{},Rpc);_.ic=function Spc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var iM=qhb(wGc,'MaterialsBumpmapSkin$DemoScene',1080),hM=qhb(wGc,'MaterialsBumpmapSkin$DemoScene$1',1081),aO=qhb(pGc,'BeckmannShader',1181),_N=qhb(pGc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1182),ZN=qhb(pGc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1183),$N=qhb(pGc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1184),pO=qhb(pGc,'SkinSimpleShader',1248),oO=qhb(pGc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1249),mO=qhb(pGc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1250),nO=qhb(pGc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1251);PBc(Hi)(17);