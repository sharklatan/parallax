function wHb(){}
function AHb(){}
function DHb(){}
function sHb(){sHb=Yzc;rHb=new wHb}
function FHb(){FHb=Yzc;uHb=new AHb}
function GHb(){GHb=Yzc;vHb=new DHb}
function pHb(){_Fb.call(this,(sHb(),rHb))}
function Lgc(){W5b.call(this);this.d=0;this.e=0}
ES(737,719,pBc,pHb);_.Qd=function qHb(){PFb(this,'mRefractionRatio',new WJb((nKb(),_Jb),new Chb(1.02)));PFb(this,'mFresnelBias',new WJb(_Jb,new Chb(0.1)));PFb(this,'mFresnelPower',new WJb(_Jb,new Chb(2)));PFb(this,'mFresnelScale',new WJb(_Jb,new Chb(1)));PFb(this,JHc,new VJb(fKb))};var rHb;ES(738,1,{},wHb);_.Td=function xHb(){return FHb(),uHb};_.Ud=function yHb(){return GHb(),vHb};var uHb,vHb;ES(739,1,{},AHb);_.ic=function BHb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};ES(740,1,{},DHb);_.ic=function EHb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};ES(1099,1,DBc);_.Cb=function Jgc(){T5b(this.c,new Lgc(this.b))};ES(1100,946,{273:1},Lgc);_.nb=function Mgc(){var a,b,c,d,e,f,g,i,j;this.b=new nNb(60,lEb(this.F.o),1,100000);O2b(this.b.ab,3200);this.c=new nNb(60,lEb(this.F.o),1,100000);this.f=new Z4b;a=new FTb(100,32,16);j=new cLb('./static/textures/cube/park2/*.jpg');DKb(j,(bAb(),_zb));g=new pHb;UJb(Xu(MOb(g.j,JHc),174),j);c=new g_b(g);this.g=new pob;for(b=0;b<500;b++){e=new n4b(a,c);a2b(e.ab,Jib()*10000-5000);b2b(e.ab,Jib()*10000-5000);O2b(e.ab,Jib()*10000-5000);L2b(e.fb,Jib()*3+1);oMb(this.G,e);fob(this.g,e)}this.G.X=false;i=new BGb;UJb(Xu(MOb(i.j,JHc),174),j);f=new g_b(i);oWb(f,(bYb(),$Xb));d=new n4b(new SSb(100000,100000,100000),f);oMb(this.f,d);this.F.o.Z=false};_.ob=function Ngc(a){var b,c,d,e;e=1.0E-4*a;X1b(this.b.ab,(this.d-this.b.ab.d)*0.05);Y1b(this.b.ab,(-this.e-this.b.ab.e)*0.05);NMb(this.b,this.G.ab);c0b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Xu(iob(this.g,b),252);a2b(d.ab,5000*Math.cos(e+b));b2b(d.ab,5000*Math.sin(e+b*1.1))}gEb(this.F.o);xEb(this.F.o,this.f,this.c,null,false);xEb(this.F.o,this.G,this.b,null,false)};_.d=0;_.e=0;var DM=qhb(wGc,'MaterialsCubemapFresnel$DemoScene',1100),zG=qhb(KHc,'FresnelShader',737),yG=qhb(KHc,'FresnelShader_Resources_default_InlineClientBundleGenerator',738),wG=qhb(KHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',739),xG=qhb(KHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',740);PBc(Hi)(21);