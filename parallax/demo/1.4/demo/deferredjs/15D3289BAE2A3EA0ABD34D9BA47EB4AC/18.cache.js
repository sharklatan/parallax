function Rlc(){}
function Vlc(){}
function Ylc(){}
function Noc(){}
function Roc(){}
function Uoc(){}
function Joc(){Joc=_yc;Ioc=new Noc}
function Woc(){Woc=_yc;Loc=new Roc}
function Xoc(){Xoc=_yc;Moc=new Uoc}
function Nlc(){Nlc=_yc;Mlc=new Rlc}
function $lc(){$lc=_yc;Plc=new Vlc}
function _lc(){_lc=_yc;Qlc=new Ylc}
function afc(a,b){this.a=a;this.b=b}
function Yec(){o5b.call(this);this.d=0;this.e=0}
function Klc(){zFb.call(this,(Nlc(),Mlc))}
function Eoc(){zFb.call(this,(Joc(),Ioc))}
function Xec(a,b){var c,d,e,f,g,i;d=new tKb(hGc);d.k=4;u1b(d.B,0.998,0.998);u1b(d.A,0.001,0.001);nKb(d,(JCb(),ICb));oKb(d,ICb);bKb(d,(Czb(),Azb));e=new tKb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');u1b(e.B,0.998,0.998);u1b(e.A,0.001,0.001);nKb(e,ICb);oKb(e,ICb);bKb(e,Azb);c=new tKb('./static/models/obj/leeperrysmith/Map-COL.jpg');u1b(c.B,0.998,0.998);u1b(c.A,0.001,0.001);nKb(c,ICb);oKb(c,ICb);bKb(c,Azb);g=new Eoc;i=g.i;sJb(Bu(i.a[kGc],174),(ggb(),ggb(),fgb));sJb(Bu(i.a[lGc],174),fgb);sJb(Bu(i.a[mGc],174),a.b.e);sJb(Bu(i.a[nGc],174),c);sJb(Bu(i.a[oGc],174),d);sJb(Bu(i.a[pGc],174),e);o_b(Bu(Bu(i.a[qGc],174).d,240),10526880);o_b(Bu(Bu(i.a[rGc],174).d,240),10526880);o_b(Bu(Bu(i.a[sGc],174).d,240),10526880);sJb(Bu(i.a[tGc],174),new chb(0.145));sJb(Bu(i.a[uGc],174),new chb(0.75));sJb(Bu(i.a[vGc],174),new chb(16));V2b(Bu(Bu(i.a[wGc],174).d,248),0.001,0.001,0.998,0.998);f=new C$b(g);f.c=true;a.c=new I3b(b,f);w1b(a.c._,-50);e2b(a.c.eb,100);TLb(a.c,true);a.c.U=true;OLb(a.F,a.c)}
var kGc='enableBump',mGc='tBeckmann',tGc='uRoughness',uGc='uSpecularBrightness';_R(1079,1,FAc);_.yb=function Vec(){l5b(this.b,new Yec(this.a))};_R(1080,943,{268:1},Yec);_.mb=function Zec(){var b,c,d,e,f,g,i,j;this.a=new NMb(27,LDb(this.D.n),1,10000);h2b(this.a._,1200);OLb(this.F,new nUb(5592405));f=new gVb(16777215,1.5,1000);f2b(f._,0,0,600);OLb(this.F,f);i=new oVb(1);f2b(i._,0.05,0.05,1);OLb(this.F,i);i._.kf(700);i.S=true;i.t=true;i.I=2048;i.G=2048;i.A=200;i.w=1500;i.d=40;i.u=-0.005;i.D=0.15;b=new QUb(16777215,0.85);f2b(b._,1,-0.5,1);n_b(b.L,0.6,1,0.85);OLb(this.F,b);b._.kf(500);b.S=true;b.I=2048;b.G=2048;b.A=200;b.w=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.u=-0.005;b.D=0.15;c=new QUb(16777215,0.85);f2b(c._,1,-0.5,-1);OLb(this.F,c);new $wc(new Klc);d=new $wc(new uxc);d.a=true;j=new QKb(512,512);gKb(j,(rBb(),lBb));eKb(j,(gBb(),eBb));bKb(j,(Czb(),Azb));j.f=false;this.b=new Qwc(this.D.n,j);e=new Gpc;try{vpc(e,iGc,new afc(this,e))}catch(a){a=eR(a);if(Eu(a,46)){CLb();hU(BLb,(wrb(),urb),jGc)}else throw dR(a)}gEb(this.D.n,new r_b(5001561),1);g=new bDb(this.D.n,this.F);g.g=false;this.D.n.Y=false;this.D.n.$=true;this.D.n._=true};_.nb=function $ec(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){x_b(this.c.cb,0.05*(b-this.c.cb.d));w_b(this.c.cb,0.05*(c-this.c.cb.c))}GDb(this.D.n);XDb(this.D.n,this.F,this.a,null,false)};_.d=0;_.e=0;_R(1081,1,{},afc);_.vf=function bfc(){Xec(this.a,this.b.a)};_R(1172,716,rAc,Klc);_.Jd=function Llc(){};var Mlc;_R(1173,1,{},Rlc);_.Md=function Slc(){return $lc(),Plc};_.Nd=function Tlc(){return _lc(),Qlc};var Plc,Qlc;_R(1174,1,{},Vlc);_.bc=function Wlc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};_R(1175,1,{},Ylc);_.bc=function Zlc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};_R(1239,716,rAc,Eoc);_.Jd=function Foc(){uFb(this,RJb());uFb(this,SJb());uFb(this,TJb());nFb(this,kGc,new uJb((NJb(),CJb),Khb(0)));nFb(this,lGc,new uJb(CJb,Khb(0)));nFb(this,nGc,new tJb(FJb));nFb(this,mGc,new tJb(FJb));nFb(this,rGc,new uJb(yJb,new r_b(15658734)));nFb(this,sGc,new uJb(yJb,new r_b(1118481)));nFb(this,qGc,new uJb(yJb,new r_b(328965)));nFb(this,xGc,new uJb(zJb,new chb(1)));nFb(this,tGc,new uJb(zJb,new chb(0.15)));nFb(this,uGc,new uJb(zJb,new chb(0.75)));nFb(this,oGc,new tJb(FJb));nFb(this,vGc,new uJb(zJb,new chb(1)));nFb(this,pGc,new tJb(FJb));nFb(this,wGc,new uJb(LJb,new Z2b(0,0,1,1)));nFb(this,'uWrapRGB',new uJb(JJb,new l2b(0.75,0.375,0.1875)))};_.Kd=function Goc(a){var b,c;c=new mob(ru(VP,ezc,1,[yGc,zGc,AGc]));b=new mob(ru(VP,ezc,1,[BGc,CGc,DGc]));wFb(this,EFb(a,ru(YP,ezc,121,[c,b])))};_.Ld=function Hoc(a){var b,c;c=new mob(ru(VP,ezc,1,[EGc]));b=new mob(ru(VP,ezc,1,[FGc]));xFb(this,EFb(a,ru(YP,ezc,121,[c,b])))};var Ioc;_R(1240,1,{},Noc);_.Md=function Ooc(){return Woc(),Loc};_.Nd=function Poc(){return Xoc(),Moc};var Loc,Moc;_R(1241,1,{},Roc);_.bc=function Soc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};_R(1242,1,{},Uoc);_.bc=function Voc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var ML=Sgb(zFc,'MaterialsBumpmapSkin$DemoScene',1080),LL=Sgb(zFc,'MaterialsBumpmapSkin$DemoScene$1',1081),xN=Sgb(sFc,'BeckmannShader',1172),wN=Sgb(sFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1173),uN=Sgb(sFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1174),vN=Sgb(sFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1175),MN=Sgb(sFc,'SkinSimpleShader',1239),LN=Sgb(sFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1240),JN=Sgb(sFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1241),KN=Sgb(sFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1242);RAc(xi)(18);