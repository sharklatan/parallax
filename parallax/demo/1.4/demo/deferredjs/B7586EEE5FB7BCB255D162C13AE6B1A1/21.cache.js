function cHb(){}
function gHb(){}
function jHb(){}
function lHb(){lHb=Gzc;aHb=new gHb}
function mHb(){mHb=Gzc;bHb=new jHb}
function $Gb(){$Gb=Gzc;ZGb=new cHb}
function XGb(){HFb.call(this,($Gb(),ZGb))}
function tgc(){D5b.call(this);this.d=0;this.e=0}
iS(731,713,ZAc,XGb);_.Md=function YGb(){vFb(this,'mRefractionRatio',new CJb((VJb(),HJb),new jhb(1.02)));vFb(this,'mFresnelBias',new CJb(HJb,new jhb(0.1)));vFb(this,'mFresnelPower',new CJb(HJb,new jhb(2)));vFb(this,'mFresnelScale',new CJb(HJb,new jhb(1)));vFb(this,lHc,new BJb(NJb))};var ZGb;iS(732,1,{},cHb);_.Pd=function dHb(){return lHb(),aHb};_.Qd=function eHb(){return mHb(),bHb};var aHb,bHb;iS(733,1,{},gHb);_.ec=function hHb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};iS(734,1,{},jHb);_.ec=function kHb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};iS(1094,1,lBc);_.Cb=function rgc(){A5b(this.c,new tgc(this.b))};iS(1095,941,{273:1},tgc);_.nb=function ugc(){var a,b,c,d,e,f,g,i,j;this.b=new VMb(60,TDb(this.F.o),1,100000);v2b(this.b.ab,3200);this.c=new VMb(60,TDb(this.F.o),1,100000);this.f=new G4b;a=new nTb(100,32,16);j=new KKb('./static/textures/cube/park2/*.jpg');jKb(j,(Jzb(),Hzb));g=new XGb;AJb(Fu(sOb(g.j,lHc),174),j);c=new Q$b(g);this.g=new Xnb;for(b=0;b<500;b++){e=new W3b(a,c);J1b(e.ab,qib()*10000-5000);K1b(e.ab,qib()*10000-5000);v2b(e.ab,qib()*10000-5000);s2b(e.fb,qib()*3+1);WLb(this.G,e);Nnb(this.g,e)}this.G.X=false;i=new hGb;AJb(Fu(sOb(i.j,lHc),174),j);f=new Q$b(i);YVb(f,(LXb(),IXb));d=new W3b(new ySb(100000,100000,100000),f);WLb(this.f,d);this.F.o.Z=false};_.ob=function vgc(a){var b,c,d,e;e=1.0E-4*a;E1b(this.b.ab,(this.d-this.b.ab.d)*0.05);F1b(this.b.ab,(-this.e-this.b.ab.e)*0.05);tMb(this.b,this.G.ab);M_b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Fu(Qnb(this.g,b),252);J1b(d.ab,5000*Math.cos(e+b));K1b(d.ab,5000*Math.sin(e+b*1.1))}ODb(this.F.o);dEb(this.F.o,this.f,this.c,null,false);dEb(this.F.o,this.G,this.b,null,false)};_.d=0;_.e=0;var gM=Zgb(_Fc,'MaterialsCubemapFresnel$DemoScene',1095),cG=Zgb(mHc,'FresnelShader',731),bG=Zgb(mHc,'FresnelShader_Resources_default_InlineClientBundleGenerator',732),_F=Zgb(mHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',733),aG=Zgb(mHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',734);xBc(Gi)(21);