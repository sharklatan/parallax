function wmc(){}
function Amc(){}
function Dmc(){}
function spc(){}
function wpc(){}
function zpc(){}
function opc(){opc=Gzc;npc=new spc}
function Bpc(){Bpc=Gzc;qpc=new wpc}
function Cpc(){Cpc=Gzc;rpc=new zpc}
function smc(){smc=Gzc;rmc=new wmc}
function Fmc(){Fmc=Gzc;umc=new Amc}
function Gmc(){Gmc=Gzc;vmc=new Dmc}
function cfc(a,b){this.b=a;this.c=b}
function $ec(){D5b.call(this);this.e=0;this.f=0}
function pmc(){HFb.call(this,(smc(),rmc))}
function jpc(){HFb.call(this,(opc(),npc))}
function Zec(a,b){var c,d,e,f,g,i;d=new BKb(IGc);d.n=4;I1b(d.C,0.998,0.998);I1b(d.B,0.001,0.001);vKb(d,(QCb(),PCb));wKb(d,PCb);jKb(d,(Jzb(),Hzb));e=new BKb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');I1b(e.C,0.998,0.998);I1b(e.B,0.001,0.001);vKb(e,PCb);wKb(e,PCb);jKb(e,Hzb);c=new BKb('./static/models/obj/leeperrysmith/Map-COL.jpg');I1b(c.C,0.998,0.998);I1b(c.B,0.001,0.001);vKb(c,PCb);wKb(c,PCb);jKb(c,Hzb);g=new jpc;i=g.j;AJb(Fu(i.b[LGc],174),(ngb(),ngb(),mgb));AJb(Fu(i.b[MGc],174),mgb);AJb(Fu(i.b[NGc],174),a.c.f);AJb(Fu(i.b[OGc],174),c);AJb(Fu(i.b[PGc],174),d);AJb(Fu(i.b[QGc],174),e);C_b(Fu(Fu(i.b[RGc],174).e,241),10526880);C_b(Fu(Fu(i.b[SGc],174).e,241),10526880);C_b(Fu(Fu(i.b[TGc],174).e,241),10526880);AJb(Fu(i.b[UGc],174),new jhb(0.145));AJb(Fu(i.b[VGc],174),new jhb(0.75));AJb(Fu(i.b[WGc],174),new jhb(16));h3b(Fu(Fu(i.b[XGc],174).e,249),0.001,0.001,0.998,0.998);f=new Q$b(g);f.d=true;a.d=new W3b(b,f);K1b(a.d.ab,-50);s2b(a.d.fb,100);_Lb(a.d,true);a.d.V=true;WLb(a.G,a.d)}
var LGc='enableBump',NGc='tBeckmann',UGc='uRoughness',VGc='uSpecularBrightness';iS(1074,1,lBc);_.Cb=function Xec(){A5b(this.c,new $ec(this.b))};iS(1075,941,{269:1},$ec);_.nb=function _ec(){var b,c,d,e,f,g,i,j;this.b=new VMb(27,TDb(this.F.o),1,10000);v2b(this.b.ab,1200);WLb(this.G,new vUb(5592405));f=new oVb(16777215,1.5,1000);t2b(f.ab,0,0,600);WLb(this.G,f);i=new wVb(1);t2b(i.ab,0.05,0.05,1);WLb(this.G,i);i.ab.nf(700);i.T=true;i.u=true;i.J=2048;i.H=2048;i.B=200;i.A=1500;i.e=40;i.v=-0.005;i.F=0.15;b=new YUb(16777215,0.85);t2b(b.ab,1,-0.5,1);B_b(b.M,0.6,1,0.85);WLb(this.G,b);b.ab.nf(500);b.T=true;b.J=2048;b.H=2048;b.B=200;b.A=1500;b.f=-500;b.g=500;b.i=500;b.e=-500;b.v=-0.005;b.F=0.15;c=new YUb(16777215,0.85);t2b(c.ab,1,-0.5,-1);WLb(this.G,c);new Fxc(new pmc);d=new Fxc(new _xc);d.b=true;j=new YKb(512,512);oKb(j,(yBb(),sBb));mKb(j,(nBb(),lBb));jKb(j,(Jzb(),Hzb));j.g=false;this.c=new vxc(this.F.o,j);e=new lqc;try{aqc(e,JGc,new cfc(this,e))}catch(a){a=nR(a);if(Iu(a,46)){KLb();lU(JLb,(Drb(),Brb),KGc)}else throw mR(a)}oEb(this.F.o,new F_b(5001561),1);g=new iDb(this.F.o,this.G);g.i=false;this.F.o.Z=false;this.F.o._=true;this.F.o.ab=true};_.ob=function afc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){L_b(this.d.db,0.05*(b-this.d.db.e));K_b(this.d.db,0.05*(c-this.d.db.d))}ODb(this.F.o);dEb(this.F.o,this.G,this.b,null,false)};_.e=0;_.f=0;iS(1076,1,{},cfc);_.yf=function dfc(){Zec(this.b,this.c.b)};iS(1176,713,ZAc,pmc);_.Md=function qmc(){};var rmc;iS(1177,1,{},wmc);_.Pd=function xmc(){return Fmc(),umc};_.Qd=function ymc(){return Gmc(),vmc};var umc,vmc;iS(1178,1,{},Amc);_.ec=function Bmc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};iS(1179,1,{},Dmc);_.ec=function Emc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};iS(1243,713,ZAc,jpc);_.Md=function kpc(){CFb(this,ZJb());CFb(this,$Jb());CFb(this,_Jb());vFb(this,LGc,new CJb((VJb(),KJb),Rhb(0)));vFb(this,MGc,new CJb(KJb,Rhb(0)));vFb(this,OGc,new BJb(NJb));vFb(this,NGc,new BJb(NJb));vFb(this,SGc,new CJb(GJb,new F_b(15658734)));vFb(this,TGc,new CJb(GJb,new F_b(1118481)));vFb(this,RGc,new CJb(GJb,new F_b(328965)));vFb(this,YGc,new CJb(HJb,new jhb(1)));vFb(this,UGc,new CJb(HJb,new jhb(0.15)));vFb(this,VGc,new CJb(HJb,new jhb(0.75)));vFb(this,PGc,new BJb(NJb));vFb(this,WGc,new CJb(HJb,new jhb(1)));vFb(this,QGc,new BJb(NJb));vFb(this,XGc,new CJb(TJb,new l3b(0,0,1,1)));vFb(this,'uWrapRGB',new CJb(RJb,new z2b(0.75,0.375,0.1875)))};_.Nd=function lpc(a){var b,c;c=new tob(vu(cQ,Mzc,1,[ZGc,$Gc,_Gc]));b=new tob(vu(cQ,Mzc,1,[aHc,bHc,cHc]));EFb(this,MFb(a,vu(fQ,Mzc,121,[c,b])))};_.Od=function mpc(a){var b,c;c=new tob(vu(cQ,Mzc,1,[dHc]));b=new tob(vu(cQ,Mzc,1,[eHc]));FFb(this,MFb(a,vu(fQ,Mzc,121,[c,b])))};var npc;iS(1244,1,{},spc);_.Pd=function tpc(){return Bpc(),qpc};_.Qd=function upc(){return Cpc(),rpc};var qpc,rpc;iS(1245,1,{},wpc);_.ec=function xpc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};iS(1246,1,{},zpc);_.ec=function Apc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var OL=Zgb(_Fc,'MaterialsBumpmapSkin$DemoScene',1075),NL=Zgb(_Fc,'MaterialsBumpmapSkin$DemoScene$1',1076),GN=Zgb(UFc,'BeckmannShader',1176),FN=Zgb(UFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1177),DN=Zgb(UFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1178),EN=Zgb(UFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1179),VN=Zgb(UFc,'SkinSimpleShader',1243),UN=Zgb(UFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1244),SN=Zgb(UFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1245),TN=Zgb(UFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1246);xBc(Gi)(17);