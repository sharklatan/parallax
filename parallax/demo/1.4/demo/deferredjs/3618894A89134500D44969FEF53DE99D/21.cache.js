function _Gb(){}
function dHb(){}
function gHb(){}
function iHb(){iHb=zzc;ZGb=new dHb}
function jHb(){jHb=zzc;$Gb=new gHb}
function XGb(){XGb=zzc;WGb=new _Gb}
function UGb(){EFb.call(this,(XGb(),WGb))}
function mgc(){z5b.call(this);this.d=0;this.e=0}
hS(731,713,SAc,UGb);_.Md=function VGb(){sFb(this,'mRefractionRatio',new zJb((SJb(),EJb),new ghb(1.02)));sFb(this,'mFresnelBias',new zJb(EJb,new ghb(0.1)));sFb(this,'mFresnelPower',new zJb(EJb,new ghb(2)));sFb(this,'mFresnelScale',new zJb(EJb,new ghb(1)));sFb(this,eHc,new yJb(KJb))};var WGb;hS(732,1,{},_Gb);_.Pd=function aHb(){return iHb(),ZGb};_.Qd=function bHb(){return jHb(),$Gb};var ZGb,$Gb;hS(733,1,{},dHb);_.ec=function eHb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};hS(734,1,{},gHb);_.ec=function hHb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};hS(1093,1,eBc);_.Cb=function kgc(){w5b(this.c,new mgc(this.b))};hS(1094,940,{273:1},mgc);_.nb=function ngc(){var a,b,c,d,e,f,g,i,j;this.b=new SMb(60,QDb(this.F.o),1,100000);r2b(this.b.ab,3200);this.c=new SMb(60,QDb(this.F.o),1,100000);this.f=new C4b;a=new iTb(100,32,16);j=new HKb('./static/textures/cube/park2/*.jpg');gKb(j,(Gzb(),Ezb));g=new UGb;xJb(Fu(pOb(g.j,eHc),174),j);c=new L$b(g);this.g=new Unb;for(b=0;b<500;b++){e=new S3b(a,c);F1b(e.ab,nib()*10000-5000);G1b(e.ab,nib()*10000-5000);r2b(e.ab,nib()*10000-5000);o2b(e.fb,nib()*3+1);TLb(this.G,e);Knb(this.g,e)}this.G.X=false;i=new eGb;xJb(Fu(pOb(i.j,eHc),174),j);f=new L$b(i);TVb(f,(GXb(),DXb));d=new S3b(new vSb(100000,100000,100000),f);TLb(this.f,d);this.F.o.Z=false};_.ob=function ogc(a){var b,c,d,e;e=1.0E-4*a;A1b(this.b.ab,(this.d-this.b.ab.d)*0.05);B1b(this.b.ab,(-this.e-this.b.ab.e)*0.05);qMb(this.b,this.G.ab);H_b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Fu(Nnb(this.g,b),252);F1b(d.ab,5000*Math.cos(e+b));G1b(d.ab,5000*Math.sin(e+b*1.1))}LDb(this.F.o);aEb(this.F.o,this.f,this.c,null,false);aEb(this.F.o,this.G,this.b,null,false)};_.d=0;_.e=0;var fM=Wgb(TFc,'MaterialsCubemapFresnel$DemoScene',1094),cG=Wgb(fHc,'FresnelShader',731),bG=Wgb(fHc,'FresnelShader_Resources_default_InlineClientBundleGenerator',732),_F=Wgb(fHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',733),aG=Wgb(fHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',734);qBc(Gi)(21);