function Rmc(){}
function Vmc(){}
function Ymc(){}
function Npc(){}
function Rpc(){}
function Upc(){}
function Jpc(){Jpc=_zc;Ipc=new Npc}
function Wpc(){Wpc=_zc;Lpc=new Rpc}
function Xpc(){Xpc=_zc;Mpc=new Upc}
function Nmc(){Nmc=_zc;Mmc=new Rmc}
function $mc(){$mc=_zc;Pmc=new Vmc}
function _mc(){_mc=_zc;Qmc=new Ymc}
function xfc(a,b){this.b=a;this.c=b}
function tfc(){Y5b.call(this);this.e=0;this.f=0}
function Kmc(){aGb.call(this,(Nmc(),Mmc))}
function Epc(){aGb.call(this,(Jpc(),Ipc))}
function sfc(a,b){var c,d,e,f,g,i;d=new WKb(gHc);d.n=4;b2b(d.C,0.998,0.998);b2b(d.B,0.001,0.001);QKb(d,(jDb(),iDb));RKb(d,iDb);EKb(d,(cAb(),aAb));e=new WKb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');b2b(e.C,0.998,0.998);b2b(e.B,0.001,0.001);QKb(e,iDb);RKb(e,iDb);EKb(e,aAb);c=new WKb('./static/models/obj/leeperrysmith/Map-COL.jpg');b2b(c.C,0.998,0.998);b2b(c.B,0.001,0.001);QKb(c,iDb);RKb(c,iDb);EKb(c,aAb);g=new Epc;i=g.j;VJb(Xu(i.b[jHc],174),(Hgb(),Hgb(),Ggb));VJb(Xu(i.b[kHc],174),Ggb);VJb(Xu(i.b[lHc],174),a.c.f);VJb(Xu(i.b[mHc],174),c);VJb(Xu(i.b[nHc],174),d);VJb(Xu(i.b[oHc],174),e);X_b(Xu(Xu(i.b[pHc],174).e,241),10526880);X_b(Xu(Xu(i.b[qHc],174).e,241),10526880);X_b(Xu(Xu(i.b[rHc],174).e,241),10526880);VJb(Xu(i.b[sHc],174),new Dhb(0.145));VJb(Xu(i.b[tHc],174),new Dhb(0.75));VJb(Xu(i.b[uHc],174),new Dhb(16));C3b(Xu(Xu(i.b[vHc],174).e,249),0.001,0.001,0.998,0.998);f=new j_b(g);f.d=true;a.d=new p4b(b,f);d2b(a.d.ab,-50);N2b(a.d.fb,100);uMb(a.d,true);a.d.V=true;pMb(a.G,a.d)}
var jHc='enableBump',lHc='tBeckmann',sHc='uRoughness',tHc='uSpecularBrightness';FS(1080,1,GBc);_.Cb=function qfc(){V5b(this.c,new tfc(this.b))};FS(1081,947,{269:1},tfc);_.nb=function ufc(){var b,c,d,e,f,g,i,j;this.b=new oNb(27,mEb(this.F.o),1,10000);Q2b(this.b.ab,1200);pMb(this.G,new QUb(5592405));f=new JVb(16777215,1.5,1000);O2b(f.ab,0,0,600);pMb(this.G,f);i=new RVb(1);O2b(i.ab,0.05,0.05,1);pMb(this.G,i);i.ab.rf(700);i.T=true;i.u=true;i.J=2048;i.H=2048;i.B=200;i.A=1500;i.e=40;i.v=-0.005;i.F=0.15;b=new rVb(16777215,0.85);O2b(b.ab,1,-0.5,1);W_b(b.M,0.6,1,0.85);pMb(this.G,b);b.ab.rf(500);b.T=true;b.J=2048;b.H=2048;b.B=200;b.A=1500;b.f=-500;b.g=500;b.i=500;b.e=-500;b.v=-0.005;b.F=0.15;c=new rVb(16777215,0.85);O2b(c.ab,1,-0.5,-1);pMb(this.G,c);new $xc(new Kmc);d=new $xc(new uyc);d.b=true;j=new rLb(512,512);JKb(j,(TBb(),NBb));HKb(j,(IBb(),GBb));EKb(j,(cAb(),aAb));j.g=false;this.c=new Qxc(this.F.o,j);e=new Gqc;try{vqc(e,hHc,new xfc(this,e))}catch(a){a=KR(a);if($u(a,46)){dMb();IU(cMb,(Yrb(),Wrb),iHc)}else throw JR(a)}JEb(this.F.o,new $_b(5001561),1);g=new DDb(this.F.o,this.G);g.i=false;this.F.o.Z=false;this.F.o._=true;this.F.o.ab=true};_.ob=function vfc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){e0b(this.d.db,0.05*(b-this.d.db.e));d0b(this.d.db,0.05*(c-this.d.db.d))}hEb(this.F.o);yEb(this.F.o,this.G,this.b,null,false)};_.e=0;_.f=0;FS(1082,1,{},xfc);_.Cf=function yfc(){sfc(this.b,this.c.b)};FS(1182,719,sBc,Kmc);_.Qd=function Lmc(){};var Mmc;FS(1183,1,{},Rmc);_.Td=function Smc(){return $mc(),Pmc};_.Ud=function Tmc(){return _mc(),Qmc};var Pmc,Qmc;FS(1184,1,{},Vmc);_.ic=function Wmc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};FS(1185,1,{},Ymc);_.ic=function Zmc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};FS(1249,719,sBc,Epc);_.Qd=function Fpc(){XFb(this,sKb());XFb(this,tKb());XFb(this,uKb());QFb(this,jHc,new XJb((oKb(),dKb),jib(0)));QFb(this,kHc,new XJb(dKb,jib(0)));QFb(this,mHc,new WJb(gKb));QFb(this,lHc,new WJb(gKb));QFb(this,qHc,new XJb(_Jb,new $_b(15658734)));QFb(this,rHc,new XJb(_Jb,new $_b(1118481)));QFb(this,pHc,new XJb(_Jb,new $_b(328965)));QFb(this,wHc,new XJb(aKb,new Dhb(1)));QFb(this,sHc,new XJb(aKb,new Dhb(0.15)));QFb(this,tHc,new XJb(aKb,new Dhb(0.75)));QFb(this,nHc,new WJb(gKb));QFb(this,uHc,new XJb(aKb,new Dhb(1)));QFb(this,oHc,new WJb(gKb));QFb(this,vHc,new XJb(mKb,new G3b(0,0,1,1)));QFb(this,'uWrapRGB',new XJb(kKb,new U2b(0.75,0.375,0.1875)))};_.Rd=function Gpc(a){var b,c;c=new Oob(Nu(zQ,fAc,1,[xHc,yHc,zHc]));b=new Oob(Nu(zQ,fAc,1,[AHc,BHc,CHc]));ZFb(this,fGb(a,Nu(CQ,fAc,121,[c,b])))};_.Sd=function Hpc(a){var b,c;c=new Oob(Nu(zQ,fAc,1,[DHc]));b=new Oob(Nu(zQ,fAc,1,[EHc]));$Fb(this,fGb(a,Nu(CQ,fAc,121,[c,b])))};var Ipc;FS(1250,1,{},Npc);_.Td=function Opc(){return Wpc(),Lpc};_.Ud=function Ppc(){return Xpc(),Mpc};var Lpc,Mpc;FS(1251,1,{},Rpc);_.ic=function Spc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};FS(1252,1,{},Upc);_.ic=function Vpc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var jM=rhb(zGc,'MaterialsBumpmapSkin$DemoScene',1081),iM=rhb(zGc,'MaterialsBumpmapSkin$DemoScene$1',1082),bO=rhb(sGc,'BeckmannShader',1182),aO=rhb(sGc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1183),$N=rhb(sGc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1184),_N=rhb(sGc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1185),qO=rhb(sGc,'SkinSimpleShader',1249),pO=rhb(sGc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1250),nO=rhb(sGc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1251),oO=rhb(sGc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1252);SBc(Hi)(17);