function nmc(){}
function rmc(){}
function umc(){}
function jpc(){}
function npc(){}
function qpc(){}
function fpc(){fpc=xzc;epc=new jpc}
function spc(){spc=xzc;hpc=new npc}
function tpc(){tpc=xzc;ipc=new qpc}
function jmc(){jmc=xzc;imc=new nmc}
function wmc(){wmc=xzc;lmc=new rmc}
function xmc(){xmc=xzc;mmc=new umc}
function yfc(a,b){this.b=a;this.c=b}
function ufc(){M5b.call(this);this.e=0;this.f=0}
function gmc(){XFb.call(this,(jmc(),imc))}
function apc(){XFb.call(this,(fpc(),epc))}
function tfc(a,b){var c,d,e,f,g,i;d=new RKb(FGc);d.n=4;S1b(d.C,0.998,0.998);S1b(d.B,0.001,0.001);LKb(d,(fDb(),eDb));MKb(d,eDb);zKb(d,($zb(),Yzb));e=new RKb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');S1b(e.C,0.998,0.998);S1b(e.B,0.001,0.001);LKb(e,eDb);MKb(e,eDb);zKb(e,Yzb);c=new RKb('./static/models/obj/leeperrysmith/Map-COL.jpg');S1b(c.C,0.998,0.998);S1b(c.B,0.001,0.001);LKb(c,eDb);MKb(c,eDb);zKb(c,Yzb);g=new apc;i=g.j;QJb(Yu(i.b[IGc],174),(Dgb(),Dgb(),Cgb));QJb(Yu(i.b[JGc],174),Cgb);QJb(Yu(i.b[KGc],174),a.c.f);QJb(Yu(i.b[LGc],174),c);QJb(Yu(i.b[MGc],174),d);QJb(Yu(i.b[NGc],174),e);M_b(Yu(Yu(i.b[OGc],174).e,240),10526880);M_b(Yu(Yu(i.b[PGc],174).e,240),10526880);M_b(Yu(Yu(i.b[QGc],174).e,240),10526880);QJb(Yu(i.b[RGc],174),new zhb(0.145));QJb(Yu(i.b[SGc],174),new zhb(0.75));QJb(Yu(i.b[TGc],174),new zhb(16));r3b(Yu(Yu(i.b[UGc],174).e,248),0.001,0.001,0.998,0.998);f=new $$b(g);f.d=true;a.d=new e4b(b,f);U1b(a.d.ab,-50);C2b(a.d.fb,100);pMb(a.d,true);a.d.V=true;kMb(a.G,a.d)}
var IGc='enableBump',KGc='tBeckmann',RGc='uRoughness',SGc='uSpecularBrightness';BS(1082,1,cBc);_.Cb=function rfc(){J5b(this.c,new ufc(this.b))};BS(1083,946,{268:1},ufc);_.nb=function vfc(){var b,c,d,e,f,g,i,j;this.b=new jNb(27,hEb(this.F.o),1,10000);F2b(this.b.ab,1200);kMb(this.G,new LUb(5592405));f=new EVb(16777215,1.5,1000);D2b(f.ab,0,0,600);kMb(this.G,f);i=new MVb(1);D2b(i.ab,0.05,0.05,1);kMb(this.G,i);i.ab.rf(700);i.T=true;i.u=true;i.J=2048;i.H=2048;i.B=200;i.A=1500;i.e=40;i.v=-0.005;i.F=0.15;b=new mVb(16777215,0.85);D2b(b.ab,1,-0.5,1);L_b(b.M,0.6,1,0.85);kMb(this.G,b);b.ab.rf(500);b.T=true;b.J=2048;b.H=2048;b.B=200;b.A=1500;b.f=-500;b.g=500;b.i=500;b.e=-500;b.v=-0.005;b.F=0.15;c=new mVb(16777215,0.85);D2b(c.ab,1,-0.5,-1);kMb(this.G,c);new wxc(new gmc);d=new wxc(new Sxc);d.b=true;j=new mLb(512,512);EKb(j,(PBb(),JBb));CKb(j,(EBb(),CBb));zKb(j,($zb(),Yzb));j.g=false;this.c=new mxc(this.F.o,j);e=new cqc;try{Tpc(e,GGc,new yfc(this,e))}catch(a){a=GR(a);if(_u(a,46)){$Lb();EU(ZLb,(Urb(),Srb),HGc)}else throw FR(a)}EEb(this.F.o,new P_b(5001561),1);g=new zDb(this.F.o,this.G);g.i=false;this.F.o.Z=false;this.F.o._=true;this.F.o.ab=true};_.ob=function wfc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){V_b(this.d.db,0.05*(b-this.d.db.e));U_b(this.d.db,0.05*(c-this.d.db.d))}cEb(this.F.o);tEb(this.F.o,this.G,this.b,null,false)};_.e=0;_.f=0;BS(1084,1,{},yfc);_.Cf=function zfc(){tfc(this.b,this.c.b)};BS(1175,719,QAc,gmc);_.Qd=function hmc(){};var imc;BS(1176,1,{},nmc);_.Td=function omc(){return wmc(),lmc};_.Ud=function pmc(){return xmc(),mmc};var lmc,mmc;BS(1177,1,{},rmc);_.ic=function smc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};BS(1178,1,{},umc);_.ic=function vmc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};BS(1242,719,QAc,apc);_.Qd=function bpc(){SFb(this,nKb());SFb(this,oKb());SFb(this,pKb());LFb(this,IGc,new SJb((jKb(),$Jb),fib(0)));LFb(this,JGc,new SJb($Jb,fib(0)));LFb(this,LGc,new RJb(bKb));LFb(this,KGc,new RJb(bKb));LFb(this,PGc,new SJb(WJb,new P_b(15658734)));LFb(this,QGc,new SJb(WJb,new P_b(1118481)));LFb(this,OGc,new SJb(WJb,new P_b(328965)));LFb(this,VGc,new SJb(XJb,new zhb(1)));LFb(this,RGc,new SJb(XJb,new zhb(0.15)));LFb(this,SGc,new SJb(XJb,new zhb(0.75)));LFb(this,MGc,new RJb(bKb));LFb(this,TGc,new SJb(XJb,new zhb(1)));LFb(this,NGc,new RJb(bKb));LFb(this,UGc,new SJb(hKb,new v3b(0,0,1,1)));LFb(this,'uWrapRGB',new SJb(fKb,new J2b(0.75,0.375,0.1875)))};_.Rd=function cpc(a){var b,c;c=new Kob(Ou(vQ,Dzc,1,[WGc,XGc,YGc]));b=new Kob(Ou(vQ,Dzc,1,[ZGc,$Gc,_Gc]));UFb(this,aGb(a,Ou(yQ,Dzc,121,[c,b])))};_.Sd=function dpc(a){var b,c;c=new Kob(Ou(vQ,Dzc,1,[aHc]));b=new Kob(Ou(vQ,Dzc,1,[bHc]));VFb(this,aGb(a,Ou(yQ,Dzc,121,[c,b])))};var epc;BS(1243,1,{},jpc);_.Td=function kpc(){return spc(),hpc};_.Ud=function lpc(){return tpc(),ipc};var hpc,ipc;BS(1244,1,{},npc);_.ic=function opc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};BS(1245,1,{},qpc);_.ic=function rpc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var mM=nhb(XFc,'MaterialsBumpmapSkin$DemoScene',1083),lM=nhb(XFc,'MaterialsBumpmapSkin$DemoScene$1',1084),ZN=nhb(QFc,'BeckmannShader',1175),YN=nhb(QFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1176),WN=nhb(QFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1177),XN=nhb(QFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1178),mO=nhb(QFc,'SkinSimpleShader',1242),lO=nhb(QFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1243),jO=nhb(QFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1244),kO=nhb(QFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1245);oBc(Ii)(18);