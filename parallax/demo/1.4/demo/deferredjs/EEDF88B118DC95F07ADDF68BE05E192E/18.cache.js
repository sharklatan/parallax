function Dlc(){}
function Hlc(){}
function Klc(){}
function zoc(){}
function Doc(){}
function Goc(){}
function voc(){voc=Nyc;uoc=new zoc}
function Ioc(){Ioc=Nyc;xoc=new Doc}
function Joc(){Joc=Nyc;yoc=new Goc}
function zlc(){zlc=Nyc;ylc=new Dlc}
function Mlc(){Mlc=Nyc;Blc=new Hlc}
function Nlc(){Nlc=Nyc;Clc=new Klc}
function Oec(a,b){this.a=a;this.b=b}
function Kec(){a5b.call(this);this.d=0;this.e=0}
function wlc(){lFb.call(this,(zlc(),ylc))}
function qoc(){lFb.call(this,(voc(),uoc))}
function Jec(a,b){var c,d,e,f,g,i;d=new fKb(KFc);d.k=4;g1b(d.B,0.998,0.998);g1b(d.A,0.001,0.001);_Jb(d,(vCb(),uCb));aKb(d,uCb);PJb(d,(ozb(),mzb));e=new fKb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');g1b(e.B,0.998,0.998);g1b(e.A,0.001,0.001);_Jb(e,uCb);aKb(e,uCb);PJb(e,mzb);c=new fKb('./static/models/obj/leeperrysmith/Map-COL.jpg');g1b(c.B,0.998,0.998);g1b(c.A,0.001,0.001);_Jb(c,uCb);aKb(c,uCb);PJb(c,mzb);g=new qoc;i=g.i;eJb(ru(i.a[NFc],174),(Ufb(),Ufb(),Tfb));eJb(ru(i.a[OFc],174),Tfb);eJb(ru(i.a[PFc],174),a.b.e);eJb(ru(i.a[QFc],174),c);eJb(ru(i.a[RFc],174),d);eJb(ru(i.a[SFc],174),e);a_b(ru(ru(i.a[TFc],174).d,240),10526880);a_b(ru(ru(i.a[UFc],174).d,240),10526880);a_b(ru(ru(i.a[VFc],174).d,240),10526880);eJb(ru(i.a[WFc],174),new Qgb(0.145));eJb(ru(i.a[XFc],174),new Qgb(0.75));eJb(ru(i.a[YFc],174),new Qgb(16));H2b(ru(ru(i.a[ZFc],174).d,248),0.001,0.001,0.998,0.998);f=new o$b(g);f.c=true;a.c=new u3b(b,f);i1b(a.c._,-50);S1b(a.c.eb,100);FLb(a.c,true);a.c.U=true;ALb(a.F,a.c)}
var NFc='enableBump',PFc='tBeckmann',WFc='uRoughness',XFc='uSpecularBrightness';QR(1080,1,rAc);_.yb=function Hec(){Z4b(this.b,new Kec(this.a))};QR(1081,944,{268:1},Kec);_.mb=function Lec(){var b,c,d,e,f,g,i,j;this.a=new zMb(27,xDb(this.D.n),1,10000);V1b(this.a._,1200);ALb(this.F,new _Tb(5592405));f=new UUb(16777215,1.5,1000);T1b(f._,0,0,600);ALb(this.F,f);i=new aVb(1);T1b(i._,0.05,0.05,1);ALb(this.F,i);i._.kf(700);i.S=true;i.t=true;i.I=2048;i.G=2048;i.A=200;i.w=1500;i.d=40;i.u=-0.005;i.D=0.15;b=new CUb(16777215,0.85);T1b(b._,1,-0.5,1);_$b(b.L,0.6,1,0.85);ALb(this.F,b);b._.kf(500);b.S=true;b.I=2048;b.G=2048;b.A=200;b.w=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.u=-0.005;b.D=0.15;c=new CUb(16777215,0.85);T1b(c._,1,-0.5,-1);ALb(this.F,c);new Mwc(new wlc);d=new Mwc(new gxc);d.a=true;j=new CKb(512,512);UJb(j,(dBb(),ZAb));SJb(j,(UAb(),SAb));PJb(j,(ozb(),mzb));j.f=false;this.b=new Cwc(this.D.n,j);e=new spc;try{hpc(e,LFc,new Oec(this,e))}catch(a){a=VQ(a);if(uu(a,46)){oLb();YT(nLb,(irb(),grb),MFc)}else throw UQ(a)}UDb(this.D.n,new d_b(5001561),1);g=new PCb(this.D.n,this.F);g.g=false;this.D.n.Y=false;this.D.n.$=true;this.D.n._=true};_.nb=function Mec(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){j_b(this.c.cb,0.05*(b-this.c.cb.d));i_b(this.c.cb,0.05*(c-this.c.cb.c))}sDb(this.D.n);JDb(this.D.n,this.F,this.a,null,false)};_.d=0;_.e=0;QR(1082,1,{},Oec);_.vf=function Pec(){Jec(this.a,this.b.a)};QR(1173,717,dAc,wlc);_.Jd=function xlc(){};var ylc;QR(1174,1,{},Dlc);_.Md=function Elc(){return Mlc(),Blc};_.Nd=function Flc(){return Nlc(),Clc};var Blc,Clc;QR(1175,1,{},Hlc);_.bc=function Ilc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};QR(1176,1,{},Klc);_.bc=function Llc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};QR(1240,717,dAc,qoc);_.Jd=function roc(){gFb(this,DJb());gFb(this,EJb());gFb(this,FJb());_Eb(this,NFc,new gJb((zJb(),oJb),whb(0)));_Eb(this,OFc,new gJb(oJb,whb(0)));_Eb(this,QFc,new fJb(rJb));_Eb(this,PFc,new fJb(rJb));_Eb(this,UFc,new gJb(kJb,new d_b(15658734)));_Eb(this,VFc,new gJb(kJb,new d_b(1118481)));_Eb(this,TFc,new gJb(kJb,new d_b(328965)));_Eb(this,$Fc,new gJb(lJb,new Qgb(1)));_Eb(this,WFc,new gJb(lJb,new Qgb(0.15)));_Eb(this,XFc,new gJb(lJb,new Qgb(0.75)));_Eb(this,RFc,new fJb(rJb));_Eb(this,YFc,new gJb(lJb,new Qgb(1)));_Eb(this,SFc,new fJb(rJb));_Eb(this,ZFc,new gJb(xJb,new L2b(0,0,1,1)));_Eb(this,'uWrapRGB',new gJb(vJb,new Z1b(0.75,0.375,0.1875)))};_.Kd=function soc(a){var b,c;c=new $nb(hu(KP,Syc,1,[_Fc,aGc,bGc]));b=new $nb(hu(KP,Syc,1,[cGc,dGc,eGc]));iFb(this,qFb(a,hu(NP,Syc,121,[c,b])))};_.Ld=function toc(a){var b,c;c=new $nb(hu(KP,Syc,1,[fGc]));b=new $nb(hu(KP,Syc,1,[gGc]));jFb(this,qFb(a,hu(NP,Syc,121,[c,b])))};var uoc;QR(1241,1,{},zoc);_.Md=function Aoc(){return Ioc(),xoc};_.Nd=function Boc(){return Joc(),yoc};var xoc,yoc;QR(1242,1,{},Doc);_.bc=function Eoc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};QR(1243,1,{},Goc);_.bc=function Hoc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var BL=Egb(aFc,'MaterialsBumpmapSkin$DemoScene',1081),AL=Egb(aFc,'MaterialsBumpmapSkin$DemoScene$1',1082),mN=Egb(VEc,'BeckmannShader',1173),lN=Egb(VEc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1174),jN=Egb(VEc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1175),kN=Egb(VEc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1176),BN=Egb(VEc,'SkinSimpleShader',1240),AN=Egb(VEc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1241),yN=Egb(VEc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1242),zN=Egb(VEc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1243);DAc(xi)(18);