function fmc(){}
function jmc(){}
function mmc(){}
function bpc(){}
function fpc(){}
function ipc(){}
function kpc(){kpc=pzc;_oc=new fpc}
function lpc(){lpc=pzc;apc=new ipc}
function bmc(){bmc=pzc;amc=new fmc}
function omc(){omc=pzc;dmc=new jmc}
function pmc(){pmc=pzc;emc=new mmc}
function Zoc(){Zoc=pzc;Yoc=new bpc}
function Nec(a,b){this.a=a;this.b=b}
function Jec(){m5b.call(this);this.d=0;this.e=0}
function $lc(){qFb.call(this,(bmc(),amc))}
function Uoc(){qFb.call(this,(Zoc(),Yoc))}
function Iec(a,b){var c,d,e,f,g,i;d=new kKb(lGc);d.k=4;r1b(d.B,0.998,0.998);r1b(d.A,0.001,0.001);eKb(d,(zCb(),yCb));fKb(d,yCb);UJb(d,(szb(),qzb));e=new kKb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');r1b(e.B,0.998,0.998);r1b(e.A,0.001,0.001);eKb(e,yCb);fKb(e,yCb);UJb(e,qzb);c=new kKb('./static/models/obj/leeperrysmith/Map-COL.jpg');r1b(c.B,0.998,0.998);r1b(c.A,0.001,0.001);eKb(c,yCb);fKb(c,yCb);UJb(c,qzb);g=new Uoc;i=g.i;jJb(qu(i.a[oGc],174),(Yfb(),Yfb(),Xfb));jJb(qu(i.a[pGc],174),Xfb);jJb(qu(i.a[qGc],174),a.b.e);jJb(qu(i.a[rGc],174),c);jJb(qu(i.a[sGc],174),d);jJb(qu(i.a[tGc],174),e);l_b(qu(qu(i.a[uGc],174).d,241),10526880);l_b(qu(qu(i.a[vGc],174).d,241),10526880);l_b(qu(qu(i.a[wGc],174).d,241),10526880);jJb(qu(i.a[xGc],174),new Ugb(0.145));jJb(qu(i.a[yGc],174),new Ugb(0.75));jJb(qu(i.a[zGc],174),new Ugb(16));S2b(qu(qu(i.a[AGc],174).d,249),0.001,0.001,0.998,0.998);f=new z$b(g);f.c=true;a.c=new F3b(b,f);t1b(a.c._,-50);b2b(a.c.eb,100);KLb(a.c,true);a.c.U=true;FLb(a.F,a.c)}
var oGc='enableBump',qGc='tBeckmann',xGc='uRoughness',yGc='uSpecularBrightness';UR(1078,1,VAc);_.yb=function Gec(){j5b(this.b,new Jec(this.a))};UR(1079,945,{269:1},Jec);_.mb=function Kec(){var b,c,d,e,f,g,i,j;this.a=new EMb(27,CDb(this.D.n),1,10000);e2b(this.a._,1200);FLb(this.F,new eUb(5592405));f=new ZUb(16777215,1.5,1000);c2b(f._,0,0,600);FLb(this.F,f);i=new fVb(1);c2b(i._,0.05,0.05,1);FLb(this.F,i);i._.kf(700);i.S=true;i.t=true;i.I=2048;i.G=2048;i.A=200;i.w=1500;i.d=40;i.u=-0.005;i.D=0.15;b=new HUb(16777215,0.85);c2b(b._,1,-0.5,1);k_b(b.L,0.6,1,0.85);FLb(this.F,b);b._.kf(500);b.S=true;b.I=2048;b.G=2048;b.A=200;b.w=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.u=-0.005;b.D=0.15;c=new HUb(16777215,0.85);c2b(c._,1,-0.5,-1);FLb(this.F,c);new oxc(new $lc);d=new oxc(new Kxc);d.a=true;j=new HKb(512,512);ZJb(j,(hBb(),bBb));XJb(j,(YAb(),WAb));UJb(j,(szb(),qzb));j.f=false;this.b=new exc(this.D.n,j);e=new Wpc;try{Lpc(e,mGc,new Nec(this,e))}catch(a){a=ZQ(a);if(tu(a,46)){tLb();aU(sLb,(mrb(),krb),nGc)}else throw YQ(a)}ZDb(this.D.n,new o_b(5001561),1);g=new TCb(this.D.n,this.F);g.g=false;this.D.n.Y=false;this.D.n.$=true;this.D.n._=true};_.nb=function Lec(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){u_b(this.c.cb,0.05*(b-this.c.cb.d));t_b(this.c.cb,0.05*(c-this.c.cb.c))}xDb(this.D.n);ODb(this.D.n,this.F,this.a,null,false)};_.d=0;_.e=0;UR(1080,1,{},Nec);_.vf=function Oec(){Iec(this.a,this.b.a)};UR(1180,717,HAc,$lc);_.Jd=function _lc(){};var amc;UR(1181,1,{},fmc);_.Md=function gmc(){return omc(),dmc};_.Nd=function hmc(){return pmc(),emc};var dmc,emc;UR(1182,1,{},jmc);_.bc=function kmc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};UR(1183,1,{},mmc);_.bc=function nmc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};UR(1247,717,HAc,Uoc);_.Jd=function Voc(){lFb(this,IJb());lFb(this,JJb());lFb(this,KJb());eFb(this,oGc,new lJb((EJb(),tJb),Ahb(0)));eFb(this,pGc,new lJb(tJb,Ahb(0)));eFb(this,rGc,new kJb(wJb));eFb(this,qGc,new kJb(wJb));eFb(this,vGc,new lJb(pJb,new o_b(15658734)));eFb(this,wGc,new lJb(pJb,new o_b(1118481)));eFb(this,uGc,new lJb(pJb,new o_b(328965)));eFb(this,BGc,new lJb(qJb,new Ugb(1)));eFb(this,xGc,new lJb(qJb,new Ugb(0.15)));eFb(this,yGc,new lJb(qJb,new Ugb(0.75)));eFb(this,sGc,new kJb(wJb));eFb(this,zGc,new lJb(qJb,new Ugb(1)));eFb(this,tGc,new kJb(wJb));eFb(this,AGc,new lJb(CJb,new W2b(0,0,1,1)));eFb(this,'uWrapRGB',new lJb(AJb,new i2b(0.75,0.375,0.1875)))};_.Kd=function Woc(a){var b,c;c=new cob(gu(OP,uzc,1,[CGc,DGc,EGc]));b=new cob(gu(OP,uzc,1,[FGc,GGc,HGc]));nFb(this,vFb(a,gu(RP,uzc,121,[c,b])))};_.Ld=function Xoc(a){var b,c;c=new cob(gu(OP,uzc,1,[IGc]));b=new cob(gu(OP,uzc,1,[JGc]));oFb(this,vFb(a,gu(RP,uzc,121,[c,b])))};var Yoc;UR(1248,1,{},bpc);_.Md=function cpc(){return kpc(),_oc};_.Nd=function dpc(){return lpc(),apc};var _oc,apc;UR(1249,1,{},fpc);_.bc=function gpc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};UR(1250,1,{},ipc);_.bc=function jpc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var yL=Igb(EFc,'MaterialsBumpmapSkin$DemoScene',1079),xL=Igb(EFc,'MaterialsBumpmapSkin$DemoScene$1',1080),qN=Igb(xFc,'BeckmannShader',1180),pN=Igb(xFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1181),nN=Igb(xFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1182),oN=Igb(xFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1183),FN=Igb(xFc,'SkinSimpleShader',1247),EN=Igb(xFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1248),CN=Igb(xFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1249),DN=Igb(xFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1250);fBc(wi)(17);