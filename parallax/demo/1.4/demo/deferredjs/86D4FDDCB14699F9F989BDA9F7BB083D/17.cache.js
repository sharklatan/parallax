function pmc(){}
function tmc(){}
function wmc(){}
function lpc(){}
function ppc(){}
function spc(){}
function hpc(){hpc=zzc;gpc=new lpc}
function upc(){upc=zzc;jpc=new ppc}
function vpc(){vpc=zzc;kpc=new spc}
function lmc(){lmc=zzc;kmc=new pmc}
function ymc(){ymc=zzc;nmc=new tmc}
function zmc(){zmc=zzc;omc=new wmc}
function Xec(a,b){this.a=a;this.b=b}
function Tec(){w5b.call(this);this.d=0;this.e=0}
function cpc(){AFb.call(this,(hpc(),gpc))}
function imc(){AFb.call(this,(lmc(),kmc))}
function Sec(a,b){var c,d,e,f,g,i;d=new uKb(xGc);d.k=4;B1b(d.B,0.998,0.998);B1b(d.A,0.001,0.001);oKb(d,(JCb(),ICb));pKb(d,ICb);cKb(d,(Czb(),Azb));e=new uKb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');B1b(e.B,0.998,0.998);B1b(e.A,0.001,0.001);oKb(e,ICb);pKb(e,ICb);cKb(e,Azb);c=new uKb('./static/models/obj/leeperrysmith/Map-COL.jpg');B1b(c.B,0.998,0.998);B1b(c.A,0.001,0.001);oKb(c,ICb);pKb(c,ICb);cKb(c,Azb);g=new cpc;i=g.i;tJb(su(i.a[AGc],174),(ggb(),ggb(),fgb));tJb(su(i.a[BGc],174),fgb);tJb(su(i.a[CGc],174),a.b.e);tJb(su(i.a[DGc],174),c);tJb(su(i.a[EGc],174),d);tJb(su(i.a[FGc],174),e);v_b(su(su(i.a[GGc],174).d,241),10526880);v_b(su(su(i.a[HGc],174).d,241),10526880);v_b(su(su(i.a[IGc],174).d,241),10526880);tJb(su(i.a[JGc],174),new chb(0.145));tJb(su(i.a[KGc],174),new chb(0.75));tJb(su(i.a[LGc],174),new chb(16));a3b(su(su(i.a[MGc],174).d,249),0.001,0.001,0.998,0.998);f=new J$b(g);f.c=true;a.c=new P3b(b,f);D1b(a.c._,-50);l2b(a.c.eb,100);ULb(a.c,true);a.c.U=true;PLb(a.F,a.c)}
var AGc='enableBump',CGc='tBeckmann',JGc='uRoughness',KGc='uSpecularBrightness';YR(1080,1,dBc);_.yb=function Qec(){t5b(this.b,new Tec(this.a))};YR(1081,947,{269:1},Tec);_.mb=function Uec(){var b,c,d,e,f,g,i,j;this.a=new OMb(27,MDb(this.D.n),1,10000);o2b(this.a._,1200);PLb(this.F,new oUb(5592405));f=new hVb(16777215,1.5,1000);m2b(f._,0,0,600);PLb(this.F,f);i=new pVb(1);m2b(i._,0.05,0.05,1);PLb(this.F,i);i._.kf(700);i.S=true;i.t=true;i.I=2048;i.G=2048;i.A=200;i.w=1500;i.d=40;i.u=-0.005;i.D=0.15;b=new RUb(16777215,0.85);m2b(b._,1,-0.5,1);u_b(b.L,0.6,1,0.85);PLb(this.F,b);b._.kf(500);b.S=true;b.I=2048;b.G=2048;b.A=200;b.w=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.u=-0.005;b.D=0.15;c=new RUb(16777215,0.85);m2b(c._,1,-0.5,-1);PLb(this.F,c);new yxc(new imc);d=new yxc(new Uxc);d.a=true;j=new RKb(512,512);hKb(j,(rBb(),lBb));fKb(j,(gBb(),eBb));cKb(j,(Czb(),Azb));j.f=false;this.b=new oxc(this.D.n,j);e=new eqc;try{Vpc(e,yGc,new Xec(this,e))}catch(a){a=bR(a);if(vu(a,46)){DLb();eU(CLb,(wrb(),urb),zGc)}else throw aR(a)}hEb(this.D.n,new y_b(5001561),1);g=new bDb(this.D.n,this.F);g.g=false;this.D.n.Y=false;this.D.n.$=true;this.D.n._=true};_.nb=function Vec(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){E_b(this.c.cb,0.05*(b-this.c.cb.d));D_b(this.c.cb,0.05*(c-this.c.cb.c))}HDb(this.D.n);YDb(this.D.n,this.F,this.a,null,false)};_.d=0;_.e=0;YR(1082,1,{},Xec);_.vf=function Yec(){Sec(this.a,this.b.a)};YR(1182,719,RAc,imc);_.Jd=function jmc(){};var kmc;YR(1183,1,{},pmc);_.Md=function qmc(){return ymc(),nmc};_.Nd=function rmc(){return zmc(),omc};var nmc,omc;YR(1184,1,{},tmc);_.bc=function umc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};YR(1185,1,{},wmc);_.bc=function xmc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};YR(1249,719,RAc,cpc);_.Jd=function dpc(){vFb(this,SJb());vFb(this,TJb());vFb(this,UJb());oFb(this,AGc,new vJb((OJb(),DJb),Khb(0)));oFb(this,BGc,new vJb(DJb,Khb(0)));oFb(this,DGc,new uJb(GJb));oFb(this,CGc,new uJb(GJb));oFb(this,HGc,new vJb(zJb,new y_b(15658734)));oFb(this,IGc,new vJb(zJb,new y_b(1118481)));oFb(this,GGc,new vJb(zJb,new y_b(328965)));oFb(this,NGc,new vJb(AJb,new chb(1)));oFb(this,JGc,new vJb(AJb,new chb(0.15)));oFb(this,KGc,new vJb(AJb,new chb(0.75)));oFb(this,EGc,new uJb(GJb));oFb(this,LGc,new vJb(AJb,new chb(1)));oFb(this,FGc,new uJb(GJb));oFb(this,MGc,new vJb(MJb,new e3b(0,0,1,1)));oFb(this,'uWrapRGB',new vJb(KJb,new s2b(0.75,0.375,0.1875)))};_.Kd=function epc(a){var b,c;c=new mob(iu(SP,Ezc,1,[OGc,PGc,QGc]));b=new mob(iu(SP,Ezc,1,[RGc,SGc,TGc]));xFb(this,FFb(a,iu(VP,Ezc,121,[c,b])))};_.Ld=function fpc(a){var b,c;c=new mob(iu(SP,Ezc,1,[UGc]));b=new mob(iu(SP,Ezc,1,[VGc]));yFb(this,FFb(a,iu(VP,Ezc,121,[c,b])))};var gpc;YR(1250,1,{},lpc);_.Md=function mpc(){return upc(),jpc};_.Nd=function npc(){return vpc(),kpc};var jpc,kpc;YR(1251,1,{},ppc);_.bc=function qpc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};YR(1252,1,{},spc);_.bc=function tpc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var CL=Sgb(QFc,'MaterialsBumpmapSkin$DemoScene',1081),BL=Sgb(QFc,'MaterialsBumpmapSkin$DemoScene$1',1082),uN=Sgb(JFc,'BeckmannShader',1182),tN=Sgb(JFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1183),rN=Sgb(JFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1184),sN=Sgb(JFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1185),JN=Sgb(JFc,'SkinSimpleShader',1249),IN=Sgb(JFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1250),GN=Sgb(JFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1251),HN=Sgb(JFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1252);pBc(wi)(17);