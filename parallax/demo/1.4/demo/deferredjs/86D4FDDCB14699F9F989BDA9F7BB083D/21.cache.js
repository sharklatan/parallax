function XGb(){}
function _Gb(){}
function cHb(){}
function eHb(){eHb=zzc;VGb=new _Gb}
function fHb(){fHb=zzc;WGb=new cHb}
function TGb(){TGb=zzc;SGb=new XGb}
function QGb(){AFb.call(this,(TGb(),SGb))}
function mgc(){w5b.call(this);this.c=0;this.d=0}
YR(737,719,RAc,QGb);_.Jd=function RGb(){oFb(this,'mRefractionRatio',new vJb((OJb(),AJb),new chb(1.02)));oFb(this,'mFresnelBias',new vJb(AJb,new chb(0.1)));oFb(this,'mFresnelPower',new vJb(AJb,new chb(2)));oFb(this,'mFresnelScale',new vJb(AJb,new chb(1)));oFb(this,aHc,new uJb(GJb))};var SGb;YR(738,1,{},XGb);_.Md=function YGb(){return eHb(),VGb};_.Nd=function ZGb(){return fHb(),WGb};var VGb,WGb;YR(739,1,{},_Gb);_.bc=function aHb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};YR(740,1,{},cHb);_.bc=function dHb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};YR(1100,1,dBc);_.yb=function kgc(){t5b(this.b,new mgc(this.a))};YR(1101,947,{273:1},mgc);_.mb=function ngc(){var a,b,c,d,e,f,g,i,j;this.a=new OMb(60,MDb(this.D.n),1,100000);o2b(this.a._,3200);this.b=new OMb(60,MDb(this.D.n),1,100000);this.e=new z4b;a=new gTb(100,32,16);j=new DKb('./static/textures/cube/park2/*.jpg');cKb(j,(Czb(),Azb));g=new QGb;tJb(su(lOb(g.i,aHc),174),j);c=new J$b(g);this.f=new Qnb;for(b=0;b<500;b++){d=new P3b(a,c);C1b(d._,jib()*10000-5000);D1b(d._,jib()*10000-5000);o2b(d._,jib()*10000-5000);l2b(d.eb,jib()*3+1);PLb(this.F,d);Gnb(this.f,d)}this.F.W=false;i=new aGb;tJb(su(lOb(i.i,aHc),174),j);f=new J$b(i);RVb(f,(EXb(),BXb));e=new P3b(new rSb(100000,100000,100000),f);PLb(this.e,e);this.D.n.Y=false};_.nb=function ogc(a){var b,c,d,e;e=1.0E-4*a;x1b(this.a._,(this.c-this.a._.c)*0.05);y1b(this.a._,(-this.d-this.a._.d)*0.05);mMb(this.a,this.F._);F_b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=su(Jnb(this.f,b),252);C1b(d._,5000*Math.cos(e+b));D1b(d._,5000*Math.sin(e+b*1.1))}HDb(this.D.n);YDb(this.D.n,this.e,this.b,null,false);YDb(this.D.n,this.F,this.a,null,false)};_.c=0;_.d=0;var WL=Sgb(QFc,'MaterialsCubemapFresnel$DemoScene',1101),SF=Sgb(bHc,'FresnelShader',737),RF=Sgb(bHc,'FresnelShader_Resources_default_InlineClientBundleGenerator',738),PF=Sgb(bHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',739),QF=Sgb(bHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',740);pBc(wi)(21);