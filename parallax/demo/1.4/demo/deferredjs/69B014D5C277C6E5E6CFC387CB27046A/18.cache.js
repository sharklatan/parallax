function Ulc(){}
function Ylc(){}
function _lc(){}
function Qoc(){}
function Uoc(){}
function Xoc(){}
function Moc(){Moc=czc;Loc=new Qoc}
function Zoc(){Zoc=czc;Ooc=new Uoc}
function $oc(){$oc=czc;Poc=new Xoc}
function Qlc(){Qlc=czc;Plc=new Ulc}
function bmc(){bmc=czc;Slc=new Ylc}
function cmc(){cmc=czc;Tlc=new _lc}
function dfc(a,b){this.b=a;this.c=b}
function _ec(){r5b.call(this);this.e=0;this.f=0}
function Nlc(){CFb.call(this,(Qlc(),Plc))}
function Hoc(){CFb.call(this,(Moc(),Loc))}
function $ec(a,b){var c,d,e,f,g,i;d=new wKb(fGc);d.n=4;x1b(d.C,0.998,0.998);x1b(d.B,0.001,0.001);qKb(d,(MCb(),LCb));rKb(d,LCb);eKb(d,(Fzb(),Dzb));e=new wKb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');x1b(e.C,0.998,0.998);x1b(e.B,0.001,0.001);qKb(e,LCb);rKb(e,LCb);eKb(e,Dzb);c=new wKb('./static/models/obj/leeperrysmith/Map-COL.jpg');x1b(c.C,0.998,0.998);x1b(c.B,0.001,0.001);qKb(c,LCb);rKb(c,LCb);eKb(c,Dzb);g=new Hoc;i=g.j;vJb(Gu(i.b[iGc],174),(jgb(),jgb(),igb));vJb(Gu(i.b[jGc],174),igb);vJb(Gu(i.b[kGc],174),a.c.f);vJb(Gu(i.b[lGc],174),c);vJb(Gu(i.b[mGc],174),d);vJb(Gu(i.b[nGc],174),e);r_b(Gu(Gu(i.b[oGc],174).e,240),10526880);r_b(Gu(Gu(i.b[pGc],174).e,240),10526880);r_b(Gu(Gu(i.b[qGc],174).e,240),10526880);vJb(Gu(i.b[rGc],174),new fhb(0.145));vJb(Gu(i.b[sGc],174),new fhb(0.75));vJb(Gu(i.b[tGc],174),new fhb(16));Y2b(Gu(Gu(i.b[uGc],174).e,248),0.001,0.001,0.998,0.998);f=new F$b(g);f.d=true;a.d=new L3b(b,f);z1b(a.d.ab,-50);h2b(a.d.fb,100);WLb(a.d,true);a.d.V=true;RLb(a.G,a.d)}
var iGc='enableBump',kGc='tBeckmann',rGc='uRoughness',sGc='uSpecularBrightness';eS(1076,1,JAc);_.Cb=function Yec(){o5b(this.c,new _ec(this.b))};eS(1077,940,{268:1},_ec);_.nb=function afc(){var b,c,d,e,f,g,i,j;this.b=new QMb(27,ODb(this.F.o),1,10000);k2b(this.b.ab,1200);RLb(this.G,new qUb(5592405));f=new jVb(16777215,1.5,1000);i2b(f.ab,0,0,600);RLb(this.G,f);i=new rVb(1);i2b(i.ab,0.05,0.05,1);RLb(this.G,i);i.ab.nf(700);i.T=true;i.u=true;i.J=2048;i.H=2048;i.B=200;i.A=1500;i.e=40;i.v=-0.005;i.F=0.15;b=new TUb(16777215,0.85);i2b(b.ab,1,-0.5,1);q_b(b.M,0.6,1,0.85);RLb(this.G,b);b.ab.nf(500);b.T=true;b.J=2048;b.H=2048;b.B=200;b.A=1500;b.f=-500;b.g=500;b.i=500;b.e=-500;b.v=-0.005;b.F=0.15;c=new TUb(16777215,0.85);i2b(c.ab,1,-0.5,-1);RLb(this.G,c);new bxc(new Nlc);d=new bxc(new xxc);d.b=true;j=new TKb(512,512);jKb(j,(uBb(),oBb));hKb(j,(jBb(),hBb));eKb(j,(Fzb(),Dzb));j.g=false;this.c=new Twc(this.F.o,j);e=new Jpc;try{ypc(e,gGc,new dfc(this,e))}catch(a){a=jR(a);if(Ju(a,46)){FLb();hU(ELb,(zrb(),xrb),hGc)}else throw iR(a)}jEb(this.F.o,new u_b(5001561),1);g=new eDb(this.F.o,this.G);g.i=false;this.F.o.Z=false;this.F.o._=true;this.F.o.ab=true};_.ob=function bfc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){A_b(this.d.db,0.05*(b-this.d.db.e));z_b(this.d.db,0.05*(c-this.d.db.d))}JDb(this.F.o);$Db(this.F.o,this.G,this.b,null,false)};_.e=0;_.f=0;eS(1078,1,{},dfc);_.yf=function efc(){$ec(this.b,this.c.b)};eS(1169,713,vAc,Nlc);_.Md=function Olc(){};var Plc;eS(1170,1,{},Ulc);_.Pd=function Vlc(){return bmc(),Slc};_.Qd=function Wlc(){return cmc(),Tlc};var Slc,Tlc;eS(1171,1,{},Ylc);_.ec=function Zlc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};eS(1172,1,{},_lc);_.ec=function amc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};eS(1236,713,vAc,Hoc);_.Md=function Ioc(){xFb(this,UJb());xFb(this,VJb());xFb(this,WJb());qFb(this,iGc,new xJb((QJb(),FJb),Nhb(0)));qFb(this,jGc,new xJb(FJb,Nhb(0)));qFb(this,lGc,new wJb(IJb));qFb(this,kGc,new wJb(IJb));qFb(this,pGc,new xJb(BJb,new u_b(15658734)));qFb(this,qGc,new xJb(BJb,new u_b(1118481)));qFb(this,oGc,new xJb(BJb,new u_b(328965)));qFb(this,vGc,new xJb(CJb,new fhb(1)));qFb(this,rGc,new xJb(CJb,new fhb(0.15)));qFb(this,sGc,new xJb(CJb,new fhb(0.75)));qFb(this,mGc,new wJb(IJb));qFb(this,tGc,new xJb(CJb,new fhb(1)));qFb(this,nGc,new wJb(IJb));qFb(this,uGc,new xJb(OJb,new a3b(0,0,1,1)));qFb(this,'uWrapRGB',new xJb(MJb,new o2b(0.75,0.375,0.1875)))};_.Nd=function Joc(a){var b,c;c=new pob(wu($P,izc,1,[wGc,xGc,yGc]));b=new pob(wu($P,izc,1,[zGc,AGc,BGc]));zFb(this,HFb(a,wu(bQ,izc,121,[c,b])))};_.Od=function Koc(a){var b,c;c=new pob(wu($P,izc,1,[CGc]));b=new pob(wu($P,izc,1,[DGc]));AFb(this,HFb(a,wu(bQ,izc,121,[c,b])))};var Loc;eS(1237,1,{},Qoc);_.Pd=function Roc(){return Zoc(),Ooc};_.Qd=function Soc(){return $oc(),Poc};var Ooc,Poc;eS(1238,1,{},Uoc);_.ec=function Voc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};eS(1239,1,{},Xoc);_.ec=function Yoc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var RL=Vgb(xFc,'MaterialsBumpmapSkin$DemoScene',1077),QL=Vgb(xFc,'MaterialsBumpmapSkin$DemoScene$1',1078),CN=Vgb(qFc,'BeckmannShader',1169),BN=Vgb(qFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1170),zN=Vgb(qFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1171),AN=Vgb(qFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1172),RN=Vgb(qFc,'SkinSimpleShader',1236),QN=Vgb(qFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1237),ON=Vgb(qFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1238),PN=Vgb(qFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1239);VAc(Hi)(18);