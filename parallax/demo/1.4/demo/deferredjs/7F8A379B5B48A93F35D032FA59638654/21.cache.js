function bHb(){}
function fHb(){}
function iHb(){}
function kHb(){kHb=Dzc;_Gb=new fHb}
function lHb(){lHb=Dzc;aHb=new iHb}
function ZGb(){ZGb=Dzc;YGb=new bHb}
function WGb(){GFb.call(this,(ZGb(),YGb))}
function qgc(){B5b.call(this);this.d=0;this.e=0}
hS(731,713,WAc,WGb);_.Md=function XGb(){uFb(this,'mRefractionRatio',new BJb((UJb(),GJb),new ihb(1.02)));uFb(this,'mFresnelBias',new BJb(GJb,new ihb(0.1)));uFb(this,'mFresnelPower',new BJb(GJb,new ihb(2)));uFb(this,'mFresnelScale',new BJb(GJb,new ihb(1)));uFb(this,jHc,new AJb(MJb))};var YGb;hS(732,1,{},bHb);_.Pd=function cHb(){return kHb(),_Gb};_.Qd=function dHb(){return lHb(),aHb};var _Gb,aHb;hS(733,1,{},fHb);_.ec=function gHb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};hS(734,1,{},iHb);_.ec=function jHb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};hS(1093,1,iBc);_.Cb=function ogc(){y5b(this.c,new qgc(this.b))};hS(1094,940,{273:1},qgc);_.nb=function rgc(){var a,b,c,d,e,f,g,i,j;this.b=new UMb(60,SDb(this.F.o),1,100000);t2b(this.b.ab,3200);this.c=new UMb(60,SDb(this.F.o),1,100000);this.f=new E4b;a=new kTb(100,32,16);j=new JKb('./static/textures/cube/park2/*.jpg');iKb(j,(Izb(),Gzb));g=new WGb;zJb(Fu(rOb(g.j,jHc),174),j);c=new N$b(g);this.g=new Wnb;for(b=0;b<500;b++){d=new U3b(a,c);H1b(d.ab,pib()*10000-5000);I1b(d.ab,pib()*10000-5000);t2b(d.ab,pib()*10000-5000);q2b(d.fb,pib()*3+1);VLb(this.G,d);Mnb(this.g,d)}this.G.X=false;i=new gGb;zJb(Fu(rOb(i.j,jHc),174),j);f=new N$b(i);VVb(f,(IXb(),FXb));e=new U3b(new xSb(100000,100000,100000),f);VLb(this.f,e);this.F.o.Z=false};_.ob=function sgc(a){var b,c,d,e;e=1.0E-4*a;C1b(this.b.ab,(this.d-this.b.ab.d)*0.05);D1b(this.b.ab,(-this.e-this.b.ab.e)*0.05);sMb(this.b,this.G.ab);J_b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Fu(Pnb(this.g,b),252);H1b(d.ab,5000*Math.cos(e+b));I1b(d.ab,5000*Math.sin(e+b*1.1))}NDb(this.F.o);cEb(this.F.o,this.f,this.c,null,false);cEb(this.F.o,this.G,this.b,null,false)};_.d=0;_.e=0;var fM=Ygb(YFc,'MaterialsCubemapFresnel$DemoScene',1094),cG=Ygb(kHc,'FresnelShader',731),bG=Ygb(kHc,'FresnelShader_Resources_default_InlineClientBundleGenerator',732),_F=Ygb(kHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',733),aG=Ygb(kHc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',734);uBc(Gi)(21);