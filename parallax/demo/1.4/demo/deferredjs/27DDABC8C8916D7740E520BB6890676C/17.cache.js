function tmc(){}
function xmc(){}
function Amc(){}
function ppc(){}
function tpc(){}
function wpc(){}
function lpc(){lpc=Dzc;kpc=new ppc}
function ypc(){ypc=Dzc;npc=new tpc}
function zpc(){zpc=Dzc;opc=new wpc}
function pmc(){pmc=Dzc;omc=new tmc}
function Cmc(){Cmc=Dzc;rmc=new xmc}
function Dmc(){Dmc=Dzc;smc=new Amc}
function mmc(){EFb.call(this,(pmc(),omc))}
function gpc(){EFb.call(this,(lpc(),kpc))}
function Xec(){A5b.call(this);this.d=0;this.e=0}
function _ec(a,b){this.a=a;this.b=b}
function Wec(a,b){var c,d,e,f,g,i;d=new yKb(KGc);d.k=4;F1b(d.B,0.998,0.998);F1b(d.A,0.001,0.001);sKb(d,(NCb(),MCb));tKb(d,MCb);gKb(d,(Gzb(),Ezb));e=new yKb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');F1b(e.B,0.998,0.998);F1b(e.A,0.001,0.001);sKb(e,MCb);tKb(e,MCb);gKb(e,Ezb);c=new yKb('./static/models/obj/leeperrysmith/Map-COL.jpg');F1b(c.B,0.998,0.998);F1b(c.A,0.001,0.001);sKb(c,MCb);tKb(c,MCb);gKb(c,Ezb);g=new gpc;i=g.i;xJb(Au(i.a[NGc],174),(kgb(),kgb(),jgb));xJb(Au(i.a[OGc],174),jgb);xJb(Au(i.a[PGc],174),a.b.e);xJb(Au(i.a[QGc],174),c);xJb(Au(i.a[RGc],174),d);xJb(Au(i.a[SGc],174),e);z_b(Au(Au(i.a[TGc],174).d,241),10526880);z_b(Au(Au(i.a[UGc],174).d,241),10526880);z_b(Au(Au(i.a[VGc],174).d,241),10526880);xJb(Au(i.a[WGc],174),new ghb(0.145));xJb(Au(i.a[XGc],174),new ghb(0.75));xJb(Au(i.a[YGc],174),new ghb(16));e3b(Au(Au(i.a[ZGc],174).d,249),0.001,0.001,0.998,0.998);f=new N$b(g);f.c=true;a.c=new T3b(b,f);H1b(a.c._,-50);p2b(a.c.eb,100);YLb(a.c,true);a.c.U=true;TLb(a.F,a.c)}
var NGc='enableBump',PGc='tBeckmann',WGc='uRoughness',XGc='uSpecularBrightness';dS(1077,1,hBc);_.yb=function Uec(){x5b(this.b,new Xec(this.a))};dS(1078,944,{269:1},Xec);_.mb=function Yec(){var b,c,d,e,f,g,i,j;this.a=new SMb(27,QDb(this.D.n),1,10000);s2b(this.a._,1200);TLb(this.F,new sUb(5592405));f=new lVb(16777215,1.5,1000);q2b(f._,0,0,600);TLb(this.F,f);i=new tVb(1);q2b(i._,0.05,0.05,1);TLb(this.F,i);i._.kf(700);i.S=true;i.t=true;i.I=2048;i.G=2048;i.A=200;i.w=1500;i.d=40;i.u=-0.005;i.D=0.15;b=new VUb(16777215,0.85);q2b(b._,1,-0.5,1);y_b(b.L,0.6,1,0.85);TLb(this.F,b);b._.kf(500);b.S=true;b.I=2048;b.G=2048;b.A=200;b.w=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.u=-0.005;b.D=0.15;c=new VUb(16777215,0.85);q2b(c._,1,-0.5,-1);TLb(this.F,c);new Cxc(new mmc);d=new Cxc(new Yxc);d.a=true;j=new VKb(512,512);lKb(j,(vBb(),pBb));jKb(j,(kBb(),iBb));gKb(j,(Gzb(),Ezb));j.f=false;this.b=new sxc(this.D.n,j);e=new iqc;try{Zpc(e,LGc,new _ec(this,e))}catch(a){a=iR(a);if(Du(a,46)){HLb();lU(GLb,(Arb(),yrb),MGc)}else throw hR(a)}lEb(this.D.n,new C_b(5001561),1);g=new fDb(this.D.n,this.F);g.g=false;this.D.n.Y=false;this.D.n.$=true;this.D.n._=true};_.nb=function Zec(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){I_b(this.c.cb,0.05*(b-this.c.cb.d));H_b(this.c.cb,0.05*(c-this.c.cb.c))}LDb(this.D.n);aEb(this.D.n,this.F,this.a,null,false)};_.d=0;_.e=0;dS(1079,1,{},_ec);_.vf=function afc(){Wec(this.a,this.b.a)};dS(1179,716,VAc,mmc);_.Jd=function nmc(){};var omc;dS(1180,1,{},tmc);_.Md=function umc(){return Cmc(),rmc};_.Nd=function vmc(){return Dmc(),smc};var rmc,smc;dS(1181,1,{},xmc);_.bc=function ymc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};dS(1182,1,{},Amc);_.bc=function Bmc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};dS(1246,716,VAc,gpc);_.Jd=function hpc(){zFb(this,WJb());zFb(this,XJb());zFb(this,YJb());sFb(this,NGc,new zJb((SJb(),HJb),Ohb(0)));sFb(this,OGc,new zJb(HJb,Ohb(0)));sFb(this,QGc,new yJb(KJb));sFb(this,PGc,new yJb(KJb));sFb(this,UGc,new zJb(DJb,new C_b(15658734)));sFb(this,VGc,new zJb(DJb,new C_b(1118481)));sFb(this,TGc,new zJb(DJb,new C_b(328965)));sFb(this,$Gc,new zJb(EJb,new ghb(1)));sFb(this,WGc,new zJb(EJb,new ghb(0.15)));sFb(this,XGc,new zJb(EJb,new ghb(0.75)));sFb(this,RGc,new yJb(KJb));sFb(this,YGc,new zJb(EJb,new ghb(1)));sFb(this,SGc,new yJb(KJb));sFb(this,ZGc,new zJb(QJb,new i3b(0,0,1,1)));sFb(this,'uWrapRGB',new zJb(OJb,new w2b(0.75,0.375,0.1875)))};_.Kd=function ipc(a){var b,c;c=new qob(qu(ZP,Izc,1,[_Gc,aHc,bHc]));b=new qob(qu(ZP,Izc,1,[cHc,dHc,eHc]));BFb(this,JFb(a,qu(aQ,Izc,121,[c,b])))};_.Ld=function jpc(a){var b,c;c=new qob(qu(ZP,Izc,1,[fHc]));b=new qob(qu(ZP,Izc,1,[gHc]));CFb(this,JFb(a,qu(aQ,Izc,121,[c,b])))};var kpc;dS(1247,1,{},ppc);_.Md=function qpc(){return ypc(),npc};_.Nd=function rpc(){return zpc(),opc};var npc,opc;dS(1248,1,{},tpc);_.bc=function upc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};dS(1249,1,{},wpc);_.bc=function xpc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var JL=Wgb(bGc,'MaterialsBumpmapSkin$DemoScene',1078),IL=Wgb(bGc,'MaterialsBumpmapSkin$DemoScene$1',1079),BN=Wgb(WFc,'BeckmannShader',1179),AN=Wgb(WFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1180),yN=Wgb(WFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1181),zN=Wgb(WFc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1182),QN=Wgb(WFc,'SkinSimpleShader',1246),PN=Wgb(WFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1247),NN=Wgb(WFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1248),ON=Wgb(WFc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1249);tBc(wi)(17);