function gLb(){}
function kLb(){}
function nLb(){}
function cLb(){cLb=oMc;bLb=new gLb}
function pLb(){pLb=oMc;eLb=new kLb}
function qLb(){qLb=oMc;fLb=new nLb}
function _Kb(){qJb.call(this,(cLb(),bLb))}
function Gmc(){qbc.call(this);this.c=0;this.d=0}
zV(764,740,MNc,_Kb);_.Md=function aLb(){eJb(this,'mRefractionRatio',new GNb((ZNb(),LNb),new ikb(1.02)));eJb(this,'mFresnelBias',new GNb(LNb,new ikb(0.1)));eJb(this,'mFresnelPower',new GNb(LNb,new ikb(2)));eJb(this,'mFresnelScale',new GNb(LNb,new ikb(1)));eJb(this,_Tc,new FNb(RNb))};var bLb;zV(765,1,{},gLb);_.Pd=function hLb(){return pLb(),eLb};_.Qd=function iLb(){return qLb(),fLb};var eLb,fLb;zV(766,1,{},kLb);_.nc=function lLb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};zV(767,1,{},nLb);_.nc=function oLb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};zV(1155,1,$Nc);_.Mb=function Emc(){Sac(this.b,new Gmc(this.a))};zV(1156,988,{331:1},Gmc);_.nb=function Hmc(){var a,b,c,d,e,f,g,i,j;this.a=new eRb(60,iGb(this.G.k),1,100000);n8b(this.a._,3200);this.b=new eRb(60,iGb(this.G.k),1,100000);this.e=new W9b;a=new EXb(100,32,16);j=new OOb('./static/textures/cube/park2/*.jpg');nOb(j,(ZCb(),XCb));g=new _Kb;ENb(wv(ISb(g.i,_Tc),226),j);c=new a4b(g);this.f=new Yqb;for(b=0;b<500;b++){e=new gZb(a,c);F7b(e._,plb()*10000-5000);G7b(e._,plb()*10000-5000);n8b(e._,plb()*10000-5000);k8b(e.eb,plb()*3+1);aQb(this.H,e);Oqb(this.f,e)}this.H.W=false;i=new SJb;ENb(wv(ISb(i.i,_Tc),226),j);f=new a4b(i);d_b(f,(R0b(),O0b));d=new gZb(new PWb(100000,100000,100000),f);aQb(this.e,d);jGb(this.G.k,false)};_.ob=function Imc(a){var b,c,d,e;e=1.0E-4*a;z7b(this.a._,(this.c-this.a._.c)*0.05);A7b(this.a._,(-this.d-this.a._.d)*0.05);AQb(this.a,this.H._);d5b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=wv(Rqb(this.f,b),308);F7b(d._,5000*Math.cos(e+b));G7b(d._,5000*Math.sin(e+b*1.1))}pHb(this.G.k,true);HHb(this.G.k,this.e,this.b,null,false);HHb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var SN=Yjb(TSc,'MaterialsCubemapFresnel$DemoScene',1156),mH=Yjb(aUc,'FresnelShader',764),lH=Yjb(aUc,'FresnelShader_Resources_default_InlineClientBundleGenerator',765),jH=Yjb(aUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',766),kH=Yjb(aUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',767);mOc(Ej)(21);