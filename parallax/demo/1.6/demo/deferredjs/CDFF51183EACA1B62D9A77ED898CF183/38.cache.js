function vuc(){}
function zuc(){}
function Cuc(){}
function ayc(){}
function eyc(){}
function hyc(){}
function QIc(){}
function UIc(){}
function XIc(){}
function kKc(){}
function oKc(){}
function rKc(){}
function DKc(){}
function HKc(){}
function KKc(){}
function WKc(){}
function $Kc(){}
function bLc(){}
function nLc(){}
function rLc(){}
function uLc(){}
function s$b(a,b){a.b=b}
function p9b(a,b){a.k=b}
function tIc(a,b){Oqb(a.b,b)}
function iuc(a){this.a=a}
function luc(a){this.a=a}
function ouc(a){this.a=a}
function ruc(){ruc=oMc;quc=new vuc}
function Euc(){Euc=oMc;tuc=new zuc}
function Fuc(){Fuc=oMc;uuc=new Cuc}
function Yxc(){Yxc=oMc;Xxc=new ayc}
function jyc(){jyc=oMc;$xc=new eyc}
function kyc(){kyc=oMc;_xc=new hyc}
function MIc(){MIc=oMc;LIc=new QIc}
function ZIc(){ZIc=oMc;OIc=new UIc}
function $Ic(){$Ic=oMc;PIc=new XIc}
function gKc(){gKc=oMc;fKc=new kKc}
function tKc(){tKc=oMc;iKc=new oKc}
function uKc(){uKc=oMc;jKc=new rKc}
function zKc(){zKc=oMc;yKc=new DKc}
function MKc(){MKc=oMc;BKc=new HKc}
function NKc(){NKc=oMc;CKc=new KKc}
function SKc(){SKc=oMc;RKc=new WKc}
function dLc(){dLc=oMc;UKc=new $Kc}
function eLc(){eLc=oMc;VKc=new bLc}
function jLc(){jLc=oMc;iLc=new nLc}
function wLc(){wLc=oMc;lLc=new rLc}
function xLc(){xLc=oMc;mLc=new uLc}
function fuc(a,b){this.a=a;this.b=b}
function Txc(){qJb.call(this,(Yxc(),Xxc))}
function JIc(){qJb.call(this,(MIc(),LIc))}
function dKc(){qJb.call(this,(gKc(),fKc))}
function wKc(){qJb.call(this,(zKc(),yKc))}
function PKc(){qJb.call(this,(SKc(),RKc))}
function gLc(){qJb.call(this,(jLc(),iLc))}
function $tc(a){a.w+=1;a.w==3&&lQb(a.v,true)}
function _tc(){qbc.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Ztc(a,b,c,d){var e,f,g;g=new a4b(b);ENb(wv(ISb(U$b(g).i,GTc),226),c);f=new W9b;e=new gZb(new wXb(a.u,a.t),g);n8b(e._,-500);aQb(f,e);HHb(a.G.k,f,a.c,d,true)}
function Ytc(a,b,c,d,e,f){var g,i;g=new U1b;N1b(g,new X4b(16755285));g.j=true;S1b(g,(M_b(),J_b));i=new r9b(b,g);i.d=c;p9b(i,Ev(600*plb()));l8b(i._,d,e,f);k5b(i.cb,1.5707963267948966);i.S=true;i.U=true;aQb(a.H,i);Oqb(a.n,i)}
var WUc='enableDiffuse1',XUc='enableDiffuse2',PUc='h',RUc='heightMap',aVc='heightmap',_Uc='offset',bVc='r',VUc='tDetail',TUc='tDiffuse1',UUc='tDiffuse2',ZUc='uRepeatOverlay',QUc='v';zV(1258,1,$Nc);_.Mb=function Wtc(){Sac(this.b,new _tc(this.a))};zV(1259,988,{78:1,186:1,342:1},_tc);_.Vd=function auc(a){$tc(this)};_.Gd=function buc(a){this.u=a.a.hb;this.t=a.a.gb;ENb(wv(ISb(U$b(this.f.b).i,PUc),226),new ikb(6/this.u));ENb(wv(ISb(U$b(this.D.b).i,QUc),226),new ikb(6/this.t))};_.nb=function cuc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;lu((dyb(),cyb),(nyb(),myb),this);this.b=new eRb(40,iGb(this.G.k),2,4000);this.u=this.G.k.hb;this.t=this.G.k.gb;this.c=new RQb(this.u,this.t,-10000,10000);l8b(this.b._,-1200,800,1200);n8b(this.c._,100);this.s=new W9b;aQb(this.s,this.c);this.d=new ixb(this.b,this.G.c);k8b(this.d.v,0);this.d.s=1;this.d.A=1.2;fxb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;dxb(this.d,0.15);U9b(this.H,new K9b(328965,2000,4000));aQb(this.H,new yZb(1118481));this.e=new a$b(16777215,1.15);l8b(this.e._,500,2000,0);aQb(this.H,this.e);this.q=new v$b(16729088,1.5,0);k8b(this.q._,0);aQb(this.H,this.q);this.g=new aPb(256,256);sOb(this.g,(OEb(),JEb));qOb(this.g,(DEb(),BEb));nOb(this.g,(ZCb(),XCb));oOb(this.g,false);this.o=new aPb(256,256);sOb(this.o,JEb);qOb(this.o,BEb);nOb(this.o,XCb);oOb(this.o,false);n=new PKc;u=n.i;ENb(wv(u.a[yQc],226),new ikb(0.05));E7b(wv(wv(u.a[kUc],226).d,301),256,256);ENb(wv(u.a[RUc],226),this.g);s=new aPb(2048,2048);sOb(s,JEb);qOb(s,BEb);nOb(s,XCb);s.r=false;zOb(s,(eGb(),dGb));AOb(s,dGb);c=new GOb('./static/textures/terrain/grasslight-big.jpg',new fuc(this,s));zOb(c,dGb);AOb(c,dGb);d=new GOb('./static/textures/terrain/backgrounddetailed6.jpg',this);zOb(d,dGb);AOb(d,dGb);b=new GOb('./static/textures/terrain/grasslight-big-nm.jpg',this);zOb(b,dGb);AOb(b,dGb);t=new Txc;this.B=t.i;ENb(wv(ISb(this.B,eUc),226),this.o);ENb(wv(ISb(this.B,fUc),226),new ikb(3.5));ENb(wv(ISb(this.B,SUc),226),this.g);ENb(wv(ISb(this.B,TUc),226),c);ENb(wv(ISb(this.B,UUc),226),d);ENb(wv(ISb(this.B,gUc),226),s);ENb(wv(ISb(this.B,VUc),226),b);ENb(wv(ISb(this.B,WUc),226),(jjb(),jjb(),ijb));ENb(wv(ISb(this.B,XUc),226),ijb);ENb(wv(ISb(this.B,ETc),226),ijb);T4b(wv(wv(ISb(this.B,KTc),226).d,298),16777215);T4b(wv(wv(ISb(this.B,LTc),226).d,298),16777215);T4b(wv(wv(ISb(this.B,JTc),226).d,298),1118481);ENb(wv(ISb(this.B,jUc),226),new ikb(30));ENb(wv(ISb(this.B,YUc),226),new ikb(375));E7b(wv(wv(ISb(this.B,ZUc),226).d,301),6,6);this.A=new Htb;cpb(this.A,nUc,new GNb((ZNb(),LNb),new ikb(1)));cpb(this.A,$Uc,new GNb(TNb,new K7b(1.5,1.5)));cpb(this.A,_Uc,new GNb(TNb,new K7b(0,0)));this.k=new Htb;i=new _3b((ruc(),quc));lJb(U$b(i),this.A);i.c=false;i.b=true;cpb(this.k,aVc,i);j=new a4b(n);lJb(U$b(j),u);j.c=false;j.b=true;cpb(this.k,ATc,j);k=new a4b(t);lJb(U$b(k),this.B);k.c=true;k.b=true;cpb(this.k,'terrain',k);o=new wXb(this.u,this.t);p=new _0b;V0b(p,new X4b(0));this.r=new gZb(o,p);n8b(this.r._,-500);aQb(this.s,this.r);g=new xXb(6000,6000,64,64);NRb(g);this.v=new gZb(g,k);l8b(this.v._,0,-125,0);j5b(this.v.cb,-1.5707963267948966);lQb(this.v,false);aQb(this.H,this.v);RHb(this.G.k,this.H.a.c,1);this.G.k.X=true;this.G.k.Y=true;jGb(this.G.k,false);q=new DIc(this.H,this.b);f=new nIc(0.6);e=new GIc(new JIc);ENb(wv(ISb(U$b(e.b).i,QTc),226),new ikb(0.65));this.f=new GIc(new dKc);this.D=new GIc(new gLc);ENb(wv(ISb(U$b(this.f.b).i,PUc),226),new ikb(6/this.u));ENb(wv(ISb(U$b(this.D.b).i,QUc),226),new ikb(6/this.t));ENb(wv(ISb(U$b(this.f.b).i,bVc),226),new ikb(0.5));ENb(wv(ISb(U$b(this.D.b).i,bVc),226),new ikb(0.5));this.D.a=true;r=new aPb(this.u,this.t);sOb(s,IEb);qOb(s,BEb);nOb(s,XCb);s.f=false;s.r=false;a=new vIc(this.G.k,r);Oqb(a.b,q);Oqb(a.b,f);Oqb(a.b,e);tIc(a,this.f);tIc(a,this.D);this.n=new Yqb;new _yc('./static/models/animated/parrot.js',new iuc(this));new _yc(OUc,new luc(this));new _yc('./static/models/animated/stork.js',new ouc(this));this.p=yi()};_.ob=function duc(a){var b,c,d,e,f;b=(yi()-this.p)*0.001;if(this.v.gb){gxb(this.d);this.j=v5b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;S4b(this.H.a.c,0.1,e,this.j);RHb(this.G.k,this.H.a.c,1);IZb(this.e,0.1+f*1.0499999999999998);s$b(this.q,0.9+f*0.6);ENb(wv(ISb(this.B,fUc),226),new ikb(0.6+f*2.9));if(this.C){this.a=v5b(this.a+-7.5E-4,0,0.05);ENb(wv(Zob(this.A,nUc),226),new ikb(wv(wv(Zob(this.A,nUc),226).d,150).a+b*this.a));z7b(wv(wv(Zob(this.A,_Uc),226).d,301),b*0.05);F7b(wv(wv(ISb(this.B,cVc),226).d,301),4*wv(wv(Zob(this.A,_Uc),226).d,301).c);STb(this.r,wv(Zob(this.k,aVc),287));HHb(this.G.k,this.s,this.c,this.g,true);STb(this.r,wv(Zob(this.k,ATc),287));HHb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=wv(Rqb(this.n,c),309);q9b(d,Ev(1000*b));z7b(d._,d.d*b);d._.c>2000&&F7b(d._,-1500-plb()*500)}HHb(this.G.k,this.H,this.b,null,false)}this.p=yi()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;zV(1260,1,{},fuc);_.Vd=function guc(a){$tc(this.a);Ztc(this.a,new wKc,a,this.b)};zV(1261,1,{},iuc);_.qf=function juc(a,b){Wyc((wv(a,344),wv(b,243)));Ytc(this.a,wv(b,243),500,-3500,500,700);Ytc(this.a,wv(b,243),500,-3000-plb()*500,500,-200);Ytc(this.a,wv(b,243),500,-3000-plb()*500,500,200);Ytc(this.a,wv(b,243),500,-3000-plb()*500,500,1000)};zV(1262,1,{},luc);_.qf=function muc(a,b){Wyc((wv(a,344),wv(b,243)));Ytc(this.a,wv(b,243),1000,-3000-plb()*500,350,40)};zV(1263,1,{},ouc);_.qf=function puc(a,b){Wyc((wv(a,344),wv(b,243)));Ytc(this.a,wv(b,243),1000,-3000-plb()*500,350,340)};var quc;zV(1264,1,{},vuc);_.Pd=function wuc(){return Euc(),tuc};_.Qd=function xuc(){return Fuc(),uuc};var tuc,uuc;zV(1265,1,{},zuc);_.nc=function Auc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};zV(1266,1,{},Cuc);_.nc=function Duc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};zV(1327,740,MNc,Txc);_.Md=function Uxc(){lJb(this,bOb());lJb(this,cOb());lJb(this,dOb());eJb(this,WUc,new GNb((ZNb(),ONb),(jjb(),jjb(),hjb)));eJb(this,XUc,new GNb(ONb,hjb));eJb(this,ETc,new GNb(ONb,hjb));eJb(this,dVc,new GNb(ONb,hjb));eJb(this,TUc,new FNb(RNb));eJb(this,UUc,new FNb(RNb));eJb(this,VUc,new FNb(RNb));eJb(this,eUc,new FNb(RNb));eJb(this,gUc,new FNb(RNb));eJb(this,SUc,new FNb(RNb));eJb(this,fUc,new GNb(LNb,new ikb(1)));eJb(this,eVc,new GNb(LNb,new ikb(0)));eJb(this,YUc,new GNb(LNb,new ikb(1)));eJb(this,KTc,new GNb(KNb,new X4b(15658734)));eJb(this,LTc,new GNb(KNb,new X4b(1118481)));eJb(this,JTc,new GNb(KNb,new X4b(328965)));eJb(this,jUc,new GNb(LNb,new ikb(30)));eJb(this,QTc,new GNb(LNb,new ikb(1)));eJb(this,'uRepeatBase',new GNb(TNb,new K7b(1,1)));eJb(this,ZUc,new GNb(TNb,new K7b(1,1)));eJb(this,cVc,new GNb(TNb,new K7b(0,0)))};_.Nd=function Vxc(a){var b,c;c=new vrb(mv(vT,tMc,1,[RTc,STc]));b=new vrb(mv(vT,tMc,1,[UTc,VTc,WTc]));nJb(this,vJb(a,mv(yT,tMc,173,[c,b])))};_.Od=function Wxc(a){var b,c;c=new vrb(mv(vT,tMc,1,[XTc]));b=new vrb(mv(vT,tMc,1,[YTc]));oJb(this,vJb(a,mv(yT,tMc,173,[c,b])))};var Xxc;zV(1328,1,{},ayc);_.Pd=function byc(){return jyc(),$xc};_.Qd=function cyc(){return kyc(),_xc};var $xc,_xc;zV(1329,1,{},eyc);_.nc=function fyc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};zV(1330,1,{},hyc);_.nc=function iyc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};zV(1422,740,MNc,JIc);_.Md=function KIc(){eJb(this,GTc,new FNb((ZNb(),RNb)));eJb(this,QTc,new GNb(LNb,new ikb(1)))};var LIc;zV(1423,1,{},QIc);_.Pd=function RIc(){return ZIc(),OIc};_.Qd=function SIc(){return $Ic(),PIc};var OIc,PIc;zV(1424,1,{},UIc);_.nc=function VIc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};zV(1425,1,{},XIc);_.nc=function YIc(){return vUc};zV(1446,740,MNc,dKc);_.Md=function eKc(){eJb(this,GTc,new FNb((ZNb(),RNb)));eJb(this,PUc,new GNb(LNb,new ikb(0.001953125)));eJb(this,bVc,new GNb(LNb,new ikb(0.35)))};var fKc;zV(1447,1,{},kKc);_.Pd=function lKc(){return tKc(),iKc};_.Qd=function mKc(){return uKc(),jKc};var iKc,jKc;zV(1448,1,{},oKc);_.nc=function pKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};zV(1449,1,{},rKc);_.nc=function sKc(){return vUc};zV(1452,740,MNc,wKc);_.Md=function xKc(){eJb(this,GTc,new FNb((ZNb(),RNb)))};var yKc;zV(1453,1,{},DKc);_.Pd=function EKc(){return MKc(),BKc};_.Qd=function FKc(){return NKc(),CKc};var BKc,CKc;zV(1454,1,{},HKc);_.nc=function IKc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};zV(1455,1,{},KKc);_.nc=function LKc(){return vUc};zV(1458,740,MNc,PKc);_.Md=function QKc(){eJb(this,RUc,new FNb((ZNb(),RNb)));eJb(this,kUc,new GNb(TNb,new K7b(512,512)));eJb(this,$Uc,new GNb(TNb,new K7b(1,1)));eJb(this,yQc,new GNb(LNb,new ikb(0.05)))};var RKc;zV(1459,1,{},WKc);_.Pd=function XKc(){return dLc(),UKc};_.Qd=function YKc(){return eLc(),VKc};var UKc,VKc;zV(1460,1,{},$Kc);_.nc=function _Kc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};zV(1461,1,{},bLc);_.nc=function cLc(){return vUc};zV(1464,740,MNc,gLc);_.Md=function hLc(){eJb(this,GTc,new FNb((ZNb(),RNb)));eJb(this,QUc,new GNb(LNb,new ikb(0.001953125)));eJb(this,bVc,new GNb(LNb,new ikb(0.35)))};var iLc;zV(1465,1,{},nLc);_.Pd=function oLc(){return wLc(),lLc};_.Qd=function pLc(){return xLc(),mLc};var lLc,mLc;zV(1466,1,{},rLc);_.nc=function sLc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};zV(1467,1,{},uLc);_.nc=function vLc(){return vUc};var JP=Yjb(WSc,'TerrainDynamic$DemoScene',1259),FP=Yjb(WSc,'TerrainDynamic$DemoScene$1',1260),GP=Yjb(WSc,'TerrainDynamic$DemoScene$2',1261),HP=Yjb(WSc,'TerrainDynamic$DemoScene$3',1262),IP=Yjb(WSc,'TerrainDynamic$DemoScene$4',1263),zS=Yjb(xUc,fVc,1458),xQ=Yjb(MSc,'TerrainShader',1327),bS=Yjb(xUc,'BleachBypassShader',1422),rS=Yjb(xUc,'HorizontalTiltShiftShader',1446),DS=Yjb(xUc,'VerticalTiltShiftShader',1464),MP=Yjb(WSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1264),KP=Yjb(WSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1265),LP=Yjb(WSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1266),yS=Yjb(xUc,gVc,1459),wS=Yjb(xUc,hVc,1460),xS=Yjb(xUc,iVc,1461),wQ=Yjb(MSc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1328),uQ=Yjb(MSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1329),vQ=Yjb(MSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1330),aS=Yjb(xUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1423),$R=Yjb(xUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1424),_R=Yjb(xUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1425),qS=Yjb(xUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1447),oS=Yjb(xUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1448),pS=Yjb(xUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1449),CS=Yjb(xUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1465),AS=Yjb(xUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1466),BS=Yjb(xUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1467),vS=Yjb(xUc,'LuminosityShader',1452),uS=Yjb(xUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1453),sS=Yjb(xUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1454),tS=Yjb(xUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1455);mOc(Ej)(38);