function ivc(){}
function mvc(){}
function pvc(){}
function Rxc(){}
function Vxc(){}
function Yxc(){}
function Dlc(a){this.a=a}
function evc(){evc=yMc;dvc=new ivc}
function rvc(){rvc=yMc;gvc=new mvc}
function svc(){svc=yMc;hvc=new pvc}
function Nxc(){Nxc=yMc;Mxc=new Rxc}
function $xc(){$xc=yMc;Pxc=new Vxc}
function _xc(){_xc=yMc;Qxc=new Yxc}
function Ixc(){AJb.call(this,(Nxc(),Mxc))}
function bvc(){AJb.call(this,(evc(),dvc))}
function zlc(){Abc.call(this);this.d=0;this.e=0}
function ylc(a,b){var c,d,e,f,g,i;d=new POb(NTc);d.k=4;O7b(d.B,0.998,0.998);O7b(d.A,0.001,0.001);JOb(d,(oGb(),nGb));KOb(d,nGb);xOb(d,(hDb(),fDb));e=new POb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');O7b(e.B,0.998,0.998);O7b(e.A,0.001,0.001);JOb(e,nGb);KOb(e,nGb);xOb(e,fDb);c=new POb('./static/models/obj/leeperrysmith/Map-COL.jpg');O7b(c.B,0.998,0.998);O7b(c.A,0.001,0.001);JOb(c,nGb);KOb(c,nGb);xOb(c,fDb);g=new Ixc;i=g.i;ONb(yv(i.a[PTc],226),(tjb(),tjb(),sjb));ONb(yv(i.a[QTc],226),sjb);ONb(yv(i.a[RTc],226),a.b.e);ONb(yv(i.a[STc],226),c);ONb(yv(i.a[TTc],226),d);ONb(yv(i.a[UTc],226),e);b5b(yv(yv(i.a[VTc],226).d,298),10526880);b5b(yv(yv(i.a[WTc],226).d,298),10526880);b5b(yv(yv(i.a[XTc],226).d,298),10526880);ONb(yv(i.a[YTc],226),new skb(0.145));ONb(yv(i.a[ZTc],226),new skb(0.75));ONb(yv(i.a[$Tc],226),new skb(16));Z8b(yv(yv(i.a[_Tc],226).d,305),0.001,0.001,0.998,0.998);f=new k4b(g);f.c=true;a.c=new qZb(b,f);Q7b(a.c._,-50);u8b(a.c.eb,100);pQb(a.c,true);a.c.U=true;kQb(a.H,a.c)}
var PTc='enableBump',RTc='tBeckmann',YTc='uRoughness',ZTc='uSpecularBrightness';DV(1137,1,iOc);_.Mb=function wlc(){abc(this.b,new zlc(this.a))};DV(1138,990,{327:1},zlc);_.nb=function Alc(){var a,b,c,d,e,f,g;this.a=new oRb(27,sGb(this.G.k),1,10000);x8b(this.a._,1200);kQb(this.H,new IZb(5592405));d=new F$b(16777215,1.5,1000);v8b(d._,0,0,600);kQb(this.H,d);f=new O$b(1);v8b(f._,0.05,0.05,1);kQb(this.H,f);f._.ff(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new k$b(16777215,0.85);v8b(a._,1,-0.5,1);a5b(a.L,0.6,1,0.85);kQb(this.H,a);a._.ff(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new k$b(16777215,0.85);v8b(b._,1,-0.5,-1);kQb(this.H,b);new QIc(new bvc);c=new QIc(new DJc);c.a=true;g=new kPb(512,512);COb(g,(YEb(),SEb));AOb(g,(NEb(),LEb));xOb(g,(hDb(),fDb));g.f=false;this.b=new FIc(this.G.k,g);new jzc(OTc,new Dlc(this));_Hb(this.G.k,new f5b(5001561),1);e=new WGb(this.G.k,this.H);e.g=false;tGb(this.G.k,false);this.G.k.X=true;this.G.k.Y=true};_.ob=function Blc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){m5b(this.c.cb,0.05*(b-this.c.cb.d));l5b(this.c.cb,0.05*(c-this.c.cb.c))}zHb(this.G.k,true);RHb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;DV(1139,1,{},Dlc);_.qf=function Elc(a,b){ylc(this.a,yv(b,243))};DV(1274,742,WNc,bvc);_.Md=function cvc(){};var dvc;DV(1275,1,{},ivc);_.Pd=function jvc(){return rvc(),gvc};_.Qd=function kvc(){return svc(),hvc};var gvc,hvc;DV(1276,1,{},mvc);_.nc=function nvc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};DV(1277,1,{},pvc);_.nc=function qvc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};DV(1323,742,WNc,Ixc);_.Md=function Jxc(){vJb(this,lOb());vJb(this,mOb());vJb(this,nOb());oJb(this,PTc,new QNb((hOb(),YNb),$kb(0)));oJb(this,QTc,new QNb(YNb,$kb(0)));oJb(this,STc,new PNb(_Nb));oJb(this,RTc,new PNb(_Nb));oJb(this,WTc,new QNb(UNb,new f5b(15658734)));oJb(this,XTc,new QNb(UNb,new f5b(1118481)));oJb(this,VTc,new QNb(UNb,new f5b(328965)));oJb(this,aUc,new QNb(VNb,new skb(1)));oJb(this,YTc,new QNb(VNb,new skb(0.15)));oJb(this,ZTc,new QNb(VNb,new skb(0.75)));oJb(this,TTc,new PNb(_Nb));oJb(this,$Tc,new QNb(VNb,new skb(1)));oJb(this,UTc,new PNb(_Nb));oJb(this,_Tc,new QNb(fOb,new a9b(0,0,1,1)));oJb(this,'uWrapRGB',new QNb(dOb,new C8b(0.75,0.375,0.1875)))};_.Nd=function Kxc(a){var b,c;c=new Frb(ov(zT,DMc,1,[bUc,cUc,dUc]));b=new Frb(ov(zT,DMc,1,[eUc,fUc,gUc]));xJb(this,FJb(a,ov(CT,DMc,173,[c,b])))};_.Od=function Lxc(a){var b,c;c=new Frb(ov(zT,DMc,1,[hUc]));b=new Frb(ov(zT,DMc,1,[iUc]));yJb(this,FJb(a,ov(CT,DMc,173,[c,b])))};var Mxc;DV(1324,1,{},Rxc);_.Pd=function Sxc(){return $xc(),Pxc};_.Qd=function Txc(){return _xc(),Qxc};var Pxc,Qxc;DV(1325,1,{},Vxc);_.nc=function Wxc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};DV(1326,1,{},Yxc);_.nc=function Zxc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var CN=gkb(dTc,'MaterialsBumpmapSkin$DemoScene',1138),BN=gkb(dTc,'MaterialsBumpmapSkin$DemoScene$1',1139),YP=gkb(YSc,'BeckmannShader',1274),XP=gkb(YSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1275),VP=gkb(YSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1276),WP=gkb(YSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1277),xQ=gkb(YSc,'SkinSimpleShader',1323),wQ=gkb(YSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1324),uQ=gkb(YSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1325),vQ=gkb(YSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1326);wOc(Ej)(18);