function eLb(){}
function iLb(){}
function lLb(){}
function fwc(){}
function jwc(){}
function mwc(){}
function ywc(){}
function Cwc(){}
function Fwc(){}
function Rwc(){}
function Vwc(){}
function Ywc(){}
function kac(a,b){a.d=b}
function aLb(){aLb=FMc;_Kb=new eLb}
function nLb(){nLb=FMc;cLb=new iLb}
function oLb(){oLb=FMc;dLb=new lLb}
function owc(){owc=FMc;dwc=new jwc}
function bwc(){bwc=FMc;awc=new fwc}
function pwc(){pwc=FMc;ewc=new mwc}
function uwc(){uwc=FMc;twc=new ywc}
function Hwc(){Hwc=FMc;wwc=new Cwc}
function Iwc(){Iwc=FMc;xwc=new Fwc}
function Nwc(){Nwc=FMc;Mwc=new Rwc}
function $wc(){$wc=FMc;Pwc=new Vwc}
function _wc(){_wc=FMc;Qwc=new Ywc}
function rwc(){HJb.call(this,(uwc(),twc))}
function Kwc(){HJb.call(this,(Nwc(),Mwc))}
function $vc(){HJb.call(this,(bwc(),awc))}
function XKb(){HJb.call(this,(aLb(),_Kb))}
function HHb(a,b){pIb(a,b);GHb(a,false)}
function Jtc(a,b){this.b=a;this.c=b}
function V1b(){x_b.call(this);this.b=false;this.c=1}
function Ftc(){Hbc.call(this);this.u=new J8b(0,1000,-1000);this.s=new I8b}
function z8b(a,b){A6b(i8b,b.q,p6b(i8b,b.Y));return r8b(a,i8b)}
var SVc='bgColor',UVc='fAspect',RVc='fGodRayIntensity',VVc='fStepSize',IVc='mFar',HVc='mNear',XVc='tColors',YVc='tGodRays',WVc='tInput',TVc='vSunPositionScreenSpace',ZVc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';PV(754,736,dOc,XKb);_.Pd=function YKb(){vJb(this,HVc,new XNb((oOb(),aOb),new zkb(1)));vJb(this,IVc,new XNb(aOb,new zkb(2000)));vJb(this,mUc,new XNb(aOb,new zkb(1)))};_.Qd=function ZKb(a){var b,c;c=new Mrb(Bv(LT,LMc,1,[JVc]));b=new Mrb(Bv(LT,LMc,1,[KVc]));EJb(this,MJb(a,Bv(OT,LMc,173,[c,b])))};_.Rd=function $Kb(a){var b,c;c=new Mrb(Bv(LT,LMc,1,[LVc,MVc]));b=new Mrb(Bv(LT,LMc,1,[NVc,OVc,PVc]));FJb(this,MJb(a,Bv(OT,LMc,173,[c,b])))};var _Kb;PV(755,1,{},eLb);_.Sd=function fLb(){return nLb(),cLb};_.Td=function gLb(){return oLb(),dLb};var cLb,dLb;PV(756,1,{},iLb);_.qc=function jLb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};PV(757,1,{},lLb);_.qc=function mLb(){return QVc};PV(821,818,{78:1,186:1,236:1,237:1,250:1});_.be=function jRb(){return this.c};_.ce=function kRb(){return this.e};PV(822,818,{78:1,186:1,236:1,238:1,250:1});_.be=function xRb(){return this.c};_.ce=function yRb(){return this.i};PV(933,926,{284:1,287:1},V1b);_.We=function W1b(){var a;return a=new V1b,f_b(this,a),a.b=this.b,a.c=this.c,a};_.Xe=function X1b(){return new XKb};_.Te=function Y1b(){return this.c};_.Ue=function Z1b(){return this.b};_.Ye=function $1b(a,b){var c;k_b(this,b);c=j_b(this).j;if(Ov(a,236)){VNb(Lv(c.b[HVc],226),new zkb(Lv(a,236).ce()));VNb(Lv(c.b[IVc],226),new zkb(Lv(a,236).be()))}VNb(Lv(c.b[mUc],226),new zkb(this.ab))};_.b=false;_.c=0;PV(1245,1,rOc);_.Qb=function Dtc(){hbc(this.c,new Ftc(this.b))};PV(1246,984,{340:1},Ftc);_.ob=function Gtc(){var a,b,c,d;this.b=new vRb(70,zGb(this.H.n),1,3000);E8b(this.b.ab,200);this.c=new V1b;c=new q1b;k1b(c,new m5b(0));o1b(c,($0b(),X0b));new qzc('./static/models/obj/tree/tree.js',new Jtc(this,c));a=new VXb(1,20,10);this.t=new xZb(a,c);B8b(this.t.fb,20);rQb(this.I,this.t);sIb(this.H.n,false);AGb(this.H.n,false);BGb(this.H.n,1297,1);this.k=new lac;this.j=new gRb(this.H.n.ib,this.H.n.hb,-10000,10000);E8b(this.j.ab,100);rQb(this.k,this.j);this.o=new rPb(this.H.n.ib,this.H.n.hb);JOb(this.o,(dFb(),ZEb));HOb(this.o,(UEb(),SEb));EOb(this.o,(oDb(),nDb));this.p=new rPb(this.H.n.ib,this.H.n.hb);JOb(this.p,ZEb);HOb(this.p,SEb);EOb(this.p,nDb);d=~~(this.H.n.ib/4);b=~~(this.H.n.hb/4);this.q=new rPb(d,b);JOb(this.q,ZEb);HOb(this.q,SEb);EOb(this.q,nDb);this.r=new rPb(d,b);JOb(this.r,ZEb);HOb(this.r,SEb);EOb(this.r,nDb);this.f=new r4b(new rwc);this.d=new r4b(new $vc);VNb(Lv(ZSb(j_b(this.d).j,RVc),226),new zkb(0.75));this.e=new r4b(new Kwc);i5b(Lv(Lv(ZSb(j_b(this.e).j,SVc),226).e,298),1297);i5b(Lv(Lv(ZSb(j_b(this.e).j,_Uc),226).e,298),16772608);this.n=new xZb(new KXb(this.H.n.ib,this.H.n.hb),this.f);E8b(this.n.ab,-9900);rQb(this.k,this.n)};_.pb=function Htc(a){var b,c,d,e,f,g;f=a/4000;W7b(this.t.ab,200*zlb(f));E8b(this.t.ab,200*Ilb(f)-100);Q7b(this.b.ab,(this.g-this.b.ab.d)*0.036);R7b(this.b.ab,(-this.i-this.b.ab.e)*0.036);RQb(this.b,this.I.ab);z8b(this.s.ff(this.u),this.b);W7b(this.s,(this.s.d+1)/2);X7b(this.s,(this.s.e+1)/2);V7b(Lv(Lv(ZSb(j_b(this.f).j,TVc),226).e,301),this.s.d,this.s.e);V7b(Lv(Lv(ZSb(j_b(this.e).j,TVc),226).e,301),this.s.d,this.s.e);HHb(this.H.n,this.o);g=this.H.n.ib;b=this.H.n.hb;d=0.74*b;e=0.74*b;W7b(this.s,this.s.d*g);X7b(this.s,this.s.e*b);qIb(this.H.n,Tv(this.s.d-e/2),Tv(this.s.e-d/2),Tv(e),Tv(d));MHb(this.H.n,true);VNb(Lv(ZSb(j_b(this.e).j,UVc),226),new zkb(g/b));kac(this.k,this.e);YHb(this.H.n,this.k,this.j,this.o,false);MHb(this.H.n,false);kac(this.I,null);YHb(this.H.n,this.I,this.b,this.o,false);kac(this.I,this.c);YHb(this.H.n,this.I,this.b,this.p,true);c=Flb(6,-1);VNb(Lv(ZSb(j_b(this.f).j,VVc),226),new zkb(c));VNb(Lv(ZSb(j_b(this.f).j,WVc),226),this.p);kac(this.k,this.f);YHb(this.H.n,this.k,this.j,this.r,false);c=Flb(6,-2);VNb(Lv(ZSb(j_b(this.f).j,VVc),226),new zkb(c));VNb(Lv(ZSb(j_b(this.f).j,WVc),226),this.r);YHb(this.H.n,this.k,this.j,this.q,false);c=Flb(6,-3);VNb(Lv(ZSb(j_b(this.f).j,VVc),226),new zkb(c));VNb(Lv(ZSb(j_b(this.f).j,WVc),226),this.q);YHb(this.H.n,this.k,this.j,this.r,false);VNb(Lv(ZSb(j_b(this.d).j,XVc),226),this.o);VNb(Lv(ZSb(j_b(this.d).j,YVc),226),this.r);kac(this.k,this.d);YHb(this.H.n,this.k,this.j,null,false);kac(this.k,null)};_.g=0;_.i=0;PV(1247,1,{},Jtc);_.tf=function Ktc(a,b){var c;c=new xZb(b,this.c);C8b(c.ab,0,-150,-150);B8b(c.fb,400);c.X=false;k6b(c.W,c.ab,c.bb,c.fb);c.Z=true;rQb(this.b.I,c)};PV(1286,736,dOc,$vc);_.Pd=function _vc(){vJb(this,XVc,new WNb((oOb(),gOb)));vJb(this,YVc,new WNb(gOb));vJb(this,RVc,new XNb(aOb,new zkb(0.69)));vJb(this,TVc,new XNb(iOb,new _7b(0.5,0.5)))};var awc;PV(1287,1,{},fwc);_.Sd=function gwc(){return owc(),dwc};_.Td=function hwc(){return pwc(),ewc};var dwc,ewc;PV(1288,1,{},jwc);_.qc=function kwc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};PV(1289,1,{},mwc);_.qc=function nwc(){return ZVc};PV(1292,736,dOc,rwc);_.Pd=function swc(){vJb(this,WVc,new WNb((oOb(),gOb)));vJb(this,VVc,new XNb(aOb,new zkb(1)));vJb(this,TVc,new XNb(iOb,new _7b(0.5,0.5)))};var twc;PV(1293,1,{},ywc);_.Sd=function zwc(){return Hwc(),wwc};_.Td=function Awc(){return Iwc(),xwc};var wwc,xwc;PV(1294,1,{},Cwc);_.qc=function Dwc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};PV(1295,1,{},Fwc);_.qc=function Gwc(){return ZVc};PV(1298,736,dOc,Kwc);_.Pd=function Lwc(){vJb(this,TVc,new XNb((oOb(),iOb),new _7b(0.5,0.5)));vJb(this,UVc,new XNb(aOb,new zkb(1)));vJb(this,_Uc,new XNb(_Nb,new m5b(16772608)));vJb(this,SVc,new XNb(_Nb,new m5b(0)))};var Mwc;PV(1299,1,{},Rwc);_.Sd=function Swc(){return $wc(),Pwc};_.Td=function Twc(){return _wc(),Qwc};var Pwc,Qwc;PV(1300,1,{},Vwc);_.qc=function Wwc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};PV(1301,1,{},Ywc);_.qc=function Zwc(){return ZVc};var NP=nkb(sTc,'PostprocessingGodrays$DemoScene',1246),MP=nkb(sTc,'PostprocessingGodrays$DemoScene$1',1247),sK=nkb($Vc,'MeshDepthMaterial',933),sQ=nkb(iTc,'GodRaysGenerateShader',1292),oQ=nkb(iTc,'GodRaysCombineShader',1286),wQ=nkb(iTc,'GodraysFakeSunShader',1298),yH=nkb(yUc,'DepthShader',754),rQ=nkb(iTc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1293),pQ=nkb(iTc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1294),qQ=nkb(iTc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1295),nQ=nkb(iTc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1287),lQ=nkb(iTc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1288),mQ=nkb(iTc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1289),vQ=nkb(iTc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1299),tQ=nkb(iTc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1300),uQ=nkb(iTc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1301),xH=nkb(yUc,'DepthShader_Resources_default_InlineClientBundleGenerator',755),vH=nkb(yUc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',756),wH=nkb(yUc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',757);FOc(Oj)(40);