function xLb(){}
function BLb(){}
function ELb(){}
function tLb(){tLb=FMc;sLb=new xLb}
function GLb(){GLb=FMc;vLb=new BLb}
function HLb(){HLb=FMc;wLb=new ELb}
function qLb(){HJb.call(this,(tLb(),sLb))}
function Xmc(){Hbc.call(this);this.d=0;this.e=0}
PV(760,736,dOc,qLb);_.Pd=function rLb(){vJb(this,'mRefractionRatio',new XNb((oOb(),aOb),new zkb(1.02)));vJb(this,'mFresnelBias',new XNb(aOb,new zkb(0.1)));vJb(this,'mFresnelPower',new XNb(aOb,new zkb(2)));vJb(this,'mFresnelScale',new XNb(aOb,new zkb(1)));vJb(this,xUc,new WNb(gOb))};var sLb;PV(761,1,{},xLb);_.Sd=function yLb(){return GLb(),vLb};_.Td=function zLb(){return HLb(),wLb};var vLb,wLb;PV(762,1,{},BLb);_.qc=function CLb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};PV(763,1,{},ELb);_.qc=function FLb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};PV(1151,1,rOc);_.Qb=function Vmc(){hbc(this.c,new Xmc(this.b))};PV(1152,984,{331:1},Xmc);_.ob=function Ymc(){var a,b,c,d,e,f,g,i,j;this.b=new vRb(60,zGb(this.H.n),1,100000);E8b(this.b.ab,3200);this.c=new vRb(60,zGb(this.H.n),1,100000);this.f=new lac;a=new VXb(100,32,16);j=new dPb('./static/textures/cube/park2/*.jpg');EOb(j,(oDb(),mDb));g=new qLb;VNb(Lv(ZSb(g.j,xUc),226),j);c=new r4b(g);this.g=new nrb;for(b=0;b<500;b++){e=new xZb(a,c);W7b(e.ab,Glb()*10000-5000);X7b(e.ab,Glb()*10000-5000);E8b(e.ab,Glb()*10000-5000);B8b(e.fb,Glb()*3+1);rQb(this.I,e);drb(this.g,e)}this.I.X=false;i=new hKb;VNb(Lv(ZSb(i.j,xUc),226),j);f=new r4b(i);u_b(f,(g1b(),d1b));d=new xZb(new eXb(100000,100000,100000),f);rQb(this.f,d);AGb(this.H.n,false)};_.pb=function Zmc(a){var b,c,d,e;e=1.0E-4*a;Q7b(this.b.ab,(this.d-this.b.ab.d)*0.05);R7b(this.b.ab,(-this.e-this.b.ab.e)*0.05);RQb(this.b,this.I.ab);u5b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Lv(grb(this.g,b),308);W7b(d.ab,5000*Math.cos(e+b));X7b(d.ab,5000*Math.sin(e+b*1.1))}GHb(this.H.n,true);YHb(this.H.n,this.f,this.c,null,false);YHb(this.H.n,this.I,this.b,null,false)};_.d=0;_.e=0;var gO=nkb(pTc,'MaterialsCubemapFresnel$DemoScene',1152),CH=nkb(yUc,'FresnelShader',760),BH=nkb(yUc,'FresnelShader_Resources_default_InlineClientBundleGenerator',761),zH=nkb(yUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',762),AH=nkb(yUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',763);FOc(Oj)(21);