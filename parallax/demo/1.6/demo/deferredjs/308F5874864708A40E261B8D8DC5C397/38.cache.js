function tuc(){}
function xuc(){}
function Auc(){}
function $xc(){}
function cyc(){}
function fyc(){}
function OIc(){}
function SIc(){}
function VIc(){}
function iKc(){}
function mKc(){}
function pKc(){}
function BKc(){}
function FKc(){}
function IKc(){}
function UKc(){}
function YKc(){}
function _Kc(){}
function lLc(){}
function pLc(){}
function sLc(){}
function q$b(a,b){a.b=b}
function n9b(a,b){a.k=b}
function rIc(a,b){Mqb(a.b,b)}
function guc(a){this.a=a}
function juc(a){this.a=a}
function muc(a){this.a=a}
function Duc(){Duc=mMc;suc=new Auc}
function puc(){puc=mMc;ouc=new tuc}
function Cuc(){Cuc=mMc;ruc=new xuc}
function Wxc(){Wxc=mMc;Vxc=new $xc}
function hyc(){hyc=mMc;Yxc=new cyc}
function iyc(){iyc=mMc;Zxc=new fyc}
function KIc(){KIc=mMc;JIc=new OIc}
function XIc(){XIc=mMc;MIc=new SIc}
function YIc(){YIc=mMc;NIc=new VIc}
function eKc(){eKc=mMc;dKc=new iKc}
function rKc(){rKc=mMc;gKc=new mKc}
function sKc(){sKc=mMc;hKc=new pKc}
function xKc(){xKc=mMc;wKc=new BKc}
function KKc(){KKc=mMc;zKc=new FKc}
function LKc(){LKc=mMc;AKc=new IKc}
function QKc(){QKc=mMc;PKc=new UKc}
function bLc(){bLc=mMc;SKc=new YKc}
function cLc(){cLc=mMc;TKc=new _Kc}
function hLc(){hLc=mMc;gLc=new lLc}
function uLc(){uLc=mMc;jLc=new pLc}
function vLc(){vLc=mMc;kLc=new sLc}
function duc(a,b){this.a=a;this.b=b}
function Rxc(){oJb.call(this,(Wxc(),Vxc))}
function HIc(){oJb.call(this,(KIc(),JIc))}
function bKc(){oJb.call(this,(eKc(),dKc))}
function uKc(){oJb.call(this,(xKc(),wKc))}
function NKc(){oJb.call(this,(QKc(),PKc))}
function eLc(){oJb.call(this,(hLc(),gLc))}
function Ytc(a){a.w+=1;a.w==3&&jQb(a.v,true)}
function Ztc(){obc.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Xtc(a,b,c,d){var e,f,g;g=new $3b(b);CNb(yv(GSb(S$b(g).i,PTc),226),c);f=new U9b;e=new eZb(new uXb(a.u,a.t),g);l8b(e._,-500);$Pb(f,e);FHb(a.G.k,f,a.c,d,true)}
function Wtc(a,b,c,d,e,f){var g,i;g=new S1b;L1b(g,new V4b(16755285));g.j=true;Q1b(g,(K_b(),H_b));i=new p9b(b,g);i.d=c;n9b(i,Gv(600*nlb()));j8b(i._,d,e,f);i5b(i.cb,1.5707963267948966);i.S=true;i.U=true;$Pb(a.H,i);Mqb(a.n,i)}
var dVc='enableDiffuse1',eVc='enableDiffuse2',YUc='h',$Uc='heightMap',jVc='heightmap',iVc='offset',kVc='r',cVc='tDetail',aVc='tDiffuse1',bVc='tDiffuse2',gVc='uRepeatOverlay',ZUc='v';zV(1255,1,YNc);_.Mb=function Utc(){Qac(this.b,new Ztc(this.a))};zV(1256,985,{78:1,186:1,342:1},Ztc);_.Vd=function $tc(a){Ytc(this)};_.Gd=function _tc(a){this.u=a.a.hb;this.t=a.a.gb;CNb(yv(GSb(S$b(this.f.b).i,YUc),226),new gkb(6/this.u));CNb(yv(GSb(S$b(this.D.b).i,ZUc),226),new gkb(6/this.t))};_.nb=function auc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;mu((byb(),ayb),(lyb(),kyb),this);this.b=new cRb(40,gGb(this.G.k),2,4000);this.u=this.G.k.hb;this.t=this.G.k.gb;this.c=new PQb(this.u,this.t,-10000,10000);j8b(this.b._,-1200,800,1200);l8b(this.c._,100);this.s=new U9b;$Pb(this.s,this.c);this.d=new gxb(this.b,this.G.c);i8b(this.d.v,0);this.d.s=1;this.d.A=1.2;dxb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;bxb(this.d,0.15);S9b(this.H,new I9b(328965,2000,4000));$Pb(this.H,new wZb(1118481));this.e=new $Zb(16777215,1.15);j8b(this.e._,500,2000,0);$Pb(this.H,this.e);this.q=new t$b(16729088,1.5,0);i8b(this.q._,0);$Pb(this.H,this.q);this.g=new $Ob(256,256);qOb(this.g,(MEb(),HEb));oOb(this.g,(BEb(),zEb));lOb(this.g,(XCb(),VCb));mOb(this.g,false);this.o=new $Ob(256,256);qOb(this.o,HEb);oOb(this.o,zEb);lOb(this.o,VCb);mOb(this.o,false);n=new NKc;u=n.i;CNb(yv(u.a[zQc],226),new gkb(0.05));C7b(yv(yv(u.a[tUc],226).d,301),256,256);CNb(yv(u.a[$Uc],226),this.g);s=new $Ob(2048,2048);qOb(s,HEb);oOb(s,zEb);lOb(s,VCb);s.r=false;xOb(s,(cGb(),bGb));yOb(s,bGb);c=new EOb('./static/textures/terrain/grasslight-big.jpg',new duc(this,s));xOb(c,bGb);yOb(c,bGb);d=new EOb('./static/textures/terrain/backgrounddetailed6.jpg',this);xOb(d,bGb);yOb(d,bGb);b=new EOb('./static/textures/terrain/grasslight-big-nm.jpg',this);xOb(b,bGb);yOb(b,bGb);t=new Rxc;this.B=t.i;CNb(yv(GSb(this.B,nUc),226),this.o);CNb(yv(GSb(this.B,oUc),226),new gkb(3.5));CNb(yv(GSb(this.B,_Uc),226),this.g);CNb(yv(GSb(this.B,aVc),226),c);CNb(yv(GSb(this.B,bVc),226),d);CNb(yv(GSb(this.B,pUc),226),s);CNb(yv(GSb(this.B,cVc),226),b);CNb(yv(GSb(this.B,dVc),226),(hjb(),hjb(),gjb));CNb(yv(GSb(this.B,eVc),226),gjb);CNb(yv(GSb(this.B,NTc),226),gjb);R4b(yv(yv(GSb(this.B,TTc),226).d,298),16777215);R4b(yv(yv(GSb(this.B,UTc),226).d,298),16777215);R4b(yv(yv(GSb(this.B,STc),226).d,298),1118481);CNb(yv(GSb(this.B,sUc),226),new gkb(30));CNb(yv(GSb(this.B,fVc),226),new gkb(375));C7b(yv(yv(GSb(this.B,gVc),226).d,301),6,6);this.A=new Ftb;apb(this.A,wUc,new ENb((XNb(),JNb),new gkb(1)));apb(this.A,hVc,new ENb(RNb,new I7b(1.5,1.5)));apb(this.A,iVc,new ENb(RNb,new I7b(0,0)));this.k=new Ftb;i=new Z3b((puc(),ouc));jJb(S$b(i),this.A);i.c=false;i.b=true;apb(this.k,jVc,i);j=new $3b(n);jJb(S$b(j),u);j.c=false;j.b=true;apb(this.k,JTc,j);k=new $3b(t);jJb(S$b(k),this.B);k.c=true;k.b=true;apb(this.k,'terrain',k);o=new uXb(this.u,this.t);p=new Z0b;T0b(p,new V4b(0));this.r=new eZb(o,p);l8b(this.r._,-500);$Pb(this.s,this.r);g=new vXb(6000,6000,64,64);LRb(g);this.v=new eZb(g,k);j8b(this.v._,0,-125,0);h5b(this.v.cb,-1.5707963267948966);jQb(this.v,false);$Pb(this.H,this.v);PHb(this.G.k,this.H.a.c,1);this.G.k.X=true;this.G.k.Y=true;hGb(this.G.k,false);q=new BIc(this.H,this.b);f=new lIc(0.6);e=new EIc(new HIc);CNb(yv(GSb(S$b(e.b).i,ZTc),226),new gkb(0.65));this.f=new EIc(new bKc);this.D=new EIc(new eLc);CNb(yv(GSb(S$b(this.f.b).i,YUc),226),new gkb(6/this.u));CNb(yv(GSb(S$b(this.D.b).i,ZUc),226),new gkb(6/this.t));CNb(yv(GSb(S$b(this.f.b).i,kVc),226),new gkb(0.5));CNb(yv(GSb(S$b(this.D.b).i,kVc),226),new gkb(0.5));this.D.a=true;r=new $Ob(this.u,this.t);qOb(s,GEb);oOb(s,zEb);lOb(s,VCb);s.f=false;s.r=false;a=new tIc(this.G.k,r);Mqb(a.b,q);Mqb(a.b,f);Mqb(a.b,e);rIc(a,this.f);rIc(a,this.D);this.n=new Wqb;new Zyc('./static/models/animated/parrot.js',new guc(this));new Zyc(XUc,new juc(this));new Zyc('./static/models/animated/stork.js',new muc(this));this.p=qi()};_.ob=function buc(a){var b,c,d,e,f;b=(qi()-this.p)*0.001;if(this.v.gb){exb(this.d);this.j=t5b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;Q4b(this.H.a.c,0.1,e,this.j);PHb(this.G.k,this.H.a.c,1);GZb(this.e,0.1+f*1.0499999999999998);q$b(this.q,0.9+f*0.6);CNb(yv(GSb(this.B,oUc),226),new gkb(0.6+f*2.9));if(this.C){this.a=t5b(this.a+-7.5E-4,0,0.05);CNb(yv(Xob(this.A,wUc),226),new gkb(yv(yv(Xob(this.A,wUc),226).d,150).a+b*this.a));x7b(yv(yv(Xob(this.A,iVc),226).d,301),b*0.05);D7b(yv(yv(GSb(this.B,lVc),226).d,301),4*yv(yv(Xob(this.A,iVc),226).d,301).c);QTb(this.r,yv(Xob(this.k,jVc),287));FHb(this.G.k,this.s,this.c,this.g,true);QTb(this.r,yv(Xob(this.k,JTc),287));FHb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=yv(Pqb(this.n,c),309);o9b(d,Gv(1000*b));x7b(d._,d.d*b);d._.c>2000&&D7b(d._,-1500-nlb()*500)}FHb(this.G.k,this.H,this.b,null,false)}this.p=qi()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;zV(1257,1,{},duc);_.Vd=function euc(a){Ytc(this.a);Xtc(this.a,new uKc,a,this.b)};zV(1258,1,{},guc);_.qf=function huc(a,b){Uyc((yv(a,344),yv(b,243)));Wtc(this.a,yv(b,243),500,-3500,500,700);Wtc(this.a,yv(b,243),500,-3000-nlb()*500,500,-200);Wtc(this.a,yv(b,243),500,-3000-nlb()*500,500,200);Wtc(this.a,yv(b,243),500,-3000-nlb()*500,500,1000)};zV(1259,1,{},juc);_.qf=function kuc(a,b){Uyc((yv(a,344),yv(b,243)));Wtc(this.a,yv(b,243),1000,-3000-nlb()*500,350,40)};zV(1260,1,{},muc);_.qf=function nuc(a,b){Uyc((yv(a,344),yv(b,243)));Wtc(this.a,yv(b,243),1000,-3000-nlb()*500,350,340)};var ouc;zV(1261,1,{},tuc);_.Pd=function uuc(){return Cuc(),ruc};_.Qd=function vuc(){return Duc(),suc};var ruc,suc;zV(1262,1,{},xuc);_.nc=function yuc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};zV(1263,1,{},Auc);_.nc=function Buc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};zV(1324,737,KNc,Rxc);_.Md=function Sxc(){jJb(this,_Nb());jJb(this,aOb());jJb(this,bOb());cJb(this,dVc,new ENb((XNb(),MNb),(hjb(),hjb(),fjb)));cJb(this,eVc,new ENb(MNb,fjb));cJb(this,NTc,new ENb(MNb,fjb));cJb(this,mVc,new ENb(MNb,fjb));cJb(this,aVc,new DNb(PNb));cJb(this,bVc,new DNb(PNb));cJb(this,cVc,new DNb(PNb));cJb(this,nUc,new DNb(PNb));cJb(this,pUc,new DNb(PNb));cJb(this,_Uc,new DNb(PNb));cJb(this,oUc,new ENb(JNb,new gkb(1)));cJb(this,nVc,new ENb(JNb,new gkb(0)));cJb(this,fVc,new ENb(JNb,new gkb(1)));cJb(this,TTc,new ENb(INb,new V4b(15658734)));cJb(this,UTc,new ENb(INb,new V4b(1118481)));cJb(this,STc,new ENb(INb,new V4b(328965)));cJb(this,sUc,new ENb(JNb,new gkb(30)));cJb(this,ZTc,new ENb(JNb,new gkb(1)));cJb(this,'uRepeatBase',new ENb(RNb,new I7b(1,1)));cJb(this,gVc,new ENb(RNb,new I7b(1,1)));cJb(this,lVc,new ENb(RNb,new I7b(0,0)))};_.Nd=function Txc(a){var b,c;c=new trb(ov(vT,rMc,1,[$Tc,_Tc]));b=new trb(ov(vT,rMc,1,[bUc,cUc,dUc]));lJb(this,tJb(a,ov(yT,rMc,173,[c,b])))};_.Od=function Uxc(a){var b,c;c=new trb(ov(vT,rMc,1,[eUc]));b=new trb(ov(vT,rMc,1,[fUc]));mJb(this,tJb(a,ov(yT,rMc,173,[c,b])))};var Vxc;zV(1325,1,{},$xc);_.Pd=function _xc(){return hyc(),Yxc};_.Qd=function ayc(){return iyc(),Zxc};var Yxc,Zxc;zV(1326,1,{},cyc);_.nc=function dyc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};zV(1327,1,{},fyc);_.nc=function gyc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};zV(1419,737,KNc,HIc);_.Md=function IIc(){cJb(this,PTc,new DNb((XNb(),PNb)));cJb(this,ZTc,new ENb(JNb,new gkb(1)))};var JIc;zV(1420,1,{},OIc);_.Pd=function PIc(){return XIc(),MIc};_.Qd=function QIc(){return YIc(),NIc};var MIc,NIc;zV(1421,1,{},SIc);_.nc=function TIc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};zV(1422,1,{},VIc);_.nc=function WIc(){return EUc};zV(1443,737,KNc,bKc);_.Md=function cKc(){cJb(this,PTc,new DNb((XNb(),PNb)));cJb(this,YUc,new ENb(JNb,new gkb(0.001953125)));cJb(this,kVc,new ENb(JNb,new gkb(0.35)))};var dKc;zV(1444,1,{},iKc);_.Pd=function jKc(){return rKc(),gKc};_.Qd=function kKc(){return sKc(),hKc};var gKc,hKc;zV(1445,1,{},mKc);_.nc=function nKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};zV(1446,1,{},pKc);_.nc=function qKc(){return EUc};zV(1449,737,KNc,uKc);_.Md=function vKc(){cJb(this,PTc,new DNb((XNb(),PNb)))};var wKc;zV(1450,1,{},BKc);_.Pd=function CKc(){return KKc(),zKc};_.Qd=function DKc(){return LKc(),AKc};var zKc,AKc;zV(1451,1,{},FKc);_.nc=function GKc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};zV(1452,1,{},IKc);_.nc=function JKc(){return EUc};zV(1455,737,KNc,NKc);_.Md=function OKc(){cJb(this,$Uc,new DNb((XNb(),PNb)));cJb(this,tUc,new ENb(RNb,new I7b(512,512)));cJb(this,hVc,new ENb(RNb,new I7b(1,1)));cJb(this,zQc,new ENb(JNb,new gkb(0.05)))};var PKc;zV(1456,1,{},UKc);_.Pd=function VKc(){return bLc(),SKc};_.Qd=function WKc(){return cLc(),TKc};var SKc,TKc;zV(1457,1,{},YKc);_.nc=function ZKc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};zV(1458,1,{},_Kc);_.nc=function aLc(){return EUc};zV(1461,737,KNc,eLc);_.Md=function fLc(){cJb(this,PTc,new DNb((XNb(),PNb)));cJb(this,ZUc,new ENb(JNb,new gkb(0.001953125)));cJb(this,kVc,new ENb(JNb,new gkb(0.35)))};var gLc;zV(1462,1,{},lLc);_.Pd=function mLc(){return uLc(),jLc};_.Qd=function nLc(){return vLc(),kLc};var jLc,kLc;zV(1463,1,{},pLc);_.nc=function qLc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};zV(1464,1,{},sLc);_.nc=function tLc(){return EUc};var JP=Wjb(dTc,'TerrainDynamic$DemoScene',1256),FP=Wjb(dTc,'TerrainDynamic$DemoScene$1',1257),GP=Wjb(dTc,'TerrainDynamic$DemoScene$2',1258),HP=Wjb(dTc,'TerrainDynamic$DemoScene$3',1259),IP=Wjb(dTc,'TerrainDynamic$DemoScene$4',1260),zS=Wjb(GUc,oVc,1455),xQ=Wjb(VSc,'TerrainShader',1324),bS=Wjb(GUc,'BleachBypassShader',1419),rS=Wjb(GUc,'HorizontalTiltShiftShader',1443),DS=Wjb(GUc,'VerticalTiltShiftShader',1461),MP=Wjb(dTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1261),KP=Wjb(dTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1262),LP=Wjb(dTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1263),yS=Wjb(GUc,pVc,1456),wS=Wjb(GUc,qVc,1457),xS=Wjb(GUc,rVc,1458),wQ=Wjb(VSc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1325),uQ=Wjb(VSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1326),vQ=Wjb(VSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1327),aS=Wjb(GUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1420),$R=Wjb(GUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1421),_R=Wjb(GUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1422),qS=Wjb(GUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1444),oS=Wjb(GUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1445),pS=Wjb(GUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1446),CS=Wjb(GUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1462),AS=Wjb(GUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1463),BS=Wjb(GUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1464),vS=Wjb(GUc,'LuminosityShader',1449),uS=Wjb(GUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1450),sS=Wjb(GUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1451),tS=Wjb(GUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1452);kOc(wj)(38);