function ftb(){}
function otb(){}
function ltb(){}
function ttb(){}
function stb(){}
function xtb(){}
function wtb(){}
function z5b(){}
function A5b(){zTb.call(this)}
function gtb(){krb.call(this,(ktb(),jtb))}
function ktb(){ktb=eic;jtb=new otb}
function Atb(){Atb=eic;mtb=new ttb}
function Btb(){Btb=eic;ntb=new xtb}
_=gtb.prototype=ftb.prototype=new Yqb;_.gC=function htb(){return BA};_.qd=function itb(){_qb(this,'mRefractionRatio',new iwb((Cwb(),owb),new p4(1.02)));_qb(this,'mFresnelBias',new iwb(owb,new p4(0.1)));_qb(this,'mFresnelPower',new iwb(owb,new p4(2)));_qb(this,'mFresnelScale',new iwb(owb,new p4(1)));_qb(this,Pmc,new hwb(uwb))};_.cM={131:1};var jtb;_=otb.prototype=ltb.prototype=new Kb;_.gC=function ptb(){return AA};_.td=function qtb(){return Atb(),mtb};_.ud=function rtb(){return Btb(),ntb};var mtb=null,ntb=null;_=ttb.prototype=stb.prototype=new Kb;_.gC=function utb(){return yA};_.Vb=function vtb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};_=xtb.prototype=wtb.prototype=new Kb;_.gC=function ytb(){return zA};_.Vb=function ztb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};_=u5b.prototype;_.pb=function y5b(){vTb(this.b,new A5b(this.a))};_=A5b.prototype=z5b.prototype=new yTb;_.gC=function B5b(){return hG};_.md=function C5b(){beb(this,new szb(60,Veb(this.A.D),1,100000));this.a=new szb(60,Veb(this.A.D),1,100000)};_.qc=function D5b(){!!this.z&&nB==nB&&ozb(this.z,Veb(this.A.D));ozb(this.a,Veb(this.A.D))};_.gb=function E5b(){var a,b,c,d,e,f,g,i;this.z.W.b=3200;yyb(this.B,this.z);this.d=new fSb;yyb(this.d,this.a);a=new _Jb(100,32,16);i=(ySb(),BSb('./static/textures/cube/park2/*.jpg',(Fxb(),Exb)));Owb(i,(cob(),aob));f=new gtb;gwb(ws(f.i.a[Pmc],133),i);c=new PQb(f);this.e=new R9;for(b=0;b<500;++b){d=new yRb(a,c);tEb(d.W,Math.random()*10000-5000);uEb(d.W,Math.random()*10000-5000);ZEb(d.W,Math.random()*10000-5000);XEb(d._,Math.random()*3+1);yyb(this.B,d);H9(this.e,d)}this.B.R=false;g=new Srb;gwb(ws(g.i.a[Pmc],133),i);e=new PQb(g);DMb(e,(tOb(),qOb));d=new yRb(new jJb(100000,100000,100000),e);yyb(this.d,d);this.A.I=false};_.ld=function F5b(){};_.hb=function G5b(a){var b,c,d,e;e=1.0E-4*a;nEb(this.z.W,(this.b-this.z.W.c)*0.05);oEb(this.z.W,(-this.c-this.z.W.d)*0.05);Yyb(this.z,this.B.W);this.a.Z.de(this.z.Z);for(b=0,c=this.e.b;b<c;++b){d=ws(L9(this.e,b),202);tEb(d.W,5000*Math.cos(e+b));uEb(d.W,5000*Math.sin(e+b*1.1))}Ipb(this.A);Upb(this.A,this.d,this.a,null,false)};_.cM={227:1};_.a=null;_.b=0;_.c=0;_.d=null;_.e=null;var BA=d4(Mmc,'FresnelShader'),AA=d4(Mmc,'FresnelShader_Resources_default_InlineClientBundleGenerator'),yA=d4(Mmc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1'),zA=d4(Mmc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2'),hG=d4(Klc,'MaterialsCubemapFresnel$DemoScene');gic(Vd)(26);