function yIb(){}
function CIb(){}
function FIb(){}
function uIb(){uIb=_Ec;tIb=new yIb}
function HIb(){HIb=_Ec;wIb=new CIb}
function IIb(){IIb=_Ec;xIb=new FIb}
function rIb(){bHb.call(this,(uIb(),tIb))}
function $ic(){n7b.call(this);this.c=0;this.d=0}
YS(741,723,wGc,rIb);_.Jd=function sIb(){RGb(this,'mRefractionRatio',new YKb((pLb(),bLb),new tib(1.02)));RGb(this,'mFresnelBias',new YKb(bLb,new tib(0.1)));RGb(this,'mFresnelPower',new YKb(bLb,new tib(2)));RGb(this,'mFresnelScale',new YKb(bLb,new tib(1)));RGb(this,QMc,new XKb(hLb))};var tIb;YS(742,1,{},yIb);_.Md=function zIb(){return HIb(),wIb};_.Nd=function AIb(){return IIb(),xIb};var wIb,xIb;YS(743,1,{},CIb);_.ac=function DIb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};YS(744,1,{},FIb);_.ac=function GIb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};YS(1123,1,JGc);_.zb=function Yic(){P6b(this.b,new $ic(this.a))};YS(1124,958,{326:1},$ic);_.nb=function _ic(){var a,b,c,d,e,f,g,i,j;this.a=new sOb(60,eFb(this.D.k),1,100000);I3b(this.a._,3200);this.b=new sOb(60,eFb(this.D.k),1,100000);this.e=new V5b;a=new LUb(100,32,16);j=new eMb('./static/textures/cube/park2/*.jpg');FLb(j,(bBb(),_Ab));g=new rIb;WKb(Au(QPb(g.i,QMc),225),j);c=new c0b(g);this.f=new gpb;for(b=0;b<500;b++){e=new i5b(a,c);W2b(e._,Ajb()*10000-5000);X2b(e._,Ajb()*10000-5000);I3b(e._,Ajb()*10000-5000);F3b(e.eb,Ajb()*3+1);sNb(this.F,e);Yob(this.f,e)}this.F.W=false;i=new DHb;WKb(Au(QPb(i.i,QMc),225),j);f=new c0b(i);tXb(f,(eZb(),bZb));d=new i5b(new WTb(100000,100000,100000),f);sNb(this.e,d);yFb(this.D.k,false)};_.ob=function ajc(a){var b,c,d,e;e=1.0E-4*a;R2b(this.a._,(this.c-this.a._.c)*0.05);S2b(this.a._,(-this.d-this.a._.d)*0.05);QNb(this.a,this.F._);Z0b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=Au(_ob(this.f,b),303);W2b(d._,5000*Math.cos(e+b));X2b(d._,5000*Math.sin(e+b*1.1))}$Eb(this.D.k);qFb(this.D.k,this.e,this.b,null,false);qFb(this.D.k,this.F,this.a,null,false)};_.c=0;_.d=0;var zM=hib(ILc,'MaterialsCubemapFresnel$DemoScene',1124),bG=hib(RMc,'FresnelShader',741),aG=hib(RMc,'FresnelShader_Resources_default_InlineClientBundleGenerator',742),$F=hib(RMc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',743),_F=hib(RMc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',744);WGc(xi)(21);