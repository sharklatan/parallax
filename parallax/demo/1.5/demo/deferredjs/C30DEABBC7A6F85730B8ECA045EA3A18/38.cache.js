function Dsc(){}
function Hsc(){}
function Ksc(){}
function Yvc(){}
function awc(){}
function dwc(){}
function LGc(){}
function PGc(){}
function SGc(){}
function fIc(){}
function jIc(){}
function mIc(){}
function yIc(){}
function CIc(){}
function FIc(){}
function RIc(){}
function VIc(){}
function YIc(){}
function iJc(){}
function mJc(){}
function pJc(){}
function SYb(a,b){a.c=b}
function N7b(a,b){a.n=b}
function pGc(a,b){xqb(a.c,b)}
function qsc(a){this.b=a}
function tsc(a){this.b=a}
function wsc(a){this.b=a}
function zsc(){zsc=jKc;ysc=new Dsc}
function Msc(){Msc=jKc;Bsc=new Hsc}
function Nsc(){Nsc=jKc;Csc=new Ksc}
function Uvc(){Uvc=jKc;Tvc=new Yvc}
function UGc(){UGc=jKc;JGc=new PGc}
function HGc(){HGc=jKc;GGc=new LGc}
function VGc(){VGc=jKc;KGc=new SGc}
function fwc(){fwc=jKc;Wvc=new awc}
function gwc(){gwc=jKc;Xvc=new dwc}
function bIc(){bIc=jKc;aIc=new fIc}
function oIc(){oIc=jKc;dIc=new jIc}
function pIc(){pIc=jKc;eIc=new mIc}
function uIc(){uIc=jKc;tIc=new yIc}
function HIc(){HIc=jKc;wIc=new CIc}
function IIc(){IIc=jKc;xIc=new FIc}
function NIc(){NIc=jKc;MIc=new RIc}
function $Ic(){$Ic=jKc;PIc=new VIc}
function _Ic(){_Ic=jKc;QIc=new YIc}
function eJc(){eJc=jKc;dJc=new iJc}
function rJc(){rJc=jKc;gJc=new mJc}
function sJc(){sJc=jKc;hJc=new pJc}
function bJc(){GIb.call(this,(eJc(),dJc))}
function Pvc(){GIb.call(this,(Uvc(),Tvc))}
function EGc(){GIb.call(this,(HGc(),GGc))}
function $Hc(){GIb.call(this,(bIc(),aIc))}
function rIc(){GIb.call(this,(uIc(),tIc))}
function KIc(){GIb.call(this,(NIc(),MIc))}
function nsc(a,b){this.b=a;this.c=b}
function gsc(a){a.A+=1;a.A==3&&BPb(a.w,true)}
function hsc(){N9b.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function fsc(a,b,c,d){var e,f,g;g=new y2b(b);UMb(Eu(VRb(qZb(g).j,ERc),225),c);f=new s8b;e=new F7b(new KWb(a.v,a.u),g);d6b(e.ab,-500);qPb(f,e);VGb(a.H.n,f,a.d,d,true)}
function esc(a,b,c,d,e,f){var g,i;g=new q0b;j0b(g,new m3b(16755285));g.k=true;o0b(g,(i$b(),f$b));i=new P7b(b,g);i.e=c;N7b(i,Mu(600*$kb()));b6b(i.ab,d,e,f);A3b(i.db,1.5707963267948966);i.T=true;i.V=true;qPb(a.I,i);xqb(a.o,i)}
var USc='enableDiffuse1',VSc='enableDiffuse2',NSc='h',PSc='heightMap',$Sc='heightmap',ZSc='offset',_Sc='r',TSc='tDetail',RSc='tDiffuse1',SSc='tDiffuse2',XSc='uRepeatOverlay',OSc='v';mU(1232,1,WLc);_.Db=function csc(){n9b(this.c,new hsc(this.b))};mU(1233,967,{78:1,186:1,338:1},hsc);_.Xd=function isc(a){gsc(this)};_.Jd=function jsc(a){this.v=a.b.$;this.u=a.b.Z;UMb(Eu(VRb(qZb(this.g.c).j,NSc),225),new Tjb(6/this.v));UMb(Eu(VRb(qZb(this.F.c).j,OSc),225),new Tjb(6/this.u))};_.ob=function ksc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;tt((Nxb(),Mxb),(Xxb(),Wxb),this);this.c=new tQb(40,JGb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new eQb(this.v,this.u,-10000,10000);b6b(this.c.ab,-1200,800,1200);d6b(this.d.ab,100);this.t=new s8b;qPb(this.t,this.d);this.e=new Swb(this.c,this.H.d);a6b(this.e.w,0);this.e.t=1;this.e.B=1.2;Pwb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;Nwb(this.e,0.15);q8b(this.I,new g8b(328965,2000,4000));qPb(this.I,new $Xb(1118481));this.f=new BYb(16777215,1.15);b6b(this.f.ab,500,2000,0);qPb(this.I,this.f);this.r=new UYb(16729088,1.5,0);a6b(this.r.ab,0);qPb(this.I,this.r);this.i=new qOb(256,256);INb(this.i,(uEb(),pEb));GNb(this.i,(jEb(),hEb));DNb(this.i,(FCb(),DCb));ENb(this.i,false);this.p=new qOb(256,256);INb(this.p,pEb);GNb(this.p,hEb);DNb(this.p,DCb);ENb(this.p,false);n=new KIc;u=n.j;UMb(Eu(u.b[uOc],225),new Tjb(0.05));p5b(Eu(Eu(u.b[iSc],225).e,297),256,256);UMb(Eu(u.b[PSc],225),this.i);s=new qOb(2048,2048);INb(s,pEb);GNb(s,hEb);DNb(s,DCb);s.s=false;PNb(s,(MFb(),LFb));QNb(s,LFb);c=new WNb('./static/textures/terrain/grasslight-big.jpg',new nsc(this,s));PNb(c,LFb);QNb(c,LFb);d=new WNb('./static/textures/terrain/backgrounddetailed6.jpg',this);PNb(d,LFb);QNb(d,LFb);b=new WNb('./static/textures/terrain/grasslight-big-nm.jpg',this);PNb(b,LFb);QNb(b,LFb);t=new Pvc;this.C=t.j;UMb(Eu(VRb(this.C,cSc),225),this.p);UMb(Eu(VRb(this.C,dSc),225),new Tjb(3.5));UMb(Eu(VRb(this.C,QSc),225),this.i);UMb(Eu(VRb(this.C,RSc),225),c);UMb(Eu(VRb(this.C,SSc),225),d);UMb(Eu(VRb(this.C,eSc),225),s);UMb(Eu(VRb(this.C,TSc),225),b);UMb(Eu(VRb(this.C,USc),225),(Uib(),Uib(),Tib));UMb(Eu(VRb(this.C,VSc),225),Tib);UMb(Eu(VRb(this.C,CRc),225),Tib);j3b(Eu(Eu(VRb(this.C,IRc),225).e,293),16777215);j3b(Eu(Eu(VRb(this.C,JRc),225).e,293),16777215);j3b(Eu(Eu(VRb(this.C,HRc),225).e,293),1118481);UMb(Eu(VRb(this.C,hSc),225),new Tjb(30));UMb(Eu(VRb(this.C,WSc),225),new Tjb(375));p5b(Eu(Eu(VRb(this.C,XSc),225).e,297),6,6);this.B=new ptb;Nob(this.B,lSc,new WMb((nNb(),_Mb),new Tjb(1)));Nob(this.B,YSc,new WMb(hNb,new t5b(1.5,1.5)));Nob(this.B,ZSc,new WMb(hNb,new t5b(0,0)));this.n=new ptb;i=new x2b((zsc(),ysc));BIb(qZb(i),this.B);i.d=false;i.c=true;Nob(this.n,$Sc,i);j=new y2b(n);BIb(qZb(j),u);j.d=false;j.c=true;Nob(this.n,yRc,j);k=new y2b(t);BIb(qZb(k),this.C);k.d=true;k.c=true;Nob(this.n,'terrain',k);o=new KWb(this.v,this.u);p=new x_b;r_b(p,new m3b(0));this.s=new F7b(o,p);d6b(this.s.ab,-500);qPb(this.t,this.s);g=new LWb(6000,6000,64,64);$Qb(g);this.w=new F7b(g,k);b6b(this.w.ab,0,-125,0);z3b(this.w.db,-1.5707963267948966);BPb(this.w,false);qPb(this.I,this.w);fHb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;bHb(this.H.n,false);q=new yGc(this.I,this.c);f=new jGc(0.6);e=new BGc(new EGc);UMb(Eu(VRb(qZb(e.c).j,ORc),225),new Tjb(0.65));this.g=new BGc(new $Hc);this.F=new BGc(new bJc);UMb(Eu(VRb(qZb(this.g.c).j,NSc),225),new Tjb(6/this.v));UMb(Eu(VRb(qZb(this.F.c).j,OSc),225),new Tjb(6/this.u));UMb(Eu(VRb(qZb(this.g.c).j,_Sc),225),new Tjb(0.5));UMb(Eu(VRb(qZb(this.F.c).j,_Sc),225),new Tjb(0.5));this.F.b=true;r=new qOb(this.v,this.u);INb(s,oEb);GNb(s,hEb);DNb(s,DCb);s.g=false;s.s=false;a=new rGc(this.H.n,r);xqb(a.c,q);xqb(a.c,f);xqb(a.c,e);pGc(a,this.g);pGc(a,this.F);this.o=new Hqb;new Xwc('./static/models/animated/parrot.js',new qsc(this));new Xwc(MSc,new tsc(this));new Xwc('./static/models/animated/stork.js',new wsc(this));this.q=Bh()};_.pb=function lsc(a){var b,c,d,e,f;b=(Bh()-this.q)*0.001;if(this.w.hb){Qwb(this.e);this.k=J3b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;i3b(this.I.b.d,0.1,e,this.k);fHb(this.H.n,this.I.b.d,1);iYb(this.f,0.1+f*1.0499999999999998);SYb(this.r,0.9+f*0.6);UMb(Eu(VRb(this.C,dSc),225),new Tjb(0.6+f*2.9));if(this.D){this.b=J3b(this.b+-7.5E-4,0,0.05);UMb(Eu(Iob(this.B,lSc),225),new Tjb(Eu(Eu(Iob(this.B,lSc),225).e,150).b+b*this.b));l5b(Eu(Eu(Iob(this.B,ZSc),225).e,297),b*0.05);q5b(Eu(Eu(VRb(this.C,aTc),225).e,297),4*Eu(Eu(Iob(this.B,ZSc),225).e,297).d);dTb(this.s,Eu(Iob(this.n,$Sc),282));VGb(this.H.n,this.t,this.d,this.i,true);dTb(this.s,Eu(Iob(this.n,yRc),282));VGb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Eu(Aqb(this.o,c),305);O7b(d,Mu(1000*b));l5b(d.ab,d.e*b);d.ab.d>2000&&q5b(d.ab,-1500-$kb()*500)}VGb(this.H.n,this.I,this.c,null,false)}this.q=Bh()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;mU(1234,1,{},nsc);_.Xd=function osc(a){gsc(this.b);fsc(this.b,new rIc,a,this.c)};mU(1235,1,{},qsc);_.Df=function rsc(a,b){Swc((Eu(a,339),Eu(b,242)));esc(this.b,Eu(b,242),500,-3500,500,700);esc(this.b,Eu(b,242),500,-3000-$kb()*500,500,-200);esc(this.b,Eu(b,242),500,-3000-$kb()*500,500,200);esc(this.b,Eu(b,242),500,-3000-$kb()*500,500,1000)};mU(1236,1,{},tsc);_.Df=function usc(a,b){Swc((Eu(a,339),Eu(b,242)));esc(this.b,Eu(b,242),1000,-3000-$kb()*500,350,40)};mU(1237,1,{},wsc);_.Df=function xsc(a,b){Swc((Eu(a,339),Eu(b,242)));esc(this.b,Eu(b,242),1000,-3000-$kb()*500,350,340)};var ysc;mU(1238,1,{},Dsc);_.Rd=function Esc(){return Msc(),Bsc};_.Sd=function Fsc(){return Nsc(),Csc};var Bsc,Csc;mU(1239,1,{},Hsc);_.qc=function Isc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};mU(1240,1,{},Ksc);_.qc=function Lsc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};mU(1298,725,JLc,Pvc);_.Od=function Qvc(){BIb(this,rNb());BIb(this,sNb());BIb(this,tNb());uIb(this,USc,new WMb((nNb(),cNb),(Uib(),Uib(),Sib)));uIb(this,VSc,new WMb(cNb,Sib));uIb(this,CRc,new WMb(cNb,Sib));uIb(this,bTc,new WMb(cNb,Sib));uIb(this,RSc,new VMb(fNb));uIb(this,SSc,new VMb(fNb));uIb(this,TSc,new VMb(fNb));uIb(this,cSc,new VMb(fNb));uIb(this,eSc,new VMb(fNb));uIb(this,QSc,new VMb(fNb));uIb(this,dSc,new WMb(_Mb,new Tjb(1)));uIb(this,cTc,new WMb(_Mb,new Tjb(0)));uIb(this,WSc,new WMb(_Mb,new Tjb(1)));uIb(this,IRc,new WMb($Mb,new m3b(15658734)));uIb(this,JRc,new WMb($Mb,new m3b(1118481)));uIb(this,HRc,new WMb($Mb,new m3b(328965)));uIb(this,hSc,new WMb(_Mb,new Tjb(30)));uIb(this,ORc,new WMb(_Mb,new Tjb(1)));uIb(this,'uRepeatBase',new WMb(hNb,new t5b(1,1)));uIb(this,XSc,new WMb(hNb,new t5b(1,1)));uIb(this,aTc,new WMb(hNb,new t5b(0,0)))};_.Pd=function Rvc(a){var b,c;c=new drb(uu(jS,pKc,1,[PRc,QRc]));b=new drb(uu(jS,pKc,1,[SRc,TRc,URc]));DIb(this,LIb(a,uu(mS,pKc,173,[c,b])))};_.Qd=function Svc(a){var b,c;c=new drb(uu(jS,pKc,1,[VRc]));b=new drb(uu(jS,pKc,1,[WRc]));EIb(this,LIb(a,uu(mS,pKc,173,[c,b])))};var Tvc;mU(1299,1,{},Yvc);_.Rd=function Zvc(){return fwc(),Wvc};_.Sd=function $vc(){return gwc(),Xvc};var Wvc,Xvc;mU(1300,1,{},awc);_.qc=function bwc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};mU(1301,1,{},dwc);_.qc=function ewc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};mU(1393,725,JLc,EGc);_.Od=function FGc(){uIb(this,ERc,new VMb((nNb(),fNb)));uIb(this,ORc,new WMb(_Mb,new Tjb(1)))};var GGc;mU(1394,1,{},LGc);_.Rd=function MGc(){return UGc(),JGc};_.Sd=function NGc(){return VGc(),KGc};var JGc,KGc;mU(1395,1,{},PGc);_.qc=function QGc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};mU(1396,1,{},SGc);_.qc=function TGc(){return tSc};mU(1417,725,JLc,$Hc);_.Od=function _Hc(){uIb(this,ERc,new VMb((nNb(),fNb)));uIb(this,NSc,new WMb(_Mb,new Tjb(0.001953125)));uIb(this,_Sc,new WMb(_Mb,new Tjb(0.35)))};var aIc;mU(1418,1,{},fIc);_.Rd=function gIc(){return oIc(),dIc};_.Sd=function hIc(){return pIc(),eIc};var dIc,eIc;mU(1419,1,{},jIc);_.qc=function kIc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};mU(1420,1,{},mIc);_.qc=function nIc(){return tSc};mU(1423,725,JLc,rIc);_.Od=function sIc(){uIb(this,ERc,new VMb((nNb(),fNb)))};var tIc;mU(1424,1,{},yIc);_.Rd=function zIc(){return HIc(),wIc};_.Sd=function AIc(){return IIc(),xIc};var wIc,xIc;mU(1425,1,{},CIc);_.qc=function DIc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};mU(1426,1,{},FIc);_.qc=function GIc(){return tSc};mU(1429,725,JLc,KIc);_.Od=function LIc(){uIb(this,PSc,new VMb((nNb(),fNb)));uIb(this,iSc,new WMb(hNb,new t5b(512,512)));uIb(this,YSc,new WMb(hNb,new t5b(1,1)));uIb(this,uOc,new WMb(_Mb,new Tjb(0.05)))};var MIc;mU(1430,1,{},RIc);_.Rd=function SIc(){return $Ic(),PIc};_.Sd=function TIc(){return _Ic(),QIc};var PIc,QIc;mU(1431,1,{},VIc);_.qc=function WIc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};mU(1432,1,{},YIc);_.qc=function ZIc(){return tSc};mU(1435,725,JLc,bJc);_.Od=function cJc(){uIb(this,ERc,new VMb((nNb(),fNb)));uIb(this,OSc,new WMb(_Mb,new Tjb(0.001953125)));uIb(this,_Sc,new WMb(_Mb,new Tjb(0.35)))};var dJc;mU(1436,1,{},iJc);_.Rd=function jJc(){return rJc(),gJc};_.Sd=function kJc(){return sJc(),hJc};var gJc,hJc;mU(1437,1,{},mJc);_.qc=function nJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};mU(1438,1,{},pJc);_.qc=function qJc(){return tSc};var AO=Hjb(VQc,'TerrainDynamic$DemoScene',1233),wO=Hjb(VQc,'TerrainDynamic$DemoScene$1',1234),xO=Hjb(VQc,'TerrainDynamic$DemoScene$2',1235),yO=Hjb(VQc,'TerrainDynamic$DemoScene$3',1236),zO=Hjb(VQc,'TerrainDynamic$DemoScene$4',1237),nR=Hjb(vSc,dTc,1429),lP=Hjb(LQc,'TerrainShader',1298),RQ=Hjb(vSc,'BleachBypassShader',1393),fR=Hjb(vSc,'HorizontalTiltShiftShader',1417),rR=Hjb(vSc,'VerticalTiltShiftShader',1435),DO=Hjb(VQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1238),BO=Hjb(VQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1239),CO=Hjb(VQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1240),mR=Hjb(vSc,eTc,1430),kR=Hjb(vSc,fTc,1431),lR=Hjb(vSc,gTc,1432),kP=Hjb(LQc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1299),iP=Hjb(LQc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1300),jP=Hjb(LQc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1301),QQ=Hjb(vSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1394),OQ=Hjb(vSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1395),PQ=Hjb(vSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1396),eR=Hjb(vSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1418),cR=Hjb(vSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1419),dR=Hjb(vSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1420),qR=Hjb(vSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1436),oR=Hjb(vSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1437),pR=Hjb(vSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1438),jR=Hjb(vSc,'LuminosityShader',1423),iR=Hjb(vSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1424),gR=Hjb(vSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1425),hR=Hjb(vSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1426);iMc(Hi)(38);