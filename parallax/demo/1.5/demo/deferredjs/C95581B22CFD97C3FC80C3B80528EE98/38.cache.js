function wsc(){}
function Asc(){}
function Dsc(){}
function Rvc(){}
function Vvc(){}
function Yvc(){}
function EGc(){}
function IGc(){}
function LGc(){}
function $Hc(){}
function cIc(){}
function fIc(){}
function rIc(){}
function vIc(){}
function yIc(){}
function KIc(){}
function OIc(){}
function RIc(){}
function bJc(){}
function fJc(){}
function iJc(){}
function LYb(a,b){a.b=b}
function G7b(a,b){a.k=b}
function iGc(a,b){qqb(a.b,b)}
function jsc(a){this.a=a}
function msc(a){this.a=a}
function psc(a){this.a=a}
function ssc(){ssc=cKc;rsc=new wsc}
function Fsc(){Fsc=cKc;usc=new Asc}
function Gsc(){Gsc=cKc;vsc=new Dsc}
function Nvc(){Nvc=cKc;Mvc=new Rvc}
function $vc(){$vc=cKc;Pvc=new Vvc}
function _vc(){_vc=cKc;Qvc=new Yvc}
function AGc(){AGc=cKc;zGc=new EGc}
function NGc(){NGc=cKc;CGc=new IGc}
function OGc(){OGc=cKc;DGc=new LGc}
function WHc(){WHc=cKc;VHc=new $Hc}
function hIc(){hIc=cKc;YHc=new cIc}
function iIc(){iIc=cKc;ZHc=new fIc}
function nIc(){nIc=cKc;mIc=new rIc}
function AIc(){AIc=cKc;pIc=new vIc}
function BIc(){BIc=cKc;qIc=new yIc}
function GIc(){GIc=cKc;FIc=new KIc}
function TIc(){TIc=cKc;IIc=new OIc}
function UIc(){UIc=cKc;JIc=new RIc}
function ZIc(){ZIc=cKc;YIc=new bJc}
function kJc(){kJc=cKc;_Ic=new fJc}
function lJc(){lJc=cKc;aJc=new iJc}
function gsc(a,b){this.a=a;this.b=b}
function Ivc(){zIb.call(this,(Nvc(),Mvc))}
function xGc(){zIb.call(this,(AGc(),zGc))}
function THc(){zIb.call(this,(WHc(),VHc))}
function kIc(){zIb.call(this,(nIc(),mIc))}
function DIc(){zIb.call(this,(GIc(),FIc))}
function WIc(){zIb.call(this,(ZIc(),YIc))}
function _rc(a){a.w+=1;a.w==3&&uPb(a.v,true)}
function asc(){G9b.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function $rc(a,b,c,d){var e,f,g;g=new r2b(b);NMb(ru(ORb(jZb(g).i,sRc),225),c);f=new l8b;e=new y7b(new DWb(a.u,a.t),g);Y5b(e._,-500);jPb(f,e);OGb(a.G.k,f,a.c,d,true)}
function Zrc(a,b,c,d,e,f){var g,i;g=new j0b;c0b(g,new f3b(16755285));g.j=true;h0b(g,(b$b(),$Zb));i=new I7b(b,g);i.d=c;G7b(i,zu(600*Tkb()));W5b(i._,d,e,f);t3b(i.cb,1.5707963267948966);i.S=true;i.U=true;jPb(a.H,i);qqb(a.n,i)}
var ISc='enableDiffuse1',JSc='enableDiffuse2',BSc='h',DSc='heightMap',OSc='heightmap',NSc='offset',PSc='r',HSc='tDetail',FSc='tDiffuse1',GSc='tDiffuse2',LSc='uRepeatOverlay',CSc='v';aU(1238,1,NLc);_.zb=function Xrc(){g9b(this.b,new asc(this.a))};aU(1239,973,{78:1,186:1,338:1},asc);_.Ud=function bsc(a){_rc(this)};_.Gd=function csc(a){this.u=a.a.Z;this.t=a.a.Y;NMb(ru(ORb(jZb(this.f.b).i,BSc),225),new Mjb(6/this.u));NMb(ru(ORb(jZb(this.D.b).i,CSc),225),new Mjb(6/this.t))};_.nb=function dsc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;ft((Gxb(),Fxb),(Qxb(),Pxb),this);this.b=new mQb(40,CGb(this.G.k),2,4000);this.u=this.G.k.Z;this.t=this.G.k.Y;this.c=new ZPb(this.u,this.t,-10000,10000);W5b(this.b._,-1200,800,1200);Y5b(this.c._,100);this.s=new l8b;jPb(this.s,this.c);this.d=new Lwb(this.b,this.G.c);V5b(this.d.v,0);this.d.s=1;this.d.A=1.2;Iwb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;Gwb(this.d,0.15);j8b(this.H,new _7b(328965,2000,4000));jPb(this.H,new TXb(1118481));this.e=new uYb(16777215,1.15);W5b(this.e._,500,2000,0);jPb(this.H,this.e);this.q=new NYb(16729088,1.5,0);V5b(this.q._,0);jPb(this.H,this.q);this.g=new jOb(256,256);BNb(this.g,(nEb(),iEb));zNb(this.g,(cEb(),aEb));wNb(this.g,(yCb(),wCb));xNb(this.g,false);this.o=new jOb(256,256);BNb(this.o,iEb);zNb(this.o,aEb);wNb(this.o,wCb);xNb(this.o,false);n=new DIc;u=n.i;NMb(ru(u.a[hOc],225),new Mjb(0.05));i5b(ru(ru(u.a[YRc],225).d,297),256,256);NMb(ru(u.a[DSc],225),this.g);s=new jOb(2048,2048);BNb(s,iEb);zNb(s,aEb);wNb(s,wCb);s.r=false;INb(s,(FFb(),EFb));JNb(s,EFb);c=new PNb('./static/textures/terrain/grasslight-big.jpg',new gsc(this,s));INb(c,EFb);JNb(c,EFb);d=new PNb('./static/textures/terrain/backgrounddetailed6.jpg',this);INb(d,EFb);JNb(d,EFb);b=new PNb('./static/textures/terrain/grasslight-big-nm.jpg',this);INb(b,EFb);JNb(b,EFb);t=new Ivc;this.B=t.i;NMb(ru(ORb(this.B,SRc),225),this.o);NMb(ru(ORb(this.B,TRc),225),new Mjb(3.5));NMb(ru(ORb(this.B,ESc),225),this.g);NMb(ru(ORb(this.B,FSc),225),c);NMb(ru(ORb(this.B,GSc),225),d);NMb(ru(ORb(this.B,URc),225),s);NMb(ru(ORb(this.B,HSc),225),b);NMb(ru(ORb(this.B,ISc),225),(Nib(),Nib(),Mib));NMb(ru(ORb(this.B,JSc),225),Mib);NMb(ru(ORb(this.B,qRc),225),Mib);c3b(ru(ru(ORb(this.B,wRc),225).d,293),16777215);c3b(ru(ru(ORb(this.B,xRc),225).d,293),16777215);c3b(ru(ru(ORb(this.B,vRc),225).d,293),1118481);NMb(ru(ORb(this.B,XRc),225),new Mjb(30));NMb(ru(ORb(this.B,KSc),225),new Mjb(375));i5b(ru(ru(ORb(this.B,LSc),225).d,297),6,6);this.A=new itb;Gob(this.A,_Rc,new PMb((gNb(),UMb),new Mjb(1)));Gob(this.A,MSc,new PMb(aNb,new m5b(1.5,1.5)));Gob(this.A,NSc,new PMb(aNb,new m5b(0,0)));this.k=new itb;i=new q2b((ssc(),rsc));uIb(jZb(i),this.A);i.c=false;i.b=true;Gob(this.k,OSc,i);j=new r2b(n);uIb(jZb(j),u);j.c=false;j.b=true;Gob(this.k,mRc,j);k=new r2b(t);uIb(jZb(k),this.B);k.c=true;k.b=true;Gob(this.k,'terrain',k);o=new DWb(this.u,this.t);p=new q_b;k_b(p,new f3b(0));this.r=new y7b(o,p);Y5b(this.r._,-500);jPb(this.s,this.r);g=new EWb(6000,6000,64,64);TQb(g);this.v=new y7b(g,k);W5b(this.v._,0,-125,0);s3b(this.v.cb,-1.5707963267948966);uPb(this.v,false);jPb(this.H,this.v);$Gb(this.G.k,this.H.a.c,1);this.G.k.ab=true;this.G.k.bb=true;WGb(this.G.k,false);q=new rGc(this.H,this.b);f=new cGc(0.6);e=new uGc(new xGc);NMb(ru(ORb(jZb(e.b).i,CRc),225),new Mjb(0.65));this.f=new uGc(new THc);this.D=new uGc(new WIc);NMb(ru(ORb(jZb(this.f.b).i,BSc),225),new Mjb(6/this.u));NMb(ru(ORb(jZb(this.D.b).i,CSc),225),new Mjb(6/this.t));NMb(ru(ORb(jZb(this.f.b).i,PSc),225),new Mjb(0.5));NMb(ru(ORb(jZb(this.D.b).i,PSc),225),new Mjb(0.5));this.D.a=true;r=new jOb(this.u,this.t);BNb(s,hEb);zNb(s,aEb);wNb(s,wCb);s.f=false;s.r=false;a=new kGc(this.G.k,r);qqb(a.b,q);qqb(a.b,f);qqb(a.b,e);iGc(a,this.f);iGc(a,this.D);this.n=new Aqb;new Qwc('./static/models/animated/parrot.js',new jsc(this));new Qwc(ASc,new msc(this));new Qwc('./static/models/animated/stork.js',new psc(this));this.p=rh()};_.ob=function esc(a){var b,c,d,e,f;b=(rh()-this.p)*0.001;if(this.v.gb){Jwb(this.d);this.j=C3b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;b3b(this.H.a.c,0.1,e,this.j);$Gb(this.G.k,this.H.a.c,1);bYb(this.e,0.1+f*1.0499999999999998);LYb(this.q,0.9+f*0.6);NMb(ru(ORb(this.B,TRc),225),new Mjb(0.6+f*2.9));if(this.C){this.a=C3b(this.a+-7.5E-4,0,0.05);NMb(ru(Bob(this.A,_Rc),225),new Mjb(ru(ru(Bob(this.A,_Rc),225).d,150).a+b*this.a));e5b(ru(ru(Bob(this.A,NSc),225).d,297),b*0.05);j5b(ru(ru(ORb(this.B,QSc),225).d,297),4*ru(ru(Bob(this.A,NSc),225).d,297).c);YSb(this.r,ru(Bob(this.k,OSc),282));OGb(this.G.k,this.s,this.c,this.g,true);YSb(this.r,ru(Bob(this.k,mRc),282));OGb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=ru(tqb(this.n,c),305);H7b(d,zu(1000*b));e5b(d._,d.d*b);d._.c>2000&&j5b(d._,-1500-Tkb()*500)}OGb(this.G.k,this.H,this.b,null,false)}this.p=rh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;aU(1240,1,{},gsc);_.Ud=function hsc(a){_rc(this.a);$rc(this.a,new kIc,a,this.b)};aU(1241,1,{},jsc);_.Af=function ksc(a,b){Lwc((ru(a,339),ru(b,242)));Zrc(this.a,ru(b,242),500,-3500,500,700);Zrc(this.a,ru(b,242),500,-3000-Tkb()*500,500,-200);Zrc(this.a,ru(b,242),500,-3000-Tkb()*500,500,200);Zrc(this.a,ru(b,242),500,-3000-Tkb()*500,500,1000)};aU(1242,1,{},msc);_.Af=function nsc(a,b){Lwc((ru(a,339),ru(b,242)));Zrc(this.a,ru(b,242),1000,-3000-Tkb()*500,350,40)};aU(1243,1,{},psc);_.Af=function qsc(a,b){Lwc((ru(a,339),ru(b,242)));Zrc(this.a,ru(b,242),1000,-3000-Tkb()*500,350,340)};var rsc;aU(1244,1,{},wsc);_.Od=function xsc(){return Fsc(),usc};_.Pd=function ysc(){return Gsc(),vsc};var usc,vsc;aU(1245,1,{},Asc);_.nc=function Bsc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};aU(1246,1,{},Dsc);_.nc=function Esc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};aU(1304,731,ALc,Ivc);_.Ld=function Jvc(){uIb(this,kNb());uIb(this,lNb());uIb(this,mNb());nIb(this,ISc,new PMb((gNb(),XMb),(Nib(),Nib(),Lib)));nIb(this,JSc,new PMb(XMb,Lib));nIb(this,qRc,new PMb(XMb,Lib));nIb(this,RSc,new PMb(XMb,Lib));nIb(this,FSc,new OMb($Mb));nIb(this,GSc,new OMb($Mb));nIb(this,HSc,new OMb($Mb));nIb(this,SRc,new OMb($Mb));nIb(this,URc,new OMb($Mb));nIb(this,ESc,new OMb($Mb));nIb(this,TRc,new PMb(UMb,new Mjb(1)));nIb(this,SSc,new PMb(UMb,new Mjb(0)));nIb(this,KSc,new PMb(UMb,new Mjb(1)));nIb(this,wRc,new PMb(TMb,new f3b(15658734)));nIb(this,xRc,new PMb(TMb,new f3b(1118481)));nIb(this,vRc,new PMb(TMb,new f3b(328965)));nIb(this,XRc,new PMb(UMb,new Mjb(30)));nIb(this,CRc,new PMb(UMb,new Mjb(1)));nIb(this,'uRepeatBase',new PMb(aNb,new m5b(1,1)));nIb(this,LSc,new PMb(aNb,new m5b(1,1)));nIb(this,QSc,new PMb(aNb,new m5b(0,0)))};_.Md=function Kvc(a){var b,c;c=new Yqb(hu(ZR,hKc,1,[DRc,ERc]));b=new Yqb(hu(ZR,hKc,1,[GRc,HRc,IRc]));wIb(this,EIb(a,hu(aS,hKc,173,[c,b])))};_.Nd=function Lvc(a){var b,c;c=new Yqb(hu(ZR,hKc,1,[JRc]));b=new Yqb(hu(ZR,hKc,1,[KRc]));xIb(this,EIb(a,hu(aS,hKc,173,[c,b])))};var Mvc;aU(1305,1,{},Rvc);_.Od=function Svc(){return $vc(),Pvc};_.Pd=function Tvc(){return _vc(),Qvc};var Pvc,Qvc;aU(1306,1,{},Vvc);_.nc=function Wvc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};aU(1307,1,{},Yvc);_.nc=function Zvc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};aU(1399,731,ALc,xGc);_.Ld=function yGc(){nIb(this,sRc,new OMb((gNb(),$Mb)));nIb(this,CRc,new PMb(UMb,new Mjb(1)))};var zGc;aU(1400,1,{},EGc);_.Od=function FGc(){return NGc(),CGc};_.Pd=function GGc(){return OGc(),DGc};var CGc,DGc;aU(1401,1,{},IGc);_.nc=function JGc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};aU(1402,1,{},LGc);_.nc=function MGc(){return hSc};aU(1423,731,ALc,THc);_.Ld=function UHc(){nIb(this,sRc,new OMb((gNb(),$Mb)));nIb(this,BSc,new PMb(UMb,new Mjb(0.001953125)));nIb(this,PSc,new PMb(UMb,new Mjb(0.35)))};var VHc;aU(1424,1,{},$Hc);_.Od=function _Hc(){return hIc(),YHc};_.Pd=function aIc(){return iIc(),ZHc};var YHc,ZHc;aU(1425,1,{},cIc);_.nc=function dIc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};aU(1426,1,{},fIc);_.nc=function gIc(){return hSc};aU(1429,731,ALc,kIc);_.Ld=function lIc(){nIb(this,sRc,new OMb((gNb(),$Mb)))};var mIc;aU(1430,1,{},rIc);_.Od=function sIc(){return AIc(),pIc};_.Pd=function tIc(){return BIc(),qIc};var pIc,qIc;aU(1431,1,{},vIc);_.nc=function wIc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};aU(1432,1,{},yIc);_.nc=function zIc(){return hSc};aU(1435,731,ALc,DIc);_.Ld=function EIc(){nIb(this,DSc,new OMb((gNb(),$Mb)));nIb(this,YRc,new PMb(aNb,new m5b(512,512)));nIb(this,MSc,new PMb(aNb,new m5b(1,1)));nIb(this,hOc,new PMb(UMb,new Mjb(0.05)))};var FIc;aU(1436,1,{},KIc);_.Od=function LIc(){return TIc(),IIc};_.Pd=function MIc(){return UIc(),JIc};var IIc,JIc;aU(1437,1,{},OIc);_.nc=function PIc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};aU(1438,1,{},RIc);_.nc=function SIc(){return hSc};aU(1441,731,ALc,WIc);_.Ld=function XIc(){nIb(this,sRc,new OMb((gNb(),$Mb)));nIb(this,CSc,new PMb(UMb,new Mjb(0.001953125)));nIb(this,PSc,new PMb(UMb,new Mjb(0.35)))};var YIc;aU(1442,1,{},bJc);_.Od=function cJc(){return kJc(),_Ic};_.Pd=function dJc(){return lJc(),aJc};var _Ic,aJc;aU(1443,1,{},fJc);_.nc=function gJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};aU(1444,1,{},iJc);_.nc=function jJc(){return hSc};var oO=Ajb(JQc,'TerrainDynamic$DemoScene',1239),kO=Ajb(JQc,'TerrainDynamic$DemoScene$1',1240),lO=Ajb(JQc,'TerrainDynamic$DemoScene$2',1241),mO=Ajb(JQc,'TerrainDynamic$DemoScene$3',1242),nO=Ajb(JQc,'TerrainDynamic$DemoScene$4',1243),bR=Ajb(jSc,TSc,1435),_O=Ajb(zQc,'TerrainShader',1304),FQ=Ajb(jSc,'BleachBypassShader',1399),VQ=Ajb(jSc,'HorizontalTiltShiftShader',1423),fR=Ajb(jSc,'VerticalTiltShiftShader',1441),rO=Ajb(JQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1244),pO=Ajb(JQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1245),qO=Ajb(JQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1246),aR=Ajb(jSc,USc,1436),$Q=Ajb(jSc,VSc,1437),_Q=Ajb(jSc,WSc,1438),$O=Ajb(zQc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1305),YO=Ajb(zQc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1306),ZO=Ajb(zQc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1307),EQ=Ajb(jSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1400),CQ=Ajb(jSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1401),DQ=Ajb(jSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1402),UQ=Ajb(jSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1424),SQ=Ajb(jSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1425),TQ=Ajb(jSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1426),eR=Ajb(jSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1442),cR=Ajb(jSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1443),dR=Ajb(jSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1444),ZQ=Ajb(jSc,'LuminosityShader',1429),YQ=Ajb(jSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1430),WQ=Ajb(jSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1431),XQ=Ajb(jSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1432);_Lc(xi)(38);