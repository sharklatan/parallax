function ssc(){}
function wsc(){}
function zsc(){}
function Nvc(){}
function Rvc(){}
function Uvc(){}
function AGc(){}
function EGc(){}
function HGc(){}
function WHc(){}
function $Hc(){}
function bIc(){}
function nIc(){}
function rIc(){}
function uIc(){}
function GIc(){}
function KIc(){}
function NIc(){}
function ZIc(){}
function bJc(){}
function eJc(){}
function HYb(a,b){a.b=b}
function C7b(a,b){a.k=b}
function eGc(a,b){mqb(a.b,b)}
function fsc(a){this.a=a}
function isc(a){this.a=a}
function lsc(a){this.a=a}
function osc(){osc=$Jc;nsc=new ssc}
function Bsc(){Bsc=$Jc;qsc=new wsc}
function Csc(){Csc=$Jc;rsc=new zsc}
function Jvc(){Jvc=$Jc;Ivc=new Nvc}
function Wvc(){Wvc=$Jc;Lvc=new Rvc}
function Xvc(){Xvc=$Jc;Mvc=new Uvc}
function wGc(){wGc=$Jc;vGc=new AGc}
function JGc(){JGc=$Jc;yGc=new EGc}
function KGc(){KGc=$Jc;zGc=new HGc}
function SHc(){SHc=$Jc;RHc=new WHc}
function dIc(){dIc=$Jc;UHc=new $Hc}
function eIc(){eIc=$Jc;VHc=new bIc}
function jIc(){jIc=$Jc;iIc=new nIc}
function wIc(){wIc=$Jc;lIc=new rIc}
function xIc(){xIc=$Jc;mIc=new uIc}
function CIc(){CIc=$Jc;BIc=new GIc}
function PIc(){PIc=$Jc;EIc=new KIc}
function QIc(){QIc=$Jc;FIc=new NIc}
function VIc(){VIc=$Jc;UIc=new ZIc}
function gJc(){gJc=$Jc;XIc=new bJc}
function hJc(){hJc=$Jc;YIc=new eJc}
function csc(a,b){this.a=a;this.b=b}
function Evc(){vIb.call(this,(Jvc(),Ivc))}
function tGc(){vIb.call(this,(wGc(),vGc))}
function PHc(){vIb.call(this,(SHc(),RHc))}
function gIc(){vIb.call(this,(jIc(),iIc))}
function zIc(){vIb.call(this,(CIc(),BIc))}
function SIc(){vIb.call(this,(VIc(),UIc))}
function Xrc(a){a.w+=1;a.w==3&&qPb(a.v,true)}
function Yrc(){C9b.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Wrc(a,b,c,d){var e,f,g;g=new n2b(b);JMb(zu(KRb(fZb(g).i,xRc),225),c);f=new h8b;e=new u7b(new zWb(a.u,a.t),g);U5b(e._,-500);fPb(f,e);KGb(a.G.k,f,a.c,d,true)}
function Vrc(a,b,c,d,e,f){var g,i;g=new f0b;$_b(g,new b3b(16755285));g.j=true;d0b(g,(ZZb(),WZb));i=new E7b(b,g);i.d=c;C7b(i,Hu(600*Pkb()));S5b(i._,d,e,f);p3b(i.cb,1.5707963267948966);i.S=true;i.U=true;fPb(a.H,i);mqb(a.n,i)}
var NSc='enableDiffuse1',OSc='enableDiffuse2',GSc='h',ISc='heightMap',TSc='heightmap',SSc='offset',USc='r',MSc='tDetail',KSc='tDiffuse1',LSc='tDiffuse2',QSc='uRepeatOverlay',HSc='v';fU(1235,1,JLc);_.zb=function Trc(){c9b(this.b,new Yrc(this.a))};fU(1236,970,{78:1,186:1,338:1},Yrc);_.Ud=function Zrc(a){Xrc(this)};_.Gd=function $rc(a){this.u=a.a.Z;this.t=a.a.Y;JMb(zu(KRb(fZb(this.f.b).i,GSc),225),new Ijb(6/this.u));JMb(zu(KRb(fZb(this.D.b).i,HSc),225),new Ijb(6/this.t))};_.nb=function _rc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;nt((Cxb(),Bxb),(Mxb(),Lxb),this);this.b=new iQb(40,yGb(this.G.k),2,4000);this.u=this.G.k.Z;this.t=this.G.k.Y;this.c=new VPb(this.u,this.t,-10000,10000);S5b(this.b._,-1200,800,1200);U5b(this.c._,100);this.s=new h8b;fPb(this.s,this.c);this.d=new Hwb(this.b,this.G.c);R5b(this.d.v,0);this.d.s=1;this.d.A=1.2;Ewb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;Cwb(this.d,0.15);f8b(this.H,new X7b(328965,2000,4000));fPb(this.H,new PXb(1118481));this.e=new qYb(16777215,1.15);S5b(this.e._,500,2000,0);fPb(this.H,this.e);this.q=new JYb(16729088,1.5,0);R5b(this.q._,0);fPb(this.H,this.q);this.g=new fOb(256,256);xNb(this.g,(jEb(),eEb));vNb(this.g,($Db(),YDb));sNb(this.g,(uCb(),sCb));tNb(this.g,false);this.o=new fOb(256,256);xNb(this.o,eEb);vNb(this.o,YDb);sNb(this.o,sCb);tNb(this.o,false);n=new zIc;u=n.i;JMb(zu(u.a[fOc],225),new Ijb(0.05));e5b(zu(zu(u.a[bSc],225).d,297),256,256);JMb(zu(u.a[ISc],225),this.g);s=new fOb(2048,2048);xNb(s,eEb);vNb(s,YDb);sNb(s,sCb);s.r=false;ENb(s,(BFb(),AFb));FNb(s,AFb);c=new LNb('./static/textures/terrain/grasslight-big.jpg',new csc(this,s));ENb(c,AFb);FNb(c,AFb);d=new LNb('./static/textures/terrain/backgrounddetailed6.jpg',this);ENb(d,AFb);FNb(d,AFb);b=new LNb('./static/textures/terrain/grasslight-big-nm.jpg',this);ENb(b,AFb);FNb(b,AFb);t=new Evc;this.B=t.i;JMb(zu(KRb(this.B,XRc),225),this.o);JMb(zu(KRb(this.B,YRc),225),new Ijb(3.5));JMb(zu(KRb(this.B,JSc),225),this.g);JMb(zu(KRb(this.B,KSc),225),c);JMb(zu(KRb(this.B,LSc),225),d);JMb(zu(KRb(this.B,ZRc),225),s);JMb(zu(KRb(this.B,MSc),225),b);JMb(zu(KRb(this.B,NSc),225),(Jib(),Jib(),Iib));JMb(zu(KRb(this.B,OSc),225),Iib);JMb(zu(KRb(this.B,vRc),225),Iib);$2b(zu(zu(KRb(this.B,BRc),225).d,293),16777215);$2b(zu(zu(KRb(this.B,CRc),225).d,293),16777215);$2b(zu(zu(KRb(this.B,ARc),225).d,293),1118481);JMb(zu(KRb(this.B,aSc),225),new Ijb(30));JMb(zu(KRb(this.B,PSc),225),new Ijb(375));e5b(zu(zu(KRb(this.B,QSc),225).d,297),6,6);this.A=new etb;Cob(this.A,eSc,new LMb((cNb(),QMb),new Ijb(1)));Cob(this.A,RSc,new LMb(YMb,new i5b(1.5,1.5)));Cob(this.A,SSc,new LMb(YMb,new i5b(0,0)));this.k=new etb;i=new m2b((osc(),nsc));qIb(fZb(i),this.A);i.c=false;i.b=true;Cob(this.k,TSc,i);j=new n2b(n);qIb(fZb(j),u);j.c=false;j.b=true;Cob(this.k,rRc,j);k=new n2b(t);qIb(fZb(k),this.B);k.c=true;k.b=true;Cob(this.k,'terrain',k);o=new zWb(this.u,this.t);p=new m_b;g_b(p,new b3b(0));this.r=new u7b(o,p);U5b(this.r._,-500);fPb(this.s,this.r);g=new AWb(6000,6000,64,64);PQb(g);this.v=new u7b(g,k);S5b(this.v._,0,-125,0);o3b(this.v.cb,-1.5707963267948966);qPb(this.v,false);fPb(this.H,this.v);WGb(this.G.k,this.H.a.c,1);this.G.k.ab=true;this.G.k.bb=true;SGb(this.G.k,false);q=new nGc(this.H,this.b);f=new $Fc(0.6);e=new qGc(new tGc);JMb(zu(KRb(fZb(e.b).i,HRc),225),new Ijb(0.65));this.f=new qGc(new PHc);this.D=new qGc(new SIc);JMb(zu(KRb(fZb(this.f.b).i,GSc),225),new Ijb(6/this.u));JMb(zu(KRb(fZb(this.D.b).i,HSc),225),new Ijb(6/this.t));JMb(zu(KRb(fZb(this.f.b).i,USc),225),new Ijb(0.5));JMb(zu(KRb(fZb(this.D.b).i,USc),225),new Ijb(0.5));this.D.a=true;r=new fOb(this.u,this.t);xNb(s,dEb);vNb(s,YDb);sNb(s,sCb);s.f=false;s.r=false;a=new gGc(this.G.k,r);mqb(a.b,q);mqb(a.b,f);mqb(a.b,e);eGc(a,this.f);eGc(a,this.D);this.n=new wqb;new Mwc('./static/models/animated/parrot.js',new fsc(this));new Mwc(FSc,new isc(this));new Mwc('./static/models/animated/stork.js',new lsc(this));this.p=rh()};_.ob=function asc(a){var b,c,d,e,f;b=(rh()-this.p)*0.001;if(this.v.gb){Fwb(this.d);this.j=y3b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;Z2b(this.H.a.c,0.1,e,this.j);WGb(this.G.k,this.H.a.c,1);ZXb(this.e,0.1+f*1.0499999999999998);HYb(this.q,0.9+f*0.6);JMb(zu(KRb(this.B,YRc),225),new Ijb(0.6+f*2.9));if(this.C){this.a=y3b(this.a+-7.5E-4,0,0.05);JMb(zu(xob(this.A,eSc),225),new Ijb(zu(zu(xob(this.A,eSc),225).d,150).a+b*this.a));a5b(zu(zu(xob(this.A,SSc),225).d,297),b*0.05);f5b(zu(zu(KRb(this.B,VSc),225).d,297),4*zu(zu(xob(this.A,SSc),225).d,297).c);USb(this.r,zu(xob(this.k,TSc),282));KGb(this.G.k,this.s,this.c,this.g,true);USb(this.r,zu(xob(this.k,rRc),282));KGb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=zu(pqb(this.n,c),305);D7b(d,Hu(1000*b));a5b(d._,d.d*b);d._.c>2000&&f5b(d._,-1500-Pkb()*500)}KGb(this.G.k,this.H,this.b,null,false)}this.p=rh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;fU(1237,1,{},csc);_.Ud=function dsc(a){Xrc(this.a);Wrc(this.a,new gIc,a,this.b)};fU(1238,1,{},fsc);_.Af=function gsc(a,b){Hwc((zu(a,339),zu(b,242)));Vrc(this.a,zu(b,242),500,-3500,500,700);Vrc(this.a,zu(b,242),500,-3000-Pkb()*500,500,-200);Vrc(this.a,zu(b,242),500,-3000-Pkb()*500,500,200);Vrc(this.a,zu(b,242),500,-3000-Pkb()*500,500,1000)};fU(1239,1,{},isc);_.Af=function jsc(a,b){Hwc((zu(a,339),zu(b,242)));Vrc(this.a,zu(b,242),1000,-3000-Pkb()*500,350,40)};fU(1240,1,{},lsc);_.Af=function msc(a,b){Hwc((zu(a,339),zu(b,242)));Vrc(this.a,zu(b,242),1000,-3000-Pkb()*500,350,340)};var nsc;fU(1241,1,{},ssc);_.Od=function tsc(){return Bsc(),qsc};_.Pd=function usc(){return Csc(),rsc};var qsc,rsc;fU(1242,1,{},wsc);_.nc=function xsc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};fU(1243,1,{},zsc);_.nc=function Asc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};fU(1301,728,wLc,Evc);_.Ld=function Fvc(){qIb(this,gNb());qIb(this,hNb());qIb(this,iNb());jIb(this,NSc,new LMb((cNb(),TMb),(Jib(),Jib(),Hib)));jIb(this,OSc,new LMb(TMb,Hib));jIb(this,vRc,new LMb(TMb,Hib));jIb(this,WSc,new LMb(TMb,Hib));jIb(this,KSc,new KMb(WMb));jIb(this,LSc,new KMb(WMb));jIb(this,MSc,new KMb(WMb));jIb(this,XRc,new KMb(WMb));jIb(this,ZRc,new KMb(WMb));jIb(this,JSc,new KMb(WMb));jIb(this,YRc,new LMb(QMb,new Ijb(1)));jIb(this,XSc,new LMb(QMb,new Ijb(0)));jIb(this,PSc,new LMb(QMb,new Ijb(1)));jIb(this,BRc,new LMb(PMb,new b3b(15658734)));jIb(this,CRc,new LMb(PMb,new b3b(1118481)));jIb(this,ARc,new LMb(PMb,new b3b(328965)));jIb(this,aSc,new LMb(QMb,new Ijb(30)));jIb(this,HRc,new LMb(QMb,new Ijb(1)));jIb(this,'uRepeatBase',new LMb(YMb,new i5b(1,1)));jIb(this,QSc,new LMb(YMb,new i5b(1,1)));jIb(this,VSc,new LMb(YMb,new i5b(0,0)))};_.Md=function Gvc(a){var b,c;c=new Uqb(pu(cS,dKc,1,[IRc,JRc]));b=new Uqb(pu(cS,dKc,1,[LRc,MRc,NRc]));sIb(this,AIb(a,pu(fS,dKc,173,[c,b])))};_.Nd=function Hvc(a){var b,c;c=new Uqb(pu(cS,dKc,1,[ORc]));b=new Uqb(pu(cS,dKc,1,[PRc]));tIb(this,AIb(a,pu(fS,dKc,173,[c,b])))};var Ivc;fU(1302,1,{},Nvc);_.Od=function Ovc(){return Wvc(),Lvc};_.Pd=function Pvc(){return Xvc(),Mvc};var Lvc,Mvc;fU(1303,1,{},Rvc);_.nc=function Svc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};fU(1304,1,{},Uvc);_.nc=function Vvc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};fU(1396,728,wLc,tGc);_.Ld=function uGc(){jIb(this,xRc,new KMb((cNb(),WMb)));jIb(this,HRc,new LMb(QMb,new Ijb(1)))};var vGc;fU(1397,1,{},AGc);_.Od=function BGc(){return JGc(),yGc};_.Pd=function CGc(){return KGc(),zGc};var yGc,zGc;fU(1398,1,{},EGc);_.nc=function FGc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};fU(1399,1,{},HGc);_.nc=function IGc(){return mSc};fU(1420,728,wLc,PHc);_.Ld=function QHc(){jIb(this,xRc,new KMb((cNb(),WMb)));jIb(this,GSc,new LMb(QMb,new Ijb(0.001953125)));jIb(this,USc,new LMb(QMb,new Ijb(0.35)))};var RHc;fU(1421,1,{},WHc);_.Od=function XHc(){return dIc(),UHc};_.Pd=function YHc(){return eIc(),VHc};var UHc,VHc;fU(1422,1,{},$Hc);_.nc=function _Hc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};fU(1423,1,{},bIc);_.nc=function cIc(){return mSc};fU(1426,728,wLc,gIc);_.Ld=function hIc(){jIb(this,xRc,new KMb((cNb(),WMb)))};var iIc;fU(1427,1,{},nIc);_.Od=function oIc(){return wIc(),lIc};_.Pd=function pIc(){return xIc(),mIc};var lIc,mIc;fU(1428,1,{},rIc);_.nc=function sIc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};fU(1429,1,{},uIc);_.nc=function vIc(){return mSc};fU(1432,728,wLc,zIc);_.Ld=function AIc(){jIb(this,ISc,new KMb((cNb(),WMb)));jIb(this,bSc,new LMb(YMb,new i5b(512,512)));jIb(this,RSc,new LMb(YMb,new i5b(1,1)));jIb(this,fOc,new LMb(QMb,new Ijb(0.05)))};var BIc;fU(1433,1,{},GIc);_.Od=function HIc(){return PIc(),EIc};_.Pd=function IIc(){return QIc(),FIc};var EIc,FIc;fU(1434,1,{},KIc);_.nc=function LIc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};fU(1435,1,{},NIc);_.nc=function OIc(){return mSc};fU(1438,728,wLc,SIc);_.Ld=function TIc(){jIb(this,xRc,new KMb((cNb(),WMb)));jIb(this,HSc,new LMb(QMb,new Ijb(0.001953125)));jIb(this,USc,new LMb(QMb,new Ijb(0.35)))};var UIc;fU(1439,1,{},ZIc);_.Od=function $Ic(){return gJc(),XIc};_.Pd=function _Ic(){return hJc(),YIc};var XIc,YIc;fU(1440,1,{},bJc);_.nc=function cJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};fU(1441,1,{},eJc);_.nc=function fJc(){return mSc};var tO=wjb(OQc,'TerrainDynamic$DemoScene',1236),pO=wjb(OQc,'TerrainDynamic$DemoScene$1',1237),qO=wjb(OQc,'TerrainDynamic$DemoScene$2',1238),rO=wjb(OQc,'TerrainDynamic$DemoScene$3',1239),sO=wjb(OQc,'TerrainDynamic$DemoScene$4',1240),gR=wjb(oSc,YSc,1432),eP=wjb(EQc,'TerrainShader',1301),KQ=wjb(oSc,'BleachBypassShader',1396),$Q=wjb(oSc,'HorizontalTiltShiftShader',1420),kR=wjb(oSc,'VerticalTiltShiftShader',1438),wO=wjb(OQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1241),uO=wjb(OQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1242),vO=wjb(OQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1243),fR=wjb(oSc,ZSc,1433),dR=wjb(oSc,$Sc,1434),eR=wjb(oSc,_Sc,1435),dP=wjb(EQc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1302),bP=wjb(EQc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1303),cP=wjb(EQc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1304),JQ=wjb(oSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1397),HQ=wjb(oSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1398),IQ=wjb(oSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1399),ZQ=wjb(oSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1421),XQ=wjb(oSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1422),YQ=wjb(oSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1423),jR=wjb(oSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1439),hR=wjb(oSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1440),iR=wjb(oSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1441),cR=wjb(oSc,'LuminosityShader',1426),bR=wjb(oSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1427),_Q=wjb(oSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1428),aR=wjb(oSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1429);XLc(xi)(38);