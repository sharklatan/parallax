function Euc(){}
function Iuc(){}
function Luc(){}
function DHc(){}
function HHc(){}
function KHc(){}
function Xlc(){C9b.call(this)}
function xuc(){vIb.call(this,(Auc(),zuc))}
function wHc(){vIb.call(this,(zHc(),yHc))}
function zHc(){zHc=$Jc;yHc=new DHc}
function MHc(){MHc=$Jc;BHc=new HHc}
function NHc(){NHc=$Jc;CHc=new KHc}
function Nuc(){Nuc=$Jc;Cuc=new Iuc}
function Auc(){Auc=$Jc;zuc=new Euc}
function Ouc(){Ouc=$Jc;Duc=new Luc}
function bGc(){this.b=new n2b(new wHc);JMb(zu(KRb(fZb(this.b).i,iSc),225),(Jib(),Jib(),Hib));JMb(zu(KRb(fZb(this.b).i,jSc),225),new Ijb(0.35));JMb(zu(KRb(fZb(this.b).i,kSc),225),new Ijb(0.95));JMb(zu(KRb(fZb(this.b).i,lSc),225),okb(2048));this.e=true;this.f=true}
var iSc='grayscale',jSc='nIntensity',lSc='sCount',kSc='sIntensity',cSc='texture1',dSc='texture2';fU(1153,1,JLc);_.zb=function Vlc(){c9b(this.b,new Xlc(this.a))};fU(1154,970,GLc,Xlc);_.Gd=function Ylc(a){f5b(zu(zu(KRb(this.d,bSc),225).d,297),a.a.Z);g5b(zu(zu(KRb(this.d,bSc),225).d,297),a.a.Y)};_.nb=function Zlc(){var a,b,c,d,e,f,g;nt((Cxb(),Bxb),(Mxb(),Lxb),this);this.a=new iQb(35,yGb(this.G.k),1,3000);U5b(this.a._,4);d=new n2b(new xuc);this.d=fZb(d).i;f=new KNb('./static/textures/lava/cloud.png');ENb(f,(BFb(),AFb));FNb(f,AFb);JMb(zu(KRb(this.d,cSc),225),f);g=new KNb(RRc);ENb(g,AFb);FNb(g,AFb);JMb(zu(KRb(this.d,dSc),225),g);this.b=new u7b(new PWb(0.65,0.3,30,30),d);o3b(this.b.cb,0.3);fPb(this.H,this.b);a=new fGc(this.G.k);e=new nGc(this.H,this.a);b=new $Fc(1.25);c=new bGc;c.a=true;mqb(a.b,e);mqb(a.b,b);mqb(a.b,c);SGb(this.G.k,false);this.c=rh()};_.ob=function $lc(a){var b;b=(rh()-this.c)*0.001*5;JMb(zu(KRb(this.d,eSc),225),new Ijb(zu(zu(KRb(this.d,eSc),225).d,150).a+0.2*b));g3b(this.b.cb,0.05*b);h3b(this.b.cb,0.0125*b);rGb(this.G.k,true);this.c=rh();KGb(this.G.k,this.H,this.a,null,false)};_.c=0;fU(1282,728,wLc,xuc);_.Ld=function yuc(){jIb(this,fSc,new LMb((cNb(),QMb),new Ijb(0.45)));jIb(this,gSc,new LMb($Mb,new Y5b(0,0,0)));jIb(this,eSc,new LMb(QMb,new Ijb(1)));jIb(this,bSc,new LMb(YMb,new h5b));jIb(this,hSc,new LMb(YMb,new i5b(3,1)));jIb(this,cSc,new KMb(WMb));jIb(this,dSc,new KMb(WMb))};var zuc;fU(1283,1,{},Euc);_.Od=function Fuc(){return Nuc(),Cuc};_.Pd=function Guc(){return Ouc(),Duc};var Cuc,Duc;fU(1284,1,{},Iuc);_.nc=function Juc(){return 'uniform float time;\nuniform vec2 resolution;\n\nuniform float fogDensity;\nuniform vec3 fogColor;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\n\nvarying vec2 vUv;\n\nvoid main( void ) {\n\n\tvec2 position = -1.0 + 2.0 * vUv;\n\n\tvec4 noise = texture2D( texture1, vUv );\n\tvec2 T1 = vUv + vec2( 1.5, -1.5 ) * time  *0.02;\n\tvec2 T2 = vUv + vec2( -0.5, 2.0 ) * time * 0.01;\n\n\tT1.x += noise.x * 2.0;\n\tT1.y += noise.y * 2.0;\n\tT2.x -= noise.y * 0.2;\n\tT2.y += noise.z * 0.2;\n\n\tfloat p = texture2D( texture1, T1 * 2.0 ).a;\n\n\tvec4 color = texture2D( texture2, T2 * 2.0 );\n\tvec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );\n\n\tif( temp.r > 1.0 ){ temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }\n\tif( temp.g > 1.0 ){ temp.rb += temp.g - 1.0; }\n\tif( temp.b > 1.0 ){ temp.rg += temp.b - 1.0; }\n\n\tgl_FragColor = temp;\n\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\tconst float LOG2 = 1.442695;\n\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n}\n'};fU(1285,1,{},Luc);_.nc=function Muc(){return 'uniform vec2 uvScale;\nvarying vec2 vUv;\n\nvoid main()\n{\n\n\tvUv = uvScale * uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n}'};fU(1391,1390,WLc,bGc);_.Qg=function cGc(a,b,c){JMb(zu(KRb(fZb(this.b).i,xRc),225),a.d);JMb(zu(KRb(fZb(this.b).i,eSc),225),new Ijb(zu(zu(KRb(fZb(this.b).i,eSc),225).d,150).a+b));USb(a.c,this.b);this.a?KGb(a.u,a.v,a.a,null,false):KGb(a.u,a.v,a.a,a.g,false)};_.a=false;fU(1414,728,wLc,wHc);_.Ld=function xHc(){jIb(this,xRc,new KMb((cNb(),WMb)));jIb(this,eSc,new LMb(QMb,new Ijb(0)));jIb(this,jSc,new LMb(QMb,new Ijb(0.5)));jIb(this,kSc,new LMb(QMb,new Ijb(0.05)));jIb(this,lSc,new LMb(TMb,okb(4096)));jIb(this,iSc,new LMb(TMb,(Jib(),Jib(),Iib)))};var yHc;fU(1415,1,{},DHc);_.Od=function EHc(){return MHc(),BHc};_.Pd=function FHc(){return NHc(),CHc};var BHc,CHc;fU(1416,1,{},HHc);_.nc=function IHc(){return '// control parameter\r\nuniform float time;\r\n\r\nuniform bool grayscale;\r\n\r\n// noise effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float nIntensity;\r\n\r\n// scanlines effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float sIntensity;\r\n\r\n// scanlines effect count value (0 = no effect, 4096 = full effect)\r\nuniform float sCount;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\t// sample the source\r\n\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\r\n\r\n\t// make some noise\r\n\tfloat x = vUv.x * vUv.y * time *  1000.0;\r\n\tx = mod( x, 13.0 ) * mod( x, 123.0 );\r\n\tfloat dx = mod( x, 0.01 );\r\n\r\n\t// add noise\r\n\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\r\n\r\n\t// get us a sine and cosine\r\n\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\r\n\r\n\t// add scanlines\r\n\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\r\n\r\n\t// interpolate between source and result by intensity\r\n\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\r\n\r\n\t// convert to grayscale if desired\r\n\tif( grayscale ) {\r\n\r\n\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\r\n\r\n\t}\r\n\r\n\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\r\n\r\n}\r\n'};fU(1417,1,{},KHc);_.nc=function LHc(){return mSc};var TM=wjb(LQc,'MaterialsShaderLava$DemoScene',1154),BQ=wjb(nSc,'FilmPass',1391),TO=wjb(EQc,'LavaShader',1282),WQ=wjb(oSc,'FilmShader',1414),SO=wjb(EQc,'LavaShader_Resources_default_InlineClientBundleGenerator',1283),QO=wjb(EQc,'LavaShader_Resources_default_InlineClientBundleGenerator$1',1284),RO=wjb(EQc,'LavaShader_Resources_default_InlineClientBundleGenerator$2',1285),VQ=wjb(oSc,'FilmShader_Resources_default_InlineClientBundleGenerator',1415),TQ=wjb(oSc,'FilmShader_Resources_default_InlineClientBundleGenerator$1',1416),UQ=wjb(oSc,'FilmShader_Resources_default_InlineClientBundleGenerator$2',1417);XLc(xi)(30);