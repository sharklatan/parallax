function Lsc(){}
function Psc(){}
function Ssc(){}
function svc(){}
function wvc(){}
function zvc(){}
function Ejc(a){this.a=a}
function Hsc(){Hsc=$Jc;Gsc=new Lsc}
function Usc(){Usc=$Jc;Jsc=new Psc}
function Vsc(){Vsc=$Jc;Ksc=new Ssc}
function ovc(){ovc=$Jc;nvc=new svc}
function Bvc(){Bvc=$Jc;qvc=new wvc}
function Cvc(){Cvc=$Jc;rvc=new zvc}
function jvc(){vIb.call(this,(ovc(),nvc))}
function Esc(){vIb.call(this,(Hsc(),Gsc))}
function Ajc(){C9b.call(this);this.d=0;this.e=0}
function zjc(a,b){var c,d,e,f,g,i;d=new KNb(sRc);d.k=4;e5b(d.B,0.998,0.998);e5b(d.A,0.001,0.001);ENb(d,(BFb(),AFb));FNb(d,AFb);sNb(d,(uCb(),sCb));e=new KNb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');e5b(e.B,0.998,0.998);e5b(e.A,0.001,0.001);ENb(e,AFb);FNb(e,AFb);sNb(e,sCb);c=new KNb('./static/models/obj/leeperrysmith/Map-COL.jpg');e5b(c.B,0.998,0.998);e5b(c.A,0.001,0.001);ENb(c,AFb);FNb(c,AFb);sNb(c,sCb);g=new jvc;i=g.i;JMb(zu(i.a[uRc],225),(Jib(),Jib(),Iib));JMb(zu(i.a[vRc],225),Iib);JMb(zu(i.a[wRc],225),a.b.e);JMb(zu(i.a[xRc],225),c);JMb(zu(i.a[yRc],225),d);JMb(zu(i.a[zRc],225),e);$2b(zu(zu(i.a[ARc],225).d,293),10526880);$2b(zu(zu(i.a[BRc],225).d,293),10526880);$2b(zu(zu(i.a[CRc],225).d,293),10526880);JMb(zu(i.a[DRc],225),new Ijb(0.145));JMb(zu(i.a[ERc],225),new Ijb(0.75));JMb(zu(i.a[FRc],225),new Ijb(16));G6b(zu(zu(i.a[GRc],225).d,301),0.001,0.001,0.998,0.998);f=new n2b(g);f.c=true;a.c=new u7b(b,f);g5b(a.c._,-50);R5b(a.c.eb,100);kPb(a.c,true);a.c.U=true;fPb(a.H,a.c)}
var uRc='enableBump',wRc='tBeckmann',DRc='uRoughness',ERc='uSpecularBrightness';fU(1116,1,JLc);_.zb=function xjc(){c9b(this.b,new Ajc(this.a))};fU(1117,970,{323:1},Ajc);_.nb=function Bjc(){var a,b,c,d,e,f,g;this.a=new iQb(27,yGb(this.G.k),1,10000);U5b(this.a._,1200);fPb(this.H,new PXb(5592405));d=new JYb(16777215,1.5,1000);S5b(d._,0,0,600);fPb(this.H,d);f=new RYb(1);S5b(f._,0.05,0.05,1);fPb(this.H,f);f._.of(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new qYb(16777215,0.85);S5b(a._,1,-0.5,1);Z2b(a.L,0.6,1,0.85);fPb(this.H,a);a._.of(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new qYb(16777215,0.85);S5b(b._,1,-0.5,-1);fPb(this.H,b);new qGc(new Esc);c=new qGc(new dHc);c.a=true;g=new fOb(512,512);xNb(g,(jEb(),dEb));vNb(g,($Db(),YDb));sNb(g,(uCb(),sCb));g.f=false;this.b=new gGc(this.G.k,g);new Mwc(tRc,new Ejc(this));WGb(this.G.k,new b3b(5001561),1);e=new PFb(this.G.k,this.H);e.g=false;SGb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function Cjc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){h3b(this.c.cb,0.05*(b-this.c.cb.d));g3b(this.c.cb,0.05*(c-this.c.cb.c))}rGb(this.G.k,true);KGb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;fU(1118,1,{},Ejc);_.Af=function Fjc(a,b){zjc(this.a,zu(b,242))};fU(1246,728,wLc,Esc);_.Ld=function Fsc(){};var Gsc;fU(1247,1,{},Lsc);_.Od=function Msc(){return Usc(),Jsc};_.Pd=function Nsc(){return Vsc(),Ksc};var Jsc,Ksc;fU(1248,1,{},Psc);_.nc=function Qsc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};fU(1249,1,{},Ssc);_.nc=function Tsc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};fU(1295,728,wLc,jvc);_.Ld=function kvc(){qIb(this,gNb());qIb(this,hNb());qIb(this,iNb());jIb(this,uRc,new LMb((cNb(),TMb),okb(0)));jIb(this,vRc,new LMb(TMb,okb(0)));jIb(this,xRc,new KMb(WMb));jIb(this,wRc,new KMb(WMb));jIb(this,BRc,new LMb(PMb,new b3b(15658734)));jIb(this,CRc,new LMb(PMb,new b3b(1118481)));jIb(this,ARc,new LMb(PMb,new b3b(328965)));jIb(this,HRc,new LMb(QMb,new Ijb(1)));jIb(this,DRc,new LMb(QMb,new Ijb(0.15)));jIb(this,ERc,new LMb(QMb,new Ijb(0.75)));jIb(this,yRc,new KMb(WMb));jIb(this,FRc,new LMb(QMb,new Ijb(1)));jIb(this,zRc,new KMb(WMb));jIb(this,GRc,new LMb(aNb,new K6b(0,0,1,1)));jIb(this,'uWrapRGB',new LMb($Mb,new Y5b(0.75,0.375,0.1875)))};_.Md=function lvc(a){var b,c;c=new Uqb(pu(cS,dKc,1,[IRc,JRc,KRc]));b=new Uqb(pu(cS,dKc,1,[LRc,MRc,NRc]));sIb(this,AIb(a,pu(fS,dKc,173,[c,b])))};_.Nd=function mvc(a){var b,c;c=new Uqb(pu(cS,dKc,1,[ORc]));b=new Uqb(pu(cS,dKc,1,[PRc]));tIb(this,AIb(a,pu(fS,dKc,173,[c,b])))};var nvc;fU(1296,1,{},svc);_.Od=function tvc(){return Bvc(),qvc};_.Pd=function uvc(){return Cvc(),rvc};var qvc,rvc;fU(1297,1,{},wvc);_.nc=function xvc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};fU(1298,1,{},zvc);_.nc=function Avc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var lM=wjb(LQc,'MaterialsBumpmapSkin$DemoScene',1117),kM=wjb(LQc,'MaterialsBumpmapSkin$DemoScene$1',1118),BO=wjb(EQc,'BeckmannShader',1246),AO=wjb(EQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1247),yO=wjb(EQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1248),zO=wjb(EQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1249),aP=wjb(EQc,'SkinSimpleShader',1295),_O=wjb(EQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1296),ZO=wjb(EQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1297),$O=wjb(EQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1298);XLc(xi)(18);