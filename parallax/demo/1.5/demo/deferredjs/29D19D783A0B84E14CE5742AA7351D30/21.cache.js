function RKb(){}
function VKb(){}
function YKb(){}
function NKb(){NKb=EKc;MKb=new RKb}
function $Kb(){$Kb=EKc;PKb=new VKb}
function _Kb(){_Kb=EKc;QKb=new YKb}
function KKb(){_Ib.call(this,(NKb(),MKb))}
function vlc(){gac.call(this);this.d=0;this.e=0}
JU(755,731,cMc,KKb);_.Sd=function LKb(){PIb(this,'mRefractionRatio',new pNb((INb(),uNb),new lkb(1.02)));PIb(this,'mFresnelBias',new pNb(uNb,new lkb(0.1)));PIb(this,'mFresnelPower',new pNb(uNb,new lkb(2)));PIb(this,'mFresnelScale',new pNb(uNb,new lkb(1)));PIb(this,xSc,new oNb(ANb))};var MKb;JU(756,1,{},RKb);_.Vd=function SKb(){return $Kb(),PKb};_.Wd=function TKb(){return _Kb(),QKb};var PKb,QKb;JU(757,1,{},VKb);_.uc=function WKb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};JU(758,1,{},YKb);_.uc=function ZKb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};JU(1139,1,pMc);_.Db=function tlc(){I9b(this.c,new vlc(this.b))};JU(1140,973,{327:1},vlc);_.ob=function wlc(){var a,b,c,d,e,f,g,i,j;this.b=new OQb(60,cHb(this.H.n),1,100000);y6b(this.b.ab,3200);this.c=new OQb(60,cHb(this.H.n),1,100000);this.f=new N8b;a=new lXb(100,32,16);j=new xOb('./static/textures/cube/park2/*.jpg');YNb(j,($Cb(),YCb));g=new KKb;nNb(Wu(oSb(g.j,xSc),225),j);c=new T2b(g);this.g=new arb;for(b=0;b<500;b++){e=new $7b(a,c);L5b(e.ab,slb()*10000-5000);M5b(e.ab,slb()*10000-5000);y6b(e.ab,slb()*10000-5000);v6b(e.fb,slb()*3+1);LPb(this.I,e);Sqb(this.g,e)}this.I.X=false;i=new BJb;nNb(Wu(oSb(i.j,xSc),225),j);f=new T2b(i);WZb(f,(I_b(),F_b));d=new $7b(new wWb(100000,100000,100000),f);LPb(this.f,d);wHb(this.H.n,false)};_.pb=function xlc(a){var b,c,d,e;e=1.0E-4*a;G5b(this.b.ab,(this.d-this.b.ab.d)*0.05);H5b(this.b.ab,(-this.e-this.b.ab.e)*0.05);iQb(this.b,this.I.ab);O3b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Wu(Vqb(this.g,b),304);L5b(d.ab,5000*Math.cos(e+b));M5b(d.ab,5000*Math.sin(e+b*1.1))}XGb(this.H.n,true);oHb(this.H.n,this.f,this.c,null,false);oHb(this.H.n,this.I,this.b,null,false)};_.d=0;_.e=0;var iN=_jb(qRc,'MaterialsCubemapFresnel$DemoScene',1140),KG=_jb(ySc,'FresnelShader',755),JG=_jb(ySc,'FresnelShader_Resources_default_InlineClientBundleGenerator',756),HG=_jb(ySc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',757),IG=_jb(ySc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',758);DMc(Ii)(21);