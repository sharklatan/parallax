function Ysc(){}
function atc(){}
function dtc(){}
function rwc(){}
function vwc(){}
function ywc(){}
function eHc(){}
function iHc(){}
function lHc(){}
function AIc(){}
function EIc(){}
function HIc(){}
function TIc(){}
function XIc(){}
function $Ic(){}
function kJc(){}
function oJc(){}
function rJc(){}
function DJc(){}
function HJc(){}
function KJc(){}
function lZb(a,b){a.c=b}
function g8b(a,b){a.n=b}
function KGc(a,b){Sqb(a.c,b)}
function Lsc(a){this.b=a}
function Osc(a){this.b=a}
function Rsc(a){this.b=a}
function ftc(){ftc=EKc;Wsc=new atc}
function gtc(){gtc=EKc;Xsc=new dtc}
function Usc(){Usc=EKc;Tsc=new Ysc}
function nwc(){nwc=EKc;mwc=new rwc}
function Awc(){Awc=EKc;pwc=new vwc}
function Bwc(){Bwc=EKc;qwc=new ywc}
function aHc(){aHc=EKc;_Gc=new eHc}
function nHc(){nHc=EKc;cHc=new iHc}
function oHc(){oHc=EKc;dHc=new lHc}
function wIc(){wIc=EKc;vIc=new AIc}
function JIc(){JIc=EKc;yIc=new EIc}
function KIc(){KIc=EKc;zIc=new HIc}
function PIc(){PIc=EKc;OIc=new TIc}
function aJc(){aJc=EKc;RIc=new XIc}
function bJc(){bJc=EKc;SIc=new $Ic}
function gJc(){gJc=EKc;fJc=new kJc}
function tJc(){tJc=EKc;iJc=new oJc}
function uJc(){uJc=EKc;jJc=new rJc}
function zJc(){zJc=EKc;yJc=new DJc}
function MJc(){MJc=EKc;BJc=new HJc}
function NJc(){NJc=EKc;CJc=new KJc}
function Isc(a,b){this.b=a;this.c=b}
function iwc(){_Ib.call(this,(nwc(),mwc))}
function ZGc(){_Ib.call(this,(aHc(),_Gc))}
function tIc(){_Ib.call(this,(wIc(),vIc))}
function MIc(){_Ib.call(this,(PIc(),OIc))}
function dJc(){_Ib.call(this,(gJc(),fJc))}
function wJc(){_Ib.call(this,(zJc(),yJc))}
function Bsc(a){a.A+=1;a.A==3&&WPb(a.w,true)}
function Csc(){gac.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function Asc(a,b,c,d){var e,f,g;g=new T2b(b);nNb(Wu(oSb(LZb(g).j,cSc),225),c);f=new N8b;e=new $7b(new dXb(a.v,a.u),g);y6b(e.ab,-500);LPb(f,e);oHb(a.H.n,f,a.d,d,true)}
function zsc(a,b,c,d,e,f){var g,i;g=new L0b;E0b(g,new H3b(16755285));g.k=true;J0b(g,(D$b(),A$b));i=new i8b(b,g);i.e=c;g8b(i,cv(600*slb()));w6b(i.ab,d,e,f);V3b(i.db,1.5707963267948966);i.T=true;i.V=true;LPb(a.I,i);Sqb(a.o,i)}
var sTc='enableDiffuse1',tTc='enableDiffuse2',lTc='h',nTc='heightMap',yTc='heightmap',xTc='offset',zTc='r',rTc='tDetail',pTc='tDiffuse1',qTc='tDiffuse2',vTc='uRepeatOverlay',mTc='v';JU(1238,1,pMc);_.Db=function xsc(){I9b(this.c,new Csc(this.b))};JU(1239,973,{78:1,186:1,338:1},Csc);_._d=function Dsc(a){Bsc(this)};_.Nd=function Esc(a){this.v=a.b.$;this.u=a.b.Z;nNb(Wu(oSb(LZb(this.g.c).j,lTc),225),new lkb(6/this.v));nNb(Wu(oSb(LZb(this.F.c).j,mTc),225),new lkb(6/this.u))};_.ob=function Fsc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Lt((gyb(),fyb),(qyb(),pyb),this);this.c=new OQb(40,cHb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new zQb(this.v,this.u,-10000,10000);w6b(this.c.ab,-1200,800,1200);y6b(this.d.ab,100);this.t=new N8b;LPb(this.t,this.d);this.e=new lxb(this.c,this.H.d);v6b(this.e.w,0);this.e.t=1;this.e.B=1.2;ixb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;gxb(this.e,0.15);L8b(this.I,new B8b(328965,2000,4000));LPb(this.I,new tYb(1118481));this.f=new WYb(16777215,1.15);w6b(this.f.ab,500,2000,0);LPb(this.I,this.f);this.r=new nZb(16729088,1.5,0);v6b(this.r.ab,0);LPb(this.I,this.r);this.i=new LOb(256,256);bOb(this.i,(PEb(),KEb));_Nb(this.i,(EEb(),CEb));YNb(this.i,($Cb(),YCb));ZNb(this.i,false);this.p=new LOb(256,256);bOb(this.p,KEb);_Nb(this.p,CEb);YNb(this.p,YCb);ZNb(this.p,false);n=new dJc;u=n.j;nNb(Wu(u.b[WOc],225),new lkb(0.05));K5b(Wu(Wu(u.b[ISc],225).e,297),256,256);nNb(Wu(u.b[nTc],225),this.i);s=new LOb(2048,2048);bOb(s,KEb);_Nb(s,CEb);YNb(s,YCb);s.s=false;iOb(s,(fGb(),eGb));jOb(s,eGb);c=new pOb('./static/textures/terrain/grasslight-big.jpg',new Isc(this,s));iOb(c,eGb);jOb(c,eGb);d=new pOb('./static/textures/terrain/backgrounddetailed6.jpg',this);iOb(d,eGb);jOb(d,eGb);b=new pOb('./static/textures/terrain/grasslight-big-nm.jpg',this);iOb(b,eGb);jOb(b,eGb);t=new iwc;this.C=t.j;nNb(Wu(oSb(this.C,CSc),225),this.p);nNb(Wu(oSb(this.C,DSc),225),new lkb(3.5));nNb(Wu(oSb(this.C,oTc),225),this.i);nNb(Wu(oSb(this.C,pTc),225),c);nNb(Wu(oSb(this.C,qTc),225),d);nNb(Wu(oSb(this.C,ESc),225),s);nNb(Wu(oSb(this.C,rTc),225),b);nNb(Wu(oSb(this.C,sTc),225),(mjb(),mjb(),ljb));nNb(Wu(oSb(this.C,tTc),225),ljb);nNb(Wu(oSb(this.C,aSc),225),ljb);E3b(Wu(Wu(oSb(this.C,gSc),225).e,293),16777215);E3b(Wu(Wu(oSb(this.C,hSc),225).e,293),16777215);E3b(Wu(Wu(oSb(this.C,fSc),225).e,293),1118481);nNb(Wu(oSb(this.C,HSc),225),new lkb(30));nNb(Wu(oSb(this.C,uTc),225),new lkb(375));K5b(Wu(Wu(oSb(this.C,vTc),225).e,297),6,6);this.B=new Ktb;gpb(this.B,LSc,new pNb((INb(),uNb),new lkb(1)));gpb(this.B,wTc,new pNb(CNb,new O5b(1.5,1.5)));gpb(this.B,xTc,new pNb(CNb,new O5b(0,0)));this.n=new Ktb;i=new S2b((Usc(),Tsc));WIb(LZb(i),this.B);i.d=false;i.c=true;gpb(this.n,yTc,i);j=new T2b(n);WIb(LZb(j),u);j.d=false;j.c=true;gpb(this.n,YRc,j);k=new T2b(t);WIb(LZb(k),this.C);k.d=true;k.c=true;gpb(this.n,'terrain',k);o=new dXb(this.v,this.u);p=new S_b;M_b(p,new H3b(0));this.s=new $7b(o,p);y6b(this.s.ab,-500);LPb(this.t,this.s);g=new eXb(6000,6000,64,64);tRb(g);this.w=new $7b(g,k);w6b(this.w.ab,0,-125,0);U3b(this.w.db,-1.5707963267948966);WPb(this.w,false);LPb(this.I,this.w);AHb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;wHb(this.H.n,false);q=new TGc(this.I,this.c);f=new EGc(0.6);e=new WGc(new ZGc);nNb(Wu(oSb(LZb(e.c).j,mSc),225),new lkb(0.65));this.g=new WGc(new tIc);this.F=new WGc(new wJc);nNb(Wu(oSb(LZb(this.g.c).j,lTc),225),new lkb(6/this.v));nNb(Wu(oSb(LZb(this.F.c).j,mTc),225),new lkb(6/this.u));nNb(Wu(oSb(LZb(this.g.c).j,zTc),225),new lkb(0.5));nNb(Wu(oSb(LZb(this.F.c).j,zTc),225),new lkb(0.5));this.F.b=true;r=new LOb(this.v,this.u);bOb(s,JEb);_Nb(s,CEb);YNb(s,YCb);s.g=false;s.s=false;a=new MGc(this.H.n,r);Sqb(a.c,q);Sqb(a.c,f);Sqb(a.c,e);KGc(a,this.g);KGc(a,this.F);this.o=new arb;new qxc('./static/models/animated/parrot.js',new Lsc(this));new qxc(kTc,new Osc(this));new qxc('./static/models/animated/stork.js',new Rsc(this));this.q=Ch()};_.pb=function Gsc(a){var b,c,d,e,f;b=(Ch()-this.q)*0.001;if(this.w.hb){jxb(this.e);this.k=c4b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;D3b(this.I.b.d,0.1,e,this.k);AHb(this.H.n,this.I.b.d,1);DYb(this.f,0.1+f*1.0499999999999998);lZb(this.r,0.9+f*0.6);nNb(Wu(oSb(this.C,DSc),225),new lkb(0.6+f*2.9));if(this.D){this.b=c4b(this.b+-7.5E-4,0,0.05);nNb(Wu(bpb(this.B,LSc),225),new lkb(Wu(Wu(bpb(this.B,LSc),225).e,150).b+b*this.b));G5b(Wu(Wu(bpb(this.B,xTc),225).e,297),b*0.05);L5b(Wu(Wu(oSb(this.C,ATc),225).e,297),4*Wu(Wu(bpb(this.B,xTc),225).e,297).d);yTb(this.s,Wu(bpb(this.n,yTc),282));oHb(this.H.n,this.t,this.d,this.i,true);yTb(this.s,Wu(bpb(this.n,YRc),282));oHb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Wu(Vqb(this.o,c),305);h8b(d,cv(1000*b));G5b(d.ab,d.e*b);d.ab.d>2000&&L5b(d.ab,-1500-slb()*500)}oHb(this.H.n,this.I,this.c,null,false)}this.q=Ch()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;JU(1240,1,{},Isc);_._d=function Jsc(a){Bsc(this.b);Asc(this.b,new MIc,a,this.c)};JU(1241,1,{},Lsc);_.Hf=function Msc(a,b){lxc((Wu(a,339),Wu(b,242)));zsc(this.b,Wu(b,242),500,-3500,500,700);zsc(this.b,Wu(b,242),500,-3000-slb()*500,500,-200);zsc(this.b,Wu(b,242),500,-3000-slb()*500,500,200);zsc(this.b,Wu(b,242),500,-3000-slb()*500,500,1000)};JU(1242,1,{},Osc);_.Hf=function Psc(a,b){lxc((Wu(a,339),Wu(b,242)));zsc(this.b,Wu(b,242),1000,-3000-slb()*500,350,40)};JU(1243,1,{},Rsc);_.Hf=function Ssc(a,b){lxc((Wu(a,339),Wu(b,242)));zsc(this.b,Wu(b,242),1000,-3000-slb()*500,350,340)};var Tsc;JU(1244,1,{},Ysc);_.Vd=function Zsc(){return ftc(),Wsc};_.Wd=function $sc(){return gtc(),Xsc};var Wsc,Xsc;JU(1245,1,{},atc);_.uc=function btc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};JU(1246,1,{},dtc);_.uc=function etc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};JU(1304,731,cMc,iwc);_.Sd=function jwc(){WIb(this,MNb());WIb(this,NNb());WIb(this,ONb());PIb(this,sTc,new pNb((INb(),xNb),(mjb(),mjb(),kjb)));PIb(this,tTc,new pNb(xNb,kjb));PIb(this,aSc,new pNb(xNb,kjb));PIb(this,BTc,new pNb(xNb,kjb));PIb(this,pTc,new oNb(ANb));PIb(this,qTc,new oNb(ANb));PIb(this,rTc,new oNb(ANb));PIb(this,CSc,new oNb(ANb));PIb(this,ESc,new oNb(ANb));PIb(this,oTc,new oNb(ANb));PIb(this,DSc,new pNb(uNb,new lkb(1)));PIb(this,CTc,new pNb(uNb,new lkb(0)));PIb(this,uTc,new pNb(uNb,new lkb(1)));PIb(this,gSc,new pNb(tNb,new H3b(15658734)));PIb(this,hSc,new pNb(tNb,new H3b(1118481)));PIb(this,fSc,new pNb(tNb,new H3b(328965)));PIb(this,HSc,new pNb(uNb,new lkb(30)));PIb(this,mSc,new pNb(uNb,new lkb(1)));PIb(this,'uRepeatBase',new pNb(CNb,new O5b(1,1)));PIb(this,vTc,new pNb(CNb,new O5b(1,1)));PIb(this,ATc,new pNb(CNb,new O5b(0,0)))};_.Td=function kwc(a){var b,c;c=new yrb(Mu(GS,KKc,1,[nSc,oSc]));b=new yrb(Mu(GS,KKc,1,[qSc,rSc,sSc]));YIb(this,eJb(a,Mu(JS,KKc,173,[c,b])))};_.Ud=function lwc(a){var b,c;c=new yrb(Mu(GS,KKc,1,[tSc]));b=new yrb(Mu(GS,KKc,1,[uSc]));ZIb(this,eJb(a,Mu(JS,KKc,173,[c,b])))};var mwc;JU(1305,1,{},rwc);_.Vd=function swc(){return Awc(),pwc};_.Wd=function twc(){return Bwc(),qwc};var pwc,qwc;JU(1306,1,{},vwc);_.uc=function wwc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};JU(1307,1,{},ywc);_.uc=function zwc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};JU(1399,731,cMc,ZGc);_.Sd=function $Gc(){PIb(this,cSc,new oNb((INb(),ANb)));PIb(this,mSc,new pNb(uNb,new lkb(1)))};var _Gc;JU(1400,1,{},eHc);_.Vd=function fHc(){return nHc(),cHc};_.Wd=function gHc(){return oHc(),dHc};var cHc,dHc;JU(1401,1,{},iHc);_.uc=function jHc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};JU(1402,1,{},lHc);_.uc=function mHc(){return TSc};JU(1423,731,cMc,tIc);_.Sd=function uIc(){PIb(this,cSc,new oNb((INb(),ANb)));PIb(this,lTc,new pNb(uNb,new lkb(0.001953125)));PIb(this,zTc,new pNb(uNb,new lkb(0.35)))};var vIc;JU(1424,1,{},AIc);_.Vd=function BIc(){return JIc(),yIc};_.Wd=function CIc(){return KIc(),zIc};var yIc,zIc;JU(1425,1,{},EIc);_.uc=function FIc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};JU(1426,1,{},HIc);_.uc=function IIc(){return TSc};JU(1429,731,cMc,MIc);_.Sd=function NIc(){PIb(this,cSc,new oNb((INb(),ANb)))};var OIc;JU(1430,1,{},TIc);_.Vd=function UIc(){return aJc(),RIc};_.Wd=function VIc(){return bJc(),SIc};var RIc,SIc;JU(1431,1,{},XIc);_.uc=function YIc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};JU(1432,1,{},$Ic);_.uc=function _Ic(){return TSc};JU(1435,731,cMc,dJc);_.Sd=function eJc(){PIb(this,nTc,new oNb((INb(),ANb)));PIb(this,ISc,new pNb(CNb,new O5b(512,512)));PIb(this,wTc,new pNb(CNb,new O5b(1,1)));PIb(this,WOc,new pNb(uNb,new lkb(0.05)))};var fJc;JU(1436,1,{},kJc);_.Vd=function lJc(){return tJc(),iJc};_.Wd=function mJc(){return uJc(),jJc};var iJc,jJc;JU(1437,1,{},oJc);_.uc=function pJc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};JU(1438,1,{},rJc);_.uc=function sJc(){return TSc};JU(1441,731,cMc,wJc);_.Sd=function xJc(){PIb(this,cSc,new oNb((INb(),ANb)));PIb(this,mTc,new pNb(uNb,new lkb(0.001953125)));PIb(this,zTc,new pNb(uNb,new lkb(0.35)))};var yJc;JU(1442,1,{},DJc);_.Vd=function EJc(){return MJc(),BJc};_.Wd=function FJc(){return NJc(),CJc};var BJc,CJc;JU(1443,1,{},HJc);_.uc=function IJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};JU(1444,1,{},KJc);_.uc=function LJc(){return TSc};var XO=_jb(tRc,'TerrainDynamic$DemoScene',1239),TO=_jb(tRc,'TerrainDynamic$DemoScene$1',1240),UO=_jb(tRc,'TerrainDynamic$DemoScene$2',1241),VO=_jb(tRc,'TerrainDynamic$DemoScene$3',1242),WO=_jb(tRc,'TerrainDynamic$DemoScene$4',1243),KR=_jb(VSc,DTc,1435),IP=_jb(jRc,'TerrainShader',1304),mR=_jb(VSc,'BleachBypassShader',1399),CR=_jb(VSc,'HorizontalTiltShiftShader',1423),OR=_jb(VSc,'VerticalTiltShiftShader',1441),$O=_jb(tRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1244),YO=_jb(tRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1245),ZO=_jb(tRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1246),JR=_jb(VSc,ETc,1436),HR=_jb(VSc,FTc,1437),IR=_jb(VSc,GTc,1438),HP=_jb(jRc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1305),FP=_jb(jRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1306),GP=_jb(jRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1307),lR=_jb(VSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1400),jR=_jb(VSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1401),kR=_jb(VSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1402),BR=_jb(VSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1424),zR=_jb(VSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1425),AR=_jb(VSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1426),NR=_jb(VSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1442),LR=_jb(VSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1443),MR=_jb(VSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1444),GR=_jb(VSc,'LuminosityShader',1429),FR=_jb(VSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1430),DR=_jb(VSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1431),ER=_jb(VSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1432);DMc(Ii)(38);