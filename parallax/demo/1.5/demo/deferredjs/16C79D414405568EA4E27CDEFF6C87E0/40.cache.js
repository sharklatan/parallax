function OJb(){}
function SJb(){}
function VJb(){}
function Vtc(){}
function vtc(){}
function ztc(){}
function Ctc(){}
function Otc(){}
function Stc(){}
function fuc(){}
function juc(){}
function muc(){}
function a8b(a,b){a.c=b}
function KJb(){KJb=UJc;JJb=new OJb}
function XJb(){XJb=UJc;MJb=new SJb}
function YJb(){YJb=UJc;NJb=new VJb}
function Ytc(){Ytc=UJc;Ntc=new Vtc}
function rtc(){rtc=UJc;qtc=new vtc}
function Etc(){Etc=UJc;ttc=new ztc}
function Ftc(){Ftc=UJc;utc=new Ctc}
function Ktc(){Ktc=UJc;Jtc=new Otc}
function Xtc(){Xtc=UJc;Mtc=new Stc}
function buc(){buc=UJc;auc=new fuc}
function ouc(){ouc=UJc;duc=new juc}
function puc(){puc=UJc;euc=new muc}
function irc(a,b){this.a=a;this.b=b}
function mGb(a,b){ZGb(a,b);lGb(a,false)}
function FJb(){pIb.call(this,(KJb(),JJb))}
function Htc(){pIb.call(this,(Ktc(),Jtc))}
function otc(){pIb.call(this,(rtc(),qtc))}
function $tc(){pIb.call(this,(buc(),auc))}
function L_b(){nZb.call(this);this.a=false;this.b=1}
function erc(){w9b.call(this);this.t=new S5b(0,1000,-1000);this.r=new R5b}
function J5b(a,b){var c;c=new _3b;Z3b(c,b.p,O3b(c,b.X));return B5b(a,c)}
var WSc='bgColor',YSc='fAspect',VSc='fGodRayIntensity',ZSc='fStepSize',MSc='mFar',LSc='mNear',_Sc='tColors',aTc='tGodRays',$Sc='tInput',XSc='vSunPositionScreenSpace',bTc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';YT(747,729,qLc,FJb);_.Ld=function GJb(){dIb(this,LSc,new FMb((YMb(),KMb),new Cjb(1)));dIb(this,MSc,new FMb(KMb,new Cjb(2000)));dIb(this,qRc,new FMb(KMb,new Cjb(1)))};_.Md=function HJb(a){var b,c;c=new Oqb(fu(VR,ZJc,1,[NSc]));b=new Oqb(fu(VR,ZJc,1,[OSc]));mIb(this,uIb(a,fu(YR,ZJc,173,[c,b])))};_.Nd=function IJb(a){var b,c;c=new Oqb(fu(VR,ZJc,1,[PSc,QSc]));b=new Oqb(fu(VR,ZJc,1,[RSc,SSc,TSc]));nIb(this,uIb(a,fu(YR,ZJc,173,[c,b])))};var JJb;YT(748,1,{},OJb);_.Od=function PJb(){return XJb(),MJb};_.Pd=function QJb(){return YJb(),NJb};var MJb,NJb;YT(749,1,{},SJb);_.nc=function TJb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};YT(750,1,{},VJb);_.nc=function WJb(){return USc};YT(814,811,{78:1,186:1,235:1,236:1,249:1});_.Zd=function SPb(){return this.b};_.$d=function TPb(){return this.d};YT(815,811,{78:1,186:1,235:1,237:1,249:1});_.Zd=function eQb(){return this.b};_.$d=function fQb(){return this.g};YT(919,912,{279:1,282:1},L_b);_.Pe=function M_b(){var a;return a=new L_b,XYb(this,a),a.a=this.a,a.b=this.b,a};_.Qe=function N_b(){return new FJb};_.Me=function O_b(){return this.b};_.Ne=function P_b(){return this.a};_.Re=function Q_b(a,b){var c;aZb(this,b);c=_Yb(this).i;if(su(a,235)){DMb(pu(c.a[LSc],225),new Cjb(pu(a,235).$d()));DMb(pu(c.a[MSc],225),new Cjb(pu(a,235).Zd()))}DMb(pu(c.a[qRc],225),new Cjb(this.Z))};_.a=false;_.b=0;YT(1227,1,DLc);_.zb=function crc(){Y8b(this.b,new erc(this.a))};YT(1228,971,{336:1},erc);_.nb=function frc(){var a,b,c,d;this.a=new cQb(70,sGb(this.G.k),1,3000);O5b(this.a._,200);this.b=new L_b;c=new g_b;a_b(c,new X2b(0));e_b(c,(Q$b(),N$b));new Gwc('./static/models/obj/tree/tree.js',new irc(this,c));a=new BWb(1,20,10);this.s=new o7b(a,c);L5b(this.s.eb,20);_Ob(this.H,this.s);aHb(this.G.k,false);MGb(this.G.k,false);PGb(this.G.k,1297,1);this.j=new b8b;this.i=new PPb(this.G.k.Z,this.G.k.Y,-10000,10000);O5b(this.i._,100);_Ob(this.j,this.i);this.n=new _Nb(this.G.k.Z,this.G.k.Y);rNb(this.n,(dEb(),ZDb));pNb(this.n,(UDb(),SDb));mNb(this.n,(oCb(),nCb));this.o=new _Nb(this.G.k.Z,this.G.k.Y);rNb(this.o,ZDb);pNb(this.o,SDb);mNb(this.o,nCb);d=~~(this.G.k.Z/4);b=~~(this.G.k.Y/4);this.p=new _Nb(d,b);rNb(this.p,ZDb);pNb(this.p,SDb);mNb(this.p,nCb);this.q=new _Nb(d,b);rNb(this.q,ZDb);pNb(this.q,SDb);mNb(this.q,nCb);this.e=new h2b(new Htc);this.c=new h2b(new otc);DMb(pu(ERb(_Yb(this.c).i,VSc),225),new Cjb(0.75));this.d=new h2b(new $tc);U2b(pu(pu(ERb(_Yb(this.d).i,WSc),225).d,293),1297);U2b(pu(pu(ERb(_Yb(this.d).i,dSc),225).d,293),16772608);this.k=new o7b(new qWb(this.G.k.Z,this.G.k.Y),this.e);O5b(this.k._,-9900);_Ob(this.j,this.k)};_.ob=function grc(a){var b,c,d,e,f,g;f=a/4000;_4b(this.s._,200*Ckb(f));O5b(this.s._,200*Lkb(f)-100);W4b(this.a._,(this.f-this.a._.c)*0.036);X4b(this.a._,(-this.g-this.a._.d)*0.036);yPb(this.a,this.H._);J5b(this.r.lf(this.t),this.a);_4b(this.r,(this.r.c+1)/2);a5b(this.r,(this.r.d+1)/2);$4b(pu(pu(ERb(_Yb(this.e).i,XSc),225).d,297),this.r.c,this.r.d);$4b(pu(pu(ERb(_Yb(this.d).i,XSc),225).d,297),this.r.c,this.r.d);mGb(this.G.k,this.n);g=this.G.k.Z;b=this.G.k.Y;d=0.74*b;e=0.74*b;_4b(this.r,this.r.c*g);a5b(this.r,this.r.d*b);$Gb(this.G.k,xu(this.r.c-e/2),xu(this.r.d-d/2),xu(e),xu(d));rGb(this.G.k,true);DMb(pu(ERb(_Yb(this.d).i,YSc),225),new Cjb(g/b));a8b(this.j,this.d);EGb(this.G.k,this.j,this.i,this.n,false);rGb(this.G.k,false);a8b(this.H,null);EGb(this.G.k,this.H,this.a,this.n,false);a8b(this.H,this.b);EGb(this.G.k,this.H,this.a,this.o,true);c=Ikb(6,-1);DMb(pu(ERb(_Yb(this.e).i,ZSc),225),new Cjb(c));DMb(pu(ERb(_Yb(this.e).i,$Sc),225),this.o);a8b(this.j,this.e);EGb(this.G.k,this.j,this.i,this.q,false);c=Ikb(6,-2);DMb(pu(ERb(_Yb(this.e).i,ZSc),225),new Cjb(c));DMb(pu(ERb(_Yb(this.e).i,$Sc),225),this.q);EGb(this.G.k,this.j,this.i,this.p,false);c=Ikb(6,-3);DMb(pu(ERb(_Yb(this.e).i,ZSc),225),new Cjb(c));DMb(pu(ERb(_Yb(this.e).i,$Sc),225),this.p);EGb(this.G.k,this.j,this.i,this.q,false);DMb(pu(ERb(_Yb(this.c).i,_Sc),225),this.n);DMb(pu(ERb(_Yb(this.c).i,aTc),225),this.q);a8b(this.j,this.c);EGb(this.G.k,this.j,this.i,null,false);a8b(this.j,null)};_.f=0;_.g=0;YT(1229,1,{},irc);_.Af=function jrc(a,b){var c;c=new o7b(b,this.b);M5b(c._,0,-150,-150);L5b(c.eb,400);c.W=false;J3b(c.V,c._,c.ab,c.eb);c.Y=true;_Ob(this.a.H,c)};YT(1265,729,qLc,otc);_.Ld=function ptc(){dIb(this,_Sc,new EMb((YMb(),QMb)));dIb(this,aTc,new EMb(QMb));dIb(this,VSc,new FMb(KMb,new Cjb(0.69)));dIb(this,XSc,new FMb(SMb,new c5b(0.5,0.5)))};var qtc;YT(1266,1,{},vtc);_.Od=function wtc(){return Etc(),ttc};_.Pd=function xtc(){return Ftc(),utc};var ttc,utc;YT(1267,1,{},ztc);_.nc=function Atc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};YT(1268,1,{},Ctc);_.nc=function Dtc(){return bTc};YT(1271,729,qLc,Htc);_.Ld=function Itc(){dIb(this,$Sc,new EMb((YMb(),QMb)));dIb(this,ZSc,new FMb(KMb,new Cjb(1)));dIb(this,XSc,new FMb(SMb,new c5b(0.5,0.5)))};var Jtc;YT(1272,1,{},Otc);_.Od=function Ptc(){return Xtc(),Mtc};_.Pd=function Qtc(){return Ytc(),Ntc};var Mtc,Ntc;YT(1273,1,{},Stc);_.nc=function Ttc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};YT(1274,1,{},Vtc);_.nc=function Wtc(){return bTc};YT(1277,729,qLc,$tc);_.Ld=function _tc(){dIb(this,XSc,new FMb((YMb(),SMb),new c5b(0.5,0.5)));dIb(this,YSc,new FMb(KMb,new Cjb(1)));dIb(this,dSc,new FMb(JMb,new X2b(16772608)));dIb(this,WSc,new FMb(JMb,new X2b(0)))};var auc;YT(1278,1,{},fuc);_.Od=function guc(){return ouc(),duc};_.Pd=function huc(){return puc(),euc};var duc,euc;YT(1279,1,{},juc);_.nc=function kuc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};YT(1280,1,{},muc);_.nc=function nuc(){return bTc};var $N=qjb(xQc,'PostprocessingGodrays$DemoScene',1228),ZN=qjb(xQc,'PostprocessingGodrays$DemoScene$1',1229),II=qjb(cTc,'MeshDepthMaterial',919),CO=qjb(nQc,'GodRaysGenerateShader',1271),yO=qjb(nQc,'GodRaysCombineShader',1265),GO=qjb(nQc,'GodraysFakeSunShader',1277),VF=qjb(CRc,'DepthShader',747),BO=qjb(nQc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1272),zO=qjb(nQc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1273),AO=qjb(nQc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1274),xO=qjb(nQc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1266),vO=qjb(nQc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1267),wO=qjb(nQc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1268),FO=qjb(nQc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1278),DO=qjb(nQc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1279),EO=qjb(nQc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1280),UF=qjb(CRc,'DepthShader_Resources_default_InlineClientBundleGenerator',748),SF=qjb(CRc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',749),TF=qjb(CRc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',750);RLc(xi)(40);