function Fsc(){}
function Jsc(){}
function Msc(){}
function mvc(){}
function qvc(){}
function tvc(){}
function yjc(a){this.a=a}
function Bsc(){Bsc=UJc;Asc=new Fsc}
function Osc(){Osc=UJc;Dsc=new Jsc}
function Psc(){Psc=UJc;Esc=new Msc}
function ivc(){ivc=UJc;hvc=new mvc}
function vvc(){vvc=UJc;kvc=new qvc}
function wvc(){wvc=UJc;lvc=new tvc}
function dvc(){pIb.call(this,(ivc(),hvc))}
function ysc(){pIb.call(this,(Bsc(),Asc))}
function ujc(){w9b.call(this);this.d=0;this.e=0}
function tjc(a,b){var c,d,e,f,g,i;d=new ENb(bRc);d.k=4;$4b(d.B,0.998,0.998);$4b(d.A,0.001,0.001);yNb(d,(vFb(),uFb));zNb(d,uFb);mNb(d,(oCb(),mCb));e=new ENb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');$4b(e.B,0.998,0.998);$4b(e.A,0.001,0.001);yNb(e,uFb);zNb(e,uFb);mNb(e,mCb);c=new ENb('./static/models/obj/leeperrysmith/Map-COL.jpg');$4b(c.B,0.998,0.998);$4b(c.A,0.001,0.001);yNb(c,uFb);zNb(c,uFb);mNb(c,mCb);g=new dvc;i=g.i;DMb(pu(i.a[dRc],225),(Dib(),Dib(),Cib));DMb(pu(i.a[eRc],225),Cib);DMb(pu(i.a[fRc],225),a.b.e);DMb(pu(i.a[gRc],225),c);DMb(pu(i.a[hRc],225),d);DMb(pu(i.a[iRc],225),e);U2b(pu(pu(i.a[jRc],225).d,293),10526880);U2b(pu(pu(i.a[kRc],225).d,293),10526880);U2b(pu(pu(i.a[lRc],225).d,293),10526880);DMb(pu(i.a[mRc],225),new Cjb(0.145));DMb(pu(i.a[nRc],225),new Cjb(0.75));DMb(pu(i.a[oRc],225),new Cjb(16));A6b(pu(pu(i.a[pRc],225).d,301),0.001,0.001,0.998,0.998);f=new h2b(g);f.c=true;a.c=new o7b(b,f);a5b(a.c._,-50);L5b(a.c.eb,100);ePb(a.c,true);a.c.U=true;_Ob(a.H,a.c)}
var dRc='enableBump',fRc='tBeckmann',mRc='uRoughness',nRc='uSpecularBrightness';YT(1117,1,DLc);_.zb=function rjc(){Y8b(this.b,new ujc(this.a))};YT(1118,971,{323:1},ujc);_.nb=function vjc(){var a,b,c,d,e,f,g;this.a=new cQb(27,sGb(this.G.k),1,10000);O5b(this.a._,1200);_Ob(this.H,new JXb(5592405));d=new DYb(16777215,1.5,1000);M5b(d._,0,0,600);_Ob(this.H,d);f=new LYb(1);M5b(f._,0.05,0.05,1);_Ob(this.H,f);f._.of(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new kYb(16777215,0.85);M5b(a._,1,-0.5,1);T2b(a.L,0.6,1,0.85);_Ob(this.H,a);a._.of(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new kYb(16777215,0.85);M5b(b._,1,-0.5,-1);_Ob(this.H,b);new kGc(new ysc);c=new kGc(new ZGc);c.a=true;g=new _Nb(512,512);rNb(g,(dEb(),ZDb));pNb(g,(UDb(),SDb));mNb(g,(oCb(),mCb));g.f=false;this.b=new aGc(this.G.k,g);new Gwc(cRc,new yjc(this));QGb(this.G.k,new X2b(5001561),1);e=new JFb(this.G.k,this.H);e.g=false;MGb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function wjc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){b3b(this.c.cb,0.05*(b-this.c.cb.d));a3b(this.c.cb,0.05*(c-this.c.cb.c))}lGb(this.G.k,true);EGb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;YT(1119,1,{},yjc);_.Af=function zjc(a,b){tjc(this.a,pu(b,242))};YT(1247,729,qLc,ysc);_.Ld=function zsc(){};var Asc;YT(1248,1,{},Fsc);_.Od=function Gsc(){return Osc(),Dsc};_.Pd=function Hsc(){return Psc(),Esc};var Dsc,Esc;YT(1249,1,{},Jsc);_.nc=function Ksc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};YT(1250,1,{},Msc);_.nc=function Nsc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};YT(1296,729,qLc,dvc);_.Ld=function evc(){kIb(this,aNb());kIb(this,bNb());kIb(this,cNb());dIb(this,dRc,new FMb((YMb(),NMb),ikb(0)));dIb(this,eRc,new FMb(NMb,ikb(0)));dIb(this,gRc,new EMb(QMb));dIb(this,fRc,new EMb(QMb));dIb(this,kRc,new FMb(JMb,new X2b(15658734)));dIb(this,lRc,new FMb(JMb,new X2b(1118481)));dIb(this,jRc,new FMb(JMb,new X2b(328965)));dIb(this,qRc,new FMb(KMb,new Cjb(1)));dIb(this,mRc,new FMb(KMb,new Cjb(0.15)));dIb(this,nRc,new FMb(KMb,new Cjb(0.75)));dIb(this,hRc,new EMb(QMb));dIb(this,oRc,new FMb(KMb,new Cjb(1)));dIb(this,iRc,new EMb(QMb));dIb(this,pRc,new FMb(WMb,new E6b(0,0,1,1)));dIb(this,'uWrapRGB',new FMb(UMb,new S5b(0.75,0.375,0.1875)))};_.Md=function fvc(a){var b,c;c=new Oqb(fu(VR,ZJc,1,[rRc,sRc,tRc]));b=new Oqb(fu(VR,ZJc,1,[uRc,vRc,wRc]));mIb(this,uIb(a,fu(YR,ZJc,173,[c,b])))};_.Nd=function gvc(a){var b,c;c=new Oqb(fu(VR,ZJc,1,[xRc]));b=new Oqb(fu(VR,ZJc,1,[yRc]));nIb(this,uIb(a,fu(YR,ZJc,173,[c,b])))};var hvc;YT(1297,1,{},mvc);_.Od=function nvc(){return vvc(),kvc};_.Pd=function ovc(){return wvc(),lvc};var kvc,lvc;YT(1298,1,{},qvc);_.nc=function rvc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};YT(1299,1,{},tvc);_.nc=function uvc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var cM=qjb(uQc,'MaterialsBumpmapSkin$DemoScene',1118),bM=qjb(uQc,'MaterialsBumpmapSkin$DemoScene$1',1119),sO=qjb(nQc,'BeckmannShader',1247),rO=qjb(nQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1248),pO=qjb(nQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1249),qO=qjb(nQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1250),TO=qjb(nQc,'SkinSimpleShader',1296),SO=qjb(nQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1297),QO=qjb(nQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1298),RO=qjb(nQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1299);RLc(xi)(18);