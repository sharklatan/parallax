function rtc(){}
function vtc(){}
function ytc(){}
function $vc(){}
function cwc(){}
function fwc(){}
function kkc(a){this.b=a}
function ntc(){ntc=GKc;mtc=new rtc}
function Atc(){Atc=GKc;ptc=new vtc}
function Btc(){Btc=GKc;qtc=new ytc}
function Wvc(){Wvc=GKc;Vvc=new $vc}
function hwc(){hwc=GKc;Yvc=new cwc}
function iwc(){iwc=GKc;Zvc=new fwc}
function ktc(){aJb.call(this,(ntc(),mtc))}
function Rvc(){aJb.call(this,(Wvc(),Vvc))}
function gkc(){hac.call(this);this.e=0;this.f=0}
function fkc(a,b){var c,d,e,f,g,i;d=new pOb(aSc);d.n=4;L5b(d.C,0.998,0.998);L5b(d.B,0.001,0.001);jOb(d,(gGb(),fGb));kOb(d,fGb);ZNb(d,(_Cb(),ZCb));e=new pOb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');L5b(e.C,0.998,0.998);L5b(e.B,0.001,0.001);jOb(e,fGb);kOb(e,fGb);ZNb(e,ZCb);c=new pOb('./static/models/obj/leeperrysmith/Map-COL.jpg');L5b(c.C,0.998,0.998);L5b(c.B,0.001,0.001);jOb(c,fGb);kOb(c,fGb);ZNb(c,ZCb);g=new Rvc;i=g.j;oNb(Wu(i.b[cSc],225),(njb(),njb(),mjb));oNb(Wu(i.b[dSc],225),mjb);oNb(Wu(i.b[eSc],225),a.c.f);oNb(Wu(i.b[fSc],225),c);oNb(Wu(i.b[gSc],225),d);oNb(Wu(i.b[hSc],225),e);F3b(Wu(Wu(i.b[iSc],225).e,293),10526880);F3b(Wu(Wu(i.b[jSc],225).e,293),10526880);F3b(Wu(Wu(i.b[kSc],225).e,293),10526880);oNb(Wu(i.b[lSc],225),new mkb(0.145));oNb(Wu(i.b[mSc],225),new mkb(0.75));oNb(Wu(i.b[nSc],225),new mkb(16));l7b(Wu(Wu(i.b[oSc],225).e,301),0.001,0.001,0.998,0.998);f=new U2b(g);f.d=true;a.d=new _7b(b,f);N5b(a.d.ab,-50);w6b(a.d.fb,100);RPb(a.d,true);a.d.V=true;MPb(a.I,a.d)}
var cSc='enableBump',eSc='tBeckmann',lSc='uRoughness',mSc='uSpecularBrightness';JU(1120,1,rMc);_.Db=function dkc(){J9b(this.c,new gkc(this.b))};JU(1121,973,{323:1},gkc);_.ob=function hkc(){var a,b,c,d,e,f,g;this.b=new PQb(27,dHb(this.H.n),1,10000);z6b(this.b.ab,1200);MPb(this.I,new uYb(5592405));d=new oZb(16777215,1.5,1000);x6b(d.ab,0,0,600);MPb(this.I,d);f=new wZb(1);x6b(f.ab,0.05,0.05,1);MPb(this.I,f);f.ab.vf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new XYb(16777215,0.85);x6b(a.ab,1,-0.5,1);E3b(a.M,0.6,1,0.85);MPb(this.I,a);a.ab.vf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new XYb(16777215,0.85);x6b(b.ab,1,-0.5,-1);MPb(this.I,b);new YGc(new ktc);c=new YGc(new LHc);c.b=true;g=new MOb(512,512);cOb(g,(QEb(),KEb));aOb(g,(FEb(),DEb));ZNb(g,(_Cb(),ZCb));g.g=false;this.c=new OGc(this.H.n,g);new sxc(bSc,new kkc(this));BHb(this.H.n,new I3b(5001561),1);e=new uGb(this.H.n,this.I);e.i=false;xHb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function ikc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){O3b(this.d.db,0.05*(b-this.d.db.e));N3b(this.d.db,0.05*(c-this.d.db.d))}YGb(this.H.n,true);pHb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;JU(1122,1,{},kkc);_.Hf=function lkc(a,b){fkc(this.b,Wu(b,242))};JU(1250,731,eMc,ktc);_.Sd=function ltc(){};var mtc;JU(1251,1,{},rtc);_.Vd=function stc(){return Atc(),ptc};_.Wd=function ttc(){return Btc(),qtc};var ptc,qtc;JU(1252,1,{},vtc);_.uc=function wtc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};JU(1253,1,{},ytc);_.uc=function ztc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};JU(1299,731,eMc,Rvc);_.Sd=function Svc(){XIb(this,NNb());XIb(this,ONb());XIb(this,PNb());QIb(this,cSc,new qNb((JNb(),yNb),Ukb(0)));QIb(this,dSc,new qNb(yNb,Ukb(0)));QIb(this,fSc,new pNb(BNb));QIb(this,eSc,new pNb(BNb));QIb(this,jSc,new qNb(uNb,new I3b(15658734)));QIb(this,kSc,new qNb(uNb,new I3b(1118481)));QIb(this,iSc,new qNb(uNb,new I3b(328965)));QIb(this,pSc,new qNb(vNb,new mkb(1)));QIb(this,lSc,new qNb(vNb,new mkb(0.15)));QIb(this,mSc,new qNb(vNb,new mkb(0.75)));QIb(this,gSc,new pNb(BNb));QIb(this,nSc,new qNb(vNb,new mkb(1)));QIb(this,hSc,new pNb(BNb));QIb(this,oSc,new qNb(HNb,new p7b(0,0,1,1)));QIb(this,'uWrapRGB',new qNb(FNb,new D6b(0.75,0.375,0.1875)))};_.Td=function Tvc(a){var b,c;c=new zrb(Mu(GS,MKc,1,[qSc,rSc,sSc]));b=new zrb(Mu(GS,MKc,1,[tSc,uSc,vSc]));ZIb(this,fJb(a,Mu(JS,MKc,173,[c,b])))};_.Ud=function Uvc(a){var b,c;c=new zrb(Mu(GS,MKc,1,[wSc]));b=new zrb(Mu(GS,MKc,1,[xSc]));$Ib(this,fJb(a,Mu(JS,MKc,173,[c,b])))};var Vvc;JU(1300,1,{},$vc);_.Vd=function _vc(){return hwc(),Yvc};_.Wd=function awc(){return iwc(),Zvc};var Yvc,Zvc;JU(1301,1,{},cwc);_.uc=function dwc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};JU(1302,1,{},fwc);_.uc=function gwc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var QM=akb(tRc,'MaterialsBumpmapSkin$DemoScene',1121),PM=akb(tRc,'MaterialsBumpmapSkin$DemoScene$1',1122),dP=akb(mRc,'BeckmannShader',1250),cP=akb(mRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1251),aP=akb(mRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1252),bP=akb(mRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1253),EP=akb(mRc,'SkinSimpleShader',1299),DP=akb(mRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1300),BP=akb(mRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1301),CP=akb(mRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1302);FMc(Ii)(18);