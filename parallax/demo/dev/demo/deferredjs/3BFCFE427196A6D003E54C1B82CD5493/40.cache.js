function _Kb(){}
function dLb(){}
function gLb(){}
function Cxc(){}
function Gxc(){}
function Jxc(){}
function Vxc(){}
function Zxc(){}
function ayc(){}
function myc(){}
function qyc(){}
function tyc(){}
function j9b(a,b){a.c=b}
function jLb(){jLb=uQc;$Kb=new gLb}
function iLb(){iLb=uQc;ZKb=new dLb}
function XKb(){XKb=uQc;WKb=new _Kb}
function yxc(){yxc=uQc;xxc=new Cxc}
function Lxc(){Lxc=uQc;Axc=new Gxc}
function Mxc(){Mxc=uQc;Bxc=new Jxc}
function Rxc(){Rxc=uQc;Qxc=new Vxc}
function cyc(){cyc=uQc;Txc=new Zxc}
function dyc(){dyc=uQc;Uxc=new ayc}
function iyc(){iyc=uQc;hyc=new myc}
function vyc(){vyc=uQc;kyc=new qyc}
function wyc(){wyc=uQc;lyc=new tyc}
function gtc(a,b){this.a=a;this.b=b}
function zHb(a,b){kIb(a,b);yHb(a,false)}
function SKb(){CJb.call(this,(XKb(),WKb))}
function vxc(){CJb.call(this,(yxc(),xxc))}
function Oxc(){CJb.call(this,(Rxc(),Qxc))}
function fyc(){CJb.call(this,(iyc(),hyc))}
function U0b(){w$b.call(this);this.a=false;this.b=1}
function ctc(){Eac.call(this);this.t=new _6b(0,1000,-1000);this.r=new $6b}
function S6b(a,b){var c;c=new i5b;g5b(c,b.p,X4b(c,b.X));return K6b(a,c)}
var rZc='bgColor',tZc='fAspect',qZc='fGodRayIntensity',uZc='fStepSize',hZc='mFar',gZc='mNear',wZc='tColors',xZc='tGodRays',vZc='tInput',sZc='vSunPositionScreenSpace',yZc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';GU(749,731,RRc,SKb);_.Kd=function TKb(){qJb(this,gZc,new SNb((jOb(),XNb),new jkb(1)));qJb(this,hZc,new SNb(XNb,new jkb(2000)));qJb(this,SXc,new SNb(XNb,new jkb(1)))};_.Ld=function UKb(a){var b,c;c=new urb(gu(BS,zQc,1,[iZc]));b=new urb(gu(BS,zQc,1,[jZc]));zJb(this,HJb(a,gu(ES,zQc,173,[c,b])))};_.Md=function VKb(a){var b,c;c=new urb(gu(BS,zQc,1,[kZc,lZc]));b=new urb(gu(BS,zQc,1,[mZc,nZc,oZc]));AJb(this,HJb(a,gu(ES,zQc,173,[c,b])))};var WKb;GU(750,1,{},_Kb);_.Nd=function aLb(){return iLb(),ZKb};_.Od=function bLb(){return jLb(),$Kb};var ZKb,$Kb;GU(751,1,{},dLb);_.mc=function eLb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};GU(752,1,{},gLb);_.mc=function hLb(){return pZc};GU(921,914,{280:1,283:1},U0b);_.Me=function V0b(){var a;return a=new U0b,e$b(this,a),a.a=this.a,a.b=this.b,a};_.Ne=function W0b(){return new SKb};_.Je=function X0b(){return this.b};_.Ke=function Y0b(){return this.a};_.Oe=function Z0b(a,b){var c;j$b(this,b);c=i$b(this).i;if(a.cZ==QG){QNb(qu(c.a[gZc],227),new jkb(qu(a,237).d));QNb(qu(c.a[hZc],227),new jkb(qu(a,237).b))}QNb(qu(c.a[SXc],227),new jkb(this.Z))};_.a=false;_.b=0;GU(1228,1,cSc);_.zb=function atc(){eac(this.b,new ctc(this.a))};GU(1229,973,{337:1},ctc);_.nb=function dtc(){var a,b,c,d;this.a=new nRb(70,FHb(this.G.k),1,3000);X6b(this.a._,200);this.b=new U0b;c=new p0b;j0b(c,new e4b(0));n0b(c,(Z_b(),W_b));new NAc('./static/models/obj/tree/tree.js',new gtc(this,c));a=new KXb(1,20,10);this.s=new x8b(a,c);U6b(this.s.eb,20);mQb(this.H,this.s);nIb(this.G.k,false);ZHb(this.G.k,false);aIb(this.G.k,1297,1);this.j=new k9b;this.i=new aRb(this.G.k.Z,this.G.k.Y,-10000,10000);X6b(this.i._,100);mQb(this.j,this.i);this.n=new mPb(this.G.k.Z,this.G.k.Y);EOb(this.n,(pFb(),jFb));COb(this.n,(eFb(),cFb));zOb(this.n,(aDb(),_Cb));this.o=new mPb(this.G.k.Z,this.G.k.Y);EOb(this.o,jFb);COb(this.o,cFb);zOb(this.o,_Cb);d=~~(this.G.k.Z/4);b=~~(this.G.k.Y/4);this.p=new mPb(d,b);EOb(this.p,jFb);COb(this.p,cFb);zOb(this.p,_Cb);this.q=new mPb(d,b);EOb(this.q,jFb);COb(this.q,cFb);zOb(this.q,_Cb);this.e=new q3b(new Oxc);this.c=new q3b(new vxc);QNb(qu(NSb(i$b(this.c).i,qZc),227),new jkb(0.75));this.d=new q3b(new fyc);b4b(qu(qu(NSb(i$b(this.d).i,rZc),227).d,294),1297);b4b(qu(qu(NSb(i$b(this.d).i,yYc),227).d,294),16772608);this.k=new x8b(new zXb(this.G.k.Z,this.G.k.Y),this.e);X6b(this.k._,-9900);mQb(this.j,this.k)};_.ob=function etc(a){var b,c,d,e,f,g;f=a/4000;i6b(this.s._,200*jlb(f));X6b(this.s._,200*slb(f)-100);d6b(this.a._,(this.f-this.a._.c)*0.036);e6b(this.a._,(-this.g-this.a._.d)*0.036);LQb(this.a,this.H._);S6b(this.r.hf(this.t),this.a);i6b(this.r,(this.r.c+1)/2);j6b(this.r,(this.r.d+1)/2);h6b(qu(qu(NSb(i$b(this.e).i,sZc),227).d,298),this.r.c,this.r.d);h6b(qu(qu(NSb(i$b(this.d).i,sZc),227).d,298),this.r.c,this.r.d);zHb(this.G.k,this.n);g=this.G.k.Z;b=this.G.k.Y;d=0.74*b;e=0.74*b;i6b(this.r,this.r.c*g);j6b(this.r,this.r.d*b);lIb(this.G.k,yu(this.r.c-e/2),yu(this.r.d-d/2),yu(e),yu(d));EHb(this.G.k,true);QNb(qu(NSb(i$b(this.d).i,tZc),227),new jkb(g/b));j9b(this.j,this.d);RHb(this.G.k,this.j,this.i,this.n,false);EHb(this.G.k,false);j9b(this.H,null);RHb(this.G.k,this.H,this.a,this.n,false);j9b(this.H,this.b);RHb(this.G.k,this.H,this.a,this.o,true);c=plb(6,-1);QNb(qu(NSb(i$b(this.e).i,uZc),227),new jkb(c));QNb(qu(NSb(i$b(this.e).i,vZc),227),this.o);j9b(this.j,this.e);RHb(this.G.k,this.j,this.i,this.q,false);c=plb(6,-2);QNb(qu(NSb(i$b(this.e).i,uZc),227),new jkb(c));QNb(qu(NSb(i$b(this.e).i,vZc),227),this.q);RHb(this.G.k,this.j,this.i,this.p,false);c=plb(6,-3);QNb(qu(NSb(i$b(this.e).i,uZc),227),new jkb(c));QNb(qu(NSb(i$b(this.e).i,vZc),227),this.p);RHb(this.G.k,this.j,this.i,this.q,false);QNb(qu(NSb(i$b(this.c).i,wZc),227),this.n);QNb(qu(NSb(i$b(this.c).i,xZc),227),this.q);j9b(this.j,this.c);RHb(this.G.k,this.j,this.i,null,false);j9b(this.j,null)};_.f=0;_.g=0;GU(1230,1,{},gtc);_.yf=function htc(a,b){var c;c=new x8b(b,this.b);V6b(c._,0,-150,-150);U6b(c.eb,400);c.W=false;S4b(c.V,c._,c.ab,c.eb);c.Y=true;mQb(this.a.H,c)};GU(1319,731,RRc,vxc);_.Kd=function wxc(){qJb(this,wZc,new RNb((jOb(),bOb)));qJb(this,xZc,new RNb(bOb));qJb(this,qZc,new SNb(XNb,new jkb(0.69)));qJb(this,sZc,new SNb(dOb,new l6b(0.5,0.5)))};var xxc;GU(1320,1,{},Cxc);_.Nd=function Dxc(){return Lxc(),Axc};_.Od=function Exc(){return Mxc(),Bxc};var Axc,Bxc;GU(1321,1,{},Gxc);_.mc=function Hxc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};GU(1322,1,{},Jxc);_.mc=function Kxc(){return yZc};GU(1325,731,RRc,Oxc);_.Kd=function Pxc(){qJb(this,vZc,new RNb((jOb(),bOb)));qJb(this,uZc,new SNb(XNb,new jkb(1)));qJb(this,sZc,new SNb(dOb,new l6b(0.5,0.5)))};var Qxc;GU(1326,1,{},Vxc);_.Nd=function Wxc(){return cyc(),Txc};_.Od=function Xxc(){return dyc(),Uxc};var Txc,Uxc;GU(1327,1,{},Zxc);_.mc=function $xc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};GU(1328,1,{},ayc);_.mc=function byc(){return yZc};GU(1331,731,RRc,fyc);_.Kd=function gyc(){qJb(this,sZc,new SNb((jOb(),dOb),new l6b(0.5,0.5)));qJb(this,tZc,new SNb(XNb,new jkb(1)));qJb(this,yYc,new SNb(WNb,new e4b(16772608)));qJb(this,rZc,new SNb(WNb,new e4b(0)))};var hyc;GU(1332,1,{},myc);_.Nd=function nyc(){return vyc(),kyc};_.Od=function oyc(){return wyc(),lyc};var kyc,lyc;GU(1333,1,{},qyc);_.mc=function ryc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};GU(1334,1,{},tyc);_.mc=function uyc(){return yZc};var aO=Zjb(YWc,'PostprocessingGodrays$DemoScene',1229),_N=Zjb(YWc,'PostprocessingGodrays$DemoScene$1',1230),LI=Zjb(zZc,'MeshDepthMaterial',921),IO=Zjb(OWc,'GodRaysGenerateShader',1325),EO=Zjb(OWc,'GodRaysCombineShader',1319),MO=Zjb(OWc,'GodraysFakeSunShader',1331),YF=Zjb(cYc,'DepthShader',749),HO=Zjb(OWc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1326),FO=Zjb(OWc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1327),GO=Zjb(OWc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1328),DO=Zjb(OWc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1320),BO=Zjb(OWc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1321),CO=Zjb(OWc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1322),LO=Zjb(OWc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1332),JO=Zjb(OWc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1333),KO=Zjb(OWc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1334),XF=Zjb(cYc,'DepthShader_Resources_default_InlineClientBundleGenerator',750),VF=Zjb(cYc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',751),WF=Zjb(cYc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',752);qSc(xi)(40);