function Fsc(){}
function Jsc(){}
function Msc(){}
function $vc(){}
function cwc(){}
function fwc(){}
function NGc(){}
function RGc(){}
function UGc(){}
function hIc(){}
function lIc(){}
function oIc(){}
function AIc(){}
function EIc(){}
function HIc(){}
function TIc(){}
function XIc(){}
function $Ic(){}
function kJc(){}
function oJc(){}
function rJc(){}
function TYb(a,b){a.c=b}
function O7b(a,b){a.n=b}
function rGc(a,b){yqb(a.c,b)}
function ssc(a){this.b=a}
function vsc(a){this.b=a}
function ysc(a){this.b=a}
function Bsc(){Bsc=lKc;Asc=new Fsc}
function Osc(){Osc=lKc;Dsc=new Jsc}
function Psc(){Psc=lKc;Esc=new Msc}
function Wvc(){Wvc=lKc;Vvc=new $vc}
function WGc(){WGc=lKc;LGc=new RGc}
function JGc(){JGc=lKc;IGc=new NGc}
function XGc(){XGc=lKc;MGc=new UGc}
function hwc(){hwc=lKc;Yvc=new cwc}
function iwc(){iwc=lKc;Zvc=new fwc}
function dIc(){dIc=lKc;cIc=new hIc}
function qIc(){qIc=lKc;fIc=new lIc}
function rIc(){rIc=lKc;gIc=new oIc}
function wIc(){wIc=lKc;vIc=new AIc}
function JIc(){JIc=lKc;yIc=new EIc}
function KIc(){KIc=lKc;zIc=new HIc}
function PIc(){PIc=lKc;OIc=new TIc}
function aJc(){aJc=lKc;RIc=new XIc}
function bJc(){bJc=lKc;SIc=new $Ic}
function gJc(){gJc=lKc;fJc=new kJc}
function tJc(){tJc=lKc;iJc=new oJc}
function uJc(){uJc=lKc;jJc=new rJc}
function dJc(){HIb.call(this,(gJc(),fJc))}
function Rvc(){HIb.call(this,(Wvc(),Vvc))}
function GGc(){HIb.call(this,(JGc(),IGc))}
function aIc(){HIb.call(this,(dIc(),cIc))}
function tIc(){HIb.call(this,(wIc(),vIc))}
function MIc(){HIb.call(this,(PIc(),OIc))}
function psc(a,b){this.b=a;this.c=b}
function isc(a){a.A+=1;a.A==3&&CPb(a.w,true)}
function jsc(){O9b.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function hsc(a,b,c,d){var e,f,g;g=new z2b(b);VMb(Eu(WRb(rZb(g).j,HRc),225),c);f=new t8b;e=new G7b(new LWb(a.v,a.u),g);e6b(e.ab,-500);rPb(f,e);WGb(a.H.n,f,a.d,d,true)}
function gsc(a,b,c,d,e,f){var g,i;g=new r0b;k0b(g,new n3b(16755285));g.k=true;p0b(g,(j$b(),g$b));i=new Q7b(b,g);i.e=c;O7b(i,Mu(600*_kb()));c6b(i.ab,d,e,f);B3b(i.db,1.5707963267948966);i.T=true;i.V=true;rPb(a.I,i);yqb(a.o,i)}
var XSc='enableDiffuse1',YSc='enableDiffuse2',QSc='h',SSc='heightMap',bTc='heightmap',aTc='offset',cTc='r',WSc='tDetail',USc='tDiffuse1',VSc='tDiffuse2',$Sc='uRepeatOverlay',RSc='v';mU(1233,1,YLc);_.Db=function esc(){o9b(this.c,new jsc(this.b))};mU(1234,967,{78:1,186:1,338:1},jsc);_.Xd=function ksc(a){isc(this)};_.Jd=function lsc(a){this.v=a.b.$;this.u=a.b.Z;VMb(Eu(WRb(rZb(this.g.c).j,QSc),225),new Ujb(6/this.v));VMb(Eu(WRb(rZb(this.F.c).j,RSc),225),new Ujb(6/this.u))};_.ob=function msc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;tt((Oxb(),Nxb),(Yxb(),Xxb),this);this.c=new uQb(40,KGb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new fQb(this.v,this.u,-10000,10000);c6b(this.c.ab,-1200,800,1200);e6b(this.d.ab,100);this.t=new t8b;rPb(this.t,this.d);this.e=new Twb(this.c,this.H.d);b6b(this.e.w,0);this.e.t=1;this.e.B=1.2;Qwb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;Owb(this.e,0.15);r8b(this.I,new h8b(328965,2000,4000));rPb(this.I,new _Xb(1118481));this.f=new CYb(16777215,1.15);c6b(this.f.ab,500,2000,0);rPb(this.I,this.f);this.r=new VYb(16729088,1.5,0);b6b(this.r.ab,0);rPb(this.I,this.r);this.i=new rOb(256,256);JNb(this.i,(vEb(),qEb));HNb(this.i,(kEb(),iEb));ENb(this.i,(GCb(),ECb));FNb(this.i,false);this.p=new rOb(256,256);JNb(this.p,qEb);HNb(this.p,iEb);ENb(this.p,ECb);FNb(this.p,false);n=new MIc;u=n.j;VMb(Eu(u.b[wOc],225),new Ujb(0.05));q5b(Eu(Eu(u.b[lSc],225).e,297),256,256);VMb(Eu(u.b[SSc],225),this.i);s=new rOb(2048,2048);JNb(s,qEb);HNb(s,iEb);ENb(s,ECb);s.s=false;QNb(s,(NFb(),MFb));RNb(s,MFb);c=new XNb('./static/textures/terrain/grasslight-big.jpg',new psc(this,s));QNb(c,MFb);RNb(c,MFb);d=new XNb('./static/textures/terrain/backgrounddetailed6.jpg',this);QNb(d,MFb);RNb(d,MFb);b=new XNb('./static/textures/terrain/grasslight-big-nm.jpg',this);QNb(b,MFb);RNb(b,MFb);t=new Rvc;this.C=t.j;VMb(Eu(WRb(this.C,fSc),225),this.p);VMb(Eu(WRb(this.C,gSc),225),new Ujb(3.5));VMb(Eu(WRb(this.C,TSc),225),this.i);VMb(Eu(WRb(this.C,USc),225),c);VMb(Eu(WRb(this.C,VSc),225),d);VMb(Eu(WRb(this.C,hSc),225),s);VMb(Eu(WRb(this.C,WSc),225),b);VMb(Eu(WRb(this.C,XSc),225),(Vib(),Vib(),Uib));VMb(Eu(WRb(this.C,YSc),225),Uib);VMb(Eu(WRb(this.C,FRc),225),Uib);k3b(Eu(Eu(WRb(this.C,LRc),225).e,293),16777215);k3b(Eu(Eu(WRb(this.C,MRc),225).e,293),16777215);k3b(Eu(Eu(WRb(this.C,KRc),225).e,293),1118481);VMb(Eu(WRb(this.C,kSc),225),new Ujb(30));VMb(Eu(WRb(this.C,ZSc),225),new Ujb(375));q5b(Eu(Eu(WRb(this.C,$Sc),225).e,297),6,6);this.B=new qtb;Oob(this.B,oSc,new XMb((oNb(),aNb),new Ujb(1)));Oob(this.B,_Sc,new XMb(iNb,new u5b(1.5,1.5)));Oob(this.B,aTc,new XMb(iNb,new u5b(0,0)));this.n=new qtb;i=new y2b((Bsc(),Asc));CIb(rZb(i),this.B);i.d=false;i.c=true;Oob(this.n,bTc,i);j=new z2b(n);CIb(rZb(j),u);j.d=false;j.c=true;Oob(this.n,BRc,j);k=new z2b(t);CIb(rZb(k),this.C);k.d=true;k.c=true;Oob(this.n,'terrain',k);o=new LWb(this.v,this.u);p=new y_b;s_b(p,new n3b(0));this.s=new G7b(o,p);e6b(this.s.ab,-500);rPb(this.t,this.s);g=new MWb(6000,6000,64,64);_Qb(g);this.w=new G7b(g,k);c6b(this.w.ab,0,-125,0);A3b(this.w.db,-1.5707963267948966);CPb(this.w,false);rPb(this.I,this.w);gHb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;cHb(this.H.n,false);q=new AGc(this.I,this.c);f=new lGc(0.6);e=new DGc(new GGc);VMb(Eu(WRb(rZb(e.c).j,RRc),225),new Ujb(0.65));this.g=new DGc(new aIc);this.F=new DGc(new dJc);VMb(Eu(WRb(rZb(this.g.c).j,QSc),225),new Ujb(6/this.v));VMb(Eu(WRb(rZb(this.F.c).j,RSc),225),new Ujb(6/this.u));VMb(Eu(WRb(rZb(this.g.c).j,cTc),225),new Ujb(0.5));VMb(Eu(WRb(rZb(this.F.c).j,cTc),225),new Ujb(0.5));this.F.b=true;r=new rOb(this.v,this.u);JNb(s,pEb);HNb(s,iEb);ENb(s,ECb);s.g=false;s.s=false;a=new tGc(this.H.n,r);yqb(a.c,q);yqb(a.c,f);yqb(a.c,e);rGc(a,this.g);rGc(a,this.F);this.o=new Iqb;new Zwc('./static/models/animated/parrot.js',new ssc(this));new Zwc(PSc,new vsc(this));new Zwc('./static/models/animated/stork.js',new ysc(this));this.q=Bh()};_.pb=function nsc(a){var b,c,d,e,f;b=(Bh()-this.q)*0.001;if(this.w.hb){Rwb(this.e);this.k=K3b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;j3b(this.I.b.d,0.1,e,this.k);gHb(this.H.n,this.I.b.d,1);jYb(this.f,0.1+f*1.0499999999999998);TYb(this.r,0.9+f*0.6);VMb(Eu(WRb(this.C,gSc),225),new Ujb(0.6+f*2.9));if(this.D){this.b=K3b(this.b+-7.5E-4,0,0.05);VMb(Eu(Job(this.B,oSc),225),new Ujb(Eu(Eu(Job(this.B,oSc),225).e,150).b+b*this.b));m5b(Eu(Eu(Job(this.B,aTc),225).e,297),b*0.05);r5b(Eu(Eu(WRb(this.C,dTc),225).e,297),4*Eu(Eu(Job(this.B,aTc),225).e,297).d);eTb(this.s,Eu(Job(this.n,bTc),282));WGb(this.H.n,this.t,this.d,this.i,true);eTb(this.s,Eu(Job(this.n,BRc),282));WGb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Eu(Bqb(this.o,c),305);P7b(d,Mu(1000*b));m5b(d.ab,d.e*b);d.ab.d>2000&&r5b(d.ab,-1500-_kb()*500)}WGb(this.H.n,this.I,this.c,null,false)}this.q=Bh()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;mU(1235,1,{},psc);_.Xd=function qsc(a){isc(this.b);hsc(this.b,new tIc,a,this.c)};mU(1236,1,{},ssc);_.Df=function tsc(a,b){Uwc((Eu(a,339),Eu(b,242)));gsc(this.b,Eu(b,242),500,-3500,500,700);gsc(this.b,Eu(b,242),500,-3000-_kb()*500,500,-200);gsc(this.b,Eu(b,242),500,-3000-_kb()*500,500,200);gsc(this.b,Eu(b,242),500,-3000-_kb()*500,500,1000)};mU(1237,1,{},vsc);_.Df=function wsc(a,b){Uwc((Eu(a,339),Eu(b,242)));gsc(this.b,Eu(b,242),1000,-3000-_kb()*500,350,40)};mU(1238,1,{},ysc);_.Df=function zsc(a,b){Uwc((Eu(a,339),Eu(b,242)));gsc(this.b,Eu(b,242),1000,-3000-_kb()*500,350,340)};var Asc;mU(1239,1,{},Fsc);_.Rd=function Gsc(){return Osc(),Dsc};_.Sd=function Hsc(){return Psc(),Esc};var Dsc,Esc;mU(1240,1,{},Jsc);_.qc=function Ksc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};mU(1241,1,{},Msc);_.qc=function Nsc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};mU(1299,725,LLc,Rvc);_.Od=function Svc(){CIb(this,sNb());CIb(this,tNb());CIb(this,uNb());vIb(this,XSc,new XMb((oNb(),dNb),(Vib(),Vib(),Tib)));vIb(this,YSc,new XMb(dNb,Tib));vIb(this,FRc,new XMb(dNb,Tib));vIb(this,eTc,new XMb(dNb,Tib));vIb(this,USc,new WMb(gNb));vIb(this,VSc,new WMb(gNb));vIb(this,WSc,new WMb(gNb));vIb(this,fSc,new WMb(gNb));vIb(this,hSc,new WMb(gNb));vIb(this,TSc,new WMb(gNb));vIb(this,gSc,new XMb(aNb,new Ujb(1)));vIb(this,fTc,new XMb(aNb,new Ujb(0)));vIb(this,ZSc,new XMb(aNb,new Ujb(1)));vIb(this,LRc,new XMb(_Mb,new n3b(15658734)));vIb(this,MRc,new XMb(_Mb,new n3b(1118481)));vIb(this,KRc,new XMb(_Mb,new n3b(328965)));vIb(this,kSc,new XMb(aNb,new Ujb(30)));vIb(this,RRc,new XMb(aNb,new Ujb(1)));vIb(this,'uRepeatBase',new XMb(iNb,new u5b(1,1)));vIb(this,$Sc,new XMb(iNb,new u5b(1,1)));vIb(this,dTc,new XMb(iNb,new u5b(0,0)))};_.Pd=function Tvc(a){var b,c;c=new erb(uu(jS,rKc,1,[SRc,TRc]));b=new erb(uu(jS,rKc,1,[VRc,WRc,XRc]));EIb(this,MIb(a,uu(mS,rKc,173,[c,b])))};_.Qd=function Uvc(a){var b,c;c=new erb(uu(jS,rKc,1,[YRc]));b=new erb(uu(jS,rKc,1,[ZRc]));FIb(this,MIb(a,uu(mS,rKc,173,[c,b])))};var Vvc;mU(1300,1,{},$vc);_.Rd=function _vc(){return hwc(),Yvc};_.Sd=function awc(){return iwc(),Zvc};var Yvc,Zvc;mU(1301,1,{},cwc);_.qc=function dwc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};mU(1302,1,{},fwc);_.qc=function gwc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};mU(1394,725,LLc,GGc);_.Od=function HGc(){vIb(this,HRc,new WMb((oNb(),gNb)));vIb(this,RRc,new XMb(aNb,new Ujb(1)))};var IGc;mU(1395,1,{},NGc);_.Rd=function OGc(){return WGc(),LGc};_.Sd=function PGc(){return XGc(),MGc};var LGc,MGc;mU(1396,1,{},RGc);_.qc=function SGc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};mU(1397,1,{},UGc);_.qc=function VGc(){return wSc};mU(1418,725,LLc,aIc);_.Od=function bIc(){vIb(this,HRc,new WMb((oNb(),gNb)));vIb(this,QSc,new XMb(aNb,new Ujb(0.001953125)));vIb(this,cTc,new XMb(aNb,new Ujb(0.35)))};var cIc;mU(1419,1,{},hIc);_.Rd=function iIc(){return qIc(),fIc};_.Sd=function jIc(){return rIc(),gIc};var fIc,gIc;mU(1420,1,{},lIc);_.qc=function mIc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};mU(1421,1,{},oIc);_.qc=function pIc(){return wSc};mU(1424,725,LLc,tIc);_.Od=function uIc(){vIb(this,HRc,new WMb((oNb(),gNb)))};var vIc;mU(1425,1,{},AIc);_.Rd=function BIc(){return JIc(),yIc};_.Sd=function CIc(){return KIc(),zIc};var yIc,zIc;mU(1426,1,{},EIc);_.qc=function FIc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};mU(1427,1,{},HIc);_.qc=function IIc(){return wSc};mU(1430,725,LLc,MIc);_.Od=function NIc(){vIb(this,SSc,new WMb((oNb(),gNb)));vIb(this,lSc,new XMb(iNb,new u5b(512,512)));vIb(this,_Sc,new XMb(iNb,new u5b(1,1)));vIb(this,wOc,new XMb(aNb,new Ujb(0.05)))};var OIc;mU(1431,1,{},TIc);_.Rd=function UIc(){return aJc(),RIc};_.Sd=function VIc(){return bJc(),SIc};var RIc,SIc;mU(1432,1,{},XIc);_.qc=function YIc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};mU(1433,1,{},$Ic);_.qc=function _Ic(){return wSc};mU(1436,725,LLc,dJc);_.Od=function eJc(){vIb(this,HRc,new WMb((oNb(),gNb)));vIb(this,RSc,new XMb(aNb,new Ujb(0.001953125)));vIb(this,cTc,new XMb(aNb,new Ujb(0.35)))};var fJc;mU(1437,1,{},kJc);_.Rd=function lJc(){return tJc(),iJc};_.Sd=function mJc(){return uJc(),jJc};var iJc,jJc;mU(1438,1,{},oJc);_.qc=function pJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};mU(1439,1,{},rJc);_.qc=function sJc(){return wSc};var AO=Ijb(YQc,'TerrainDynamic$DemoScene',1234),wO=Ijb(YQc,'TerrainDynamic$DemoScene$1',1235),xO=Ijb(YQc,'TerrainDynamic$DemoScene$2',1236),yO=Ijb(YQc,'TerrainDynamic$DemoScene$3',1237),zO=Ijb(YQc,'TerrainDynamic$DemoScene$4',1238),nR=Ijb(ySc,gTc,1430),lP=Ijb(OQc,'TerrainShader',1299),RQ=Ijb(ySc,'BleachBypassShader',1394),fR=Ijb(ySc,'HorizontalTiltShiftShader',1418),rR=Ijb(ySc,'VerticalTiltShiftShader',1436),DO=Ijb(YQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1239),BO=Ijb(YQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1240),CO=Ijb(YQc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1241),mR=Ijb(ySc,hTc,1431),kR=Ijb(ySc,iTc,1432),lR=Ijb(ySc,jTc,1433),kP=Ijb(OQc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1300),iP=Ijb(OQc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1301),jP=Ijb(OQc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1302),QQ=Ijb(ySc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1395),OQ=Ijb(ySc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1396),PQ=Ijb(ySc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1397),eR=Ijb(ySc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1419),cR=Ijb(ySc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1420),dR=Ijb(ySc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1421),qR=Ijb(ySc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1437),oR=Ijb(ySc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1438),pR=Ijb(ySc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1439),jR=Ijb(ySc,'LuminosityShader',1424),iR=Ijb(ySc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1425),gR=Ijb(ySc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1426),hR=Ijb(ySc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1427);kMc(Hi)(38);