function tnc(){}
function xnc(){}
function Anc(){}
function xqc(){}
function Bqc(){}
function Eqc(){}
function tqc(){tqc=TCc;sqc=new xqc}
function Gqc(){Gqc=TCc;vqc=new Bqc}
function Hqc(){Hqc=TCc;wqc=new Eqc}
function pnc(){pnc=TCc;onc=new tnc}
function Cnc(){Cnc=TCc;rnc=new xnc}
function Dnc(){Dnc=TCc;snc=new Anc}
function mnc(){vEb.call(this,(pnc(),onc))}
function oqc(){vEb.call(this,(tqc(),sqc))}
function Dec(){y4b.call(this);this.d=0;this.e=0}
function Hec(a,b){this.a=a;this.b=b}
function Cec(a,b){var c,d,e,f,g,i;d=new BJb(DJc);d.k=4;A0b(d.A,0.998,0.998);A0b(d.w,0.001,0.001);vJb(d,(zCb(),yCb));wJb(d,yCb);lJb(d,(aAb(),$zb));e=new BJb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');A0b(e.A,0.998,0.998);A0b(e.w,0.001,0.001);vJb(e,yCb);wJb(e,yCb);lJb(e,$zb);c=new BJb('./static/models/obj/leeperrysmith/Map-COL.jpg');A0b(c.A,0.998,0.998);A0b(c.w,0.001,0.001);vJb(c,yCb);wJb(c,yCb);lJb(c,$zb);g=new oqc;i=g.i;CIb(pu(i.a[GJc],168),(Lgb(),Lgb(),Kgb));CIb(pu(i.a[HJc],168),Kgb);CIb(pu(i.a[IJc],168),a.b.e);CIb(pu(i.a[JJc],168),c);CIb(pu(i.a[KJc],168),d);CIb(pu(i.a[LJc],168),e);y$b(pu(pu(i.a[MJc],168).d,230),10526880);y$b(pu(pu(i.a[NJc],168).d,230),10526880);y$b(pu(pu(i.a[OJc],168).d,230),10526880);CIb(pu(i.a[PJc],168),new Hhb(0.145));CIb(pu(i.a[QJc],168),new Hhb(0.75));CIb(pu(i.a[RJc],168),new Hhb(16));V1b(pu(pu(i.a[SJc],168).d,237),0.001,0.001,0.998,0.998);f=new RZb(g);f.c=true;a.c=new H2b(b,f);C0b(a.c.ab,-50);e1b(a.c.fb,100);a.c.Q=true;a.c.S=true;XKb(a.H,a.c)}
var GJc='enableBump',IJc='tBeckmann',PJc='uRoughness',QJc='uSpecularBrightness';DS(1082,1,rEc);_.Cb=function Aec(){v4b(this.b,new Dec(this.a))};DS(1083,940,{263:1},Dec);_.qb=function Eec(){var b,c,d,e,f,g,i,j;this.a=new _Lb(27,_Cb(this.G.n),1,10000);j1b(this.a.ab,1200);XKb(this.H,new PTb(5592405));f=new FUb(16777215,1.5,1000);f1b(f.ab,0,0,600);XKb(this.H,f);i=new QUb(1);f1b(i.ab,0.05,0.05,1);XKb(this.H,i);i.ab.uf(700);i.Q=true;i.t=true;i.H=2048;i.F=2048;i.A=200;i.w=1500;i.c=40;i.u=-0.005;i.C=0.15;b=new pUb(16777215,0.85);f1b(b.ab,1,-0.5,1);x$b(b.K,0.6,0.3,1);XKb(this.H,b);b.ab.uf(500);b.Q=true;b.H=2048;b.F=2048;b.A=200;b.w=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.u=-0.005;b.C=0.15;c=new pUb(16777215,0.85);f1b(c.ab,1,-0.5,-1);XKb(this.H,c);new dzc(new mnc);d=new dzc(new Szc);d.a=true;j=new $Jb(512,512);pJb(j,(hBb(),bBb));nJb(j,(YAb(),WAb));lJb(j,(aAb(),$zb));j.f=false;this.b=new Vyc(this.G.n,j);e=new Orc;try{Crc(e,EJc,new Hec(this,e))}catch(a){a=IR(a);if(su(a,46)){MKb();LU(LKb,(Yrb(),Wrb),FJc)}else throw HR(a)}mDb(this.G.n,5001561,1);g=new QCb(this.G.n,this.H);g.f=false;this.G.n.R=false;this.G.n.T=true;this.G.n.U=true;this.G.n.W=true};_.rb=function Fec(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){x0b(this.c.db,0.05*(b-this.c.db.d));w0b(this.c.db,0.05*(c-this.c.db.c))}YCb(this.G.n);eDb(this.G.n,this.H,this.a,null,false)};_.d=0;_.e=0;DS(1084,1,{},Hec);_.Ef=function Iec(){Cec(this.a,this.b.a)};DS(1203,709,fEc,mnc);_.Ld=function nnc(){};var onc;DS(1204,1,{},tnc);_.Od=function unc(){return Cnc(),rnc};_.Pd=function vnc(){return Dnc(),snc};var rnc,snc;DS(1205,1,{},xnc);_.fc=function ync(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};DS(1206,1,{},Anc);_.fc=function Bnc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};DS(1274,709,fEc,oqc);_.Ld=function pqc(){qEb(this,_Ib());qEb(this,aJb());qEb(this,bJb());jEb(this,GJc,new EIb((XIb(),MIb),nib(0)));jEb(this,HJc,new EIb(MIb,nib(0)));jEb(this,JJc,new DIb(PIb));jEb(this,IJc,new DIb(PIb));jEb(this,NJc,new EIb(IIb,new B$b(15658734)));jEb(this,OJc,new EIb(IIb,new B$b(1118481)));jEb(this,MJc,new EIb(IIb,new B$b(328965)));jEb(this,TJc,new EIb(JIb,new Hhb(1)));jEb(this,PJc,new EIb(JIb,new Hhb(0.15)));jEb(this,QJc,new EIb(JIb,new Hhb(0.75)));jEb(this,KJc,new DIb(PIb));jEb(this,RJc,new EIb(JIb,new Hhb(1)));jEb(this,LJc,new DIb(PIb));jEb(this,SJc,new EIb(VIb,new Z1b(0,0,1,1)));jEb(this,'uWrapRGB',new EIb(TIb,new m1b(0.75,0.375,0.1875)))};_.Md=function qqc(a){var b,c;c=new Tob(fu(BQ,YCc,1,[UJc,VJc,WJc]));b=new Tob(fu(BQ,YCc,1,[XJc,YJc,ZJc]));sEb(this,AEb(a,fu(EQ,YCc,120,[c,b])))};_.Nd=function rqc(a){var b,c;c=new Tob(fu(BQ,YCc,1,[$Jc]));b=new Tob(fu(BQ,YCc,1,[_Jc]));tEb(this,AEb(a,fu(EQ,YCc,120,[c,b])))};var sqc;DS(1275,1,{},xqc);_.Od=function yqc(){return Gqc(),vqc};_.Pd=function zqc(){return Hqc(),wqc};var vqc,wqc;DS(1276,1,{},Bqc);_.fc=function Cqc(){return '#define USE_BUMPMAP\n#extension GL_OES_standard_derivatives : enable\n\nuniform bool enableBump;\nuniform bool enableSpecular;\n\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uOpacity;\n\nuniform float uRoughness;\nuniform float uSpecularBrightness;\n\nuniform vec3 uWrapRGB;\n\nuniform sampler2D tDiffuse;\nuniform sampler2D tBeckmann;\n\nuniform sampler2D specularMap;\n\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\nvarying vec3 vViewPosition;\n\n[*]\n\n// Fresnel term\n\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\n\n\tfloat base = 1.0 - dot( V, H );\n\tfloat exponential = pow( base, 5.0 );\n\n\treturn exponential + F0 * ( 1.0 - exponential );\n\n}\n\n// Kelemen/Szirmay-Kalos specular BRDF\n\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\n\t\t\t\t\t\tfloat m,  \t// Roughness\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\n\t\t\t\t\t\t) {\n\n\tfloat result = 0.0;\n\tfloat ndotl = dot( N, L );\n\n\tif( ndotl > 0.0 ) {\n\n\t\tvec3 h = L + V; // Unnormalized half-way vector\n\t\tvec3 H = normalize( h );\n\n\t\tfloat ndoth = dot( N, H );\n\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\n\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\n\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\n\n\t}\n\n\treturn result;\n\n}\n\nvoid main() {\n\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\n\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\n\tcolDiffuse.rgb *= colDiffuse.rgb;\n\n\tgl_FragColor = gl_FragColor * colDiffuse;\n\n\tvec3 normal = normalize( vNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\n\tfloat specularStrength;\n\n\tif ( enableSpecular ) {\n\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\t\tspecularStrength = texelSpecular.r;\n\n\t} else {\n\n\t\tspecularStrength = 1.0;\n\n\t}\n\n\t#ifdef USE_BUMPMAP\n\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n\t#endif\n\n\t// point lights\n\n\tvec3 specularTotal = vec3( 0.0 );\n\n\t#if MAX_POINT_LIGHTS > 0\n\n\t\tvec3 pointTotal = vec3( 0.0 );\n\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\t\tfloat lDistance = 1.0;\n\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\n\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\n\n\t\t\tpointTotal    += lDistance * uDiffuseColor * pointLightColor[ i ] * pointDiffuseWeight;\n\t\t\tspecularTotal += lDistance * uSpecularColor * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\n\n\t\t}\n\n\t#endif\n\n\t// directional lights\n\t\t\t\t\n\t#if MAX_DIR_LIGHTS > 0\n\n\t\tvec3 dirTotal = vec3( 0.0 );\n\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\n\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\n\n\t\t\tdirTotal \t   += uDiffuseColor * directionalLightColor[ i ] * dirDiffuseWeight;\n\t\t\tspecularTotal += uSpecularColor * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\n\n\t\t}\n\n\t#endif\n\n\t// hemisphere lights\n\n\t#if MAX_HEMI_LIGHTS > 0\n\n\t\tvec3 hemiTotal = vec3( 0.0 );\n\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\t\themiTotal += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t\t// specular (sky light)\n\n\t\t\tfloat hemiSpecularWeight = 0.0;\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\n\n\t\t\t// specular (ground light)\n\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\n\n\t\t\tspecularTotal += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\n\n\t\t}\n\n\t#endif\n\n\t// all lights contribution summation\n\n\tvec3 totalLight = vec3( 0.0 );\n\n\t#if MAX_DIR_LIGHTS > 0\n\t\ttotalLight += dirTotal;\n\t#endif\n\n\t#if MAX_POINT_LIGHTS > 0\n\t\ttotalLight += pointTotal;\n\t#endif\n\n\t#if MAX_HEMI_LIGHTS > 0\n\t\ttotalLight += hemiTotal;\n\t#endif\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * uAmbientColor ) + specularTotal;\n\n[*]\n\n}'};DS(1277,1,{},Eqc);_.fc=function Fqc(){return 'uniform vec4 offsetRepeat;\n\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nvarying vec3 vViewPosition;\n\n[*]\n\nvoid main() {\n\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n\n\tvViewPosition = -mvPosition.xyz;\n\n\tvNormal = normalMatrix * normal;\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n[*]\n\n}\n'};var zL=vhb(cJc,'MaterialsBumpmapSkin$DemoScene',1083),yL=vhb(cJc,'MaterialsBumpmapSkin$DemoScene$1',1084),IN=vhb(XIc,'BeckmannShader',1203),HN=vhb(XIc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1204),FN=vhb(XIc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1205),GN=vhb(XIc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1206),XN=vhb(XIc,'SkinSimpleShader',1274),WN=vhb(XIc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1275),UN=vhb(XIc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1276),VN=vhb(XIc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1277);EEc(ti)(19);