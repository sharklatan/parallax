function anc(){}
function enc(){}
function hnc(){}
function Sqc(){}
function Wqc(){}
function Zqc(){}
function nzc(){}
function rzc(){}
function uzc(){}
function JAc(){}
function NAc(){}
function QAc(){}
function QBc(){}
function aBc(){}
function eBc(){}
function hBc(){}
function tBc(){}
function xBc(){}
function ABc(){}
function MBc(){}
function TBc(){}
function YTb(a,b){a.s=b}
function DUb(a,b){a.b=b}
function P2b(a,b){a.g=b}
function Tyc(a,b){job(a.b,b)}
function arc(){arc=TCc;Rqc=new Zqc}
function Oqc(){Oqc=TCc;Nqc=new Sqc}
function _qc(){_qc=TCc;Qqc=new Wqc}
function Ymc(){Ymc=TCc;Xmc=new anc}
function YAc(){YAc=TCc;XAc=new aBc}
function FAc(){FAc=TCc;EAc=new JAc}
function SAc(){SAc=TCc;HAc=new NAc}
function TAc(){TAc=TCc;IAc=new QAc}
function jBc(){jBc=TCc;$Ac=new eBc}
function jnc(){jnc=TCc;$mc=new enc}
function knc(){knc=TCc;_mc=new hnc}
function kBc(){kBc=TCc;_Ac=new hBc}
function pBc(){pBc=TCc;oBc=new tBc}
function CBc(){CBc=TCc;rBc=new xBc}
function DBc(){DBc=TCc;sBc=new ABc}
function IBc(){IBc=TCc;HBc=new MBc}
function VBc(){VBc=TCc;KBc=new QBc}
function WBc(){WBc=TCc;LBc=new TBc}
function jzc(){jzc=TCc;izc=new nzc}
function wzc(){wzc=TCc;lzc=new rzc}
function xzc(){xzc=TCc;mzc=new uzc}
function Mmc(a,b){this.a=a;this.b=b}
function Pmc(a,b){this.a=a;this.b=b}
function Smc(a,b){this.a=a;this.b=b}
function Vmc(a,b){this.a=a;this.b=b}
function VAc(){vEb.call(this,(YAc(),XAc))}
function CAc(){vEb.call(this,(FAc(),EAc))}
function Jqc(){vEb.call(this,(Oqc(),Nqc))}
function gzc(){vEb.call(this,(jzc(),izc))}
function mBc(){vEb.call(this,(pBc(),oBc))}
function FBc(){vEb.call(this,(IBc(),HBc))}
function Fmc(a){a.w+=1;a.w==3&&eLb(a.v,true)}
function Gmc(){y4b.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Emc(a,b,c,d){var e,f,g;g=new RZb(b);CIb(pu(MNb(eVb(g).i,JJc),168),c);f=new z3b;e=new H2b(new mSb(a.u,a.t),g);j1b(e.ab,-500);XKb(f,e);eDb(a.G.n,f,a.c,d,true)}
function Dmc(a,b,c,d,e,f){var g,i;g=new bYb;XXb(g,new B$b(16755285));g.i=true;_Xb(g,(ZVb(),WVb));i=new R2b(b,g);i.b=c;P2b(i,xu(600*Oib()));f1b(i.ab,d,e,f);C0b(i.db,1.5707963267948966);i.Q=true;i.S=true;XKb(a.H,i);job(a.n,i);v3b(a.H,a.G.n)}
var fLc='enableDiffuse1',gLc='enableDiffuse2',$Kc='h',aLc='heightMap',kLc='heightmap',mLc='r',eLc='tDetail',cLc='tDiffuse1',dLc='tDiffuse2',iLc='uRepeatOverlay',_Kc='v';DS(1192,1,rEc);_.Cb=function Bmc(){v4b(this.b,new Gmc(this.a))};DS(1193,940,{43:1,133:1,275:1},Gmc);_.Td=function Hmc(a){Fmc(this)};_.Id=function Imc(a){this.u=a.a.o;this.t=a.a.n;CIb(pu(MNb(eVb(this.f.b).i,$Kc),168),new Hhb(6/this.u));CIb(pu(MNb(eVb(this.D.b).i,_Kc),168),new Hhb(6/this.t))};_.qb=function Jmc(){var b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w;ct((svb(),rvb),(Cvb(),Bvb),this);this.b=new _Lb(40,_Cb(this.G.n),2,4000);this.u=this.G.n.o;this.t=this.G.n.n;this.c=new QLb(this.u,this.t,-10000,10000);f1b(this.b.ab,-1200,800,1200);j1b(this.c.ab,100);this.s=new z3b;XKb(this.s,this.c);this.d=new xub(this.b,this.G.b);e1b(this.d.v,0);this.d.s=1;this.d.A=1.2;uub(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;rub(this.d,0.15);y3b(this.H,new l3b(328965,2000,4000));x$b(this.H.b.c,0.102,0.9,0.825);XKb(this.H,new PTb(1118481));this.e=new pUb(16777215,1.15);f1b(this.e.ab,500,2000,0);XKb(this.H,this.e);this.q=new FUb(16729088,1.5,0);e1b(this.q.ab,0);XKb(this.H,this.q);this.g=new $Jb(256,256);pJb(this.g,(hBb(),cBb));nJb(this.g,(YAb(),WAb));lJb(this.g,(aAb(),$zb));this.o=new $Jb(256,256);pJb(this.o,cBb);nJb(this.o,WAb);lJb(this.o,$zb);p=new mBc;w=p.i;CIb(pu(w.a[MGc],168),new Hhb(0.05));A0b(pu(pu(w.a[wKc],168).d,234),256,256);CIb(pu(w.a[aLc],168),this.g);u=new $Jb(2048,2048);pJb(u,cBb);nJb(u,WAb);lJb(u,$zb);vJb(u,(zCb(),yCb));wJb(u,yCb);d=new CJb('./static/textures/terrain/grasslight-big.jpg',new Mmc(this,u));vJb(d,yCb);wJb(d,yCb);e=new CJb('./static/textures/terrain/backgrounddetailed6.jpg',this);vJb(e,yCb);wJb(e,yCb);c=new CJb('./static/textures/terrain/grasslight-big-nm.jpg',this);vJb(c,yCb);wJb(c,yCb);v=new Jqc;this.B=v.i;CIb(pu(MNb(this.B,qKc),168),this.o);CIb(pu(MNb(this.B,rKc),168),new Hhb(3.5));CIb(pu(MNb(this.B,bLc),168),this.g);CIb(pu(MNb(this.B,cLc),168),d);CIb(pu(MNb(this.B,dLc),168),e);CIb(pu(MNb(this.B,sKc),168),u);CIb(pu(MNb(this.B,eLc),168),c);CIb(pu(MNb(this.B,fLc),168),(Lgb(),Lgb(),Kgb));CIb(pu(MNb(this.B,gLc),168),Kgb);CIb(pu(MNb(this.B,HJc),168),Kgb);y$b(pu(pu(MNb(this.B,NJc),168).d,230),16777215);y$b(pu(pu(MNb(this.B,OJc),168).d,230),16777215);y$b(pu(pu(MNb(this.B,MJc),168).d,230),1118481);CIb(pu(MNb(this.B,vKc),168),new Hhb(30));CIb(pu(MNb(this.B,hLc),168),new Hhb(375));A0b(pu(pu(MNb(this.B,iLc),168).d,234),6,6);this.A=new $qb;zmb(this.A,zKc,new EIb((XIb(),JIb),new Hhb(1)));zmb(this.A,jLc,new EIb(RIb,new E0b(1.5,1.5)));zmb(this.A,cKc,new EIb(RIb,new E0b(0,0)));this.k=new $qb;k=new QZb((Ymc(),Xmc));qEb(eVb(k),this.A);k.c=false;k.b=true;zmb(this.k,kLc,k);n=new RZb(p);qEb(eVb(n),w);n.c=false;n.b=true;zmb(this.k,lLc,n);o=new RZb(v);qEb(eVb(o),this.B);o.c=true;o.b=true;zmb(this.k,'terrain',o);q=new mSb(this.u,this.t);r=new lXb;gXb(r,new B$b(0));this.r=new H2b(q,r);j1b(this.r.ab,-500);XKb(this.s,this.r);i=new nSb(6000,6000,64,64);CMb(i,Lgb());FMb(i);EMb(i);this.v=new H2b(i,o);f1b(this.v.ab,0,-125,0);B0b(this.v.db,-1.5707963267948966);eLb(this.v,false);XKb(this.H,this.v);lDb(this.G.n,this.H.b.c);this.G.n.T=true;this.G.n.U=true;this.G.n.R=false;s=new azc(this.H,this.b);g=new Nyc(0.6);f=new dzc(new gzc);CIb(pu(MNb(eVb(f.b).i,gKc),168),new Hhb(0.65));this.f=new dzc(new CAc);this.D=new dzc(new FBc);CIb(pu(MNb(eVb(this.f.b).i,$Kc),168),new Hhb(6/this.u));CIb(pu(MNb(eVb(this.D.b).i,_Kc),168),new Hhb(6/this.t));CIb(pu(MNb(eVb(this.f.b).i,mLc),168),new Hhb(0.5));CIb(pu(MNb(eVb(this.D.b).i,mLc),168),new Hhb(0.5));this.D.a=true;t=new $Jb(this.u,this.t);pJb(u,bBb);nJb(u,WAb);lJb(u,$zb);u.f=false;b=new Vyc(this.G.n,t);job(b.b,s);job(b.b,g);job(b.b,f);Tyc(b,this.f);Tyc(b,this.D);j=new Orc;this.n=new tob;try{Crc(j,'./static/models/animated/parrot.js',new Pmc(this,j));Crc(j,ZKc,new Smc(this,j));Crc(j,'./static/models/animated/stork.js',new Vmc(this,j))}catch(a){a=IR(a);if(su(a,46)){MKb();LU(LKb,(Yrb(),Wrb),FJc)}else throw HR(a)}v3b(this.H,this.G.n);this.p=nh()};_.rb=function Kmc(a){var b,c,d,e,f;b=(nh()-this.p)*0.001;if(this.v.jb){vub(this.d);this.j=J$b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;x$b(this.H.b.c,0.1,e,this.j);lDb(this.G.n,this.H.b.c);YTb(this.e,0.1+f*1.0499999999999998);DUb(this.q,0.9+f*0.6);CIb(pu(MNb(this.B,rKc),168),new Hhb(0.6+f*2.9));if(this.C){this.a=J$b(this.a+-7.5E-4,0,0.05);CIb(pu(umb(this.A,zKc),168),new Hhb(pu(pu(umb(this.A,zKc),168).d,98).a+b*this.a));w0b(pu(pu(umb(this.A,cKc),168).d,234),b*0.05);B0b(pu(pu(MNb(this.B,nLc),168).d,234),4*pu(pu(umb(this.A,cKc),168).d,234).c);nTb(this.r,pu(umb(this.k,kLc),218));eDb(this.G.n,this.s,this.c,this.g,true);nTb(this.r,pu(umb(this.k,lLc),218));eDb(this.G.n,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=pu(mob(this.n,c),243);Q2b(d,xu(1000*b));w0b(d.ab,d.b*b);d.ab.c>2000&&B0b(d.ab,-1500-Oib()*500)}eDb(this.G.n,this.H,this.b,null,false)}this.p=nh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;DS(1194,1,{},Mmc);_.Td=function Nmc(a){Fmc(this.a);Emc(this.a,new VAc,a,this.b)};DS(1195,1,{},Pmc);_.Ef=function Qmc(){var a;a=this.b.a;Hrc(this.b);Dmc(this.a,a,500,-3500,500,700);Dmc(this.a,a,500,-3000-Oib()*500,500,-200);Dmc(this.a,a,500,-3000-Oib()*500,500,200);Dmc(this.a,a,500,-3000-Oib()*500,500,1000)};DS(1196,1,{},Smc);_.Ef=function Tmc(){var a;a=this.b.a;Hrc(this.b);Dmc(this.a,a,1000,-3000-Oib()*500,350,40)};DS(1197,1,{},Vmc);_.Ef=function Wmc(){var a;a=this.b.a;Hrc(this.b);Dmc(this.a,a,1000,-3000-Oib()*500,350,340)};var Xmc;DS(1198,1,{},anc);_.Od=function bnc(){return jnc(),$mc};_.Pd=function cnc(){return knc(),_mc};var $mc,_mc;DS(1199,1,{},enc);_.fc=function fnc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};DS(1200,1,{},hnc);_.fc=function inc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};DS(1280,709,fEc,Jqc);_.Ld=function Kqc(){qEb(this,_Ib());qEb(this,aJb());qEb(this,bJb());jEb(this,fLc,new EIb((XIb(),MIb),(Lgb(),Lgb(),Jgb)));jEb(this,gLc,new EIb(MIb,Jgb));jEb(this,HJc,new EIb(MIb,Jgb));jEb(this,oLc,new EIb(MIb,Jgb));jEb(this,cLc,new DIb(PIb));jEb(this,dLc,new DIb(PIb));jEb(this,eLc,new DIb(PIb));jEb(this,qKc,new DIb(PIb));jEb(this,sKc,new DIb(PIb));jEb(this,bLc,new DIb(PIb));jEb(this,rKc,new EIb(JIb,new Hhb(1)));jEb(this,pLc,new EIb(JIb,new Hhb(0)));jEb(this,hLc,new EIb(JIb,new Hhb(1)));jEb(this,NJc,new EIb(IIb,new B$b(15658734)));jEb(this,OJc,new EIb(IIb,new B$b(1118481)));jEb(this,MJc,new EIb(IIb,new B$b(328965)));jEb(this,vKc,new EIb(JIb,new Hhb(30)));jEb(this,TJc,new EIb(JIb,new Hhb(1)));jEb(this,'uRepeatBase',new EIb(RIb,new E0b(1,1)));jEb(this,iLc,new EIb(RIb,new E0b(1,1)));jEb(this,nLc,new EIb(RIb,new E0b(0,0)))};_.Md=function Lqc(a){var b,c;c=new Tob(fu(BQ,YCc,1,[UJc,VJc]));b=new Tob(fu(BQ,YCc,1,[XJc,YJc,ZJc]));sEb(this,AEb(a,fu(EQ,YCc,120,[c,b])))};_.Nd=function Mqc(a){var b,c;c=new Tob(fu(BQ,YCc,1,[$Jc]));b=new Tob(fu(BQ,YCc,1,[_Jc]));tEb(this,AEb(a,fu(EQ,YCc,120,[c,b])))};var Nqc;DS(1281,1,{},Sqc);_.Od=function Tqc(){return _qc(),Qqc};_.Pd=function Uqc(){return arc(),Rqc};var Qqc,Rqc;DS(1282,1,{},Wqc);_.fc=function Xqc(){return 'uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\n\nuniform bool enableDiffuse1;\nuniform bool enableDiffuse2;\nuniform bool enableSpecular;\n\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nuniform sampler2D tDetail;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tDisplacement;\n\nuniform float uNormalScale;\n\nuniform vec2 uRepeatOverlay;\nuniform vec2 uRepeatBase;\n\nuniform vec2 uOffset;\n\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\nvarying vec3 vViewPosition;\n\n[*]\n\nvoid main() {\n\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\n\n\tvec3 specularTex = vec3( 1.0 );\n\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\n\tvec2 uvBase = uRepeatBase * vUv;\n\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\n\tnormalTex.xy *= uNormalScale;\n\tnormalTex = normalize( normalTex );\n\n\tif( enableDiffuse1 && enableDiffuse2 ) {\n\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\n\n\t\t#ifdef GAMMA_INPUT\n\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\n\n\t\t#endif\n\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\n\n\t } else if( enableDiffuse1 ) {\n\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\n\n\t} else if( enableDiffuse2 ) {\n\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\n\n\t}\n\n\tif( enableSpecular )\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\n\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\n\tvec3 finalNormal = tsb * normalTex;\n\n\tvec3 normal = normalize( finalNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\n\t// point lights\n\n\t#if MAX_POINT_LIGHTS > 0\n\n\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\tvec3 pointSpecular = vec3( 0.0 );\n\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat pointDistance = lDistance;\n\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\n\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n\n\t\t}\n\n\t#endif\n\n\t// directional lights\n\n\t#if MAX_DIR_LIGHTS > 0\n\n\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\tvec3 dirSpecular = vec3( 0.0 );\n\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n\n\t\t\tdirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\n\t\t\tdirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n\n\t\t}\n\n\t#endif\n\n\t// hemisphere lights\n\n\t#if MAX_HEMI_LIGHTS > 0\n\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\n\t\tvec3 hemiSpecular = vec3( 0.0 );\n\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\n\n\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\t\themiDiffuse += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t\t// specular (sky light)\n\n\t\t\tfloat hemiSpecularWeight = 0.0;\n\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\n\n\t\t\t// specular (ground light)\n\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\n\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n\n\t\t\themiSpecular += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\n\n\t\t}\n\n\t#endif\n\n\t// all lights contribution summation\n\n\tvec3 totalDiffuse = vec3( 0.0 );\n\tvec3 totalSpecular = vec3( 0.0 );\n\n\t#if MAX_DIR_LIGHTS > 0\n\n\t\ttotalDiffuse += dirDiffuse;\n\t\ttotalSpecular += dirSpecular;\n\n\t#endif\n\n\t#if MAX_HEMI_LIGHTS > 0\n\n\t\ttotalDiffuse += hemiDiffuse;\n\t\ttotalSpecular += hemiSpecular;\n\n\t#endif\n\n\t#if MAX_POINT_LIGHTS > 0\n\n\t\ttotalDiffuse += pointDiffuse;\n\t\ttotalSpecular += pointSpecular;\n\n\t#endif\n\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n\n[*]\n}'};DS(1283,1,{},Zqc);_.fc=function $qc(){return 'attribute vec4 tangent;\n\nuniform vec2 uRepeatBase;\n\nuniform sampler2D tNormal;\n\n#ifdef VERTEX_TEXTURES\n\n\tuniform sampler2D tDisplacement;\n\tuniform float uDisplacementScale;\n\tuniform float uDisplacementBias;\n\n#endif\n\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nvarying vec3 vViewPosition;\n\n[*]\n\nvoid main() {\n\n\tvNormal = normalize( normalMatrix * normal );\n\n\t// tangent and binormal vectors\n\n\tvTangent = normalize( normalMatrix * tangent.xyz );\n\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\n\tvBinormal = normalize( vBinormal );\n\n\t// texture coordinates\n\n\tvUv = uv;\n\n\tvec2 uvBase = uv * uRepeatBase;\n\n\t// displacement mapping\n\n\t#ifdef VERTEX_TEXTURES\n\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\n\t\tvec3 displacedPosition = normal * df + position;\n\n\t\tvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n\n\t#else\n\n\t\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\tvViewPosition = -mvPosition.xyz;\n\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\n\tvNormal = normalMatrix * normalTex;\n\n\t[*]\n\n}\n'};DS(1347,709,fEc,gzc);_.Ld=function hzc(){jEb(this,JJc,new DIb((XIb(),PIb)));jEb(this,gKc,new EIb(JIb,new Hhb(1)))};var izc;DS(1348,1,{},nzc);_.Od=function ozc(){return wzc(),lzc};_.Pd=function pzc(){return xzc(),mzc};var lzc,mzc;DS(1349,1,{},rzc);_.fc=function szc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};DS(1350,1,{},uzc);_.fc=function vzc(){return HKc};DS(1371,709,fEc,CAc);_.Ld=function DAc(){jEb(this,JJc,new DIb((XIb(),PIb)));jEb(this,$Kc,new EIb(JIb,new Hhb(0.001953125)));jEb(this,mLc,new EIb(JIb,new Hhb(0.35)))};var EAc;DS(1372,1,{},JAc);_.Od=function KAc(){return SAc(),HAc};_.Pd=function LAc(){return TAc(),IAc};var HAc,IAc;DS(1373,1,{},NAc);_.fc=function OAc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};DS(1374,1,{},QAc);_.fc=function RAc(){return HKc};DS(1377,709,fEc,VAc);_.Ld=function WAc(){jEb(this,JJc,new DIb((XIb(),PIb)))};var XAc;DS(1378,1,{},aBc);_.Od=function bBc(){return jBc(),$Ac};_.Pd=function cBc(){return kBc(),_Ac};var $Ac,_Ac;DS(1379,1,{},eBc);_.fc=function fBc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};DS(1380,1,{},hBc);_.fc=function iBc(){return HKc};DS(1383,709,fEc,mBc);_.Ld=function nBc(){jEb(this,aLc,new DIb((XIb(),PIb)));jEb(this,wKc,new EIb(RIb,new E0b(512,512)));jEb(this,jLc,new EIb(RIb,new E0b(1,1)));jEb(this,MGc,new EIb(JIb,new Hhb(0.05)))};var oBc;DS(1384,1,{},tBc);_.Od=function uBc(){return CBc(),rBc};_.Pd=function vBc(){return DBc(),sBc};var rBc,sBc;DS(1385,1,{},xBc);_.fc=function yBc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};DS(1386,1,{},ABc);_.fc=function BBc(){return HKc};DS(1389,709,fEc,FBc);_.Ld=function GBc(){jEb(this,JJc,new DIb((XIb(),PIb)));jEb(this,_Kc,new EIb(JIb,new Hhb(0.001953125)));jEb(this,mLc,new EIb(JIb,new Hhb(0.35)))};var HBc;DS(1390,1,{},MBc);_.Od=function NBc(){return VBc(),KBc};_.Pd=function OBc(){return WBc(),LBc};var KBc,LBc;DS(1391,1,{},QBc);_.fc=function RBc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};DS(1392,1,{},TBc);_.fc=function UBc(){return HKc};var AN=vhb(fJc,'TerrainDynamic$DemoScene',1193),wN=vhb(fJc,'TerrainDynamic$DemoScene$1',1194),xN=vhb(fJc,'TerrainDynamic$DemoScene$2',1195),yN=vhb(fJc,'TerrainDynamic$DemoScene$3',1196),zN=vhb(fJc,'TerrainDynamic$DemoScene$4',1197),HP=vhb(JKc,qLc,1383),_N=vhb(XIc,'TerrainShader',1280),jP=vhb(JKc,'BleachBypassShader',1347),zP=vhb(JKc,'HorizontalTiltShiftShader',1371),LP=vhb(JKc,'VerticalTiltShiftShader',1389),DN=vhb(fJc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1198),BN=vhb(fJc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1199),CN=vhb(fJc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1200),GP=vhb(JKc,rLc,1384),EP=vhb(JKc,sLc,1385),FP=vhb(JKc,tLc,1386),$N=vhb(XIc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1281),YN=vhb(XIc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1282),ZN=vhb(XIc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1283),iP=vhb(JKc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1348),gP=vhb(JKc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1349),hP=vhb(JKc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1350),yP=vhb(JKc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1372),wP=vhb(JKc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1373),xP=vhb(JKc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1374),KP=vhb(JKc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1390),IP=vhb(JKc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1391),JP=vhb(JKc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1392),DP=vhb(JKc,'LuminosityShader',1377),CP=vhb(JKc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1378),AP=vhb(JKc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1379),BP=vhb(JKc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1380);EEc(ti)(41);