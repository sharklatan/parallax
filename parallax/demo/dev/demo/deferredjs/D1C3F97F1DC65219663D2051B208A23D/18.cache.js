function Zqc(){}
function brc(){}
function erc(){}
function quc(){}
function uuc(){}
function xuc(){}
function hic(a){this.a=a}
function hrc(){hrc=PGc;Yqc=new erc}
function grc(){grc=PGc;Xqc=new brc}
function Vqc(){Vqc=PGc;Uqc=new Zqc}
function muc(){muc=PGc;luc=new quc}
function zuc(){zuc=PGc;ouc=new uuc}
function Auc(){Auc=PGc;puc=new xuc}
function huc(){oHb.call(this,(muc(),luc))}
function Sqc(){oHb.call(this,(Vqc(),Uqc))}
function dic(){N7b.call(this);this.d=0;this.e=0}
function cic(a,b){var c,d,e,f,g,i;d=new iMb(WNc);d.k=4;s3b(d.B,0.998,0.998);s3b(d.A,0.001,0.001);cMb(d,(uEb(),tEb));dMb(d,tEb);SLb(d,(nBb(),lBb));e=new iMb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');s3b(e.B,0.998,0.998);s3b(e.A,0.001,0.001);cMb(e,tEb);dMb(e,tEb);SLb(e,lBb);c=new iMb('./static/models/obj/leeperrysmith/Map-COL.jpg');s3b(c.B,0.998,0.998);s3b(c.A,0.001,0.001);cMb(c,tEb);dMb(c,tEb);SLb(c,lBb);g=new huc;i=g.i;hLb(qu(i.a[YNc],225),(Ghb(),Ghb(),Fhb));hLb(qu(i.a[ZNc],225),Fhb);hLb(qu(i.a[$Nc],225),a.b.e);hLb(qu(i.a[_Nc],225),c);hLb(qu(i.a[aOc],225),d);hLb(qu(i.a[bOc],225),e);m1b(qu(qu(i.a[cOc],225).d,293),10526880);m1b(qu(qu(i.a[dOc],225).d,293),10526880);m1b(qu(qu(i.a[eOc],225).d,293),10526880);hLb(qu(i.a[fOc],225),new Fib(0.145));hLb(qu(i.a[gOc],225),new Fib(0.75));hLb(qu(i.a[hOc],225),new Fib(16));T4b(qu(qu(i.a[iOc],225).d,301),0.001,0.001,0.998,0.998);f=new B0b(g);f.c=true;a.c=new H5b(b,f);u3b(a.c._,-50);c4b(a.c.eb,100);KNb(a.c,true);a.c.U=true;FNb(a.F,a.c)}
var YNc='enableBump',$Nc='tBeckmann',fOc='uRoughness',gOc='uSpecularBrightness';bT(1110,1,xIc);_.zb=function aic(){n7b(this.b,new dic(this.a))};bT(1111,965,{323:1},dic);_.nb=function eic(){var a,b,c,d,e,f,g;this.a=new FOb(27,rFb(this.D.k),1,10000);f4b(this.a._,1200);FNb(this.F,new eWb(5592405));d=new ZWb(16777215,1.5,1000);d4b(d._,0,0,600);FNb(this.F,d);f=new fXb(1);d4b(f._,0.05,0.05,1);FNb(this.F,f);f._.kf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new HWb(16777215,0.85);d4b(a._,1,-0.5,1);l1b(a.L,0.6,1,0.85);FNb(this.F,a);a._.kf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new HWb(16777215,0.85);d4b(b._,1,-0.5,-1);FNb(this.F,b);new UEc(new Sqc);c=new UEc(new oFc);c.a=true;g=new FMb(512,512);XLb(g,(cDb(),YCb));VLb(g,(TCb(),RCb));SLb(g,(nBb(),lBb));g.f=false;this.b=new KEc(this.D.k,g);new pvc(XNc,new hic(this));PFb(this.D.k,new p1b(5001561),1);e=new IEb(this.D.k,this.F);e.g=false;LFb(this.D.k,false);this.D.k.ab=true;this.D.k.bb=true};_.ob=function fic(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){v1b(this.c.cb,0.05*(b-this.c.cb.d));u1b(this.c.cb,0.05*(c-this.c.cb.c))}lFb(this.D.k);DFb(this.D.k,this.F,this.a,null,false)};_.d=0;_.e=0;bT(1112,1,{},hic);_.xf=function iic(a,b){cic(this.a,qu(b,241))};bT(1231,729,kIc,Sqc);_.Jd=function Tqc(){};var Uqc;bT(1232,1,{},Zqc);_.Md=function $qc(){return grc(),Xqc};_.Nd=function _qc(){return hrc(),Yqc};var Xqc,Yqc;bT(1233,1,{},brc);_.mc=function crc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};bT(1234,1,{},erc);_.mc=function frc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};bT(1309,729,kIc,huc);_.Jd=function iuc(){jHb(this,GLb());jHb(this,HLb());jHb(this,ILb());cHb(this,YNc,new jLb((CLb(),rLb),ljb(0)));cHb(this,ZNc,new jLb(rLb,ljb(0)));cHb(this,_Nc,new iLb(uLb));cHb(this,$Nc,new iLb(uLb));cHb(this,dOc,new jLb(nLb,new p1b(15658734)));cHb(this,eOc,new jLb(nLb,new p1b(1118481)));cHb(this,cOc,new jLb(nLb,new p1b(328965)));cHb(this,jOc,new jLb(oLb,new Fib(1)));cHb(this,fOc,new jLb(oLb,new Fib(0.15)));cHb(this,gOc,new jLb(oLb,new Fib(0.75)));cHb(this,aOc,new iLb(uLb));cHb(this,hOc,new jLb(oLb,new Fib(1)));cHb(this,bOc,new iLb(uLb));cHb(this,iOc,new jLb(ALb,new X4b(0,0,1,1)));cHb(this,'uWrapRGB',new jLb(yLb,new j4b(0.75,0.375,0.1875)))};_.Kd=function juc(a){var b,c;c=new Qpb(gu($Q,UGc,1,[kOc,lOc,mOc]));b=new Qpb(gu($Q,UGc,1,[nOc,oOc,pOc]));lHb(this,tHb(a,gu(bR,UGc,173,[c,b])))};_.Ld=function kuc(a){var b,c;c=new Qpb(gu($Q,UGc,1,[qOc]));b=new Qpb(gu($Q,UGc,1,[rOc]));mHb(this,tHb(a,gu(bR,UGc,173,[c,b])))};var luc;bT(1310,1,{},quc);_.Md=function ruc(){return zuc(),ouc};_.Nd=function suc(){return Auc(),puc};var ouc,puc;bT(1311,1,{},uuc);_.mc=function vuc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};bT(1312,1,{},xuc);_.mc=function yuc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var $L=tib(mNc,'MaterialsBumpmapSkin$DemoScene',1111),ZL=tib(mNc,'MaterialsBumpmapSkin$DemoScene$1',1112),fO=tib(fNc,'BeckmannShader',1231),eO=tib(fNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1232),cO=tib(fNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1233),dO=tib(fNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1234),uO=tib(fNc,'SkinSimpleShader',1309),tO=tib(fNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1310),rO=tib(fNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1311),sO=tib(fNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1312);KIc(xi)(18);