function Qpc(){}
function Upc(){}
function Xpc(){}
function xAc(){}
function BAc(){}
function EAc(){}
function fhc(){F4b.call(this)}
function Jpc(){CEb.call(this,(Mpc(),Lpc))}
function qAc(){CEb.call(this,(tAc(),sAc))}
function tAc(){tAc=$Cc;sAc=new xAc}
function GAc(){GAc=$Cc;vAc=new BAc}
function HAc(){HAc=$Cc;wAc=new EAc}
function Mpc(){Mpc=$Cc;Lpc=new Qpc}
function Zpc(){Zpc=$Cc;Opc=new Upc}
function $pc(){$pc=$Cc;Ppc=new Xpc}
function Xyc(){this.c=new YZb(new qAc);JIb(Cu(TNb(lVb(this.c).j,OKc),168),(Sgb(),Sgb(),Qgb));JIb(Cu(TNb(lVb(this.c).j,PKc),168),new Ohb(0.35));JIb(Cu(TNb(lVb(this.c).j,QKc),168),new Ohb(0.95));JIb(Cu(TNb(lVb(this.c).j,RKc),168),uib(2048));this.f=true;this.g=true}
var OKc='grayscale',PKc='nIntensity',RKc='sCount',QKc='sIntensity',IKc='texture1',JKc='texture2';PS(1111,1,zEc);_.Gb=function dhc(){C4b(this.c,new fhc(this.b))};PS(1112,934,wEc,fhc);_.Ld=function ghc(a){I0b(Cu(Cu(TNb(this.e,HKc),168).e,234),a.b.p);J0b(Cu(Cu(TNb(this.e,HKc),168).e,234),a.b.o)};_.rb=function hhc(){var a,b,c,d,e,f,g;qt((zvb(),yvb),(Jvb(),Ivb),this);this.b=new gMb(35,gDb(this.H.o),1,3000);q1b(this.b.bb,4);d=new YZb(new Jpc);this.e=lVb(d).j;f=new IJb('./static/textures/lava/cloud.png');CJb(f,(GCb(),FCb));DJb(f,FCb);JIb(Cu(TNb(this.e,IKc),168),f);g=new IJb(wKc);CJb(g,FCb);DJb(g,FCb);JIb(Cu(TNb(this.e,JKc),168),g);this.c=new O2b(new HSb(0.65,0.3,30,30),d);I0b(this.c.eb,0.3);cLb(this.I,this.c);a=new _yc(this.H.o);e=new hzc(this.I,this.b);b=new Uyc(1.25);c=new Xyc;c.b=true;qob(a.c,e);qob(a.c,b);qob(a.c,c);this.H.o.S=false;this.d=xh()};_.sb=function ihc(a){var b;b=(xh()-this.d)*0.001*5;JIb(Cu(TNb(this.e,KKc),168),new Ohb(Cu(Cu(TNb(this.e,KKc),168).e,98).b+0.2*b));D0b(this.c.eb,0.05*b);E0b(this.c.eb,0.0125*b);dDb(this.H.o);this.d=xh();lDb(this.H.o,this.I,this.b,null,false)};_.d=0;PS(1255,703,nEc,Jpc);_.Od=function Kpc(){qEb(this,LKc,new LIb((cJb(),QIb),new Ohb(0.45)));qEb(this,MKc,new LIb($Ib,new t1b(0,0,0)));qEb(this,KKc,new LIb(QIb,new Ohb(1)));qEb(this,HKc,new LIb(YIb,new K0b));qEb(this,NKc,new LIb(YIb,new L0b(3,1)));qEb(this,IKc,new KIb(WIb));qEb(this,JKc,new KIb(WIb))};var Lpc;PS(1256,1,{},Qpc);_.Rd=function Rpc(){return Zpc(),Opc};_.Sd=function Spc(){return $pc(),Ppc};var Opc,Ppc;PS(1257,1,{},Upc);_.ic=function Vpc(){return 'uniform float time;\nuniform vec2 resolution;\n\nuniform float fogDensity;\nuniform vec3 fogColor;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\n\nvarying vec2 vUv;\n\nvoid main( void ) {\n\n\tvec2 position = -1.0 + 2.0 * vUv;\n\n\tvec4 noise = texture2D( texture1, vUv );\n\tvec2 T1 = vUv + vec2( 1.5, -1.5 ) * time  *0.02;\n\tvec2 T2 = vUv + vec2( -0.5, 2.0 ) * time * 0.01;\n\n\tT1.x += noise.x * 2.0;\n\tT1.y += noise.y * 2.0;\n\tT2.x -= noise.y * 0.2;\n\tT2.y += noise.z * 0.2;\n\n\tfloat p = texture2D( texture1, T1 * 2.0 ).a;\n\n\tvec4 color = texture2D( texture2, T2 * 2.0 );\n\tvec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );\n\n\tif( temp.r > 1.0 ){ temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }\n\tif( temp.g > 1.0 ){ temp.rb += temp.g - 1.0; }\n\tif( temp.b > 1.0 ){ temp.rg += temp.b - 1.0; }\n\n\tgl_FragColor = temp;\n\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\tconst float LOG2 = 1.442695;\n\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n}\n'};PS(1258,1,{},Xpc);_.ic=function Ypc(){return 'uniform vec2 uvScale;\nvarying vec2 vUv;\n\nvoid main()\n{\n\n\tvUv = uvScale * uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n}'};PS(1336,1335,LEc,Xyc);_.Og=function Yyc(a,b,c){JIb(Cu(TNb(lVb(this.c).j,UJc),168),a.e);JIb(Cu(TNb(lVb(this.c).j,KKc),168),new Ohb(Cu(Cu(TNb(lVb(this.c).j,KKc),168).e,98).b+b));uTb(a.d,this.c);this.b?lDb(a.o,a.p,a.b,null,false):lDb(a.o,a.p,a.b,a.i,false)};_.b=false;PS(1359,703,nEc,qAc);_.Od=function rAc(){qEb(this,UJc,new KIb((cJb(),WIb)));qEb(this,KKc,new LIb(QIb,new Ohb(0)));qEb(this,PKc,new LIb(QIb,new Ohb(0.5)));qEb(this,QKc,new LIb(QIb,new Ohb(0.05)));qEb(this,RKc,new LIb(TIb,uib(4096)));qEb(this,OKc,new LIb(TIb,(Sgb(),Sgb(),Rgb)))};var sAc;PS(1360,1,{},xAc);_.Rd=function yAc(){return GAc(),vAc};_.Sd=function zAc(){return HAc(),wAc};var vAc,wAc;PS(1361,1,{},BAc);_.ic=function CAc(){return '// control parameter\r\nuniform float time;\r\n\r\nuniform bool grayscale;\r\n\r\n// noise effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float nIntensity;\r\n\r\n// scanlines effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float sIntensity;\r\n\r\n// scanlines effect count value (0 = no effect, 4096 = full effect)\r\nuniform float sCount;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\t// sample the source\r\n\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\r\n\r\n\t// make some noise\r\n\tfloat x = vUv.x * vUv.y * time *  1000.0;\r\n\tx = mod( x, 13.0 ) * mod( x, 123.0 );\r\n\tfloat dx = mod( x, 0.01 );\r\n\r\n\t// add noise\r\n\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\r\n\r\n\t// get us a sine and cosine\r\n\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\r\n\r\n\t// add scanlines\r\n\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\r\n\r\n\t// interpolate between source and result by intensity\r\n\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\r\n\r\n\t// convert to grayscale if desired\r\n\tif( grayscale ) {\r\n\r\n\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\r\n\r\n\t}\r\n\r\n\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\r\n\r\n}\r\n'};PS(1362,1,{},EAc);_.ic=function FAc(){return SKc};var qM=Chb(nJc,'MaterialsShaderLava$DemoScene',1112),mP=Chb(TKc,'FilmPass',1336),$N=Chb(gJc,'LavaShader',1255),HP=Chb(UKc,'FilmShader',1359),ZN=Chb(gJc,'LavaShader_Resources_default_InlineClientBundleGenerator',1256),XN=Chb(gJc,'LavaShader_Resources_default_InlineClientBundleGenerator$1',1257),YN=Chb(gJc,'LavaShader_Resources_default_InlineClientBundleGenerator$2',1258),GP=Chb(UKc,'FilmShader_Resources_default_InlineClientBundleGenerator',1360),EP=Chb(UKc,'FilmShader_Resources_default_InlineClientBundleGenerator$1',1361),FP=Chb(UKc,'FilmShader_Resources_default_InlineClientBundleGenerator$2',1362);MEc(Di)(34);