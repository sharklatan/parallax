function kvc(){}
function ovc(){}
function rvc(){}
function Txc(){}
function Xxc(){}
function $xc(){}
function Flc(a){this.b=a}
function tvc(){tvc=zMc;ivc=new ovc}
function gvc(){gvc=zMc;fvc=new kvc}
function uvc(){uvc=zMc;jvc=new rvc}
function Pxc(){Pxc=zMc;Oxc=new Txc}
function ayc(){ayc=zMc;Rxc=new Xxc}
function byc(){byc=zMc;Sxc=new $xc}
function Kxc(){GJb.call(this,(Pxc(),Oxc))}
function dvc(){GJb.call(this,(gvc(),fvc))}
function Blc(){Cbc.call(this);this.e=0;this.f=0}
function Alc(a,b){var c,d,e,f,g,i;d=new VOb(TTc);d.n=4;p7b(d.C,0.998,0.998);p7b(d.B,0.001,0.001);POb(d,(vGb(),uGb));QOb(d,uGb);DOb(d,(oDb(),mDb));e=new VOb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');p7b(e.C,0.998,0.998);p7b(e.B,0.001,0.001);POb(e,uGb);QOb(e,uGb);DOb(e,mDb);c=new VOb('./static/models/obj/leeperrysmith/Map-COL.jpg');p7b(c.C,0.998,0.998);p7b(c.B,0.001,0.001);POb(c,uGb);QOb(c,uGb);DOb(c,mDb);g=new Kxc;i=g.j;UNb(Lv(i.b[VTc],226),(Ajb(),Ajb(),zjb));UNb(Lv(i.b[WTc],226),zjb);UNb(Lv(i.b[XTc],226),a.c.f);UNb(Lv(i.b[YTc],226),c);UNb(Lv(i.b[ZTc],226),d);UNb(Lv(i.b[$Tc],226),e);b5b(Lv(Lv(i.b[_Tc],226).e,298),10526880);b5b(Lv(Lv(i.b[aUc],226).e,298),10526880);b5b(Lv(Lv(i.b[bUc],226).e,298),10526880);UNb(Lv(i.b[cUc],226),new zkb(0.145));UNb(Lv(i.b[dUc],226),new zkb(0.75));UNb(Lv(i.b[eUc],226),new zkb(16));T8b(Lv(Lv(i.b[fUc],226).e,306),0.001,0.001,0.998,0.998);f=new l4b(g);f.d=true;a.d=new rZb(b,f);r7b(a.d.ab,-50);c8b(a.d.fb,100);vQb(a.d,true);a.d.V=true;qQb(a.I,a.d)}
var VTc='enableBump',XTc='tBeckmann',cUc='uRoughness',dUc='uSpecularBrightness';PV(1131,1,lOc);_.Qb=function ylc(){cbc(this.c,new Blc(this.b))};PV(1132,984,{328:1},Blc);_.ob=function Clc(){var a,b,c,d,e,f,g;this.b=new uRb(27,zGb(this.H.n),1,10000);f8b(this.b.ab,1200);qQb(this.I,new JZb(5592405));d=new G$b(16777215,1.5,1000);d8b(d.ab,0,0,600);qQb(this.I,d);f=new P$b(1);d8b(f.ab,0.05,0.05,1);qQb(this.I,f);f.ab.uf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new l$b(16777215,0.85);d8b(a.ab,1,-0.5,1);a5b(a.M,0.6,1,0.85);qQb(this.I,a);a.ab.uf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new l$b(16777215,0.85);d8b(b.ab,1,-0.5,-1);qQb(this.I,b);new RIc(new dvc);c=new RIc(new EJc);c.b=true;g=new qPb(512,512);IOb(g,(dFb(),ZEb));GOb(g,(UEb(),SEb));DOb(g,(oDb(),mDb));g.g=false;this.c=new HIc(this.H.n,g);new lzc(UTc,new Flc(this));fIb(this.H.n,new f5b(5001561),1);e=new aHb(this.H.n,this.I);e.i=false;AGb(this.H.n,false);this.H.n.Y=true;this.H.n.Z=true};_.pb=function Dlc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){l5b(this.d.db,0.05*(b-this.d.db.e));k5b(this.d.db,0.05*(c-this.d.db.d))}FHb(this.H.n,true);XHb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;PV(1133,1,{},Flc);_.Ff=function Glc(a,b){Alc(this.b,Lv(b,243))};PV(1268,736,ZNc,dvc);_.Od=function evc(){};var fvc;PV(1269,1,{},kvc);_.Rd=function lvc(){return tvc(),ivc};_.Sd=function mvc(){return uvc(),jvc};var ivc,jvc;PV(1270,1,{},ovc);_.qc=function pvc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};PV(1271,1,{},rvc);_.qc=function svc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};PV(1317,736,ZNc,Kxc);_.Od=function Lxc(){BJb(this,rOb());BJb(this,sOb());BJb(this,tOb());uJb(this,VTc,new WNb((nOb(),cOb),flb(0)));uJb(this,WTc,new WNb(cOb,flb(0)));uJb(this,YTc,new VNb(fOb));uJb(this,XTc,new VNb(fOb));uJb(this,aUc,new WNb($Nb,new f5b(15658734)));uJb(this,bUc,new WNb($Nb,new f5b(1118481)));uJb(this,_Tc,new WNb($Nb,new f5b(328965)));uJb(this,gUc,new WNb(_Nb,new zkb(1)));uJb(this,cUc,new WNb(_Nb,new zkb(0.15)));uJb(this,dUc,new WNb(_Nb,new zkb(0.75)));uJb(this,ZTc,new VNb(fOb));uJb(this,eUc,new WNb(_Nb,new zkb(1)));uJb(this,$Tc,new VNb(fOb));uJb(this,fUc,new WNb(lOb,new X8b(0,0,1,1)));uJb(this,'uWrapRGB',new WNb(jOb,new j8b(0.75,0.375,0.1875)))};_.Pd=function Mxc(a){var b,c;c=new Mrb(Bv(LT,FMc,1,[hUc,iUc,jUc]));b=new Mrb(Bv(LT,FMc,1,[kUc,lUc,mUc]));DJb(this,LJb(a,Bv(OT,FMc,173,[c,b])))};_.Qd=function Nxc(a){var b,c;c=new Mrb(Bv(LT,FMc,1,[nUc]));b=new Mrb(Bv(LT,FMc,1,[oUc]));EJb(this,LJb(a,Bv(OT,FMc,173,[c,b])))};var Oxc;PV(1318,1,{},Txc);_.Rd=function Uxc(){return ayc(),Rxc};_.Sd=function Vxc(){return byc(),Sxc};var Rxc,Sxc;PV(1319,1,{},Xxc);_.qc=function Yxc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};PV(1320,1,{},$xc);_.qc=function _xc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var ON=nkb(jTc,'MaterialsBumpmapSkin$DemoScene',1132),NN=nkb(jTc,'MaterialsBumpmapSkin$DemoScene$1',1133),iQ=nkb(cTc,'BeckmannShader',1268),hQ=nkb(cTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1269),fQ=nkb(cTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1270),gQ=nkb(cTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1271),JQ=nkb(cTc,'SkinSimpleShader',1317),IQ=nkb(cTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1318),GQ=nkb(cTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1319),HQ=nkb(cTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1320);zOc(Oj)(18);