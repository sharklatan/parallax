function $sc(){}
function ctc(){}
function ftc(){}
function Hvc(){}
function Lvc(){}
function Ovc(){}
function Tjc(a){this.b=a}
function htc(){htc=nKc;Ysc=new ctc}
function itc(){itc=nKc;Zsc=new ftc}
function Wsc(){Wsc=nKc;Vsc=new $sc}
function Dvc(){Dvc=nKc;Cvc=new Hvc}
function Qvc(){Qvc=nKc;Fvc=new Lvc}
function Rvc(){Rvc=nKc;Gvc=new Ovc}
function yvc(){IIb.call(this,(Dvc(),Cvc))}
function Tsc(){IIb.call(this,(Wsc(),Vsc))}
function Pjc(){P9b.call(this);this.e=0;this.f=0}
function Ojc(a,b){var c,d,e,f,g,i;d=new XNb(DRc);d.n=4;r5b(d.C,0.998,0.998);r5b(d.B,0.001,0.001);RNb(d,(OFb(),NFb));SNb(d,NFb);FNb(d,(HCb(),FCb));e=new XNb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');r5b(e.C,0.998,0.998);r5b(e.B,0.001,0.001);RNb(e,NFb);SNb(e,NFb);FNb(e,FCb);c=new XNb('./static/models/obj/leeperrysmith/Map-COL.jpg');r5b(c.C,0.998,0.998);r5b(c.B,0.001,0.001);RNb(c,NFb);SNb(c,NFb);FNb(c,FCb);g=new yvc;i=g.j;WMb(Fu(i.b[FRc],225),(Xib(),Xib(),Wib));WMb(Fu(i.b[GRc],225),Wib);WMb(Fu(i.b[HRc],225),a.c.f);WMb(Fu(i.b[IRc],225),c);WMb(Fu(i.b[JRc],225),d);WMb(Fu(i.b[KRc],225),e);l3b(Fu(Fu(i.b[LRc],225).e,293),10526880);l3b(Fu(Fu(i.b[MRc],225).e,293),10526880);l3b(Fu(Fu(i.b[NRc],225).e,293),10526880);WMb(Fu(i.b[ORc],225),new Wjb(0.145));WMb(Fu(i.b[PRc],225),new Wjb(0.75));WMb(Fu(i.b[QRc],225),new Wjb(16));T6b(Fu(Fu(i.b[RRc],225).e,301),0.001,0.001,0.998,0.998);f=new A2b(g);f.d=true;a.d=new H7b(b,f);t5b(a.d.ab,-50);c6b(a.d.fb,100);xPb(a.d,true);a.d.V=true;sPb(a.I,a.d)}
var FRc='enableBump',HRc='tBeckmann',ORc='uRoughness',PRc='uSpecularBrightness';nU(1115,1,$Lc);_.Db=function Mjc(){p9b(this.c,new Pjc(this.b))};nU(1116,968,{323:1},Pjc);_.ob=function Qjc(){var a,b,c,d,e,f,g;this.b=new vQb(27,LGb(this.H.n),1,10000);f6b(this.b.ab,1200);sPb(this.I,new aYb(5592405));d=new WYb(16777215,1.5,1000);d6b(d.ab,0,0,600);sPb(this.I,d);f=new cZb(1);d6b(f.ab,0.05,0.05,1);sPb(this.I,f);f.ab.rf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new DYb(16777215,0.85);d6b(a.ab,1,-0.5,1);k3b(a.M,0.6,1,0.85);sPb(this.I,a);a.ab.rf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new DYb(16777215,0.85);d6b(b.ab,1,-0.5,-1);sPb(this.I,b);new FGc(new Tsc);c=new FGc(new sHc);c.b=true;g=new sOb(512,512);KNb(g,(wEb(),qEb));INb(g,(lEb(),jEb));FNb(g,(HCb(),FCb));g.g=false;this.c=new vGc(this.H.n,g);new _wc(ERc,new Tjc(this));hHb(this.H.n,new o3b(5001561),1);e=new aGb(this.H.n,this.I);e.i=false;dHb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function Rjc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){u3b(this.d.db,0.05*(b-this.d.db.e));t3b(this.d.db,0.05*(c-this.d.db.d))}EGb(this.H.n,true);XGb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;nU(1117,1,{},Tjc);_.Df=function Ujc(a,b){Ojc(this.b,Fu(b,242))};nU(1245,726,NLc,Tsc);_.Od=function Usc(){};var Vsc;nU(1246,1,{},$sc);_.Rd=function _sc(){return htc(),Ysc};_.Sd=function atc(){return itc(),Zsc};var Ysc,Zsc;nU(1247,1,{},ctc);_.qc=function dtc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};nU(1248,1,{},ftc);_.qc=function gtc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};nU(1294,726,NLc,yvc);_.Od=function zvc(){DIb(this,tNb());DIb(this,uNb());DIb(this,vNb());wIb(this,FRc,new YMb((pNb(),eNb),Ckb(0)));wIb(this,GRc,new YMb(eNb,Ckb(0)));wIb(this,IRc,new XMb(hNb));wIb(this,HRc,new XMb(hNb));wIb(this,MRc,new YMb(aNb,new o3b(15658734)));wIb(this,NRc,new YMb(aNb,new o3b(1118481)));wIb(this,LRc,new YMb(aNb,new o3b(328965)));wIb(this,SRc,new YMb(bNb,new Wjb(1)));wIb(this,ORc,new YMb(bNb,new Wjb(0.15)));wIb(this,PRc,new YMb(bNb,new Wjb(0.75)));wIb(this,JRc,new XMb(hNb));wIb(this,QRc,new YMb(bNb,new Wjb(1)));wIb(this,KRc,new XMb(hNb));wIb(this,RRc,new YMb(nNb,new X6b(0,0,1,1)));wIb(this,'uWrapRGB',new YMb(lNb,new j6b(0.75,0.375,0.1875)))};_.Pd=function Avc(a){var b,c;c=new frb(vu(kS,tKc,1,[TRc,URc,VRc]));b=new frb(vu(kS,tKc,1,[WRc,XRc,YRc]));FIb(this,NIb(a,vu(nS,tKc,173,[c,b])))};_.Qd=function Bvc(a){var b,c;c=new frb(vu(kS,tKc,1,[ZRc]));b=new frb(vu(kS,tKc,1,[$Rc]));GIb(this,NIb(a,vu(nS,tKc,173,[c,b])))};var Cvc;nU(1295,1,{},Hvc);_.Rd=function Ivc(){return Qvc(),Fvc};_.Sd=function Jvc(){return Rvc(),Gvc};var Fvc,Gvc;nU(1296,1,{},Lvc);_.qc=function Mvc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};nU(1297,1,{},Ovc);_.qc=function Pvc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var uM=Kjb(WQc,'MaterialsBumpmapSkin$DemoScene',1116),sM=Kjb(WQc,'MaterialsBumpmapSkin$DemoScene$1',1117),JO=Kjb(PQc,'BeckmannShader',1245),IO=Kjb(PQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1246),GO=Kjb(PQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1247),HO=Kjb(PQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1248),iP=Kjb(PQc,'SkinSimpleShader',1294),hP=Kjb(PQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1295),fP=Kjb(PQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1296),gP=Kjb(PQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1297);mMc(Hi)(18);