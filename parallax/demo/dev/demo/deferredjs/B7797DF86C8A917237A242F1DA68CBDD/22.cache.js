function VIb(){}
function ZIb(){}
function aJb(){}
function cJb(){cJb=ZGc;TIb=new ZIb}
function dJb(){dJb=ZGc;UIb=new aJb}
function RIb(){RIb=ZGc;QIb=new VIb}
function OIb(){yHb.call(this,(RIb(),QIb))}
function Ijc(){X7b.call(this);this.c=0;this.d=0}
fT(749,731,uIc,OIb);_.Jd=function PIb(){mHb(this,'mRefractionRatio',new tLb((MLb(),yLb),new Pib(1.02)));mHb(this,'mFresnelBias',new tLb(yLb,new Pib(0.1)));mHb(this,'mFresnelPower',new tLb(yLb,new Pib(2)));mHb(this,'mFresnelScale',new tLb(yLb,new Pib(1)));mHb(this,JOc,new sLb(ELb))};var QIb;fT(750,1,{},VIb);_.Md=function WIb(){return cJb(),TIb};_.Nd=function XIb(){return dJb(),UIb};var TIb,UIb;fT(751,1,{},ZIb);_.mc=function $Ib(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};fT(752,1,{},aJb);_.mc=function bJb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};fT(1132,1,HIc);_.zb=function Gjc(){x7b(this.b,new Ijc(this.a))};fT(1133,967,{327:1},Ijc);_.nb=function Jjc(){var a,b,c,d,e,f,g,i,j;this.a=new POb(60,BFb(this.D.k),1,100000);p4b(this.a._,3200);this.b=new POb(60,BFb(this.D.k),1,100000);this.e=new D6b;a=new gVb(100,32,16);j=new BMb('./static/textures/cube/park2/*.jpg');aMb(j,(xBb(),vBb));g=new OIb;rLb(su(lQb(g.i,JOc),225),j);c=new L0b(g);this.f=new Cpb;for(b=0;b<500;b++){e=new R5b(a,c);D3b(e._,Wjb()*10000-5000);E3b(e._,Wjb()*10000-5000);p4b(e._,Wjb()*10000-5000);m4b(e.eb,Wjb()*3+1);PNb(this.F,e);spb(this.f,e)}this.F.W=false;i=new $Hb;rLb(su(lQb(i.i,JOc),225),j);f=new L0b(i);QXb(f,(BZb(),yZb));d=new R5b(new rUb(100000,100000,100000),f);PNb(this.e,d);VFb(this.D.k,false)};_.ob=function Kjc(a){var b,c,d,e;e=1.0E-4*a;y3b(this.a._,(this.c-this.a._.c)*0.05);z3b(this.a._,(-this.d-this.a._.d)*0.05);lOb(this.a,this.F._);G1b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=su(vpb(this.f,b),304);D3b(d._,5000*Math.cos(e+b));E3b(d._,5000*Math.sin(e+b*1.1))}vFb(this.D.k);NFb(this.D.k,this.e,this.b,null,false);NFb(this.D.k,this.F,this.a,null,false)};_.c=0;_.d=0;var xM=Dib(yNc,'MaterialsCubemapFresnel$DemoScene',1133),$F=Dib(KOc,'FresnelShader',749),ZF=Dib(KOc,'FresnelShader_Resources_default_InlineClientBundleGenerator',750),XF=Dib(KOc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',751),YF=Dib(KOc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',752);UIc(xi)(22);