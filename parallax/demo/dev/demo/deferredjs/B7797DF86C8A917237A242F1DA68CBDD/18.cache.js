function hrc(){}
function lrc(){}
function orc(){}
function Auc(){}
function Euc(){}
function Huc(){}
function ric(a){this.a=a}
function rrc(){rrc=ZGc;grc=new orc}
function drc(){drc=ZGc;crc=new hrc}
function qrc(){qrc=ZGc;frc=new lrc}
function wuc(){wuc=ZGc;vuc=new Auc}
function Juc(){Juc=ZGc;yuc=new Euc}
function Kuc(){Kuc=ZGc;zuc=new Huc}
function ruc(){yHb.call(this,(wuc(),vuc))}
function arc(){yHb.call(this,(drc(),crc))}
function nic(){X7b.call(this);this.d=0;this.e=0}
function mic(a,b){var c,d,e,f,g,i;d=new sMb(gOc);d.k=4;C3b(d.B,0.998,0.998);C3b(d.A,0.001,0.001);mMb(d,(EEb(),DEb));nMb(d,DEb);aMb(d,(xBb(),vBb));e=new sMb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');C3b(e.B,0.998,0.998);C3b(e.A,0.001,0.001);mMb(e,DEb);nMb(e,DEb);aMb(e,vBb);c=new sMb('./static/models/obj/leeperrysmith/Map-COL.jpg');C3b(c.B,0.998,0.998);C3b(c.A,0.001,0.001);mMb(c,DEb);nMb(c,DEb);aMb(c,vBb);g=new ruc;i=g.i;rLb(su(i.a[iOc],225),(Qhb(),Qhb(),Phb));rLb(su(i.a[jOc],225),Phb);rLb(su(i.a[kOc],225),a.b.e);rLb(su(i.a[lOc],225),c);rLb(su(i.a[mOc],225),d);rLb(su(i.a[nOc],225),e);w1b(su(su(i.a[oOc],225).d,293),10526880);w1b(su(su(i.a[pOc],225).d,293),10526880);w1b(su(su(i.a[qOc],225).d,293),10526880);rLb(su(i.a[rOc],225),new Pib(0.145));rLb(su(i.a[sOc],225),new Pib(0.75));rLb(su(i.a[tOc],225),new Pib(16));b5b(su(su(i.a[uOc],225).d,301),0.001,0.001,0.998,0.998);f=new L0b(g);f.c=true;a.c=new R5b(b,f);E3b(a.c._,-50);m4b(a.c.eb,100);UNb(a.c,true);a.c.U=true;PNb(a.F,a.c)}
var iOc='enableBump',kOc='tBeckmann',rOc='uRoughness',sOc='uSpecularBrightness';fT(1112,1,HIc);_.zb=function kic(){x7b(this.b,new nic(this.a))};fT(1113,967,{323:1},nic);_.nb=function oic(){var a,b,c,d,e,f,g;this.a=new POb(27,BFb(this.D.k),1,10000);p4b(this.a._,1200);PNb(this.F,new oWb(5592405));d=new hXb(16777215,1.5,1000);n4b(d._,0,0,600);PNb(this.F,d);f=new pXb(1);n4b(f._,0.05,0.05,1);PNb(this.F,f);f._.kf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new RWb(16777215,0.85);n4b(a._,1,-0.5,1);v1b(a.L,0.6,1,0.85);PNb(this.F,a);a._.kf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new RWb(16777215,0.85);n4b(b._,1,-0.5,-1);PNb(this.F,b);new cFc(new arc);c=new cFc(new yFc);c.a=true;g=new PMb(512,512);fMb(g,(mDb(),gDb));dMb(g,(bDb(),_Cb));aMb(g,(xBb(),vBb));g.f=false;this.b=new UEc(this.D.k,g);new zvc(hOc,new ric(this));ZFb(this.D.k,new z1b(5001561),1);e=new SEb(this.D.k,this.F);e.g=false;VFb(this.D.k,false);this.D.k.ab=true;this.D.k.bb=true};_.ob=function pic(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){F1b(this.c.cb,0.05*(b-this.c.cb.d));E1b(this.c.cb,0.05*(c-this.c.cb.c))}vFb(this.D.k);NFb(this.D.k,this.F,this.a,null,false)};_.d=0;_.e=0;fT(1114,1,{},ric);_.xf=function sic(a,b){mic(this.a,su(b,241))};fT(1233,731,uIc,arc);_.Jd=function brc(){};var crc;fT(1234,1,{},hrc);_.Md=function irc(){return qrc(),frc};_.Nd=function jrc(){return rrc(),grc};var frc,grc;fT(1235,1,{},lrc);_.mc=function mrc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};fT(1236,1,{},orc);_.mc=function prc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};fT(1311,731,uIc,ruc);_.Jd=function suc(){tHb(this,QLb());tHb(this,RLb());tHb(this,SLb());mHb(this,iOc,new tLb((MLb(),BLb),vjb(0)));mHb(this,jOc,new tLb(BLb,vjb(0)));mHb(this,lOc,new sLb(ELb));mHb(this,kOc,new sLb(ELb));mHb(this,pOc,new tLb(xLb,new z1b(15658734)));mHb(this,qOc,new tLb(xLb,new z1b(1118481)));mHb(this,oOc,new tLb(xLb,new z1b(328965)));mHb(this,vOc,new tLb(yLb,new Pib(1)));mHb(this,rOc,new tLb(yLb,new Pib(0.15)));mHb(this,sOc,new tLb(yLb,new Pib(0.75)));mHb(this,mOc,new sLb(ELb));mHb(this,tOc,new tLb(yLb,new Pib(1)));mHb(this,nOc,new sLb(ELb));mHb(this,uOc,new tLb(KLb,new f5b(0,0,1,1)));mHb(this,'uWrapRGB',new tLb(ILb,new t4b(0.75,0.375,0.1875)))};_.Kd=function tuc(a){var b,c;c=new $pb(iu(cR,cHc,1,[wOc,xOc,yOc]));b=new $pb(iu(cR,cHc,1,[zOc,AOc,BOc]));vHb(this,DHb(a,iu(fR,cHc,173,[c,b])))};_.Ld=function uuc(a){var b,c;c=new $pb(iu(cR,cHc,1,[COc]));b=new $pb(iu(cR,cHc,1,[DOc]));wHb(this,DHb(a,iu(fR,cHc,173,[c,b])))};var vuc;fT(1312,1,{},Auc);_.Md=function Buc(){return Juc(),yuc};_.Nd=function Cuc(){return Kuc(),zuc};var yuc,zuc;fT(1313,1,{},Euc);_.mc=function Fuc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};fT(1314,1,{},Huc);_.mc=function Iuc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var cM=Dib(yNc,'MaterialsBumpmapSkin$DemoScene',1113),bM=Dib(yNc,'MaterialsBumpmapSkin$DemoScene$1',1114),jO=Dib(rNc,'BeckmannShader',1233),iO=Dib(rNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1234),gO=Dib(rNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1235),hO=Dib(rNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1236),yO=Dib(rNc,'SkinSimpleShader',1311),xO=Dib(rNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1312),vO=Dib(rNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1313),wO=Dib(rNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1314);UIc(xi)(18);