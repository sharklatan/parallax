function Kvc(){}
function Ovc(){}
function Rvc(){}
function hAc(){}
function lAc(){}
function oAc(){}
function Olc(a){this.b=a}
function Gvc(){Gvc=iRc;Fvc=new Kvc}
function Tvc(){Tvc=iRc;Ivc=new Ovc}
function Uvc(){Uvc=iRc;Jvc=new Rvc}
function dAc(){dAc=iRc;cAc=new hAc}
function qAc(){qAc=iRc;fAc=new lAc}
function rAc(){rAc=iRc;gAc=new oAc}
function $zc(){nKb.call(this,(dAc(),cAc))}
function Dvc(){nKb.call(this,(Gvc(),Fvc))}
function Klc(){pbc.call(this);this.e=0;this.f=0}
function Jlc(a,b){var c,d,e,f,g,i;d=new CPb(DYc);d.n=4;U6b(d.C,0.998,0.998);U6b(d.B,0.001,0.001);wPb(d,(sHb(),rHb));xPb(d,rHb);kPb(d,(NDb(),LDb));e=new CPb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');U6b(e.C,0.998,0.998);U6b(e.B,0.001,0.001);wPb(e,rHb);xPb(e,rHb);kPb(e,LDb);c=new CPb(FYc);U6b(c.C,0.998,0.998);U6b(c.B,0.001,0.001);wPb(c,rHb);xPb(c,rHb);kPb(c,LDb);g=new $zc;i=g.j;BOb(Wu(i.b[GYc],227),(Wjb(),Wjb(),Vjb));BOb(Wu(i.b[HYc],227),Vjb);BOb(Wu(i.b[IYc],227),a.c.g);BOb(Wu(i.b[JYc],227),c);BOb(Wu(i.b[KYc],227),d);BOb(Wu(i.b[LYc],227),e);O4b(Wu(Wu(i.b[MYc],227).e,294),10526880);O4b(Wu(Wu(i.b[NYc],227).e,294),10526880);O4b(Wu(Wu(i.b[OYc],227).e,294),10526880);BOb(Wu(i.b[PYc],227),new Vkb(0.145));BOb(Wu(i.b[QYc],227),new Vkb(0.75));BOb(Wu(i.b[RYc],227),new Vkb(16));u8b(Wu(Wu(i.b[SYc],227).e,302),0.001,0.001,0.998,0.998);f=new b4b(g);f.d=true;a.d=new i9b(b,f);W6b(a.d.ab,-50);F7b(a.d.fb,100);cRb(a.d,true);a.d.V=true;ZQb(a.I,a.d)}
var GYc='enableBump',IYc='tBeckmann',PYc='uRoughness',QYc='uSpecularBrightness';rV(1121,1,VSc);_.Db=function Hlc(){Rac(this.c,new Klc(this.b))};rV(1122,975,{324:1},Klc);_.ob=function Llc(){var a,b,c,d,e,f,g;this.b=new $Rb(27,qIb(this.H.n),1,10000);I7b(this.b.ab,1200);ZQb(this.I,new DZb(5592405));d=new x$b(16777215,1.5,1000);G7b(d.ab,0,0,600);ZQb(this.I,d);f=new F$b(1);G7b(f.ab,0.05,0.05,1);ZQb(this.I,f);f.ab.tf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new e$b(16777215,0.85);G7b(a.ab,1,-0.5,1);N4b(a.M,0.6,1,0.85);ZQb(this.I,a);a.ab.tf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new e$b(16777215,0.85);G7b(b.ab,1,-0.5,-1);ZQb(this.I,b);new rLc(new Dvc);c=new rLc(new AMc);c.b=true;g=new ZPb(512,512);pPb(g,(aGb(),WFb));nPb(g,(RFb(),PFb));kPb(g,(NDb(),LDb));g.g=false;this.c=new gLc(this.H.n,g);new BBc(EYc,new Olc(this));OIb(this.H.n,new R4b(5001561),1);e=new HHb(this.H.n,this.I);e.i=false;KIb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function Mlc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){X4b(this.d.db,0.05*(b-this.d.db.e));W4b(this.d.db,0.05*(c-this.d.db.d))}jIb(this.H.n,true);CIb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;rV(1123,1,{},Olc);_.Gf=function Plc(a,b){Jlc(this.b,Wu(b,243))};rV(1255,733,ISc,Dvc);_.Sd=function Evc(){};var Fvc;rV(1256,1,{},Kvc);_.Vd=function Lvc(){return Tvc(),Ivc};_.Wd=function Mvc(){return Uvc(),Jvc};var Ivc,Jvc;rV(1257,1,{},Ovc);_.uc=function Pvc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};rV(1258,1,{},Rvc);_.uc=function Svc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};rV(1353,733,ISc,$zc);_.Sd=function _zc(){iKb(this,$Ob());iKb(this,_Ob());iKb(this,aPb());bKb(this,GYc,new DOb((WOb(),LOb),Blb(0)));bKb(this,HYc,new DOb(LOb,Blb(0)));bKb(this,JYc,new COb(OOb));bKb(this,IYc,new COb(OOb));bKb(this,NYc,new DOb(HOb,new R4b(15658734)));bKb(this,OYc,new DOb(HOb,new R4b(1118481)));bKb(this,MYc,new DOb(HOb,new R4b(328965)));bKb(this,TYc,new DOb(IOb,new Vkb(1)));bKb(this,PYc,new DOb(IOb,new Vkb(0.15)));bKb(this,QYc,new DOb(IOb,new Vkb(0.75)));bKb(this,KYc,new COb(OOb));bKb(this,RYc,new DOb(IOb,new Vkb(1)));bKb(this,LYc,new COb(OOb));bKb(this,SYc,new DOb(UOb,new y8b(0,0,1,1)));bKb(this,'uWrapRGB',new DOb(SOb,new M7b(0.75,0.375,0.1875)))};_.Td=function aAc(a){var b,c;c=new fsb(Mu(mT,oRc,1,[UYc,VYc,WYc]));b=new fsb(Mu(mT,oRc,1,[XYc,YYc,ZYc]));kKb(this,sKb(a,Mu(pT,oRc,173,[c,b])))};_.Ud=function bAc(a){var b,c;c=new fsb(Mu(mT,oRc,1,[$Yc]));b=new fsb(Mu(mT,oRc,1,[_Yc]));lKb(this,sKb(a,Mu(pT,oRc,173,[c,b])))};var cAc;rV(1354,1,{},hAc);_.Vd=function iAc(){return qAc(),fAc};_.Wd=function jAc(){return rAc(),gAc};var fAc,gAc;rV(1355,1,{},lAc);_.uc=function mAc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};rV(1356,1,{},oAc);_.uc=function pAc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var SM=Jkb(WXc,'MaterialsBumpmapSkin$DemoScene',1122),RM=Jkb(WXc,'MaterialsBumpmapSkin$DemoScene$1',1123),jP=Jkb(PXc,'BeckmannShader',1255),iP=Jkb(PXc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1256),gP=Jkb(PXc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1257),hP=Jkb(PXc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1258),KP=Jkb(PXc,'SkinSimpleShader',1353),JP=Jkb(PXc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1354),HP=Jkb(PXc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1355),IP=Jkb(PXc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1356);hTc(Ii)(18);