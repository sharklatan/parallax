function rvc(){}
function vvc(){}
function yvc(){}
function yOc(){}
function bOc(){}
function fOc(){}
function iOc(){}
function uOc(){}
function BOc(){}
function NOc(){}
function ROc(){}
function UOc(){}
function UPc(){}
function QPc(){}
function XPc(){}
function CAc(){}
function GAc(){}
function JAc(){}
function v$b(a,b){a.c=b}
function q9b(a,b){a.n=b}
function evc(a){this.b=a}
function hvc(a){this.b=a}
function kvc(a){this.b=a}
function nvc(){nvc=iRc;mvc=new rvc}
function Avc(){Avc=iRc;pvc=new vvc}
function Bvc(){Bvc=iRc;qvc=new yvc}
function DOc(){DOc=iRc;sOc=new yOc}
function lOc(){lOc=iRc;aOc=new iOc}
function qOc(){qOc=iRc;pOc=new uOc}
function EOc(){EOc=iRc;tOc=new BOc}
function JOc(){JOc=iRc;IOc=new NOc}
function WOc(){WOc=iRc;LOc=new ROc}
function XOc(){XOc=iRc;MOc=new UOc}
function kOc(){kOc=iRc;_Nc=new fOc}
function ZNc(){ZNc=iRc;YNc=new bOc}
function ZPc(){ZPc=iRc;OPc=new UPc}
function MPc(){MPc=iRc;LPc=new QPc}
function $Pc(){$Pc=iRc;PPc=new XPc}
function yAc(){yAc=iRc;xAc=new CAc}
function LAc(){LAc=iRc;AAc=new GAc}
function MAc(){MAc=iRc;BAc=new JAc}
function bvc(a,b){this.b=a;this.c=b}
function tAc(){nKb.call(this,(yAc(),xAc))}
function WNc(){nKb.call(this,(ZNc(),YNc))}
function nOc(){nKb.call(this,(qOc(),pOc))}
function GOc(){nKb.call(this,(JOc(),IOc))}
function JPc(){nKb.call(this,(MPc(),LPc))}
function Wuc(a){a.A+=1;a.A==3&&iRb(a.w,true)}
function Xuc(){pbc.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function Vuc(a,b,c,d){var e,f,g;g=new b4b(b);BOb(Wu(yTb(V$b(g).j,JYc),227),c);f=new X9b;e=new i9b(new nYb(a.v,a.u),g);I7b(e.ab,-500);ZQb(f,e);CIb(a.H.n,f,a.d,d,true)}
function Uuc(a,b,c,d,e,f){var g,i;g=new V1b;O1b(g,new R4b(16755285));g.k=true;T1b(g,(N_b(),K_b));i=new s9b(b,g);i.e=c;q9b(i,cv(600*amb()));G7b(i.ab,d,e,f);d5b(i.db,1.5707963267948966);i.T=true;i.V=true;ZQb(a.I,i);zrb(a.o,i)}
var TZc='enableDiffuse1',UZc='enableDiffuse2',OZc='heightMap',ZZc='heightmap',$Zc='r',SZc='tDetail',QZc='tDiffuse1',RZc='tDiffuse2',WZc='uRepeatOverlay';rV(1244,1,VSc);_.Db=function Suc(){Rac(this.c,new Xuc(this.b))};rV(1245,975,{78:1,186:1,339:1},Xuc);_._d=function Yuc(a){Wuc(this)};_.Nd=function Zuc(a){this.v=a.b.$;this.u=a.b.Z;BOb(Wu(yTb(V$b(this.g.c).j,MZc),227),new Vkb(6/this.v));BOb(Wu(yTb(V$b(this.F.c).j,NZc),227),new Vkb(6/this.u))};_.ob=function $uc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Lt((Pyb(),Oyb),(Zyb(),Yyb),this);this.c=new $Rb(40,qIb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new NRb(this.v,this.u,-10000,10000);G7b(this.c.ab,-1200,800,1200);I7b(this.d.ab,100);this.t=new X9b;ZQb(this.t,this.d);this.e=new Uxb(this.c,this.H.d);F7b(this.e.w,0);this.e.t=1;this.e.B=1.2;Rxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;Pxb(this.e,0.15);V9b(this.I,new L9b(328965,2000,4000));ZQb(this.I,new DZb(1118481));this.f=new e$b(16777215,1.15);G7b(this.f.ab,500,2000,0);ZQb(this.I,this.f);this.r=new x$b(16729088,1.5,0);F7b(this.r.ab,0);ZQb(this.I,this.r);this.i=new ZPb(256,256);pPb(this.i,(aGb(),XFb));nPb(this.i,(RFb(),PFb));kPb(this.i,(NDb(),LDb));lPb(this.i,false);this.p=new ZPb(256,256);pPb(this.p,XFb);nPb(this.p,PFb);kPb(this.p,LDb);lPb(this.p,false);n=new GOc;u=n.j;BOb(Wu(u.b[AVc],227),new Vkb(0.05));U6b(Wu(Wu(u.b[nZc],227).e,298),256,256);BOb(Wu(u.b[OZc],227),this.i);s=new ZPb(2048,2048);pPb(s,XFb);nPb(s,PFb);kPb(s,LDb);s.s=false;wPb(s,(sHb(),rHb));xPb(s,rHb);c=new DPb('./static/textures/terrain/grasslight-big.jpg',new bvc(this,s));wPb(c,rHb);xPb(c,rHb);d=new DPb('./static/textures/terrain/backgrounddetailed6.jpg',this);wPb(d,rHb);xPb(d,rHb);b=new DPb('./static/textures/terrain/grasslight-big-nm.jpg',this);wPb(b,rHb);xPb(b,rHb);t=new tAc;this.C=t.j;BOb(Wu(yTb(this.C,hZc),227),this.p);BOb(Wu(yTb(this.C,iZc),227),new Vkb(3.5));BOb(Wu(yTb(this.C,PZc),227),this.i);BOb(Wu(yTb(this.C,QZc),227),c);BOb(Wu(yTb(this.C,RZc),227),d);BOb(Wu(yTb(this.C,jZc),227),s);BOb(Wu(yTb(this.C,SZc),227),b);BOb(Wu(yTb(this.C,TZc),227),(Wjb(),Wjb(),Vjb));BOb(Wu(yTb(this.C,UZc),227),Vjb);BOb(Wu(yTb(this.C,HYc),227),Vjb);O4b(Wu(Wu(yTb(this.C,NYc),227).e,294),16777215);O4b(Wu(Wu(yTb(this.C,OYc),227).e,294),16777215);O4b(Wu(Wu(yTb(this.C,MYc),227).e,294),1118481);BOb(Wu(yTb(this.C,mZc),227),new Vkb(30));BOb(Wu(yTb(this.C,VZc),227),new Vkb(375));U6b(Wu(Wu(yTb(this.C,WZc),227).e,298),6,6);this.B=new rub;Ppb(this.B,qZc,new DOb((WOb(),IOb),new Vkb(1)));Ppb(this.B,XZc,new DOb(QOb,new Y6b(1.5,1.5)));Ppb(this.B,YZc,new DOb(QOb,new Y6b(0,0)));this.n=new rub;i=new a4b((nvc(),mvc));iKb(V$b(i),this.B);i.d=false;i.c=true;Ppb(this.n,ZZc,i);j=new b4b(n);iKb(V$b(j),u);j.d=false;j.c=true;Ppb(this.n,CYc,j);k=new b4b(t);iKb(V$b(k),this.C);k.d=true;k.c=true;Ppb(this.n,'terrain',k);o=new nYb(this.v,this.u);p=new a1b;W0b(p,new R4b(0));this.s=new i9b(o,p);I7b(this.s.ab,-500);ZQb(this.t,this.s);g=new oYb(6000,6000,64,64);DSb(g);this.w=new i9b(g,k);G7b(this.w.ab,0,-125,0);c5b(this.w.db,-1.5707963267948966);iRb(this.w,false);ZQb(this.I,this.w);OIb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;KIb(this.H.n,false);q=new nLc(this.I,this.c);f=new QKc(0.6);e=new rLc(new xLc);BOb(Wu(yTb(V$b(e.c).j,TYc),227),new Vkb(0.65));this.g=new rLc(new WNc);this.F=new rLc(new JPc);BOb(Wu(yTb(V$b(this.g.c).j,MZc),227),new Vkb(6/this.v));BOb(Wu(yTb(V$b(this.F.c).j,NZc),227),new Vkb(6/this.u));BOb(Wu(yTb(V$b(this.g.c).j,$Zc),227),new Vkb(0.5));BOb(Wu(yTb(V$b(this.F.c).j,$Zc),227),new Vkb(0.5));this.F.b=true;r=new ZPb(this.v,this.u);pPb(s,WFb);nPb(s,PFb);kPb(s,LDb);s.g=false;s.s=false;a=new gLc(this.H.n,r);zrb(a.d,q);zrb(a.d,f);zrb(a.d,e);eLc(a,this.g);eLc(a,this.F);this.o=new Jrb;new BBc('./static/models/animated/parrot.js',new evc(this));new BBc(LZc,new hvc(this));new BBc('./static/models/animated/stork.js',new kvc(this));this.q=Ch()};_.pb=function _uc(a){var b,c,d,e,f;b=(Ch()-this.q)*0.001;if(this.w.hb){Sxb(this.e);this.k=m5b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;N4b(this.I.b.d,0.1,e,this.k);OIb(this.H.n,this.I.b.d,1);NZb(this.f,0.1+f*1.0499999999999998);v$b(this.r,0.9+f*0.6);BOb(Wu(yTb(this.C,iZc),227),new Vkb(0.6+f*2.9));if(this.D){this.b=m5b(this.b+-7.5E-4,0,0.05);BOb(Wu(Kpb(this.B,qZc),227),new Vkb(Wu(Wu(Kpb(this.B,qZc),227).e,150).b+b*this.b));Q6b(Wu(Wu(Kpb(this.B,YZc),227).e,298),b*0.05);V6b(Wu(Wu(yTb(this.C,_Zc),227).e,298),4*Wu(Wu(Kpb(this.B,YZc),227).e,298).d);IUb(this.s,Wu(Kpb(this.n,ZZc),283));CIb(this.H.n,this.t,this.d,this.i,true);IUb(this.s,Wu(Kpb(this.n,CYc),283));CIb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Wu(Crb(this.o,c),306);r9b(d,cv(1000*b));Q6b(d.ab,d.e*b);d.ab.d>2000&&V6b(d.ab,-1500-amb()*500)}CIb(this.H.n,this.I,this.c,null,false)}this.q=Ch()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;rV(1246,1,{},bvc);_._d=function cvc(a){Wuc(this.b);Vuc(this.b,new nOc,a,this.c)};rV(1247,1,{},evc);_.Gf=function fvc(a,b){wBc((Wu(a,340),Wu(b,243)));Uuc(this.b,Wu(b,243),500,-3500,500,700);Uuc(this.b,Wu(b,243),500,-3000-amb()*500,500,-200);Uuc(this.b,Wu(b,243),500,-3000-amb()*500,500,200);Uuc(this.b,Wu(b,243),500,-3000-amb()*500,500,1000)};rV(1248,1,{},hvc);_.Gf=function ivc(a,b){wBc((Wu(a,340),Wu(b,243)));Uuc(this.b,Wu(b,243),1000,-3000-amb()*500,350,40)};rV(1249,1,{},kvc);_.Gf=function lvc(a,b){wBc((Wu(a,340),Wu(b,243)));Uuc(this.b,Wu(b,243),1000,-3000-amb()*500,350,340)};var mvc;rV(1250,1,{},rvc);_.Vd=function svc(){return Avc(),pvc};_.Wd=function tvc(){return Bvc(),qvc};var pvc,qvc;rV(1251,1,{},vvc);_.uc=function wvc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};rV(1252,1,{},yvc);_.uc=function zvc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};rV(1359,733,ISc,tAc);_.Sd=function uAc(){iKb(this,$Ob());iKb(this,_Ob());iKb(this,aPb());bKb(this,TZc,new DOb((WOb(),LOb),(Wjb(),Wjb(),Ujb)));bKb(this,UZc,new DOb(LOb,Ujb));bKb(this,HYc,new DOb(LOb,Ujb));bKb(this,a$c,new DOb(LOb,Ujb));bKb(this,QZc,new COb(OOb));bKb(this,RZc,new COb(OOb));bKb(this,SZc,new COb(OOb));bKb(this,hZc,new COb(OOb));bKb(this,jZc,new COb(OOb));bKb(this,PZc,new COb(OOb));bKb(this,iZc,new DOb(IOb,new Vkb(1)));bKb(this,b$c,new DOb(IOb,new Vkb(0)));bKb(this,VZc,new DOb(IOb,new Vkb(1)));bKb(this,NYc,new DOb(HOb,new R4b(15658734)));bKb(this,OYc,new DOb(HOb,new R4b(1118481)));bKb(this,MYc,new DOb(HOb,new R4b(328965)));bKb(this,mZc,new DOb(IOb,new Vkb(30)));bKb(this,TYc,new DOb(IOb,new Vkb(1)));bKb(this,'uRepeatBase',new DOb(QOb,new Y6b(1,1)));bKb(this,WZc,new DOb(QOb,new Y6b(1,1)));bKb(this,_Zc,new DOb(QOb,new Y6b(0,0)))};_.Td=function vAc(a){var b,c;c=new fsb(Mu(mT,oRc,1,[UYc,VYc]));b=new fsb(Mu(mT,oRc,1,[XYc,YYc,ZYc]));kKb(this,sKb(a,Mu(pT,oRc,173,[c,b])))};_.Ud=function wAc(a){var b,c;c=new fsb(Mu(mT,oRc,1,[$Yc]));b=new fsb(Mu(mT,oRc,1,[_Yc]));lKb(this,sKb(a,Mu(pT,oRc,173,[c,b])))};var xAc;rV(1360,1,{},CAc);_.Vd=function DAc(){return LAc(),AAc};_.Wd=function EAc(){return MAc(),BAc};var AAc,BAc;rV(1361,1,{},GAc);_.uc=function HAc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};rV(1362,1,{},JAc);_.uc=function KAc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};rV(1500,733,ISc,WNc);_.Sd=function XNc(){bKb(this,JYc,new COb((WOb(),OOb)));bKb(this,MZc,new DOb(IOb,new Vkb(0.001953125)));bKb(this,$Zc,new DOb(IOb,new Vkb(0.35)))};var YNc;rV(1501,1,{},bOc);_.Vd=function cOc(){return kOc(),_Nc};_.Wd=function dOc(){return lOc(),aOc};var _Nc,aOc;rV(1502,1,{},fOc);_.uc=function gOc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};rV(1503,1,{},iOc);_.uc=function jOc(){return EZc};rV(1506,733,ISc,nOc);_.Sd=function oOc(){bKb(this,JYc,new COb((WOb(),OOb)))};var pOc;rV(1507,1,{},uOc);_.Vd=function vOc(){return DOc(),sOc};_.Wd=function wOc(){return EOc(),tOc};var sOc,tOc;rV(1508,1,{},yOc);_.uc=function zOc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};rV(1509,1,{},BOc);_.uc=function COc(){return EZc};rV(1512,733,ISc,GOc);_.Sd=function HOc(){bKb(this,OZc,new COb((WOb(),OOb)));bKb(this,nZc,new DOb(QOb,new Y6b(512,512)));bKb(this,XZc,new DOb(QOb,new Y6b(1,1)));bKb(this,AVc,new DOb(IOb,new Vkb(0.05)))};var IOc;rV(1513,1,{},NOc);_.Vd=function OOc(){return WOc(),LOc};_.Wd=function POc(){return XOc(),MOc};var LOc,MOc;rV(1514,1,{},ROc);_.uc=function SOc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};rV(1515,1,{},UOc);_.uc=function VOc(){return EZc};rV(1530,733,ISc,JPc);_.Sd=function KPc(){bKb(this,JYc,new COb((WOb(),OOb)));bKb(this,NZc,new DOb(IOb,new Vkb(0.001953125)));bKb(this,$Zc,new DOb(IOb,new Vkb(0.35)))};var LPc;rV(1531,1,{},QPc);_.Vd=function RPc(){return ZPc(),OPc};_.Wd=function SPc(){return $Pc(),PPc};var OPc,PPc;rV(1532,1,{},UPc);_.uc=function VPc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};rV(1533,1,{},XPc);_.uc=function YPc(){return EZc};var bP=Jkb(ZXc,'TerrainDynamic$DemoScene',1245),ZO=Jkb(ZXc,'TerrainDynamic$DemoScene$1',1246),$O=Jkb(ZXc,'TerrainDynamic$DemoScene$2',1247),_O=Jkb(ZXc,'TerrainDynamic$DemoScene$3',1248),aP=Jkb(ZXc,'TerrainDynamic$DemoScene$4',1249),eS=Jkb(c$c,d$c,1512),OP=Jkb(PXc,'TerrainShader',1359),YR=Jkb(c$c,'HorizontalTiltShiftShader',1500),qS=Jkb(c$c,'VerticalTiltShiftShader',1530),eP=Jkb(ZXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1250),cP=Jkb(ZXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1251),dP=Jkb(ZXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1252),dS=Jkb(c$c,e$c,1513),bS=Jkb(c$c,f$c,1514),cS=Jkb(c$c,g$c,1515),NP=Jkb(PXc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1360),LP=Jkb(PXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1361),MP=Jkb(PXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1362),XR=Jkb(c$c,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1501),VR=Jkb(c$c,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1502),WR=Jkb(c$c,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1503),pS=Jkb(c$c,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1531),nS=Jkb(c$c,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1532),oS=Jkb(c$c,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1533),aS=Jkb(c$c,'LuminosityShader',1506),_R=Jkb(c$c,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1507),ZR=Jkb(c$c,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1508),$R=Jkb(c$c,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1509);hTc(Ii)(38);