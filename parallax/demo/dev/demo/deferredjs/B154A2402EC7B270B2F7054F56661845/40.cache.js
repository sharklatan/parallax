function MLb(){}
function QLb(){}
function TLb(){}
function qyc(){}
function uyc(){}
function xyc(){}
function Jyc(){}
function Nyc(){}
function Qyc(){}
function azc(){}
function ezc(){}
function hzc(){}
function W9b(a,b){a.d=b}
function WLb(){WLb=iRc;LLb=new TLb}
function ILb(){ILb=iRc;HLb=new MLb}
function VLb(){VLb=iRc;KLb=new QLb}
function Tyc(){Tyc=iRc;Iyc=new Qyc}
function myc(){myc=iRc;lyc=new qyc}
function zyc(){zyc=iRc;oyc=new uyc}
function Ayc(){Ayc=iRc;pyc=new xyc}
function Fyc(){Fyc=iRc;Eyc=new Jyc}
function Syc(){Syc=iRc;Hyc=new Nyc}
function Yyc(){Yyc=iRc;Xyc=new azc}
function jzc(){jzc=iRc;$yc=new ezc}
function kzc(){kzc=iRc;_yc=new hzc}
function Wtc(a,b){this.b=a;this.c=b}
function kIb(a,b){XIb(a,b);jIb(a,false)}
function DLb(){nKb.call(this,(ILb(),HLb))}
function jyc(){nKb.call(this,(myc(),lyc))}
function Cyc(){nKb.call(this,(Fyc(),Eyc))}
function Vyc(){nKb.call(this,(Yyc(),Xyc))}
function F1b(){h_b.call(this);this.b=false;this.c=1}
function Stc(){pbc.call(this);this.u=new M7b(0,1000,-1000);this.s=new L7b}
function D7b(a,b){var c;c=new V5b;T5b(c,b.q,I5b(c,b.Y));return v7b(a,c)}
var s$c='bgColor',u$c='fAspect',r$c='fGodRayIntensity',v$c='fStepSize',i$c='mFar',h$c='mNear',x$c='tColors',y$c='tGodRays',w$c='tInput',t$c='vSunPositionScreenSpace',z$c='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';rV(751,733,ISc,DLb);_.Sd=function ELb(){bKb(this,h$c,new DOb((WOb(),IOb),new Vkb(1)));bKb(this,i$c,new DOb(IOb,new Vkb(2000)));bKb(this,TYc,new DOb(IOb,new Vkb(1)))};_.Td=function FLb(a){var b,c;c=new fsb(Mu(mT,oRc,1,[j$c]));b=new fsb(Mu(mT,oRc,1,[k$c]));kKb(this,sKb(a,Mu(pT,oRc,173,[c,b])))};_.Ud=function GLb(a){var b,c;c=new fsb(Mu(mT,oRc,1,[l$c,m$c]));b=new fsb(Mu(mT,oRc,1,[n$c,o$c,p$c]));lKb(this,sKb(a,Mu(pT,oRc,173,[c,b])))};var HLb;rV(752,1,{},MLb);_.Vd=function NLb(){return VLb(),KLb};_.Wd=function OLb(){return WLb(),LLb};var KLb,LLb;rV(753,1,{},QLb);_.uc=function RLb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};rV(754,1,{},TLb);_.uc=function ULb(){return q$c};rV(923,916,{280:1,283:1},F1b);_.Ue=function G1b(){var a;return a=new F1b,R$b(this,a),a.b=this.b,a.c=this.c,a};_.Ve=function H1b(){return new DLb};_.Re=function I1b(){return this.c};_.Se=function J1b(){return this.b};_.We=function K1b(a,b){var c;W$b(this,b);c=V$b(this).j;if(a.cZ==AH){BOb(Wu(c.b[h$c],227),new Vkb(Wu(a,237).e));BOb(Wu(c.b[i$c],227),new Vkb(Wu(a,237).c))}BOb(Wu(c.b[TYc],227),new Vkb(this.$))};_.b=false;_.c=0;rV(1231,1,VSc);_.Db=function Qtc(){Rac(this.c,new Stc(this.b))};rV(1232,975,{337:1},Stc);_.ob=function Ttc(){var a,b,c,d;this.b=new $Rb(70,qIb(this.H.n),1,3000);I7b(this.b.ab,200);this.c=new F1b;c=new a1b;W0b(c,new R4b(0));$0b(c,(K0b(),H0b));new BBc('./static/models/obj/tree/tree.js',new Wtc(this,c));a=new vYb(1,20,10);this.t=new i9b(a,c);F7b(this.t.fb,20);ZQb(this.I,this.t);$Ib(this.H.n,false);KIb(this.H.n,false);NIb(this.H.n,1297,1);this.k=new X9b;this.j=new NRb(this.H.n.$,this.H.n.Z,-10000,10000);I7b(this.j.ab,100);ZQb(this.k,this.j);this.o=new ZPb(this.H.n.$,this.H.n.Z);pPb(this.o,(aGb(),WFb));nPb(this.o,(RFb(),PFb));kPb(this.o,(NDb(),MDb));this.p=new ZPb(this.H.n.$,this.H.n.Z);pPb(this.p,WFb);nPb(this.p,PFb);kPb(this.p,MDb);d=~~(this.H.n.$/4);b=~~(this.H.n.Z/4);this.q=new ZPb(d,b);pPb(this.q,WFb);nPb(this.q,PFb);kPb(this.q,MDb);this.r=new ZPb(d,b);pPb(this.r,WFb);nPb(this.r,PFb);kPb(this.r,MDb);this.f=new b4b(new Cyc);this.d=new b4b(new jyc);BOb(Wu(yTb(V$b(this.d).j,r$c),227),new Vkb(0.75));this.e=new b4b(new Vyc);O4b(Wu(Wu(yTb(V$b(this.e).j,s$c),227).e,294),1297);O4b(Wu(Wu(yTb(V$b(this.e).j,zZc),227).e,294),16772608);this.n=new i9b(new kYb(this.H.n.$,this.H.n.Z),this.f);I7b(this.n.ab,-9900);ZQb(this.k,this.n)};_.pb=function Utc(a){var b,c,d,e,f,g;f=a/4000;V6b(this.t.ab,200*Vlb(f));I7b(this.t.ab,200*cmb(f)-100);Q6b(this.b.ab,(this.g-this.b.ab.d)*0.036);R6b(this.b.ab,(-this.i-this.b.ab.e)*0.036);wRb(this.b,this.I.ab);D7b(this.s.qf(this.u),this.b);V6b(this.s,(this.s.d+1)/2);W6b(this.s,(this.s.e+1)/2);U6b(Wu(Wu(yTb(V$b(this.f).j,t$c),227).e,298),this.s.d,this.s.e);U6b(Wu(Wu(yTb(V$b(this.e).j,t$c),227).e,298),this.s.d,this.s.e);kIb(this.H.n,this.o);g=this.H.n.$;b=this.H.n.Z;d=0.74*b;e=0.74*b;V6b(this.s,this.s.d*g);W6b(this.s,this.s.e*b);YIb(this.H.n,cv(this.s.d-e/2),cv(this.s.e-d/2),cv(e),cv(d));pIb(this.H.n,true);BOb(Wu(yTb(V$b(this.e).j,u$c),227),new Vkb(g/b));W9b(this.k,this.e);CIb(this.H.n,this.k,this.j,this.o,false);pIb(this.H.n,false);W9b(this.I,null);CIb(this.H.n,this.I,this.b,this.o,false);W9b(this.I,this.c);CIb(this.H.n,this.I,this.b,this.p,true);c=_lb(6,-1);BOb(Wu(yTb(V$b(this.f).j,v$c),227),new Vkb(c));BOb(Wu(yTb(V$b(this.f).j,w$c),227),this.p);W9b(this.k,this.f);CIb(this.H.n,this.k,this.j,this.r,false);c=_lb(6,-2);BOb(Wu(yTb(V$b(this.f).j,v$c),227),new Vkb(c));BOb(Wu(yTb(V$b(this.f).j,w$c),227),this.r);CIb(this.H.n,this.k,this.j,this.q,false);c=_lb(6,-3);BOb(Wu(yTb(V$b(this.f).j,v$c),227),new Vkb(c));BOb(Wu(yTb(V$b(this.f).j,w$c),227),this.q);CIb(this.H.n,this.k,this.j,this.r,false);BOb(Wu(yTb(V$b(this.d).j,x$c),227),this.o);BOb(Wu(yTb(V$b(this.d).j,y$c),227),this.r);W9b(this.k,this.d);CIb(this.H.n,this.k,this.j,null,false);W9b(this.k,null)};_.g=0;_.i=0;rV(1233,1,{},Wtc);_.Gf=function Xtc(a,b){var c;c=new i9b(b,this.c);G7b(c.ab,0,-150,-150);F7b(c.fb,400);c.X=false;D5b(c.W,c.ab,c.bb,c.fb);c.Z=true;ZQb(this.b.I,c)};rV(1322,733,ISc,jyc);_.Sd=function kyc(){bKb(this,x$c,new COb((WOb(),OOb)));bKb(this,y$c,new COb(OOb));bKb(this,r$c,new DOb(IOb,new Vkb(0.69)));bKb(this,t$c,new DOb(QOb,new Y6b(0.5,0.5)))};var lyc;rV(1323,1,{},qyc);_.Vd=function ryc(){return zyc(),oyc};_.Wd=function syc(){return Ayc(),pyc};var oyc,pyc;rV(1324,1,{},uyc);_.uc=function vyc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};rV(1325,1,{},xyc);_.uc=function yyc(){return z$c};rV(1328,733,ISc,Cyc);_.Sd=function Dyc(){bKb(this,w$c,new COb((WOb(),OOb)));bKb(this,v$c,new DOb(IOb,new Vkb(1)));bKb(this,t$c,new DOb(QOb,new Y6b(0.5,0.5)))};var Eyc;rV(1329,1,{},Jyc);_.Vd=function Kyc(){return Syc(),Hyc};_.Wd=function Lyc(){return Tyc(),Iyc};var Hyc,Iyc;rV(1330,1,{},Nyc);_.uc=function Oyc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};rV(1331,1,{},Qyc);_.uc=function Ryc(){return z$c};rV(1334,733,ISc,Vyc);_.Sd=function Wyc(){bKb(this,t$c,new DOb((WOb(),QOb),new Y6b(0.5,0.5)));bKb(this,u$c,new DOb(IOb,new Vkb(1)));bKb(this,zZc,new DOb(HOb,new R4b(16772608)));bKb(this,s$c,new DOb(HOb,new R4b(0)))};var Xyc;rV(1335,1,{},azc);_.Vd=function bzc(){return jzc(),$yc};_.Wd=function czc(){return kzc(),_yc};var $yc,_yc;rV(1336,1,{},ezc);_.uc=function fzc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};rV(1337,1,{},hzc);_.uc=function izc(){return z$c};var NO=Jkb(ZXc,'PostprocessingGodrays$DemoScene',1232),MO=Jkb(ZXc,'PostprocessingGodrays$DemoScene$1',1233),wJ=Jkb(A$c,'MeshDepthMaterial',923),tP=Jkb(PXc,'GodRaysGenerateShader',1328),pP=Jkb(PXc,'GodRaysCombineShader',1322),xP=Jkb(PXc,'GodraysFakeSunShader',1334),IG=Jkb(dZc,'DepthShader',751),sP=Jkb(PXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1329),qP=Jkb(PXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1330),rP=Jkb(PXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1331),oP=Jkb(PXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1323),mP=Jkb(PXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1324),nP=Jkb(PXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1325),wP=Jkb(PXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1335),uP=Jkb(PXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1336),vP=Jkb(PXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1337),HG=Jkb(dZc,'DepthShader_Resources_default_InlineClientBundleGenerator',752),FG=Jkb(dZc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',753),GG=Jkb(dZc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',754);hTc(Ii)(40);