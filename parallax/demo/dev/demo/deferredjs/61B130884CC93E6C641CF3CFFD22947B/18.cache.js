function mpc(){}
function qpc(){}
function tpc(){}
function Bsc(){}
function Fsc(){}
function Isc(){}
function vhc(a){this.a=a}
function vpc(){vpc=OEc;kpc=new qpc}
function ipc(){ipc=OEc;hpc=new mpc}
function wpc(){wpc=OEc;lpc=new tpc}
function xsc(){xsc=OEc;wsc=new Bsc}
function Ksc(){Ksc=OEc;zsc=new Fsc}
function Lsc(){Lsc=OEc;Asc=new Isc}
function ssc(){KGb.call(this,(xsc(),wsc))}
function fpc(){KGb.call(this,(ipc(),hpc))}
function rhc(){c7b.call(this);this.d=0;this.e=0}
function qhc(a,b){var c,d,e,f,g,i;d=new ELb(TLc);d.k=4;K2b(d.B,0.998,0.998);K2b(d.A,0.001,0.001);yLb(d,(RDb(),QDb));zLb(d,QDb);mLb(d,(KAb(),IAb));e=new ELb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');K2b(e.B,0.998,0.998);K2b(e.A,0.001,0.001);yLb(e,QDb);zLb(e,QDb);mLb(e,IAb);c=new ELb('./static/models/obj/leeperrysmith/Map-COL.jpg');K2b(c.B,0.998,0.998);K2b(c.A,0.001,0.001);yLb(c,QDb);zLb(c,QDb);mLb(c,IAb);g=new ssc;i=g.i;DKb(qu(i.a[WLc],225),(dhb(),dhb(),chb));DKb(qu(i.a[XLc],225),chb);DKb(qu(i.a[YLc],225),a.b.e);DKb(qu(i.a[ZLc],225),c);DKb(qu(i.a[$Lc],225),d);DKb(qu(i.a[_Lc],225),e);C0b(qu(qu(i.a[aMc],225).d,292),10526880);C0b(qu(qu(i.a[bMc],225).d,292),10526880);C0b(qu(qu(i.a[cMc],225).d,292),10526880);DKb(qu(i.a[dMc],225),new cib(0.145));DKb(qu(i.a[eMc],225),new cib(0.75));DKb(qu(i.a[fMc],225),new cib(16));j4b(qu(qu(i.a[gMc],225).d,300),0.001,0.001,0.998,0.998);f=new Q_b(g);f.c=true;a.c=new Z4b(b,f);M2b(a.c._,-50);u3b(a.c.eb,100);eNb(a.c,true);a.c.U=true;_Mb(a.F,a.c)}
var WLc='enableBump',YLc='tBeckmann',dMc='uRoughness',eMc='uSpecularBrightness';NS(1102,1,vGc);_.zb=function ohc(){E6b(this.b,new rhc(this.a))};NS(1103,958,{320:1},rhc);_.nb=function shc(){var b,c,d,e,f,g,i,j;this.a=new aOb(27,NEb(this.D.k),1,10000);x3b(this.a._,1200);_Mb(this.F,new BVb(5592405));f=new uWb(16777215,1.5,1000);v3b(f._,0,0,600);_Mb(this.F,f);i=new CWb(1);v3b(i._,0.05,0.05,1);_Mb(this.F,i);i._.lf(700);i.S=true;i.t=true;i.I=2048;i.G=2048;i.A=200;i.w=1500;i.d=40;i.u=-0.005;i.D=0.15;b=new cWb(16777215,0.85);v3b(b._,1,-0.5,1);B0b(b.L,0.6,1,0.85);_Mb(this.F,b);b._.lf(500);b.S=true;b.I=2048;b.G=2048;b.A=200;b.w=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.u=-0.005;b.D=0.15;c=new cWb(16777215,0.85);v3b(c._,1,-0.5,-1);_Mb(this.F,c);new NCc(new fpc);d=new NCc(new hDc);d.a=true;j=new _Lb(512,512);rLb(j,(zCb(),tCb));pLb(j,(oCb(),mCb));mLb(j,(KAb(),IAb));j.f=false;this.b=new DCc(this.D.k,j);e=new Atc;try{mtc(e,ULc,new vhc(this))}catch(a){a=SR(a);if(tu(a,81)){PMb();VU(OMb,(xsb(),vsb),VLc)}else throw RR(a)}jFb(this.D.k,new F0b(5001561),1);g=new dEb(this.D.k,this.F);g.g=false;fFb(this.D.k,false);this.D.k.ab=true;this.D.k.bb=true};_.ob=function thc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){L0b(this.c.cb,0.05*(b-this.c.cb.d));K0b(this.c.cb,0.05*(c-this.c.cb.c))}HEb(this.D.k);ZEb(this.D.k,this.F,this.a,null,false)};_.d=0;_.e=0;NS(1104,1,{},vhc);_.yf=function whc(a){qhc(this.a,qu(a,241))};NS(1209,723,iGc,fpc);_.Jd=function gpc(){};var hpc;NS(1210,1,{},mpc);_.Md=function npc(){return vpc(),kpc};_.Nd=function opc(){return wpc(),lpc};var kpc,lpc;NS(1211,1,{},qpc);_.ac=function rpc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};NS(1212,1,{},tpc);_.ac=function upc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};NS(1285,723,iGc,ssc);_.Jd=function tsc(){FGb(this,aLb());FGb(this,bLb());FGb(this,cLb());yGb(this,WLc,new FKb((YKb(),NKb),Kib(0)));yGb(this,XLc,new FKb(NKb,Kib(0)));yGb(this,ZLc,new EKb(QKb));yGb(this,YLc,new EKb(QKb));yGb(this,bMc,new FKb(JKb,new F0b(15658734)));yGb(this,cMc,new FKb(JKb,new F0b(1118481)));yGb(this,aMc,new FKb(JKb,new F0b(328965)));yGb(this,hMc,new FKb(KKb,new cib(1)));yGb(this,dMc,new FKb(KKb,new cib(0.15)));yGb(this,eMc,new FKb(KKb,new cib(0.75)));yGb(this,$Lc,new EKb(QKb));yGb(this,fMc,new FKb(KKb,new cib(1)));yGb(this,_Lc,new EKb(QKb));yGb(this,gMc,new FKb(WKb,new n4b(0,0,1,1)));yGb(this,'uWrapRGB',new FKb(UKb,new B3b(0.75,0.375,0.1875)))};_.Kd=function usc(a){var b,c;c=new npb(gu(IQ,TEc,1,[iMc,jMc,kMc]));b=new npb(gu(IQ,TEc,1,[lMc,mMc,nMc]));HGb(this,PGb(a,gu(LQ,TEc,173,[c,b])))};_.Ld=function vsc(a){var b,c;c=new npb(gu(IQ,TEc,1,[oMc]));b=new npb(gu(IQ,TEc,1,[pMc]));IGb(this,PGb(a,gu(LQ,TEc,173,[c,b])))};var wsc;NS(1286,1,{},Bsc);_.Md=function Csc(){return Ksc(),zsc};_.Nd=function Dsc(){return Lsc(),Asc};var zsc,Asc;NS(1287,1,{},Fsc);_.ac=function Gsc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};NS(1288,1,{},Isc);_.ac=function Jsc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var TL=Shb(jLc,'MaterialsBumpmapSkin$DemoScene',1103),SL=Shb(jLc,'MaterialsBumpmapSkin$DemoScene$1',1104),ON=Shb(cLc,'BeckmannShader',1209),NN=Shb(cLc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1210),LN=Shb(cLc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1211),MN=Shb(cLc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1212),bO=Shb(cLc,'SkinSimpleShader',1285),aO=Shb(cLc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1286),$N=Shb(cLc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1287),_N=Shb(cLc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1288);IGc(xi)(18);