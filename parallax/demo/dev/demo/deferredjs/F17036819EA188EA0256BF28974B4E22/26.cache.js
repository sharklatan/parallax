function Jcb(){}
function Ycb(){}
function fqb(){}
function qqb(){}
function nqb(){}
function vqb(){}
function uqb(){}
function zqb(){}
function yqb(){}
function r_b(){}
function s_b(){fOb.call(this)}
function ddb(a,b){xh.call(this,a,b)}
function gqb(){Wnb.call(this,(mqb(),lqb))}
function mqb(){mqb=P4b;lqb=new qqb}
function Cqb(){Cqb=P4b;oqb=new vqb}
function Dqb(){Dqb=P4b;pqb=new zqb}
function fdb(){cdb();return Zcb}
function Kcb(a,b,c){return new Ezb(b/a.n*0.5,c/a.n*0.5)}
function ivb(a){pvb(a,a.e*a.e);mvb(a,a.c*a.c);lvb(a,a.b*a.b);return a}
function Pcb(a){var b;b=1+(a.s.e-a.t.e)*1.2;if(b!=1&&b>0){a.c.le(b);wzb(a.t,(a.s.e-a.t.e)*a.b)}}
function lzb(a,b,c){var d,e;d=c/2;e=Math.sin(d);a.c=b.d*e;a.d=b.e*e;a.e=b.c*e;a.b=Math.cos(d)}
function cdb(){cdb=P4b;$cb=new ddb(o5b,0);adb=new ddb('ROTATE',1);bdb=new ddb('ZOOM',2);_cb=new ddb('PAN',3);Zcb=xr(XF,{86:1,98:1},115,[$cb,adb,bdb,_cb])}
function Mcb(a){var b,c;b=a.i.Wd().ee(a.k);if(b._d()>0){b.ae(a.c.$d()*a.j);c=aAb(a.c.ie(),a.x.K).ne(b.d);c.he(a.x.K.ie().ne(b.e));a.x.E.he(c);a.r.he(c);a.k.Td(b.fe(a.i,a.k).ae(a.b))}}
function Ncb(a){var b,c,d;b=_1(bAb(a.p,a.o)/a.p.$d()/a.o.$d());if(b>0){c=_zb(new hAb,a.p,a.o).me();d=new mzb;b*=1;lzb(d,c,-b);izb(d,a.c);izb(d,a.x.K);izb(d,a.o);lzb(d,c,b*(a.b-1));izb(d,a.p)}}
function Ocb(a){a.c.je(a.x.E).oe(a.r);Ncb(a);Pcb(a);Mcb(a);Zzb(a.x.E,a.r,a.c);a.x.E._d()>a.f*a.f&&a.x.E.ne(a.f);a.c._d()<a.g*a.g&&Zzb(a.x.E,a.r,a.c.ne(a.g));Fub(a.x,a.r);a.e.Xd(a.x.E)>0&&a.e.je(a.x.E)}
function izb(a,b){var c,d,e,f,g,i,j,k,n,o,p;return n=b.d,o=b.e,p=b.c,i=a.c,j=a.d,k=a.e,g=a.b,d=g*n+j*p-k*o,e=g*o+k*n-i*p,f=g*p+i*o-j*n,c=-i*n-j*o-k*p,b.d=d*g+c*-i+e*-k-f*-j,b.e=e*g+c*-j+f*-i-d*-k,b.c=f*g+c*-k+d*-j-e*-i,b}
function Lcb(a,b,c){var d,e,f;e=new iAb((b-Kg(a.y.B,w8b)*0.5)/a.n,(Kg(a.y.B,x8b)*0.5-c)/a.n,0);d=e.$d();d>1?e.me():fAb(e,Math.sqrt(1-d*d));a.c.je(a.x.E).oe(a.r);f=a.x.K.ie().ne(e.e);f.he(aAb(a.x.K.ie(),a.c).ne(e.d));f.he(a.c.ne(e.c));return f}
function Qcb(a,b){icb.call(this,a,b);this.q=(cdb(),$cb);this.n=(Kg(b.B,w8b)+Kg(b.B,x8b))/4;yy!=nw&&(this.y.B.setAttribute(u8b,v8b),undefined);this.r=new hAb;this.e=new hAb;this.c=new hAb;this.p=new hAb;this.o=new hAb;this.t=new Dzb;this.s=new Dzb;this.k=new Dzb;this.i=new Dzb;YM(this.y,this,(Yk(),Yk(),Xk));YM(this.y,this,(am(),am(),_l));YM(this.y,this,(Vl(),Vl(),Ul));YM(this.y,this,(hm(),hm(),gm));YM((TX(),XX(null)),this,(zl(),zl(),yl));YM(XX(null),this,(Gl(),Gl(),Fl))}
var u9b='enableAO',v9b='enableDiffuse',w9b='enableSpecular',x9b='tNormal',y9b='tSpecular',C9b='uAmbientColor',A9b='uDiffuseColor',z9b='uNormalScale',D9b='uShininess',B9b='uSpecularColor';_=Qcb.prototype=Jcb.prototype=new hcb;_.gC=function Rcb(){return Ey};_.Kb=function Scb(a){a.b.preventDefault()};_.Lb=function Tcb(a){if(this.q!=(cdb(),$cb)){return}else (a.b.keyCode||0)==65?(this.q=adb):(a.b.keyCode||0)==83?(this.q=bdb):(a.b.keyCode||0)==68&&(this.q=_cb);this.q!=$cb&&(this.d=true)};_.Mb=function Ucb(a){this.q=(cdb(),$cb)};_.Nb=function Vcb(a){a.b.preventDefault();a.b.stopPropagation();if(this.q==(cdb(),$cb)){if(ah(a.b)==1){this.p=this.o=Lcb(this,Nk(a),Ok(a));this.q=adb}else if(ah(a.b)==4){this.t=this.s=Kcb(this,Nk(a),Ok(a));this.q=bdb}else if(ah(a.b)==2){this.k=this.i=Kcb(this,Nk(a),Ok(a));this.q=_cb}}};_.Ob=function Wcb(a){if(this.d){this.p=this.o=Lcb(this,Nk(a),Ok(a));this.t=this.s=Kcb(this,Nk(a),Ok(a));this.k=this.i=Kcb(this,Nk(a),Ok(a));this.d=false}if(this.q==(cdb(),$cb)){return}else this.q==adb?(this.o=Lcb(this,Nk(a),Ok(a))):this.q==bdb?(this.s=Kcb(this,Nk(a),Ok(a))):this.q==_cb&&(this.i=Kcb(this,Nk(a),Ok(a)))};_.Pb=function Xcb(a){a.b.preventDefault();a.b.stopPropagation();this.q=(cdb(),$cb)};_.cM={17:1,20:1,21:1,23:1,24:1,25:1,37:1};_.b=0.2;_.c=null;_.d=false;_.e=null;_.f=1.7976931348623157E308;_.g=0;_.i=null;_.j=0.3;_.k=null;_.n=0;_.o=null;_.p=null;_.r=null;_.s=null;_.t=null;_=ddb.prototype=Ycb.prototype=new vh;_.gC=function edb(){return Dy};_.cM={86:1,89:1,91:1,115:1};var Zcb,$cb,_cb,adb,bdb;_=gqb.prototype=fqb.prototype=new Inb;_.gC=function hqb(){return xz};_.yd=function iqb(){Snb(this,usb());Snb(this,vsb());Snb(this,wsb());Lnb(this,u9b,new Wrb((psb(),esb),W1(0)));Lnb(this,v9b,new Wrb(esb,W1(0)));Lnb(this,w9b,new Wrb(esb,W1(0)));Lnb(this,'enableReflection',new Wrb(esb,W1(0)));Lnb(this,b9b,new Wrb(hsb,W1(0)));Lnb(this,r9b,new Wrb(hsb,W1(1)));Lnb(this,x9b,new Wrb(hsb,W1(2)));Lnb(this,y9b,new Wrb(hsb,W1(3)));Lnb(this,'tAO',new Wrb(hsb,W1(4)));Lnb(this,'tDisplacement',new Wrb(hsb,W1(5)));Lnb(this,z9b,new Wrb(bsb,new s1(1)));Lnb(this,'uDisplacementBias',new Wrb(bsb,new s1(0)));Lnb(this,'uDisplacementScale',new Wrb(bsb,new s1(1)));Lnb(this,A9b,new Wrb(asb,new tvb(16777215)));Lnb(this,B9b,new Wrb(asb,new tvb(1118481)));Lnb(this,C9b,new Wrb(asb,new tvb(16777215)));Lnb(this,D9b,new Wrb(bsb,new s1(30)));Lnb(this,'uOpacity',new Wrb(bsb,new s1(1)));Lnb(this,'uReflectivity',new Wrb(bsb,new s1(0.5)));Lnb(this,'uOffset',new Wrb(jsb,new Ezb(0,0)));Lnb(this,'uRepeat',new Wrb(jsb,new Ezb(1,1)));Lnb(this,E9b,new Wrb(lsb,new iAb(1,1,1)))};_.zd=function jqb(a){var b,c;c=new v7(xr(SF,{86:1,98:1},1,[F9b,G9b]));b=new v7(xr(SF,{86:1,98:1},1,[H9b,I9b,J9b]));Unb(this,aob(a,xr(UF,{86:1,98:1},105,[c,b])))};_.Ad=function kqb(a){var b,c;c=new v7(xr(SF,{86:1,98:1},1,[K9b]));b=new v7(xr(SF,{86:1,98:1},1,[L9b]));Vnb(this,aob(a,xr(UF,{86:1,98:1},105,[c,b])))};_.cM={130:1};var lqb;_=qqb.prototype=nqb.prototype=new Ub;_.gC=function rqb(){return wz};_.Bd=function sqb(){return Cqb(),oqb};_.Cd=function tqb(){return Dqb(),pqb};var oqb=null,pqb=null;_=vqb.prototype=uqb.prototype=new Ub;_.gC=function wqb(){return uz};_.bc=function xqb(){return 'uniform vec3 uAmbientColor;\r\nuniform vec3 uDiffuseColor;\r\nuniform vec3 uSpecularColor;\r\nuniform float uShininess;\r\nuniform float uOpacity;\r\n\r\nuniform bool enableDiffuse;\r\nuniform bool enableSpecular;\r\nuniform bool enableAO;\r\nuniform bool enableReflection;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tAO;\r\n\r\nuniform samplerCube tCube;\r\n\r\nuniform float uNormalScale;\r\nuniform float uReflectivity;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n#endif\r\n\r\n#ifdef WRAP_AROUND\r\n\tuniform vec3 wrapRGB;\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse ) {\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\r\n\t\t\ttexelColor.xyz *= texelColor.xyz;\r\n\r\n\t\t\tgl_FragColor = gl_FragColor * texelColor;\r\n\r\n\t\t#else\r\n\r\n\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n\tif( enableAO ) {\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tvec4 aoColor = texture2D( tAO, vUv );\r\n\t\t\taoColor.xyz *= aoColor.xyz;\r\n\r\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\r\n\r\n\t\t#else\r\n\r\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\r\n\r\n\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec3 pointVector = normalize( vPointLight[ i ].xyz );\r\n\t\t\tfloat pointDistance = vPointLight[ i ].w;\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\t#ifdef WRAP_AROUND\r\n\r\n\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\r\n\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\r\n\r\n\t\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\r\n\r\n\t\t\t// specular\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\r\n\r\n\t\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\tfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\r\n\r\n\t\t\t\tvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\r\n\t\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\t#ifdef WRAP_AROUND\r\n\r\n\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\r\n\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\r\n\r\n\t\t\t// specular\r\n\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\r\n\r\n\t\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\tfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\r\n\r\n\t\t\t\tvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\r\n\t\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tdirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\r\n\r\n\tif ( enableReflection ) {\r\n\r\n\t\tvec3 wPos = cameraPosition - vViewPosition;\r\n\t\tvec3 vReflect = reflect( normalize( wPos ), normal );\r\n\r\n\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcubeColor.xyz *= cubeColor.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\r\n\r\n\t}\r\n\r\n[*]\r\n\r\n}\r\n'};_=zqb.prototype=yqb.prototype=new Ub;_.gC=function Aqb(){return vz};_.bc=function Bqb(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uOffset;\r\nuniform vec2 uRepeat;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\t// normal, tangent and binormal vectors\r\n\r\n\tvNormal = normalMatrix * normal;\r\n\tvTangent = normalMatrix * tangent.xyz;\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\r\n\tvUv = uv * uRepeat + uOffset;\r\n\r\n\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvPointLight[ i ] = vec4( lVector, lDistance );\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec4 displacedPosition = vec4( normalize( vNormal.xyz ) * df, 0.0 ) + mvPosition;\r\n\t\tgl_Position = projectionMatrix * displacedPosition;\r\n\r\n\t#else\r\n\r\n\t\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\t#endif\r\n\r\n[*]\r\n\r\n}\r\n'};_=Yzb.prototype;_.ne=function EAb(a){this.me();return this.le(a)};_=KAb.prototype;_.ne=function hBb(a){return OAb(this,l2(this.d*this.d+this.e*this.e+this.c*this.c+this.b*this.b)),PAb(this,a)};_=m_b.prototype;_.ub=function q_b(){bOb(this.c,new s_b(this.b))};_=s_b.prototype=r_b.prototype=new eOb;_.gC=function t_b(){return LE};_.ud=function u_b(){ebb(this,new _ub(25,Ybb(this.B.D),50,10000000))};_.ib=function v_b(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w,x,y,z;this.A.E.c=44597;jub(this.C,this.A);this.b=new Qcb(this.A,this.B.D);this.b.j=0.2;this.b.b=0.3;this.b.g=7008.1;this.b.f=637100;b=new DGb;dAb(b.E,-1,0,1).me();jub(this.C,b);s=(fNb(),hNb('./static/textures/planets/earth_atmos_2048.jpg',(stb(),rtb),null));a=hNb('./static/textures/planets/earth_clouds_1024.png',rtb,null);j=hNb('./static/textures/planets/earth_normal_2048.jpg',rtb,null);u=hNb('./static/textures/planets/earth_specular_2048.jpg',rtb,null);i=hNb('./static/textures/planets/moon_1024.jpg',rtb,null);g=new hLb(new gqb);g.d=true;y=UGb(g).j;Urb(Gr(y.b[x9b],132),j);Vrb(Gr(y.b[z9b],132),new s1(0.85));Urb(Gr(y.b[b9b],132),s);Urb(Gr(y.b[y9b],132),u);Vrb(Gr(y.b[u9b],132),W1(0));Vrb(Gr(y.b[v9b],132),W1(1));Vrb(Gr(y.b[w9b],132),W1(1));ovb(Gr(Gr(y.b[A9b],132).f,140),16777215);ovb(Gr(Gr(y.b[B9b],132).f,140),6710886);ovb(Gr(Gr(y.b[C9b],132).f,140),0);Vrb(Gr(y.b[D9b],132),new s1(20));ivb(Gr(Gr(y.b[A9b],132).f,140));ivb(Gr(Gr(y.b[B9b],132).f,140));ivb(Gr(Gr(y.b[C9b],132).f,140));c=new hFb(6371,100,50);Lvb(c);this.e=new gMb(c,g);this.e.H.e=0;this.e.H.c=0.41;jub(this.C,this.e);e=new MJb;HJb(e,new tvb(16777215));e.q=a;e.O=true;this.c=new gMb(c,e);eAb(this.c.J,1.005);this.c.H.c=0.41;jub(this.C,this.c);f=new wKb;qKb(f,new tvb(16777215));f.u=i;this.d=new gMb(c,f);dAb(this.d.E,31855,0,0);eAb(this.d.J,0.23);jub(this.C,this.d);w=new Uvb;for(d=0;d<1500;++d){z=new hAb;Bzb(z,Math.random()*2-1);Czb(z,Math.random()*2-1);fAb(z,Math.random()*2-1);z.le(6371);w.J.Jc(z)}k=new WKb;UKb(k,new tvb(5592405));k.e=2;k.f=false;x=new U6;yr(x.b,x.c++,k);n=new WKb;UKb(n,new tvb(5592405));n.e=1;n.f=false;yr(x.b,x.c++,n);o=new WKb;UKb(o,new tvb(3355443));o.e=2;o.f=false;yr(x.b,x.c++,o);p=new WKb;UKb(p,new tvb(3815994));p.e=1;p.f=false;yr(x.b,x.c++,p);q=new WKb;UKb(q,new tvb(1710618));q.e=2;q.f=false;yr(x.b,x.c++,q);r=new WKb;UKb(r,new tvb(1710618));r.e=1;r.f=false;yr(x.b,x.c++,r);for(d=10;d<30;++d){v=new qMb(w,Gr((v5(d%6,x.c),x.b[d%6]),179));Bzb(v.H,Math.random()*6);Czb(v.H,Math.random()*6);fAb(v.H,Math.random()*6);t=d*10;eAb(v.J,t);v.A=false;sub(v);jub(this.C,v)}this.B.O=false;this.B.I=false;this.f=od()};_.td=function w_b(){};_.jb=function x_b(a){var b,c;c=(od()-this.f)*0.001;wzb(this.e.H,0.1*c);wzb(this.c.H,0.125*c);b=c*0.1;mub(this.d,new iAb(Math.cos(b)*this.d.E.d-Math.sin(b)*this.d.E.c,0,Math.sin(b)*this.d.E.d+Math.cos(b)*this.d.E.c));wzb(this.d.H,-b);Ocb(this.b);wmb(this.B,false,false,false);this.f=od()};_.b=null;_.c=null;_.d=null;_.e=null;_.f=0;var Ey=g1(H8b,'TrackballControl'),Dy=h1(H8b,'TrackballControl$STATE',fdb),XF=f1('[Lthothbot.parallax.core.client.controls.','TrackballControl$STATE;'),xz=g1(o9b,'ShaderNormalMap'),wz=g1(o9b,'ShaderNormalMap_Resources_default_InlineClientBundleGenerator'),uz=g1(o9b,'ShaderNormalMap_Resources_default_InlineClientBundleGenerator$1'),vz=g1(o9b,'ShaderNormalMap_Resources_default_InlineClientBundleGenerator$2'),LE=g1(m8b,'TrackballEarth$DemoScene');R4b(pe)(26);