function Tsc(){}
function Xsc(){}
function $sc(){}
function lwc(){}
function pwc(){}
function swc(){}
function ejc(a){this.a=a}
function atc(){atc=TKc;Rsc=new Xsc}
function btc(){btc=TKc;Ssc=new $sc}
function Psc(){Psc=TKc;Osc=new Tsc}
function hwc(){hwc=TKc;gwc=new lwc}
function uwc(){uwc=TKc;jwc=new pwc}
function vwc(){vwc=TKc;kwc=new swc}
function cwc(){iIb.call(this,(hwc(),gwc))}
function Msc(){iIb.call(this,(Psc(),Osc))}
function ajc(){K8b.call(this);this.d=0;this.e=0}
function _ic(a,b){var c,d,e,f,g,i;d=new cNb(bSc);d.k=4;o4b(d.B,0.998,0.998);o4b(d.A,0.001,0.001);YMb(d,(oFb(),nFb));ZMb(d,nFb);MMb(d,(hCb(),fCb));e=new cNb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');o4b(e.B,0.998,0.998);o4b(e.A,0.001,0.001);YMb(e,nFb);ZMb(e,nFb);MMb(e,fCb);c=new cNb('./static/models/obj/leeperrysmith/Map-COL.jpg');o4b(c.B,0.998,0.998);o4b(c.A,0.001,0.001);YMb(c,nFb);ZMb(c,nFb);MMb(c,fCb);g=new cwc;i=g.i;bMb(su(i.a[dSc],225),(yib(),yib(),xib));bMb(su(i.a[eSc],225),xib);bMb(su(i.a[fSc],225),a.b.e);bMb(su(i.a[gSc],225),c);bMb(su(i.a[hSc],225),d);bMb(su(i.a[iSc],225),e);i2b(su(su(i.a[jSc],225).d,293),10526880);i2b(su(su(i.a[kSc],225).d,293),10526880);i2b(su(su(i.a[lSc],225).d,293),10526880);bMb(su(i.a[mSc],225),new xjb(0.145));bMb(su(i.a[nSc],225),new xjb(0.75));bMb(su(i.a[oSc],225),new xjb(16));P5b(su(su(i.a[pSc],225).d,301),0.001,0.001,0.998,0.998);f=new x1b(g);f.c=true;a.c=new D6b(b,f);q4b(a.c._,-50);$4b(a.c.eb,100);EOb(a.c,true);a.c.U=true;zOb(a.H,a.c)}
var dSc='enableBump',fSc='tBeckmann',mSc='uRoughness',nSc='uSpecularBrightness';OT(1112,1,BMc);_.zb=function Zic(){k8b(this.b,new ajc(this.a))};OT(1113,967,{323:1},ajc);_.nb=function bjc(){var a,b,c,d,e,f,g;this.a=new zPb(27,lGb(this.G.k),1,10000);b5b(this.a._,1200);zOb(this.H,new $Wb(5592405));d=new UXb(16777215,1.5,1000);_4b(d._,0,0,600);zOb(this.H,d);f=new aYb(1);_4b(f._,0.05,0.05,1);zOb(this.H,f);f._.lf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new BXb(16777215,0.85);_4b(a._,1,-0.5,1);h2b(a.L,0.6,1,0.85);zOb(this.H,a);a._.lf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new BXb(16777215,0.85);_4b(b._,1,-0.5,-1);zOb(this.H,b);new jHc(new Msc);c=new jHc(new YHc);c.a=true;g=new zNb(512,512);RMb(g,(YDb(),SDb));PMb(g,(NDb(),LDb));MMb(g,(hCb(),fCb));g.f=false;this.b=new _Gc(this.G.k,g);new Fxc(cSc,new ejc(this));JGb(this.G.k,new l2b(5001561),1);e=new CFb(this.G.k,this.H);e.g=false;FGb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function cjc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){r2b(this.c.cb,0.05*(b-this.c.cb.d));q2b(this.c.cb,0.05*(c-this.c.cb.c))}fGb(this.G.k);xGb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;OT(1114,1,{},ejc);_.yf=function fjc(a,b){_ic(this.a,su(b,241))};OT(1246,731,oMc,Msc);_.Kd=function Nsc(){};var Osc;OT(1247,1,{},Tsc);_.Nd=function Usc(){return atc(),Rsc};_.Od=function Vsc(){return btc(),Ssc};var Rsc,Ssc;OT(1248,1,{},Xsc);_.mc=function Ysc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};OT(1249,1,{},$sc);_.mc=function _sc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};OT(1325,731,oMc,cwc);_.Kd=function dwc(){dIb(this,AMb());dIb(this,BMb());dIb(this,CMb());YHb(this,dSc,new dMb((wMb(),lMb),dkb(0)));YHb(this,eSc,new dMb(lMb,dkb(0)));YHb(this,gSc,new cMb(oMb));YHb(this,fSc,new cMb(oMb));YHb(this,kSc,new dMb(hMb,new l2b(15658734)));YHb(this,lSc,new dMb(hMb,new l2b(1118481)));YHb(this,jSc,new dMb(hMb,new l2b(328965)));YHb(this,qSc,new dMb(iMb,new xjb(1)));YHb(this,mSc,new dMb(iMb,new xjb(0.15)));YHb(this,nSc,new dMb(iMb,new xjb(0.75)));YHb(this,hSc,new cMb(oMb));YHb(this,oSc,new dMb(iMb,new xjb(1)));YHb(this,iSc,new cMb(oMb));YHb(this,pSc,new dMb(uMb,new T5b(0,0,1,1)));YHb(this,'uWrapRGB',new dMb(sMb,new f5b(0.75,0.375,0.1875)))};_.Ld=function ewc(a){var b,c;c=new Iqb(iu(LR,YKc,1,[rSc,sSc,tSc]));b=new Iqb(iu(LR,YKc,1,[uSc,vSc,wSc]));fIb(this,nIb(a,iu(OR,YKc,173,[c,b])))};_.Md=function fwc(a){var b,c;c=new Iqb(iu(LR,YKc,1,[xSc]));b=new Iqb(iu(LR,YKc,1,[ySc]));gIb(this,nIb(a,iu(OR,YKc,173,[c,b])))};var gwc;OT(1326,1,{},lwc);_.Nd=function mwc(){return uwc(),jwc};_.Od=function nwc(){return vwc(),kwc};var jwc,kwc;OT(1327,1,{},pwc);_.mc=function qwc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};OT(1328,1,{},swc);_.mc=function twc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var cM=ljb(tRc,'MaterialsBumpmapSkin$DemoScene',1113),bM=ljb(tRc,'MaterialsBumpmapSkin$DemoScene$1',1114),uO=ljb(mRc,'BeckmannShader',1246),tO=ljb(mRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1247),rO=ljb(mRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1248),sO=ljb(mRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1249),JO=ljb(mRc,'SkinSimpleShader',1325),IO=ljb(mRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1326),GO=ljb(mRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1327),HO=ljb(mRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1328);PMc(xi)(18);