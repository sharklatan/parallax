function fmc(){}
function Xvc(){}
function ewc(){}
function bwc(){}
function jwc(){}
function iwc(){}
function nwc(){}
function mwc(){}
function PFc(){}
function zHc(){}
function IHc(){}
function FHc(){}
function NHc(){}
function MHc(){}
function RHc(){}
function QHc(){}
function gmc(){j7b.call(this)}
function Yvc(){GEb.call(this,(awc(),_vc))}
function AHc(){GEb.call(this,(EHc(),DHc))}
function EHc(){EHc=KKc;DHc=new IHc}
function UHc(){UHc=KKc;GHc=new NHc}
function VHc(){VHc=KKc;HHc=new RHc}
function awc(){awc=KKc;_vc=new ewc}
function qwc(){qwc=KKc;cwc=new jwc}
function rwc(){rwc=KKc;dwc=new nwc}
function QFc(){this.c=new p4b(new AHc);CJb(Mq(q_b(this.c).j.b[PPc],166),(beb(),beb(),_db));CJb(Mq(q_b(this.c).j.b[QPc],166),new _eb(0.35));CJb(Mq(q_b(this.c).j.b[RPc],166),new _eb(0.95));CJb(Mq(q_b(this.c).j.b[SPc],166),Mfb(2048));this.f=true;this.g=true}
var PPc='grayscale',QPc='nIntensity',SPc='sCount',RPc='sIntensity',IPc='texture1',KPc='texture2';_=amc.prototype;_.wb=function emc(){f7b(this.c,new gmc(this.b))};_=gmc.prototype=fmc.prototype=new i7b;_.gC=function hmc(){return PG};_.Gd=function imc(a){ySb(Mq(Mq(this.e.b[HPc],166).e,192),a.b.p);zSb(Mq(Mq(this.e.b[HPc],166).e,192),a.b.o)};_.nb=function jmc(){var a,b,c,d,e,f,g;lp((_ub(),$ub),(kvb(),jvb),this);this.b=new jNb(35,eDb(this.D.o),1,3000);this.b.X.c=4;d=new p4b(new Yvc);this.e=q_b(d).j;f=new AKb('./static/textures/lava/cloud.png');xKb(f,(BCb(),ACb));yKb(f,ACb);CJb(Mq(this.e.b[IPc],166),f);g=new AKb(JPc);xKb(g,ACb);yKb(g,ACb);CJb(Mq(this.e.b[KPc],166),g);this.c=new b5b(new pYb(0.65,0.3,30,30),d);this.c.$.d=0.3;kMb(this.E,this.c);a=new VFc(this.D.o);e=new dGc(this.E,this.b);b=new MFc(1.25);c=new QFc;c.b=true;gmb(a.c,e);gmb(a.c,b);gmb(a.c,c);this.D.o.O=false;this.d=Uc()};_.ob=function kmc(a){var b;b=(Uc()-this.d)*0.001*5;CJb(Mq(this.e.b[LPc],166),new _eb(Mq(Mq(this.e.b[LPc],166).e,95).b+0.2*b));sSb(this.c.$,0.05*b);tSb(this.c.$,0.0125*b);bDb(this.D.o);this.d=Uc();jDb(this.D.o,this.E,this.b,null,false)};_.cM={38:1,131:1};_.b=null;_.c=null;_.d=0;_.e=null;_=Yvc.prototype=Xvc.prototype=new sEb;_.gC=function Zvc(){return tI};_.Jd=function $vc(){vEb(this,MPc,new EJb((YJb(),KJb),new _eb(0.45)));vEb(this,NPc,new EJb(UJb,new fTb(0,0,0)));vEb(this,LPc,new EJb(KJb,new _eb(1)));vEb(this,HPc,new EJb(SJb,new ASb));vEb(this,OPc,new EJb(SJb,new BSb(3,1)));vEb(this,IPc,new DJb(QJb));vEb(this,KPc,new DJb(QJb))};_.cM={164:1};var _vc;_=ewc.prototype=bwc.prototype=new Jb;_.gC=function fwc(){return sI};_.Md=function gwc(){return qwc(),cwc};_.Nd=function hwc(){return rwc(),dwc};var cwc=null,dwc=null;_=jwc.prototype=iwc.prototype=new Jb;_.gC=function kwc(){return qI};_.Yb=function lwc(){return 'uniform float time;\r\nuniform vec2 resolution;\r\n\r\nuniform float fogDensity;\r\nuniform vec3 fogColor;\r\n\r\nuniform sampler2D texture1;\r\nuniform sampler2D texture2;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main( void ) {\r\n\r\n\tvec2 position = -1.0 + 2.0 * vUv;\r\n\r\n\tvec4 noise = texture2D( texture1, vUv );\r\n\tvec2 T1 = vUv + vec2( 1.5, -1.5 ) * time  *0.02;\r\n\tvec2 T2 = vUv + vec2( -0.5, 2.0 ) * time * 0.01;\r\n\r\n\tT1.x += noise.x * 2.0;\r\n\tT1.y += noise.y * 2.0;\r\n\tT2.x -= noise.y * 0.2;\r\n\tT2.y += noise.z * 0.2;\r\n\r\n\tfloat p = texture2D( texture1, T1 * 2.0 ).a;\r\n\r\n\tvec4 color = texture2D( texture2, T2 * 2.0 );\r\n\tvec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );\r\n\r\n\tif( temp.r > 1.0 ){ temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }\r\n\tif( temp.g > 1.0 ){ temp.rb += temp.g - 1.0; }\r\n\tif( temp.b > 1.0 ){ temp.rg += temp.b - 1.0; }\r\n\r\n\tgl_FragColor = temp;\r\n\r\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\tconst float LOG2 = 1.442695;\r\n\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\r\n\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\r\n\r\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\r\n\r\n}\r\n'};_=nwc.prototype=mwc.prototype=new Jb;_.gC=function owc(){return rI};_.Yb=function pwc(){return 'uniform vec2 uvScale;\r\nvarying vec2 vUv;\r\n\r\nvoid main()\r\n{\r\n\r\n\tvUv = uvScale * uv;\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}'};_=QFc.prototype=PFc.prototype=new HFc;_.gC=function RFc(){return BJ};_.Hg=function SFc(a,b,c){CJb(Mq(q_b(this.c).j.b[_Oc],166),a.e);CJb(Mq(q_b(this.c).j.b[LPc],166),new _eb(Mq(Mq(q_b(this.c).j.b[LPc],166).e,95).b+b));iZb(a.d,this.c);this.b?jDb(a.o,a.p,a.b,null,false):jDb(a.o,a.p,a.b,a.i,false)};_.cM={283:1};_.b=false;_.c=null;_=AHc.prototype=zHc.prototype=new sEb;_.gC=function BHc(){return WJ};_.Jd=function CHc(){vEb(this,_Oc,new DJb((YJb(),QJb)));vEb(this,LPc,new EJb(KJb,new _eb(0)));vEb(this,QPc,new EJb(KJb,new _eb(0.5)));vEb(this,RPc,new EJb(KJb,new _eb(0.05)));vEb(this,SPc,new EJb(NJb,Mfb(4096)));vEb(this,PPc,new EJb(NJb,(beb(),beb(),aeb)))};_.cM={164:1};var DHc;_=IHc.prototype=FHc.prototype=new Jb;_.gC=function JHc(){return VJ};_.Md=function KHc(){return UHc(),GHc};_.Nd=function LHc(){return VHc(),HHc};var GHc=null,HHc=null;_=NHc.prototype=MHc.prototype=new Jb;_.gC=function OHc(){return TJ};_.Yb=function PHc(){return '// control parameter\r\nuniform float time;\r\n\r\nuniform bool grayscale;\r\n\r\n// noise effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float nIntensity;\r\n\r\n// scanlines effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float sIntensity;\r\n\r\n// scanlines effect count value (0 = no effect, 4096 = full effect)\r\nuniform float sCount;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\t// sample the source\r\n\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\r\n\r\n\t// make some noise\r\n\tfloat x = vUv.x * vUv.y * time *  1000.0;\r\n\tx = mod( x, 13.0 ) * mod( x, 123.0 );\r\n\tfloat dx = mod( x, 0.01 );\r\n\r\n\t// add noise\r\n\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\r\n\r\n\t// get us a sine and cosine\r\n\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\r\n\r\n\t// add scanlines\r\n\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\r\n\r\n\t// interpolate between source and result by intensity\r\n\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\r\n\r\n\t// convert to grayscale if desired\r\n\tif( grayscale ) {\r\n\r\n\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\r\n\r\n\t}\r\n\r\n\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\r\n\r\n}\r\n'};_=RHc.prototype=QHc.prototype=new Jb;_.gC=function SHc(){return UJ};_.Yb=function THc(){return jPc};var PG=Qeb(uOc,'MaterialsShaderLava$DemoScene',RD),tI=Qeb(xOc,'LavaShader',$A),sI=Qeb(xOc,'LavaShader_Resources_default_InlineClientBundleGenerator',Hx),qI=Qeb(xOc,'LavaShader_Resources_default_InlineClientBundleGenerator$1',Hx),rI=Qeb(xOc,'LavaShader_Resources_default_InlineClientBundleGenerator$2',Hx),BJ=Qeb(TPc,'FilmPass',CJ),WJ=Qeb(UPc,'FilmShader',$A),VJ=Qeb(UPc,'FilmShader_Resources_default_InlineClientBundleGenerator',Hx),TJ=Qeb(UPc,'FilmShader_Resources_default_InlineClientBundleGenerator$1',Hx),UJ=Qeb(UPc,'FilmShader_Resources_default_InlineClientBundleGenerator$2',Hx);_Kc(Wd)(30);