function cjc(){}
function ijc(){}
function Gtc(){}
function Ptc(){}
function Mtc(){}
function Utc(){}
function Ttc(){}
function Ytc(){}
function Xtc(){}
function Xwc(){}
function Pwc(){}
function $wc(){}
function dxc(){}
function cxc(){}
function hxc(){}
function gxc(){}
function ejc(){j7b.call(this)}
function Htc(){GEb.call(this,(Ltc(),Ktc))}
function Qwc(){GEb.call(this,(Wwc(),Vwc))}
function Wwc(){Wwc=KKc;Vwc=new $wc}
function kxc(){kxc=KKc;Ywc=new dxc}
function lxc(){lxc=KKc;Zwc=new hxc}
function Ltc(){Ltc=KKc;Ktc=new Ptc}
function _tc(){_tc=KKc;Ntc=new Utc}
function auc(){auc=KKc;Otc=new Ytc}
function jjc(a,b){this.b=a;this.c=b}
function djc(a,b){var c,d,e,f,g,i;d=new AKb(WOc);d.n=4;xSb(d.y,0.998,0.998);xSb(d.x,0.001,0.001);xKb(d,(BCb(),ACb));yKb(d,ACb);nKb(d,(Uzb(),Szb));e=new AKb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');xSb(e.y,0.998,0.998);xSb(e.x,0.001,0.001);xKb(e,ACb);yKb(e,ACb);nKb(e,Szb);c=new AKb('./static/models/obj/leeperrysmith/Map-COL.jpg');xSb(c.y,0.998,0.998);xSb(c.x,0.001,0.001);xKb(c,ACb);yKb(c,ACb);nKb(c,Szb);g=new Qwc;i=g.j;CJb(Mq(i.b[YOc],166),(beb(),beb(),aeb));CJb(Mq(i.b[ZOc],166),aeb);CJb(Mq(i.b[$Oc],166),a.c.f);CJb(Mq(i.b[_Oc],166),c);CJb(Mq(i.b[aPc],166),d);CJb(Mq(i.b[bPc],166),e);ANb(Mq(Mq(i.b[cPc],166).e,178),10526880);ANb(Mq(Mq(i.b[dPc],166).e,178),10526880);ANb(Mq(Mq(i.b[ePc],166).e,178),10526880);CJb(Mq(i.b[fPc],166),new _eb(0.145));CJb(Mq(i.b[gPc],166),new _eb(0.75));CJb(Mq(i.b[hPc],166),new _eb(16));NTb(Mq(Mq(i.b[iPc],166).e,194),0.001,0.001,0.998,0.998);f=new p4b(g);f.d=true;a.d=new b5b(b,f);a.d.X.e=-50;aTb(a.d.ab,100);a.d.N=true;a.d.O=true;kMb(a.E,a.d)}
var YOc='enableBump',$Oc='tBeckmann',fPc='uRoughness',gPc='uSpecularBrightness';_=Zic.prototype;_.wb=function bjc(){f7b(this.c,new ejc(this.b))};_=ejc.prototype=cjc.prototype=new i7b;_.gC=function fjc(){return iG};_.nb=function gjc(){var a,b,c,d,e,f,g,i,j;this.b=new jNb(27,eDb(this.D.o),1,10000);this.b.X.c=1200;kMb(this.E,new OZb(5592405));f=new L$b(16777215,1.5,1000);_Sb(f.X,0,0,600);kMb(this.E,f);i=new Z$b(1);_Sb(i.X,0.05,0.05,1);kMb(this.E,i);i.X.Ae(700);i.N=true;i.v=true;i.F=2048;i.D=2048;i.z=200;i.y=1500;i.d=40;i.w=-0.005;i.B=0.15;b=new r$b(16777215,0.85);_Sb(b.X,1,-0.5,1);zNb(b.I,0.6,0.3,1);kMb(this.E,b);b.X.Ae(500);b.N=true;b.F=2048;b.D=2048;b.z=200;b.y=1500;b.f=-500;b.g=500;b.i=500;b.e=-500;b.w=-0.005;b.B=0.15;c=new r$b(16777215,0.85);_Sb(c.X,1,-0.5,-1);kMb(this.E,c);new hGc(new Htc);d=new hGc(new dHc);d.b=true;j=new fLb(512,512);rKb(j,(fBb(),_Ab));pKb(j,(VAb(),TAb));nKb(j,(Uzb(),Szb));j.g=false;this.c=new WFc(this.D.o,j);e=new $xc;try{Nxc(e,XOc,new jjc(this,e))}catch(a){a=eM(a);if(Pq(a,41)){_Lb();JP($Lb,(pP(),nP),FOc)}else throw a}rDb(this.D.o,5001561,1);g=new UCb(this.D.o,this.E);g.g=false;this.D.o.O=false;this.D.o.Q=true;this.D.o.R=true;this.D.o.T=true};_.ob=function hjc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){tSb(this.d.$,0.05*(b-this.d.$.e));sSb(this.d.$,0.05*(c-this.d.$.d))}bDb(this.D.o);jDb(this.D.o,this.E,this.b,null,false)};_.cM={261:1};_.b=null;_.c=null;_.d=null;_.e=0;_.f=0;_=jjc.prototype=ijc.prototype=new Jb;_.gC=function kjc(){return hG};_.zf=function ljc(){djc(this.b,this.c.b)};_.b=null;_.c=null;_=Htc.prototype=Gtc.prototype=new sEb;_.gC=function Itc(){return oI};_.Jd=function Jtc(){};_.cM={164:1};var Ktc;_=Ptc.prototype=Mtc.prototype=new Jb;_.gC=function Qtc(){return nI};_.Md=function Rtc(){return _tc(),Ntc};_.Nd=function Stc(){return auc(),Otc};var Ntc=null,Otc=null;_=Utc.prototype=Ttc.prototype=new Jb;_.gC=function Vtc(){return lI};_.Yb=function Wtc(){return 'varying vec2 vUv;\r\n\r\nfloat PHBeckmann( float ndoth, float m ) {\r\n\r\n\tfloat alpha = acos( ndoth );\r\n\tfloat ta = tan( alpha );\r\n\r\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\r\n\treturn val;\r\n\r\n}\r\n\r\nfloat KSTextureCompute( vec2 tex ) {\r\n\r\n\t// Scale the value to fit within [0,1]  invert upon lookup.\r\n\r\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tfloat x = KSTextureCompute( vUv );\r\n\r\n\tgl_FragColor = vec4( x, x, x, 1.0 );\r\n\r\n}\r\n'};_=Ytc.prototype=Xtc.prototype=new Jb;_.gC=function Ztc(){return mI};_.Yb=function $tc(){return jPc};_=Qwc.prototype=Pwc.prototype=new sEb;_.gC=function Rwc(){return BI};_.Jd=function Swc(){CEb(this,bKb());CEb(this,cKb());CEb(this,dKb());vEb(this,YOc,new EJb((YJb(),NJb),Mfb(0)));vEb(this,ZOc,new EJb(NJb,Mfb(0)));vEb(this,_Oc,new DJb(QJb));vEb(this,$Oc,new DJb(QJb));vEb(this,dPc,new EJb(JJb,new FNb(15658734)));vEb(this,ePc,new EJb(JJb,new FNb(1118481)));vEb(this,cPc,new EJb(JJb,new FNb(328965)));vEb(this,kPc,new EJb(KJb,new _eb(1)));vEb(this,fPc,new EJb(KJb,new _eb(0.15)));vEb(this,gPc,new EJb(KJb,new _eb(0.75)));vEb(this,aPc,new DJb(QJb));vEb(this,hPc,new EJb(KJb,new _eb(1)));vEb(this,bPc,new DJb(QJb));vEb(this,iPc,new EJb(WJb,new QTb(0,0,1,1)));vEb(this,'uWrapRGB',new EJb(UJb,new fTb(0.75,0.375,0.1875)))};_.Kd=function Twc(a){var b,c;c=new Vmb(Dq(YK,{88:1,106:1},1,[lPc,mPc,nPc]));b=new Vmb(Dq(YK,{88:1,106:1},1,[oPc,pPc,qPc]));EEb(this,MEb(a,Dq(aL,{88:1,106:1},117,[c,b])))};_.Ld=function Uwc(a){var b,c;c=new Vmb(Dq(YK,{88:1,106:1},1,[rPc]));b=new Vmb(Dq(YK,{88:1,106:1},1,[sPc]));FEb(this,MEb(a,Dq(aL,{88:1,106:1},117,[c,b])))};_.cM={164:1};var Vwc;_=$wc.prototype=Xwc.prototype=new Jb;_.gC=function _wc(){return AI};_.Md=function axc(){return kxc(),Ywc};_.Nd=function bxc(){return lxc(),Zwc};var Ywc=null,Zwc=null;_=dxc.prototype=cxc.prototype=new Jb;_.gC=function exc(){return yI};_.Yb=function fxc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 uAmbientColor;\r\nuniform vec3 uDiffuseColor;\r\nuniform vec3 uSpecularColor;\r\nuniform float uOpacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * uDiffuseColor * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * uSpecularColor * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// directional lights\r\n\t\t\t\t\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += uDiffuseColor * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += uSpecularColor * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * uAmbientColor ) + specularTotal;\r\n\r\n[*]\r\n\r\n}'};_=hxc.prototype=gxc.prototype=new Jb;_.gC=function ixc(){return zI};_.Yb=function jxc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalMatrix * normal;\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var iG=Qeb(uOc,'MaterialsBumpmapSkin$DemoScene',RD),hG=Qeb(uOc,'MaterialsBumpmapSkin$DemoScene$1',Hx),oI=Qeb(xOc,'BeckmannShader',$A),nI=Qeb(xOc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',Hx),lI=Qeb(xOc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',Hx),mI=Qeb(xOc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',Hx),BI=Qeb(xOc,'SkinSimpleShader',$A),AI=Qeb(xOc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',Hx),yI=Qeb(xOc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',Hx),zI=Qeb(xOc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',Hx);_Kc(Wd)(23);