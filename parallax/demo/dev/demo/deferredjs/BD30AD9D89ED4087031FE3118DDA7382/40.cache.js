function MJb(){}
function QJb(){}
function TJb(){}
function Tvc(){}
function Pvc(){}
function Wvc(){}
function gwc(){}
function kwc(){}
function nwc(){}
function zwc(){}
function Dwc(){}
function Gwc(){}
function cwc(){cwc=mMc;bwc=new gwc}
function pwc(){pwc=mMc;ewc=new kwc}
function qwc(){qwc=mMc;fwc=new nwc}
function vwc(){vwc=mMc;uwc=new zwc}
function Iwc(){Iwc=mMc;xwc=new Dwc}
function Jwc(){Jwc=mMc;ywc=new Gwc}
function Lvc(){Lvc=mMc;Kvc=new Pvc}
function Yvc(){Yvc=mMc;Nvc=new Tvc}
function Zvc(){Zvc=mMc;Ovc=new Wvc}
function IJb(){IJb=mMc;HJb=new MJb}
function VJb(){VJb=mMc;KJb=new QJb}
function WJb(){WJb=mMc;LJb=new TJb}
function kGb(a,b){XGb(a,b);jGb(a,false)}
function Nrc(a,b){this.a=a;this.b=b}
function A_b(){cZb.call(this);this.a=false;this.b=1}
function DJb(){nIb.call(this,(IJb(),HJb))}
function Ivc(){nIb.call(this,(Lvc(),Kvc))}
function _vc(){nIb.call(this,(cwc(),bwc))}
function swc(){nIb.call(this,(vwc(),uwc))}
function Jrc(){j9b.call(this);this.t=new H5b(0,1000,-1000);this.r=new G5b}
function y5b(a,b){var c;c=new Q3b;O3b(c,b.p,D3b(c,b.X));return q5b(a,c)}
var oVc='bgColor',qVc='fAspect',nVc='fGodRayIntensity',rVc='fStepSize',eVc='mFar',dVc='mNear',tVc='tColors',uVc='tGodRays',sVc='tInput',pVc='vSunPositionScreenSpace',vVc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';YT(747,729,JNc,DJb);_.Kd=function EJb(){bIb(this,dVc,new DMb((WMb(),IMb),new Bjb(1)));bIb(this,eVc,new DMb(IMb,new Bjb(2000)));bIb(this,JTc,new DMb(IMb,new Bjb(1)))};_.Ld=function FJb(a){var b,c;c=new Mqb(gu(VR,rMc,1,[fVc]));b=new Mqb(gu(VR,rMc,1,[gVc]));kIb(this,sIb(a,gu(YR,rMc,173,[c,b])))};_.Md=function GJb(a){var b,c;c=new Mqb(gu(VR,rMc,1,[hVc,iVc]));b=new Mqb(gu(VR,rMc,1,[jVc,kVc,lVc]));lIb(this,sIb(a,gu(YR,rMc,173,[c,b])))};var HJb;YT(748,1,{},MJb);_.Nd=function NJb(){return VJb(),KJb};_.Od=function OJb(){return WJb(),LJb};var KJb,LJb;YT(749,1,{},QJb);_.mc=function RJb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};YT(750,1,{},TJb);_.mc=function UJb(){return mVc};YT(919,912,{278:1,281:1},A_b);_.Me=function B_b(){var a;return a=new A_b,MYb(this,a),a.a=this.a,a.b=this.b,a};_.Ne=function C_b(){return new DJb};_.Je=function D_b(){return this.b};_.Ke=function E_b(){return this.a};_.Oe=function F_b(a,b){var c;RYb(this,b);c=QYb(this).i;if(a.cZ==OG){BMb(qu(c.a[dVc],225),new Bjb(qu(a,235).d));BMb(qu(c.a[eVc],225),new Bjb(qu(a,235).b))}BMb(qu(c.a[JTc],225),new Bjb(this.Z))};_.a=false;_.b=0;YT(1226,1,WNc);_.zb=function Hrc(){L8b(this.b,new Jrc(this.a))};YT(1227,971,{335:1},Jrc);_.nb=function Krc(){var a,b,c,d;this.a=new ZPb(70,qGb(this.G.k),1,3000);D5b(this.a._,200);this.b=new A_b;c=new X$b;R$b(c,new M2b(0));V$b(c,(F$b(),C$b));new $yc('./static/models/obj/tree/tree.js',new Nrc(this,c));a=new qWb(1,20,10);this.s=new d7b(a,c);A5b(this.s.eb,20);ZOb(this.H,this.s);$Gb(this.G.k,false);KGb(this.G.k,false);NGb(this.G.k,1297,1);this.j=new R7b;this.i=new MPb(this.G.k.Z,this.G.k.Y,-10000,10000);D5b(this.i._,100);ZOb(this.j,this.i);this.n=new ZNb(this.G.k.Z,this.G.k.Y);pNb(this.n,(bEb(),XDb));nNb(this.n,(SDb(),QDb));kNb(this.n,(mCb(),lCb));this.o=new ZNb(this.G.k.Z,this.G.k.Y);pNb(this.o,XDb);nNb(this.o,QDb);kNb(this.o,lCb);d=~~(this.G.k.Z/4);b=~~(this.G.k.Y/4);this.p=new ZNb(d,b);pNb(this.p,XDb);nNb(this.p,QDb);kNb(this.p,lCb);this.q=new ZNb(d,b);pNb(this.q,XDb);nNb(this.q,QDb);kNb(this.q,lCb);this.e=new Y1b(new _vc);this.c=new Y1b(new Ivc);BMb(qu(vRb(QYb(this.c).i,nVc),225),new Bjb(0.75));this.d=new Y1b(new swc);J2b(qu(qu(vRb(QYb(this.d).i,oVc),225).d,292),1297);J2b(qu(qu(vRb(QYb(this.d).i,xUc),225).d,292),16772608);this.k=new d7b(new fWb(this.G.k.Z,this.G.k.Y),this.e);D5b(this.k._,-9900);ZOb(this.j,this.k)};_.ob=function Lrc(a){var b,c,d,e,f,g;f=a/4000;Q4b(this.s._,200*Bkb(f));D5b(this.s._,200*Kkb(f)-100);L4b(this.a._,(this.f-this.a._.c)*0.036);M4b(this.a._,(-this.g-this.a._.d)*0.036);vPb(this.a,this.H._);y5b(this.r.hf(this.t),this.a);Q4b(this.r,(this.r.c+1)/2);R4b(this.r,(this.r.d+1)/2);P4b(qu(qu(vRb(QYb(this.e).i,pVc),225).d,296),this.r.c,this.r.d);P4b(qu(qu(vRb(QYb(this.d).i,pVc),225).d,296),this.r.c,this.r.d);kGb(this.G.k,this.n);g=this.G.k.Z;b=this.G.k.Y;d=0.74*b;e=0.74*b;Q4b(this.r,this.r.c*g);R4b(this.r,this.r.d*b);YGb(this.G.k,yu(this.r.c-e/2),yu(this.r.d-d/2),yu(e),yu(d));pGb(this.G.k,true);BMb(qu(vRb(QYb(this.d).i,qVc),225),new Bjb(g/b));this.j.c=this.d;CGb(this.G.k,this.j,this.i,this.n,false);pGb(this.G.k,false);this.H.c=null;CGb(this.G.k,this.H,this.a,this.n,false);this.H.c=this.b;CGb(this.G.k,this.H,this.a,this.o,true);c=Hkb(6,-1);BMb(qu(vRb(QYb(this.e).i,rVc),225),new Bjb(c));BMb(qu(vRb(QYb(this.e).i,sVc),225),this.o);this.j.c=this.e;CGb(this.G.k,this.j,this.i,this.q,false);c=Hkb(6,-2);BMb(qu(vRb(QYb(this.e).i,rVc),225),new Bjb(c));BMb(qu(vRb(QYb(this.e).i,sVc),225),this.q);CGb(this.G.k,this.j,this.i,this.p,false);c=Hkb(6,-3);BMb(qu(vRb(QYb(this.e).i,rVc),225),new Bjb(c));BMb(qu(vRb(QYb(this.e).i,sVc),225),this.p);CGb(this.G.k,this.j,this.i,this.q,false);BMb(qu(vRb(QYb(this.c).i,tVc),225),this.n);BMb(qu(vRb(QYb(this.c).i,uVc),225),this.q);this.j.c=this.c;CGb(this.G.k,this.j,this.i,null,false);this.j.c=null};_.f=0;_.g=0;YT(1228,1,{},Nrc);_.yf=function Orc(a,b){var c;c=new d7b(b,this.b);B5b(c._,0,-150,-150);A5b(c.eb,400);c.W=false;y3b(c.V,c._,c.ab,c.eb);c.Y=true;ZOb(this.a.H,c)};YT(1312,729,JNc,Ivc);_.Kd=function Jvc(){bIb(this,tVc,new CMb((WMb(),OMb)));bIb(this,uVc,new CMb(OMb));bIb(this,nVc,new DMb(IMb,new Bjb(0.69)));bIb(this,pVc,new DMb(QMb,new T4b(0.5,0.5)))};var Kvc;YT(1313,1,{},Pvc);_.Nd=function Qvc(){return Yvc(),Nvc};_.Od=function Rvc(){return Zvc(),Ovc};var Nvc,Ovc;YT(1314,1,{},Tvc);_.mc=function Uvc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};YT(1315,1,{},Wvc);_.mc=function Xvc(){return vVc};YT(1318,729,JNc,_vc);_.Kd=function awc(){bIb(this,sVc,new CMb((WMb(),OMb)));bIb(this,rVc,new DMb(IMb,new Bjb(1)));bIb(this,pVc,new DMb(QMb,new T4b(0.5,0.5)))};var bwc;YT(1319,1,{},gwc);_.Nd=function hwc(){return pwc(),ewc};_.Od=function iwc(){return qwc(),fwc};var ewc,fwc;YT(1320,1,{},kwc);_.mc=function lwc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};YT(1321,1,{},nwc);_.mc=function owc(){return vVc};YT(1324,729,JNc,swc);_.Kd=function twc(){bIb(this,pVc,new DMb((WMb(),QMb),new T4b(0.5,0.5)));bIb(this,qVc,new DMb(IMb,new Bjb(1)));bIb(this,xUc,new DMb(HMb,new M2b(16772608)));bIb(this,oVc,new DMb(HMb,new M2b(0)))};var uwc;YT(1325,1,{},zwc);_.Nd=function Awc(){return Iwc(),xwc};_.Od=function Bwc(){return Jwc(),ywc};var xwc,ywc;YT(1326,1,{},Dwc);_.mc=function Ewc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};YT(1327,1,{},Gwc);_.mc=function Hwc(){return vVc};var $N=pjb(PSc,'PostprocessingGodrays$DemoScene',1227),ZN=pjb(PSc,'PostprocessingGodrays$DemoScene$1',1228),JI=pjb(wVc,'MeshDepthMaterial',919),CO=pjb(FSc,'GodRaysGenerateShader',1318),yO=pjb(FSc,'GodRaysCombineShader',1312),GO=pjb(FSc,'GodraysFakeSunShader',1324),WF=pjb(VTc,'DepthShader',747),BO=pjb(FSc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1319),zO=pjb(FSc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1320),AO=pjb(FSc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1321),xO=pjb(FSc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1313),vO=pjb(FSc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1314),wO=pjb(FSc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1315),FO=pjb(FSc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1325),DO=pjb(FSc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1326),EO=pjb(FSc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1327),VF=pjb(VTc,'DepthShader_Resources_default_InlineClientBundleGenerator',748),TF=pjb(VTc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',749),UF=pjb(VTc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',750);iOc(xi)(40);