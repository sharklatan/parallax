function qib(){}
function zib(){}
function wib(){}
function Eib(){}
function Dib(){}
function Iib(){}
function Hib(){}
function ekb(){}
function pkb(){}
function mkb(){}
function ukb(){}
function tkb(){}
function ykb(){}
function xkb(){}
function Nsb(){}
function cub(){}
function hub(){}
function kub(){}
function Bub(){}
function Fub(){}
function aDb(){}
function Cob(a,b){a.r=b}
function cDb(){fxb.call(this)}
function lub(){Xsb.call(this,new gtb)}
function rib(){rhb.call(this,(vib(),uib))}
function fkb(){rhb.call(this,(lkb(),kkb))}
function dub(a){Xsb.call(this,a);Wsb(this,a.a)}
function iub(){gtb.call(this);this.a=(Stb(),Rtb)}
function vib(){vib=dGb;uib=new zib}
function Lib(){Lib=dGb;xib=new Eib}
function Mib(){Mib=dGb;yib=new Iib}
function lkb(){lkb=dGb;kkb=new pkb}
function Bkb(){Bkb=dGb;nkb=new ukb}
function Ckb(){Ckb=dGb;okb=new ykb}
function Osb(){Dsb.call(this,16777215);this.b=1;this.a=0;new cqb(0,0,0)}
function Cub(a){btb.call(this,a);this.a=a.a;this.b=a.c;this.d=a.f;this.c=a.e;this.j=null;this.g=a.b;Wsb(this,a.d)}
function Gub(){itb.call(this);this.a=new Pnb(328965);this.f=new Pnb(1118481);this.c=new Pnb(0);this.b=(jmb(),imb);this.d=(Stb(),Rtb)}
function bDb(){var a,b,c,d,e,f,g,i;a=bg($doc,PKb);a.width=256;a.height=256;b=a.getContext(QKb);d=b.getImageData(0,0,256,256);i=0;for(c=0,e=0,f=d.data.length;c<f;c+=4,++e){g=e%64;i=g==0?i+1:i;d.data[c]=255;d.data[c+1]=255;d.data[c+2]=255;d.data[c+3]=wp(Math.floor(g^i))}b.putImageData(d,0,0);return a}
_=rib.prototype=qib.prototype=new mhb;_.gC=function sib(){return Dw};_.Xc=function tib(){ohb(this,'mNear',new Ekb((Zkb(),Lkb),new DX(1)));ohb(this,'mFar',new Ekb(Lkb,new DX(2000)));ohb(this,sKb,new Ekb(Lkb,new DX(1)))};var uib;_=zib.prototype=wib.prototype=new Jb;_.gC=function Aib(){return Cw};_.$c=function Bib(){return Lib(),xib};_._c=function Cib(){return Mib(),yib};var xib=null,yib=null;_=Eib.prototype=Dib.prototype=new Jb;_.gC=function Fib(){return Aw};_.Jb=function Gib(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\nvoid main() {\r\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n}\r\n'};_.cM={45:1};_=Iib.prototype=Hib.prototype=new Jb;_.gC=function Jib(){return Bw};_.Jb=function Kib(){return 'void main() {\r\n\r\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n}\r\n'};_.cM={45:1};_=fkb.prototype=ekb.prototype=new mhb;_.gC=function gkb(){return Tw};_.Xc=function hkb(){nhb(this,(glb(),blb));nhb(this,clb);nhb(this,dlb);nhb(this,flb);ohb(this,tKb,new Ekb((Zkb(),Kkb),new Pnb(16777215)));ohb(this,uKb,new Ekb(Kkb,new Pnb(0)));ohb(this,'specular',new Ekb(Kkb,new Pnb(1118481)));ohb(this,'shininess',new Ekb(Lkb,new DX(30)));ohb(this,vKb,new Ekb(Vkb,new cqb(1,1,1)))};_.Yc=function ikb(a){var b,c;c=new x1(hp(HA,{79:1,80:1,84:1,95:1},1,[uJb,wKb,xKb,yKb,vJb,'uniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\r\n\t#ifdef PHONG_PER_PIXEL\r\n\t\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\t\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\t#else\r\n\t\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\t#endif\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\r\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\r\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\r\n\tuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\r\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\r\n\r\n\t#ifdef PHONG_PER_PIXEL\r\n\t\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\r\n\t#else\r\n\t\tvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\r\n\t#endif\r\n\r\n\tvarying vec3 vWorldPosition;\r\n\r\n#endif\r\n\r\n#ifdef WRAP_AROUND\r\n\tuniform vec3 wrapRGB;\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\nvarying vec3 vNormal;',wJb]));b=new x1(hp(HA,{79:1,80:1,84:1,95:1},1,[zKb,xJb,'vec3 normal = normalize( vNormal );\r\nvec3 viewPosition = normalize( vViewPosition );\r\n\r\n#ifdef DOUBLE_SIDED\r\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tvec3 pointDiffuse  = vec3( 0.0 );\r\n\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\t\t#ifdef PHONG_PER_PIXEL\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\t\t#else\r\n\t\t\tvec3 lVector = normalize( vPointLight[ i ].xyz );\r\n\t\t\tfloat lDistance = vPointLight[ i ].w;\r\n\t\t#endif\r\n\r\n\t\t// diffuse\r\n\r\n\t\tfloat dotProduct = dot( normal, lVector );\r\n\r\n\t\t#ifdef WRAP_AROUND\r\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\r\n\t\t#else\r\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t#endif\r\n\r\n\t\tpointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\r\n\r\n\t\t// specular\r\n\r\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\tfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\r\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\r\n\t\t#else\r\n\t\t\tpointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\r\n\t\t#endif\r\n\t}\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvec3 spotDiffuse  = vec3( 0.0 );\r\n\tvec3 spotSpecular = vec3( 0.0 );\r\n\r\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\r\n\t\t#ifdef PHONG_PER_PIXEL\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\t\t#else\r\n\t\t\tvec3 lVector = normalize( vSpotLight[ i ].xyz );\r\n\t\t\tfloat lDistance = vSpotLight[ i ].w;\r\n\t\t#endif\r\n\r\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\r\n\r\n\t\tif ( spotEffect > spotLightAngle[ i ] ) {\r\n\t\t\tspotEffect = pow( spotEffect, spotLightExponent[ i ] );\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\r\n\t\t\t#ifdef WRAP_AROUND\r\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\r\n\t\t\t#else\r\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t\t#endif\r\n\r\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\r\n\r\n\t\t\t// specular\r\n\r\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\r\n\t\t\tfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\r\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\r\n\t\t\t#else\r\n\t\t\t\tspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\r\n\t\t\t#endif\r\n\t\t}\r\n\t}\r\n\r\n#endif\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tvec3 dirDiffuse  = vec3( 0.0 );\r\n\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\r\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t// diffuse\r\n\r\n\t\tfloat dotProduct = dot( normal, dirVector );\r\n\r\n\t\t#ifdef WRAP_AROUND\r\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\r\n\t\t#else\r\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\r\n\t\t#endif\r\n\r\n\t\tdirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\r\n\t\t// specular\r\n\r\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\tfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\t\t/*\r\n\t\t\t// fresnel term from skin shader\r\n\t\t\tconst float F0 = 0.128;\r\n\t\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\r\n\t\t\tfloat exponential = pow( base, 5.0 );\r\n\t\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\r\n\t\t*/\r\n\r\n\t\t/*\r\n\t\t\t// fresnel term from fresnel shader\r\n\t\t\tconst float mFresnelBias = 0.08;\r\n\t\t\tconst float mFresnelScale = 0.3;\r\n\t\t\tconst float mFresnelPower = 5.0;\r\n\t\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\r\n\t\t*/\r\n\r\n\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\r\n\t\t\t//dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\r\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\r\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\r\n\t\t\r\n\t\t#else\r\n\t\t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\r\n\t\t#endif\r\n\t}\r\n\r\n#endif\r\n\r\nvec3 totalDiffuse = vec3( 0.0 );\r\nvec3 totalSpecular = vec3( 0.0 );\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\ttotalDiffuse += dirDiffuse;\r\n\ttotalSpecular += dirSpecular;\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\ttotalDiffuse += pointDiffuse;\r\n\ttotalSpecular += pointSpecular;\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\ttotalDiffuse += spotDiffuse;\r\n\ttotalSpecular += spotSpecular;\r\n#endif\r\n\r\n#ifdef METAL\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n#else\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\r\n#endif',AKb,yJb,BKb,zJb,CKb,AJb]));phb(this,vhb(a,hp(JA,{79:1,95:1},102,[c,b])))};_.Zc=function jkb(a){var b,c,d,e;e=new x1(hp(HA,{79:1,80:1,84:1,95:1},1,[DKb,EKb,FKb,'#ifndef PHONG_PER_PIXEL\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\t\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n\t\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\t#endif\r\n\r\n\t#if MAX_SPOT_LIGHTS > 0\r\n\t\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\r\n\t\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\r\n\r\n\t\tvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvarying vec3 vWorldPosition;\r\n#endif',uJb,GKb,HKb,BJb]));b=new x1(hp(HA,{79:1,80:1,84:1,95:1},1,[IKb,JKb,KKb,CJb]));c=new x1(hp(HA,{79:1,80:1,84:1,95:1},1,[LKb]));d=new x1(hp(HA,{79:1,80:1,84:1,95:1},1,['#ifndef PHONG_PER_PIXEL\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\t\t\t\r\n\t\t\tvPointLight[ i ] = vec4( lVector, lDistance );\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t#if MAX_SPOT_LIGHTS > 0\r\n\t\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\r\n\t\t\t\r\n\t\t\tvSpotLight[ i ] = vec4( lVector, lDistance );\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if MAX_SPOT_LIGHTS > 0\r\n\tvWorldPosition = mPosition.xyz;\r\n#endif',MKb,NKb,OKb,DJb]));qhb(this,vhb(a,hp(JA,{79:1,95:1},102,[e,b,c,d])))};var kkb;_=pkb.prototype=mkb.prototype=new Jb;_.gC=function qkb(){return Sw};_.$c=function rkb(){return Bkb(),nkb};_._c=function skb(){return Ckb(),okb};var nkb=null,okb=null;_=ukb.prototype=tkb.prototype=new Jb;_.gC=function vkb(){return Qw};_.Jb=function wkb(){return 'uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\n\r\n//[*]\r\n\t\t\t\r\nvoid main() {\r\n\tgl_FragColor = vec4( vec3 ( 1.0 ), opacity );\r\n\t\t\t\t\r\n//[*]\r\n\t\t\t\t\r\n}\r\n'};_.cM={45:1};_=ykb.prototype=xkb.prototype=new Jb;_.gC=function zkb(){return Rw};_.Jb=function Akb(){return 'varying vec3 vViewPosition;\r\nvarying vec3 vNormal;\r\n\r\n//[*]\r\n\t\t\t\r\nvoid main() {\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t\r\n//[*]\r\n\t\t\t\r\n#ifndef USE_ENVMAP\r\n\tvec4 mPosition = objectMatrix * vec4( position, 1.0 );\r\n#endif\r\n\r\nvViewPosition = -mvPosition.xyz;\r\n\t\t\t\r\n//[*]\r\n\t\t\t\r\nvNormal = transformedNormal;\r\n\r\n//[*]\r\n\r\n}\r\n'};_.cM={45:1};_=Osb.prototype=Nsb.prototype=new Csb;_.gC=function Psb(){return cy};_.cM={146:1,147:1,158:1};_.a=0;_.b=0;_=dub.prototype=cub.prototype=new Rsb;_.sd=function eub(){return null};_.gC=function fub(){return qy};_.ud=function gub(){return new rib};_.cM={150:1};_=iub.prototype=hub.prototype=new ftb;_.gC=function jub(){return py};_=lub.prototype=kub.prototype=new Rsb;_.gC=function mub(){return ry};_.cM={150:1,154:1};_=Cub.prototype=Bub.prototype=new Qsb;_.gC=function Dub(){return xy};_.ud=function Eub(){return new fkb};_.cM={148:1,150:1,156:1};_.a=null;_.b=null;_.c=0;_.d=null;_.e=null;_=Gub.prototype=Fub.prototype=new etb;_.gC=function Hub(){return wy};_.e=30;_=XCb.prototype;_.kb=function _Cb(){bxb(this.b,new cDb(this.a))};_=cDb.prototype=aDb.prototype=new exb;_.gC=function dDb(){return Wz};_.Wc=function eDb(){S5(this,new Bnb(45,$5(this.q.C),1,2000))};_.bb=function fDb(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;$pb(this.p.F,0,200,800);Rmb(this.s,this.p);c=new Dob;for(i=0;i<=40;++i){N0(c.B,new cqb(-500,-75,i*25-500));N0(c.B,new cqb(500,-75,i*25-500));N0(c.B,new cqb(i*25-500,-75,-500));N0(c.B,new cqb(i*25-500,-75,500))}o=new ptb;o.a=new Pnb(16777215);o.t=0.20000000298023224;n=new ltb(o);k=new fvb(c,n,(ovb(),mvb));Rmb(this.s,k);C=new Hlb(bDb());C.o=true;this.a=new X0;u=new sub;u.j=C;u.u=true;N0(this.a,new oub(u));v=new sub;v.g=new Pnb(14540253);v.d=(Stb(),Ptb);N0(this.a,new oub(v));z=new Gub;z.a=new Pnb(197379);z.g=new Pnb(14540253);z.f=new Pnb(39168);z.e=30;z.d=Ptb;N0(this.a,new Cub(z));N0(this.a,new vub(new zub));q=new aub;q.g=new Pnb(16755200);q.u=true;q.q=(Atb(),ttb);N0(this.a,new Xtb(q));w=new sub;w.g=new Pnb(14540253);w.d=Rtb;N0(this.a,new oub(w));z.j=C;z.u=true;N0(this.a,new Cub(z));y=new zub;y.a=Rtb;N0(this.a,new vub(y));r=new aub;r.g=new Pnb(65450);r.w=true;N0(this.a,new Xtb(r));N0(this.a,new dub(new iub));x=new sub;x.g=new Pnb(6710886);x.c=new Pnb(16711680);x.a=new Pnb(0);x.d=Rtb;N0(this.a,new oub(x));A=new Gub;A.a=new Pnb(0);A.c=new Pnb(16711680);A.g=new Pnb(0);A.f=new Pnb(6710886);A.e=10;A.d=Rtb;A.t=0.8999999761581421;A.u=true;N0(this.a,new Cub(A));s=new aub;r.j=C;r.u=true;N0(this.a,new Xtb(s));g=new Jrb(70,32,16);e=new Jrb(70,32,16);f=new Jrb(70,32,16);for(i=0,j=f.n.b;i<j;++i){b=qp(R0(f.n,i),133);b.g=0}Cob(f,this.a);N0(this.a,new lub);this.b=new X0;for(i=0,j=this.a.b;i<j;++i){p=qp(R0(this.a,i),150);d=p.gC()==ry?f:p.N==Ptb?e:g;B=new Cvb(d,p);Opb(B.F,i%4*200-400);_pb(B.F,Math.floor(i/4)*200-200);Opb(B.I,Math.random()*200-100);Ppb(B.I,Math.random()*200-100);_pb(B.I,Math.random()*200-100);N0(this.b,B);Rmb(this.s,B)}t=new aub;t.g=new Pnb(16777215);this.c=new Cvb(new Jrb(4,8,8),new Xtb(t));Rmb(this.s,this.c);Rmb(this.s,new Gsb(1118481));a=new Ksb(0.125);Opb(a.F,Math.random()-0.5);Ppb(a.F,Math.random()-0.5);_pb(a.F,Math.random()-0.5);a.F.od();Rmb(this.s,a);this.d=new Osb;Rmb(this.s,this.d)};_.Uc=function gDb(){};_.cb=function hDb(a){var b,c,d,e,f;f=1.0E-4*a;Opb(this.p.F,Math.cos(f)*1000);_pb(this.p.F,Math.sin(f)*1000);fnb(this.p,this.s.F);for(b=0,c=this.b.b;b<c;++b){e=qp(R0(this.b,b),161);e.I.c+=0.009999999776482582;e.I.d+=0.004999999888241291;d=qp(R0(this.a,b),150);b>9&&sp(d,156)?Knb(qp(d,156).b,0.5400000214576721,1,0.7*(0.5+0.5*Math.sin(35*f))):b>9&&sp(d,155)&&Knb(qp(d,155).b,0.03999999910593033,1,0.7*(0.5+0.5*Math.cos(35*f)))}Opb(this.c.F,Math.sin(f*7)*300);Ppb(this.c.F,Math.cos(f*5)*400);_pb(this.c.F,Math.cos(f*3)*300);Opb(this.d.F,this.c.F.c);Ppb(this.d.F,this.c.F.d);_pb(this.d.F,this.c.F.b);R5(this)};_.a=null;_.b=null;_.c=null;_.d=null;var Dw=iX($Jb,'ShaderDepth'),Cw=iX($Jb,'ShaderDepth_Resources_default_InlineClientBundleGenerator'),Aw=iX($Jb,'ShaderDepth_Resources_default_InlineClientBundleGenerator$1'),Bw=iX($Jb,'ShaderDepth_Resources_default_InlineClientBundleGenerator$2'),Tw=iX($Jb,'ShaderPhong'),Sw=iX($Jb,'ShaderPhong_Resources_default_InlineClientBundleGenerator'),Qw=iX($Jb,'ShaderPhong_Resources_default_InlineClientBundleGenerator$1'),Rw=iX($Jb,'ShaderPhong_Resources_default_InlineClientBundleGenerator$2'),py=iX(RKb,'MeshDepthMaterial$MeshDepthMaterialOptions'),ry=iX(RKb,'MeshFaceMaterial'),wy=iX(RKb,'MeshPhongMaterial$MeshPhongMaterialOptions'),Wz=iX(tJb,'MaterialsCanvas2D$DemoScene');fGb(Md)(10);