function Kuc(){}
function Ouc(){}
function Ruc(){}
function JHc(){}
function NHc(){}
function QHc(){}
function bmc(){G9b.call(this)}
function Duc(){zIb.call(this,(Guc(),Fuc))}
function CHc(){zIb.call(this,(FHc(),EHc))}
function FHc(){FHc=eKc;EHc=new JHc}
function SHc(){SHc=eKc;HHc=new NHc}
function THc(){THc=eKc;IHc=new QHc}
function Tuc(){Tuc=eKc;Iuc=new Ouc}
function Guc(){Guc=eKc;Fuc=new Kuc}
function Uuc(){Uuc=eKc;Juc=new Ruc}
function hGc(){this.b=new r2b(new CHc);NMb(Bu(ORb(jZb(this.b).i,oSc),225),(Nib(),Nib(),Lib));NMb(Bu(ORb(jZb(this.b).i,pSc),225),new Mjb(0.35));NMb(Bu(ORb(jZb(this.b).i,qSc),225),new Mjb(0.95));NMb(Bu(ORb(jZb(this.b).i,rSc),225),skb(2048));this.e=true;this.f=true}
var oSc='grayscale',pSc='nIntensity',rSc='sCount',qSc='sIntensity',iSc='texture1',jSc='texture2';hU(1155,1,PLc);_.zb=function _lc(){g9b(this.b,new bmc(this.a))};hU(1156,971,MLc,bmc);_.Gd=function cmc(a){j5b(Bu(Bu(ORb(this.d,hSc),225).d,297),a.a.Z);k5b(Bu(Bu(ORb(this.d,hSc),225).d,297),a.a.Y)};_.nb=function dmc(){var a,b,c,d,e,f,g;pt((Gxb(),Fxb),(Qxb(),Pxb),this);this.a=new mQb(35,CGb(this.G.k),1,3000);Y5b(this.a._,4);d=new r2b(new Duc);this.d=jZb(d).i;f=new ONb('./static/textures/lava/cloud.png');INb(f,(FFb(),EFb));JNb(f,EFb);NMb(Bu(ORb(this.d,iSc),225),f);g=new ONb(XRc);INb(g,EFb);JNb(g,EFb);NMb(Bu(ORb(this.d,jSc),225),g);this.b=new y7b(new TWb(0.65,0.3,30,30),d);s3b(this.b.cb,0.3);jPb(this.H,this.b);a=new lGc(this.G.k);e=new tGc(this.H,this.a);b=new eGc(1.25);c=new hGc;c.a=true;qqb(a.b,e);qqb(a.b,b);qqb(a.b,c);WGb(this.G.k,false);this.c=rh()};_.ob=function emc(a){var b;b=(rh()-this.c)*0.001*5;NMb(Bu(ORb(this.d,kSc),225),new Mjb(Bu(Bu(ORb(this.d,kSc),225).d,150).a+0.2*b));k3b(this.b.cb,0.05*b);l3b(this.b.cb,0.0125*b);vGb(this.G.k,true);this.c=rh();OGb(this.G.k,this.H,this.a,null,false)};_.c=0;hU(1284,729,CLc,Duc);_.Ld=function Euc(){nIb(this,lSc,new PMb((gNb(),UMb),new Mjb(0.45)));nIb(this,mSc,new PMb(cNb,new a6b(0,0,0)));nIb(this,kSc,new PMb(UMb,new Mjb(1)));nIb(this,hSc,new PMb(aNb,new l5b));nIb(this,nSc,new PMb(aNb,new m5b(3,1)));nIb(this,iSc,new OMb($Mb));nIb(this,jSc,new OMb($Mb))};var Fuc;hU(1285,1,{},Kuc);_.Od=function Luc(){return Tuc(),Iuc};_.Pd=function Muc(){return Uuc(),Juc};var Iuc,Juc;hU(1286,1,{},Ouc);_.nc=function Puc(){return 'uniform float time;\nuniform vec2 resolution;\n\nuniform float fogDensity;\nuniform vec3 fogColor;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\n\nvarying vec2 vUv;\n\nvoid main( void ) {\n\n\tvec2 position = -1.0 + 2.0 * vUv;\n\n\tvec4 noise = texture2D( texture1, vUv );\n\tvec2 T1 = vUv + vec2( 1.5, -1.5 ) * time  *0.02;\n\tvec2 T2 = vUv + vec2( -0.5, 2.0 ) * time * 0.01;\n\n\tT1.x += noise.x * 2.0;\n\tT1.y += noise.y * 2.0;\n\tT2.x -= noise.y * 0.2;\n\tT2.y += noise.z * 0.2;\n\n\tfloat p = texture2D( texture1, T1 * 2.0 ).a;\n\n\tvec4 color = texture2D( texture2, T2 * 2.0 );\n\tvec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );\n\n\tif( temp.r > 1.0 ){ temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }\n\tif( temp.g > 1.0 ){ temp.rb += temp.g - 1.0; }\n\tif( temp.b > 1.0 ){ temp.rg += temp.b - 1.0; }\n\n\tgl_FragColor = temp;\n\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\tconst float LOG2 = 1.442695;\n\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n}\n'};hU(1287,1,{},Ruc);_.nc=function Suc(){return 'uniform vec2 uvScale;\nvarying vec2 vUv;\n\nvoid main()\n{\n\n\tvUv = uvScale * uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n}'};hU(1393,1392,aMc,hGc);_.Qg=function iGc(a,b,c){NMb(Bu(ORb(jZb(this.b).i,DRc),225),a.d);NMb(Bu(ORb(jZb(this.b).i,kSc),225),new Mjb(Bu(Bu(ORb(jZb(this.b).i,kSc),225).d,150).a+b));YSb(a.c,this.b);this.a?OGb(a.u,a.v,a.a,null,false):OGb(a.u,a.v,a.a,a.g,false)};_.a=false;hU(1416,729,CLc,CHc);_.Ld=function DHc(){nIb(this,DRc,new OMb((gNb(),$Mb)));nIb(this,kSc,new PMb(UMb,new Mjb(0)));nIb(this,pSc,new PMb(UMb,new Mjb(0.5)));nIb(this,qSc,new PMb(UMb,new Mjb(0.05)));nIb(this,rSc,new PMb(XMb,skb(4096)));nIb(this,oSc,new PMb(XMb,(Nib(),Nib(),Mib)))};var EHc;hU(1417,1,{},JHc);_.Od=function KHc(){return SHc(),HHc};_.Pd=function LHc(){return THc(),IHc};var HHc,IHc;hU(1418,1,{},NHc);_.nc=function OHc(){return '// control parameter\r\nuniform float time;\r\n\r\nuniform bool grayscale;\r\n\r\n// noise effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float nIntensity;\r\n\r\n// scanlines effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float sIntensity;\r\n\r\n// scanlines effect count value (0 = no effect, 4096 = full effect)\r\nuniform float sCount;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\t// sample the source\r\n\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\r\n\r\n\t// make some noise\r\n\tfloat x = vUv.x * vUv.y * time *  1000.0;\r\n\tx = mod( x, 13.0 ) * mod( x, 123.0 );\r\n\tfloat dx = mod( x, 0.01 );\r\n\r\n\t// add noise\r\n\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\r\n\r\n\t// get us a sine and cosine\r\n\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\r\n\r\n\t// add scanlines\r\n\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\r\n\r\n\t// interpolate between source and result by intensity\r\n\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\r\n\r\n\t// convert to grayscale if desired\r\n\tif( grayscale ) {\r\n\r\n\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\r\n\r\n\t}\r\n\r\n\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\r\n\r\n}\r\n'};hU(1419,1,{},QHc);_.nc=function RHc(){return sSc};var VM=Ajb(RQc,'MaterialsShaderLava$DemoScene',1156),DQ=Ajb(tSc,'FilmPass',1393),VO=Ajb(KQc,'LavaShader',1284),YQ=Ajb(uSc,'FilmShader',1416),UO=Ajb(KQc,'LavaShader_Resources_default_InlineClientBundleGenerator',1285),SO=Ajb(KQc,'LavaShader_Resources_default_InlineClientBundleGenerator$1',1286),TO=Ajb(KQc,'LavaShader_Resources_default_InlineClientBundleGenerator$2',1287),XQ=Ajb(uSc,'FilmShader_Resources_default_InlineClientBundleGenerator',1417),VQ=Ajb(uSc,'FilmShader_Resources_default_InlineClientBundleGenerator$1',1418),WQ=Ajb(uSc,'FilmShader_Resources_default_InlineClientBundleGenerator$2',1419);bMc(xi)(30);