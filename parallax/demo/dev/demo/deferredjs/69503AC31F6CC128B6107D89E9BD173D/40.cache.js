function gKb(){}
function kKb(){}
function nKb(){}
function Rtc(){}
function Vtc(){}
function Ytc(){}
function iuc(){}
function muc(){}
function puc(){}
function Buc(){}
function Fuc(){}
function Iuc(){}
function u8b(a,b){a.d=b}
function cKb(){cKb=oKc;bKb=new gKb}
function pKb(){pKb=oKc;eKb=new kKb}
function qKb(){qKb=oKc;fKb=new nKb}
function Ntc(){Ntc=oKc;Mtc=new Rtc}
function $tc(){$tc=oKc;Ptc=new Vtc}
function _tc(){_tc=oKc;Qtc=new Ytc}
function euc(){euc=oKc;duc=new iuc}
function ruc(){ruc=oKc;guc=new muc}
function suc(){suc=oKc;huc=new puc}
function xuc(){xuc=oKc;wuc=new Buc}
function Kuc(){Kuc=oKc;zuc=new Fuc}
function Luc(){Luc=oKc;Auc=new Iuc}
function buc(){JIb.call(this,(euc(),duc))}
function uuc(){JIb.call(this,(xuc(),wuc))}
function Ktc(){JIb.call(this,(Ntc(),Mtc))}
function ZJb(){JIb.call(this,(cKb(),bKb))}
function GGb(a,b){rHb(a,b);FGb(a,false)}
function Frc(a,b){this.b=a;this.c=b}
function d0b(){HZb.call(this);this.b=false;this.c=1}
function Brc(){Q9b.call(this);this.u=new k6b(0,1000,-1000);this.s=new j6b}
function b6b(a,b){var c;c=new t4b;r4b(c,b.q,g4b(c,b.Y));return V5b(a,c)}
var yTc='bgColor',ATc='fAspect',xTc='fGodRayIntensity',BTc='fStepSize',oTc='mFar',nTc='mNear',DTc='tColors',ETc='tGodRays',CTc='tInput',zTc='vSunPositionScreenSpace',FTc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';nU(744,726,OLc,ZJb);_.Od=function $Jb(){xIb(this,nTc,new ZMb((qNb(),cNb),new Wjb(1)));xIb(this,oTc,new ZMb(cNb,new Wjb(2000)));xIb(this,URc,new ZMb(cNb,new Wjb(1)))};_.Pd=function _Jb(a){var b,c;c=new grb(vu(kS,uKc,1,[pTc]));b=new grb(vu(kS,uKc,1,[qTc]));GIb(this,OIb(a,vu(nS,uKc,173,[c,b])))};_.Qd=function aKb(a){var b,c;c=new grb(vu(kS,uKc,1,[rTc,sTc]));b=new grb(vu(kS,uKc,1,[tTc,uTc,vTc]));HIb(this,OIb(a,vu(nS,uKc,173,[c,b])))};var bKb;nU(745,1,{},gKb);_.Rd=function hKb(){return pKb(),eKb};_.Sd=function iKb(){return qKb(),fKb};var eKb,fKb;nU(746,1,{},kKb);_.qc=function lKb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};nU(747,1,{},nKb);_.qc=function oKb(){return wTc};nU(811,808,{78:1,186:1,235:1,236:1,249:1});_.ae=function kQb(){return this.c};_.be=function lQb(){return this.e};nU(812,808,{78:1,186:1,235:1,237:1,249:1});_.ae=function yQb(){return this.c};_.be=function zQb(){return this.i};nU(916,909,{279:1,282:1},d0b);_.Se=function e0b(){var a;return a=new d0b,pZb(this,a),a.b=this.b,a.c=this.c,a};_.Te=function f0b(){return new ZJb};_.Pe=function g0b(){return this.c};_.Qe=function h0b(){return this.b};_.Ue=function i0b(a,b){var c;uZb(this,b);c=tZb(this).j;if(Iu(a,235)){XMb(Fu(c.b[nTc],225),new Wjb(Fu(a,235).be()));XMb(Fu(c.b[oTc],225),new Wjb(Fu(a,235).ae()))}XMb(Fu(c.b[URc],225),new Wjb(this.$))};_.b=false;_.c=0;nU(1225,1,_Lc);_.Db=function zrc(){q9b(this.c,new Brc(this.b))};nU(1226,968,{336:1},Brc);_.ob=function Crc(){var a,b,c,d;this.b=new wQb(70,MGb(this.H.n),1,3000);g6b(this.b.ab,200);this.c=new d0b;c=new A_b;u_b(c,new p3b(0));y_b(c,(i_b(),f_b));new axc('./static/models/obj/tree/tree.js',new Frc(this,c));a=new VWb(1,20,10);this.t=new I7b(a,c);d6b(this.t.fb,20);tPb(this.I,this.t);uHb(this.H.n,false);eHb(this.H.n,false);hHb(this.H.n,1297,1);this.k=new v8b;this.j=new hQb(this.H.n.$,this.H.n.Z,-10000,10000);g6b(this.j.ab,100);tPb(this.k,this.j);this.o=new tOb(this.H.n.$,this.H.n.Z);LNb(this.o,(xEb(),rEb));JNb(this.o,(mEb(),kEb));GNb(this.o,(ICb(),HCb));this.p=new tOb(this.H.n.$,this.H.n.Z);LNb(this.p,rEb);JNb(this.p,kEb);GNb(this.p,HCb);d=~~(this.H.n.$/4);b=~~(this.H.n.Z/4);this.q=new tOb(d,b);LNb(this.q,rEb);JNb(this.q,kEb);GNb(this.q,HCb);this.r=new tOb(d,b);LNb(this.r,rEb);JNb(this.r,kEb);GNb(this.r,HCb);this.f=new B2b(new buc);this.d=new B2b(new Ktc);XMb(Fu(YRb(tZb(this.d).j,xTc),225),new Wjb(0.75));this.e=new B2b(new uuc);m3b(Fu(Fu(YRb(tZb(this.e).j,yTc),225).e,293),1297);m3b(Fu(Fu(YRb(tZb(this.e).j,HSc),225).e,293),16772608);this.n=new I7b(new KWb(this.H.n.$,this.H.n.Z),this.f);g6b(this.n.ab,-9900);tPb(this.k,this.n)};_.pb=function Drc(a){var b,c,d,e,f,g;f=a/4000;t5b(this.t.ab,200*Wkb(f));g6b(this.t.ab,200*dlb(f)-100);o5b(this.b.ab,(this.g-this.b.ab.d)*0.036);p5b(this.b.ab,(-this.i-this.b.ab.e)*0.036);SPb(this.b,this.I.ab);b6b(this.s.of(this.u),this.b);t5b(this.s,(this.s.d+1)/2);u5b(this.s,(this.s.e+1)/2);s5b(Fu(Fu(YRb(tZb(this.f).j,zTc),225).e,297),this.s.d,this.s.e);s5b(Fu(Fu(YRb(tZb(this.e).j,zTc),225).e,297),this.s.d,this.s.e);GGb(this.H.n,this.o);g=this.H.n.$;b=this.H.n.Z;d=0.74*b;e=0.74*b;t5b(this.s,this.s.d*g);u5b(this.s,this.s.e*b);sHb(this.H.n,Nu(this.s.d-e/2),Nu(this.s.e-d/2),Nu(e),Nu(d));LGb(this.H.n,true);XMb(Fu(YRb(tZb(this.e).j,ATc),225),new Wjb(g/b));u8b(this.k,this.e);YGb(this.H.n,this.k,this.j,this.o,false);LGb(this.H.n,false);u8b(this.I,null);YGb(this.H.n,this.I,this.b,this.o,false);u8b(this.I,this.c);YGb(this.H.n,this.I,this.b,this.p,true);c=alb(6,-1);XMb(Fu(YRb(tZb(this.f).j,BTc),225),new Wjb(c));XMb(Fu(YRb(tZb(this.f).j,CTc),225),this.p);u8b(this.k,this.f);YGb(this.H.n,this.k,this.j,this.r,false);c=alb(6,-2);XMb(Fu(YRb(tZb(this.f).j,BTc),225),new Wjb(c));XMb(Fu(YRb(tZb(this.f).j,CTc),225),this.r);YGb(this.H.n,this.k,this.j,this.q,false);c=alb(6,-3);XMb(Fu(YRb(tZb(this.f).j,BTc),225),new Wjb(c));XMb(Fu(YRb(tZb(this.f).j,CTc),225),this.q);YGb(this.H.n,this.k,this.j,this.r,false);XMb(Fu(YRb(tZb(this.d).j,DTc),225),this.o);XMb(Fu(YRb(tZb(this.d).j,ETc),225),this.r);u8b(this.k,this.d);YGb(this.H.n,this.k,this.j,null,false);u8b(this.k,null)};_.g=0;_.i=0;nU(1227,1,{},Frc);_.Df=function Grc(a,b){var c;c=new I7b(b,this.c);e6b(c.ab,0,-150,-150);d6b(c.fb,400);c.X=false;b4b(c.W,c.ab,c.bb,c.fb);c.Z=true;tPb(this.b.I,c)};nU(1263,726,OLc,Ktc);_.Od=function Ltc(){xIb(this,DTc,new YMb((qNb(),iNb)));xIb(this,ETc,new YMb(iNb));xIb(this,xTc,new ZMb(cNb,new Wjb(0.69)));xIb(this,zTc,new ZMb(kNb,new w5b(0.5,0.5)))};var Mtc;nU(1264,1,{},Rtc);_.Rd=function Stc(){return $tc(),Ptc};_.Sd=function Ttc(){return _tc(),Qtc};var Ptc,Qtc;nU(1265,1,{},Vtc);_.qc=function Wtc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};nU(1266,1,{},Ytc);_.qc=function Ztc(){return FTc};nU(1269,726,OLc,buc);_.Od=function cuc(){xIb(this,CTc,new YMb((qNb(),iNb)));xIb(this,BTc,new ZMb(cNb,new Wjb(1)));xIb(this,zTc,new ZMb(kNb,new w5b(0.5,0.5)))};var duc;nU(1270,1,{},iuc);_.Rd=function juc(){return ruc(),guc};_.Sd=function kuc(){return suc(),huc};var guc,huc;nU(1271,1,{},muc);_.qc=function nuc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};nU(1272,1,{},puc);_.qc=function quc(){return FTc};nU(1275,726,OLc,uuc);_.Od=function vuc(){xIb(this,zTc,new ZMb((qNb(),kNb),new w5b(0.5,0.5)));xIb(this,ATc,new ZMb(cNb,new Wjb(1)));xIb(this,HSc,new ZMb(bNb,new p3b(16772608)));xIb(this,yTc,new ZMb(bNb,new p3b(0)))};var wuc;nU(1276,1,{},Buc);_.Rd=function Cuc(){return Kuc(),zuc};_.Sd=function Duc(){return Luc(),Auc};var zuc,Auc;nU(1277,1,{},Fuc);_.qc=function Guc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};nU(1278,1,{},Iuc);_.qc=function Juc(){return FTc};var pO=Kjb(_Qc,'PostprocessingGodrays$DemoScene',1226),oO=Kjb(_Qc,'PostprocessingGodrays$DemoScene$1',1227),$I=Kjb(GTc,'MeshDepthMaterial',916),TO=Kjb(RQc,'GodRaysGenerateShader',1269),PO=Kjb(RQc,'GodRaysCombineShader',1263),XO=Kjb(RQc,'GodraysFakeSunShader',1275),kG=Kjb(eSc,'DepthShader',744),SO=Kjb(RQc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1270),QO=Kjb(RQc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1271),RO=Kjb(RQc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1272),OO=Kjb(RQc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1264),MO=Kjb(RQc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1265),NO=Kjb(RQc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1266),WO=Kjb(RQc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1276),UO=Kjb(RQc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1277),VO=Kjb(RQc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1278),jG=Kjb(eSc,'DepthShader_Resources_default_InlineClientBundleGenerator',745),hG=Kjb(eSc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',746),iG=Kjb(eSc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',747);nMc(Hi)(40);