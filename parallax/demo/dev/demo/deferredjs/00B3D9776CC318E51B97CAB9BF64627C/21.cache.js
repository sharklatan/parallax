function eKb(){}
function iKb(){}
function lKb(){}
function aKb(){aKb=AMc;_Jb=new eKb}
function nKb(){nKb=AMc;cKb=new iKb}
function oKb(){oKb=AMc;dKb=new lKb}
function ZJb(){oIb.call(this,(aKb(),_Jb))}
function ilc(){u9b.call(this);this.c=0;this.d=0}
YT(753,729,YNc,ZJb);_.Ld=function $Jb(){cIb(this,'mRefractionRatio',new EMb((XMb(),JMb),new Cjb(1.02)));cIb(this,'mFresnelBias',new EMb(JMb,new Cjb(0.1)));cIb(this,'mFresnelPower',new EMb(JMb,new Cjb(2)));cIb(this,'mFresnelScale',new EMb(JMb,new Cjb(1)));cIb(this,gUc,new DMb(PMb))};var _Jb;YT(754,1,{},eKb);_.Od=function fKb(){return nKb(),cKb};_.Pd=function gKb(){return oKb(),dKb};var cKb,dKb;YT(755,1,{},iKb);_.nc=function jKb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};YT(756,1,{},lKb);_.nc=function mKb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};YT(1137,1,jOc);_.zb=function glc(){W8b(this.b,new ilc(this.a))};YT(1138,971,{327:1},ilc);_.nb=function jlc(){var a,b,c,d,e,f,g,i,j;this.a=new bQb(60,rGb(this.G.k),1,100000);N5b(this.a._,3200);this.b=new bQb(60,rGb(this.G.k),1,100000);this.e=new a8b;a=new AWb(100,32,16);j=new MNb('./static/textures/cube/park2/*.jpg');lNb(j,(nCb(),lCb));g=new ZJb;CMb(pu(DRb(g.i,gUc),225),j);c=new g2b(g);this.f=new pqb;for(b=0;b<500;b++){e=new n7b(a,c);$4b(e._,Jkb()*10000-5000);_4b(e._,Jkb()*10000-5000);N5b(e._,Jkb()*10000-5000);K5b(e.eb,Jkb()*3+1);$Ob(this.H,e);fqb(this.f,e)}this.H.W=false;i=new QIb;CMb(pu(DRb(i.i,gUc),225),j);f=new g2b(i);jZb(f,(X$b(),U$b));d=new n7b(new LVb(100000,100000,100000),f);$Ob(this.e,d);LGb(this.G.k,false)};_.ob=function klc(a){var b,c,d,e;e=1.0E-4*a;V4b(this.a._,(this.c-this.a._.c)*0.05);W4b(this.a._,(-this.d-this.a._.d)*0.05);xPb(this.a,this.H._);b3b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=pu(iqb(this.f,b),304);$4b(d._,5000*Math.cos(e+b));_4b(d._,5000*Math.sin(e+b*1.1))}kGb(this.G.k,true);DGb(this.G.k,this.e,this.b,null,false);DGb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var xM=qjb(_Sc,'MaterialsCubemapFresnel$DemoScene',1138),ZF=qjb(hUc,'FresnelShader',753),YF=qjb(hUc,'FresnelShader_Resources_default_InlineClientBundleGenerator',754),WF=qjb(hUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',755),XF=qjb(hUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',756);xOc(xi)(21);