function quc(){}
function uuc(){}
function xuc(){}
function xKc(){}
function eKc(){}
function iKc(){}
function lKc(){}
function BKc(){}
function EKc(){}
function QKc(){}
function UKc(){}
function XKc(){}
function Xxc(){}
function _xc(){}
function cyc(){}
function KIc(){}
function OIc(){}
function RIc(){}
function hLc(){}
function lLc(){}
function oLc(){}
function m$b(a,b){a.b=b}
function k9b(a,b){a.k=b}
function oIc(a,b){Oqb(a.b,b)}
function duc(a){this.a=a}
function guc(a){this.a=a}
function juc(a){this.a=a}
function muc(){muc=iMc;luc=new quc}
function zuc(){zuc=iMc;ouc=new uuc}
function Auc(){Auc=iMc;puc=new xuc}
function tKc(){tKc=iMc;sKc=new xKc}
function nKc(){nKc=iMc;cKc=new iKc}
function oKc(){oKc=iMc;dKc=new lKc}
function GKc(){GKc=iMc;vKc=new BKc}
function HKc(){HKc=iMc;wKc=new EKc}
function MKc(){MKc=iMc;LKc=new QKc}
function ZKc(){ZKc=iMc;OKc=new UKc}
function $Kc(){$Kc=iMc;PKc=new XKc}
function aKc(){aKc=iMc;_Jc=new eKc}
function Txc(){Txc=iMc;Sxc=new Xxc}
function eyc(){eyc=iMc;Vxc=new _xc}
function fyc(){fyc=iMc;Wxc=new cyc}
function GIc(){GIc=iMc;FIc=new KIc}
function TIc(){TIc=iMc;IIc=new OIc}
function UIc(){UIc=iMc;JIc=new RIc}
function dLc(){dLc=iMc;cLc=new hLc}
function qLc(){qLc=iMc;fLc=new lLc}
function rLc(){rLc=iMc;gLc=new oLc}
function auc(a,b){this.a=a;this.b=b}
function qKc(){pJb.call(this,(tKc(),sKc))}
function JKc(){pJb.call(this,(MKc(),LKc))}
function ZJc(){pJb.call(this,(aKc(),_Jc))}
function Oxc(){pJb.call(this,(Txc(),Sxc))}
function DIc(){pJb.call(this,(GIc(),FIc))}
function aLc(){pJb.call(this,(dLc(),cLc))}
function Vtc(a){a.w+=1;a.w==3&&kQb(a.v,true)}
function Wtc(){lbc.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Utc(a,b,c,d){var e,f,g;g=new W3b(b);DNb(wv(ISb(O$b(g).i,ATc),226),c);f=new R9b;e=new aZb(new wXb(a.u,a.t),g);Q7b(e._,-500);_Pb(f,e);GHb(a.G.k,f,a.c,d,true)}
function Ttc(a,b,c,d,e,f){var g,i;g=new O1b;H1b(g,new Q4b(16755285));g.j=true;M1b(g,(G_b(),D_b));i=new m9b(b,g);i.d=c;k9b(i,Ev(600*plb()));O7b(i._,d,e,f);c5b(i.cb,1.5707963267948966);i.S=true;i.U=true;_Pb(a.H,i);Oqb(a.n,i)}
var QUc='enableDiffuse1',RUc='enableDiffuse2',JUc='h',LUc='heightMap',WUc='heightmap',VUc='offset',XUc='r',PUc='tDetail',NUc='tDiffuse1',OUc='tDiffuse2',TUc='uRepeatOverlay',KUc='v';zV(1258,1,UNc);_.Mb=function Rtc(){Nac(this.b,new Wtc(this.a))};zV(1259,988,{78:1,186:1,343:1},Wtc);_.Ud=function Xtc(a){Vtc(this)};_.Gd=function Ytc(a){this.u=a.a.hb;this.t=a.a.gb;DNb(wv(ISb(O$b(this.f.b).i,JUc),226),new ikb(6/this.u));DNb(wv(ISb(O$b(this.D.b).i,KUc),226),new ikb(6/this.t))};_.nb=function Ztc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;lu((dyb(),cyb),(nyb(),myb),this);this.b=new dRb(40,iGb(this.G.k),2,4000);this.u=this.G.k.hb;this.t=this.G.k.gb;this.c=new QQb(this.u,this.t,-10000,10000);O7b(this.b._,-1200,800,1200);Q7b(this.c._,100);this.s=new R9b;_Pb(this.s,this.c);this.d=new ixb(this.b,this.G.c);N7b(this.d.v,0);this.d.s=1;this.d.A=1.2;fxb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;dxb(this.d,0.15);P9b(this.H,new F9b(328965,2000,4000));_Pb(this.H,new sZb(1118481));this.e=new WZb(16777215,1.15);O7b(this.e._,500,2000,0);_Pb(this.H,this.e);this.q=new p$b(16729088,1.5,0);N7b(this.q._,0);_Pb(this.H,this.q);this.g=new _Ob(256,256);rOb(this.g,(OEb(),JEb));pOb(this.g,(DEb(),BEb));mOb(this.g,(ZCb(),XCb));nOb(this.g,false);this.o=new _Ob(256,256);rOb(this.o,JEb);pOb(this.o,BEb);mOb(this.o,XCb);nOb(this.o,false);n=new JKc;u=n.i;DNb(wv(u.a[sQc],226),new ikb(0.05));$6b(wv(wv(u.a[eUc],226).d,302),256,256);DNb(wv(u.a[LUc],226),this.g);s=new _Ob(2048,2048);rOb(s,JEb);pOb(s,BEb);mOb(s,XCb);s.r=false;yOb(s,(eGb(),dGb));zOb(s,dGb);c=new FOb('./static/textures/terrain/grasslight-big.jpg',new auc(this,s));yOb(c,dGb);zOb(c,dGb);d=new FOb('./static/textures/terrain/backgrounddetailed6.jpg',this);yOb(d,dGb);zOb(d,dGb);b=new FOb('./static/textures/terrain/grasslight-big-nm.jpg',this);yOb(b,dGb);zOb(b,dGb);t=new Oxc;this.B=t.i;DNb(wv(ISb(this.B,$Tc),226),this.o);DNb(wv(ISb(this.B,_Tc),226),new ikb(3.5));DNb(wv(ISb(this.B,MUc),226),this.g);DNb(wv(ISb(this.B,NUc),226),c);DNb(wv(ISb(this.B,OUc),226),d);DNb(wv(ISb(this.B,aUc),226),s);DNb(wv(ISb(this.B,PUc),226),b);DNb(wv(ISb(this.B,QUc),226),(jjb(),jjb(),ijb));DNb(wv(ISb(this.B,RUc),226),ijb);DNb(wv(ISb(this.B,yTc),226),ijb);M4b(wv(wv(ISb(this.B,ETc),226).d,298),16777215);M4b(wv(wv(ISb(this.B,FTc),226).d,298),16777215);M4b(wv(wv(ISb(this.B,DTc),226).d,298),1118481);DNb(wv(ISb(this.B,dUc),226),new ikb(30));DNb(wv(ISb(this.B,SUc),226),new ikb(375));$6b(wv(wv(ISb(this.B,TUc),226).d,302),6,6);this.A=new Htb;cpb(this.A,hUc,new FNb((YNb(),KNb),new ikb(1)));cpb(this.A,UUc,new FNb(SNb,new c7b(1.5,1.5)));cpb(this.A,VUc,new FNb(SNb,new c7b(0,0)));this.k=new Htb;i=new V3b((muc(),luc));kJb(O$b(i),this.A);i.c=false;i.b=true;cpb(this.k,WUc,i);j=new W3b(n);kJb(O$b(j),u);j.c=false;j.b=true;cpb(this.k,uTc,j);k=new W3b(t);kJb(O$b(k),this.B);k.c=true;k.b=true;cpb(this.k,'terrain',k);o=new wXb(this.u,this.t);p=new V0b;P0b(p,new Q4b(0));this.r=new aZb(o,p);Q7b(this.r._,-500);_Pb(this.s,this.r);g=new xXb(6000,6000,64,64);MRb(g);this.v=new aZb(g,k);O7b(this.v._,0,-125,0);b5b(this.v.cb,-1.5707963267948966);kQb(this.v,false);_Pb(this.H,this.v);QHb(this.G.k,this.H.a.c,1);this.G.k.X=true;this.G.k.Y=true;jGb(this.G.k,false);q=new xIc(this.H,this.b);f=new iIc(0.6);e=new AIc(new DIc);DNb(wv(ISb(O$b(e.b).i,KTc),226),new ikb(0.65));this.f=new AIc(new ZJc);this.D=new AIc(new aLc);DNb(wv(ISb(O$b(this.f.b).i,JUc),226),new ikb(6/this.u));DNb(wv(ISb(O$b(this.D.b).i,KUc),226),new ikb(6/this.t));DNb(wv(ISb(O$b(this.f.b).i,XUc),226),new ikb(0.5));DNb(wv(ISb(O$b(this.D.b).i,XUc),226),new ikb(0.5));this.D.a=true;r=new _Ob(this.u,this.t);rOb(s,IEb);pOb(s,BEb);mOb(s,XCb);s.f=false;s.r=false;a=new qIc(this.G.k,r);Oqb(a.b,q);Oqb(a.b,f);Oqb(a.b,e);oIc(a,this.f);oIc(a,this.D);this.n=new Yqb;new Wyc('./static/models/animated/parrot.js',new duc(this));new Wyc(IUc,new guc(this));new Wyc('./static/models/animated/stork.js',new juc(this));this.p=yi()};_.ob=function $tc(a){var b,c,d,e,f;b=(yi()-this.p)*0.001;if(this.v.gb){gxb(this.d);this.j=l5b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;L4b(this.H.a.c,0.1,e,this.j);QHb(this.G.k,this.H.a.c,1);CZb(this.e,0.1+f*1.0499999999999998);m$b(this.q,0.9+f*0.6);DNb(wv(ISb(this.B,_Tc),226),new ikb(0.6+f*2.9));if(this.C){this.a=l5b(this.a+-7.5E-4,0,0.05);DNb(wv(Zob(this.A,hUc),226),new ikb(wv(wv(Zob(this.A,hUc),226).d,150).a+b*this.a));W6b(wv(wv(Zob(this.A,VUc),226).d,302),b*0.05);_6b(wv(wv(ISb(this.B,YUc),226).d,302),4*wv(wv(Zob(this.A,VUc),226).d,302).c);STb(this.r,wv(Zob(this.k,WUc),287));GHb(this.G.k,this.s,this.c,this.g,true);STb(this.r,wv(Zob(this.k,uTc),287));GHb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=wv(Rqb(this.n,c),310);l9b(d,Ev(1000*b));W6b(d._,d.d*b);d._.c>2000&&_6b(d._,-1500-plb()*500)}GHb(this.G.k,this.H,this.b,null,false)}this.p=yi()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;zV(1260,1,{},auc);_.Ud=function buc(a){Vtc(this.a);Utc(this.a,new qKc,a,this.b)};zV(1261,1,{},duc);_.Cf=function euc(a,b){Ryc((wv(a,345),wv(b,243)));Ttc(this.a,wv(b,243),500,-3500,500,700);Ttc(this.a,wv(b,243),500,-3000-plb()*500,500,-200);Ttc(this.a,wv(b,243),500,-3000-plb()*500,500,200);Ttc(this.a,wv(b,243),500,-3000-plb()*500,500,1000)};zV(1262,1,{},guc);_.Cf=function huc(a,b){Ryc((wv(a,345),wv(b,243)));Ttc(this.a,wv(b,243),1000,-3000-plb()*500,350,40)};zV(1263,1,{},juc);_.Cf=function kuc(a,b){Ryc((wv(a,345),wv(b,243)));Ttc(this.a,wv(b,243),1000,-3000-plb()*500,350,340)};var luc;zV(1264,1,{},quc);_.Od=function ruc(){return zuc(),ouc};_.Pd=function suc(){return Auc(),puc};var ouc,puc;zV(1265,1,{},uuc);_.nc=function vuc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};zV(1266,1,{},xuc);_.nc=function yuc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};zV(1327,740,GNc,Oxc);_.Ld=function Pxc(){kJb(this,aOb());kJb(this,bOb());kJb(this,cOb());dJb(this,QUc,new FNb((YNb(),NNb),(jjb(),jjb(),hjb)));dJb(this,RUc,new FNb(NNb,hjb));dJb(this,yTc,new FNb(NNb,hjb));dJb(this,ZUc,new FNb(NNb,hjb));dJb(this,NUc,new ENb(QNb));dJb(this,OUc,new ENb(QNb));dJb(this,PUc,new ENb(QNb));dJb(this,$Tc,new ENb(QNb));dJb(this,aUc,new ENb(QNb));dJb(this,MUc,new ENb(QNb));dJb(this,_Tc,new FNb(KNb,new ikb(1)));dJb(this,$Uc,new FNb(KNb,new ikb(0)));dJb(this,SUc,new FNb(KNb,new ikb(1)));dJb(this,ETc,new FNb(JNb,new Q4b(15658734)));dJb(this,FTc,new FNb(JNb,new Q4b(1118481)));dJb(this,DTc,new FNb(JNb,new Q4b(328965)));dJb(this,dUc,new FNb(KNb,new ikb(30)));dJb(this,KTc,new FNb(KNb,new ikb(1)));dJb(this,'uRepeatBase',new FNb(SNb,new c7b(1,1)));dJb(this,TUc,new FNb(SNb,new c7b(1,1)));dJb(this,YUc,new FNb(SNb,new c7b(0,0)))};_.Md=function Qxc(a){var b,c;c=new vrb(mv(vT,nMc,1,[LTc,MTc]));b=new vrb(mv(vT,nMc,1,[OTc,PTc,QTc]));mJb(this,uJb(a,mv(yT,nMc,173,[c,b])))};_.Nd=function Rxc(a){var b,c;c=new vrb(mv(vT,nMc,1,[RTc]));b=new vrb(mv(vT,nMc,1,[STc]));nJb(this,uJb(a,mv(yT,nMc,173,[c,b])))};var Sxc;zV(1328,1,{},Xxc);_.Od=function Yxc(){return eyc(),Vxc};_.Pd=function Zxc(){return fyc(),Wxc};var Vxc,Wxc;zV(1329,1,{},_xc);_.nc=function ayc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};zV(1330,1,{},cyc);_.nc=function dyc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};zV(1422,740,GNc,DIc);_.Ld=function EIc(){dJb(this,ATc,new ENb((YNb(),QNb)));dJb(this,KTc,new FNb(KNb,new ikb(1)))};var FIc;zV(1423,1,{},KIc);_.Od=function LIc(){return TIc(),IIc};_.Pd=function MIc(){return UIc(),JIc};var IIc,JIc;zV(1424,1,{},OIc);_.nc=function PIc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};zV(1425,1,{},RIc);_.nc=function SIc(){return pUc};zV(1446,740,GNc,ZJc);_.Ld=function $Jc(){dJb(this,ATc,new ENb((YNb(),QNb)));dJb(this,JUc,new FNb(KNb,new ikb(0.001953125)));dJb(this,XUc,new FNb(KNb,new ikb(0.35)))};var _Jc;zV(1447,1,{},eKc);_.Od=function fKc(){return nKc(),cKc};_.Pd=function gKc(){return oKc(),dKc};var cKc,dKc;zV(1448,1,{},iKc);_.nc=function jKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};zV(1449,1,{},lKc);_.nc=function mKc(){return pUc};zV(1452,740,GNc,qKc);_.Ld=function rKc(){dJb(this,ATc,new ENb((YNb(),QNb)))};var sKc;zV(1453,1,{},xKc);_.Od=function yKc(){return GKc(),vKc};_.Pd=function zKc(){return HKc(),wKc};var vKc,wKc;zV(1454,1,{},BKc);_.nc=function CKc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};zV(1455,1,{},EKc);_.nc=function FKc(){return pUc};zV(1458,740,GNc,JKc);_.Ld=function KKc(){dJb(this,LUc,new ENb((YNb(),QNb)));dJb(this,eUc,new FNb(SNb,new c7b(512,512)));dJb(this,UUc,new FNb(SNb,new c7b(1,1)));dJb(this,sQc,new FNb(KNb,new ikb(0.05)))};var LKc;zV(1459,1,{},QKc);_.Od=function RKc(){return ZKc(),OKc};_.Pd=function SKc(){return $Kc(),PKc};var OKc,PKc;zV(1460,1,{},UKc);_.nc=function VKc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};zV(1461,1,{},XKc);_.nc=function YKc(){return pUc};zV(1464,740,GNc,aLc);_.Ld=function bLc(){dJb(this,ATc,new ENb((YNb(),QNb)));dJb(this,KUc,new FNb(KNb,new ikb(0.001953125)));dJb(this,XUc,new FNb(KNb,new ikb(0.35)))};var cLc;zV(1465,1,{},hLc);_.Od=function iLc(){return qLc(),fLc};_.Pd=function jLc(){return rLc(),gLc};var fLc,gLc;zV(1466,1,{},lLc);_.nc=function mLc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};zV(1467,1,{},oLc);_.nc=function pLc(){return pUc};var JP=Yjb(QSc,'TerrainDynamic$DemoScene',1259),FP=Yjb(QSc,'TerrainDynamic$DemoScene$1',1260),GP=Yjb(QSc,'TerrainDynamic$DemoScene$2',1261),HP=Yjb(QSc,'TerrainDynamic$DemoScene$3',1262),IP=Yjb(QSc,'TerrainDynamic$DemoScene$4',1263),zS=Yjb(rUc,_Uc,1458),xQ=Yjb(GSc,'TerrainShader',1327),bS=Yjb(rUc,'BleachBypassShader',1422),rS=Yjb(rUc,'HorizontalTiltShiftShader',1446),DS=Yjb(rUc,'VerticalTiltShiftShader',1464),MP=Yjb(QSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1264),KP=Yjb(QSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1265),LP=Yjb(QSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1266),yS=Yjb(rUc,aVc,1459),wS=Yjb(rUc,bVc,1460),xS=Yjb(rUc,cVc,1461),wQ=Yjb(GSc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1328),uQ=Yjb(GSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1329),vQ=Yjb(GSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1330),aS=Yjb(rUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1423),$R=Yjb(rUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1424),_R=Yjb(rUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1425),qS=Yjb(rUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1447),oS=Yjb(rUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1448),pS=Yjb(rUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1449),CS=Yjb(rUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1465),AS=Yjb(rUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1466),BS=Yjb(rUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1467),vS=Yjb(rUc,'LuminosityShader',1452),uS=Yjb(rUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1453),sS=Yjb(rUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1454),tS=Yjb(rUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1455);gOc(Ej)(38);