function fLb(){}
function jLb(){}
function mLb(){}
function bLb(){bLb=iMc;aLb=new fLb}
function oLb(){oLb=iMc;dLb=new jLb}
function pLb(){pLb=iMc;eLb=new mLb}
function $Kb(){pJb.call(this,(bLb(),aLb))}
function Bmc(){lbc.call(this);this.c=0;this.d=0}
zV(764,740,GNc,$Kb);_.Ld=function _Kb(){dJb(this,'mRefractionRatio',new FNb((YNb(),KNb),new ikb(1.02)));dJb(this,'mFresnelBias',new FNb(KNb,new ikb(0.1)));dJb(this,'mFresnelPower',new FNb(KNb,new ikb(2)));dJb(this,'mFresnelScale',new FNb(KNb,new ikb(1)));dJb(this,VTc,new ENb(QNb))};var aLb;zV(765,1,{},fLb);_.Od=function gLb(){return oLb(),dLb};_.Pd=function hLb(){return pLb(),eLb};var dLb,eLb;zV(766,1,{},jLb);_.nc=function kLb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};zV(767,1,{},mLb);_.nc=function nLb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};zV(1155,1,UNc);_.Mb=function zmc(){Nac(this.b,new Bmc(this.a))};zV(1156,988,{332:1},Bmc);_.nb=function Cmc(){var a,b,c,d,e,f,g,i,j;this.a=new dRb(60,iGb(this.G.k),1,100000);Q7b(this.a._,3200);this.b=new dRb(60,iGb(this.G.k),1,100000);this.e=new R9b;a=new EXb(100,32,16);j=new NOb('./static/textures/cube/park2/*.jpg');mOb(j,(ZCb(),XCb));g=new $Kb;DNb(wv(ISb(g.i,VTc),226),j);c=new W3b(g);this.f=new Yqb;for(b=0;b<500;b++){d=new aZb(a,c);_6b(d._,plb()*10000-5000);a7b(d._,plb()*10000-5000);Q7b(d._,plb()*10000-5000);N7b(d.eb,plb()*3+1);_Pb(this.H,d);Oqb(this.f,d)}this.H.W=false;i=new RJb;DNb(wv(ISb(i.i,VTc),226),j);f=new W3b(i);Z$b(f,(L0b(),I0b));e=new aZb(new PWb(100000,100000,100000),f);_Pb(this.e,e);jGb(this.G.k,false)};_.ob=function Dmc(a){var b,c,d,e;e=1.0E-4*a;W6b(this.a._,(this.c-this.a._.c)*0.05);X6b(this.a._,(-this.d-this.a._.d)*0.05);zQb(this.a,this.H._);X4b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=wv(Rqb(this.f,b),309);_6b(d._,5000*Math.cos(e+b));a7b(d._,5000*Math.sin(e+b*1.1))}oHb(this.G.k,true);GHb(this.G.k,this.e,this.b,null,false);GHb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var SN=Yjb(NSc,'MaterialsCubemapFresnel$DemoScene',1156),mH=Yjb(WTc,'FresnelShader',764),lH=Yjb(WTc,'FresnelShader_Resources_default_InlineClientBundleGenerator',765),jH=Yjb(WTc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',766),kH=Yjb(WTc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',767);gOc(Ej)(21);