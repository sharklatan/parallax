function rtb(){}
function Atb(){}
function xtb(){}
function Ftb(){}
function Etb(){}
function Jtb(){}
function Itb(){}
function L5b(){}
function M5b(){LTb.call(this)}
function stb(){wrb.call(this,(wtb(),vtb))}
function wtb(){wtb=qic;vtb=new Atb}
function Mtb(){Mtb=qic;ytb=new Ftb}
function Ntb(){Ntb=qic;ztb=new Jtb}
_=stb.prototype=rtb.prototype=new irb;_.gC=function ttb(){return cB};_.xd=function utb(){lrb(this,'mRefractionRatio',new uwb((Owb(),Awb),new B4(1.02)));lrb(this,'mFresnelBias',new uwb(Awb,new B4(0.1)));lrb(this,'mFresnelPower',new uwb(Awb,new B4(2)));lrb(this,'mFresnelScale',new uwb(Awb,new B4(1)));lrb(this,_mc,new twb(Gwb))};_.cM={131:1};var vtb;_=Atb.prototype=xtb.prototype=new Kb;_.gC=function Btb(){return bB};_.Ad=function Ctb(){return Mtb(),ytb};_.Bd=function Dtb(){return Ntb(),ztb};var ytb=null,ztb=null;_=Ftb.prototype=Etb.prototype=new Kb;_.gC=function Gtb(){return _A};_.ac=function Htb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};_=Jtb.prototype=Itb.prototype=new Kb;_.gC=function Ktb(){return aB};_.ac=function Ltb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};_=G5b.prototype;_.tb=function K5b(){HTb(this.c,new M5b(this.b))};_=M5b.prototype=L5b.prototype=new KTb;_.gC=function N5b(){return KG};_.td=function O5b(){neb(this,new Ezb(60,ffb(this.B.E),1,100000));this.b=new Ezb(60,ffb(this.B.E),1,100000)};_.xc=function P5b(){!!this.A&&QB==QB&&Azb(this.A,ffb(this.B.E));Azb(this.b,ffb(this.B.E))};_.hb=function Q5b(){var a,b,c,d,e,f,g,i;this.A.X.c=3200;Kyb(this.C,this.A);this.e=new rSb;Kyb(this.e,this.b);a=new lKb(100,32,16);i=(KSb(),NSb('./static/textures/cube/park2/*.jpg',(Rxb(),Qxb)));$wb(i,(oob(),mob));f=new stb;swb(Us(f.j.b[_mc],133),i);c=new _Qb(f);this.f=new bab;for(b=0;b<500;++b){d=new KRb(a,c);FEb(d.X,Math.random()*10000-5000);GEb(d.X,Math.random()*10000-5000);jFb(d.X,Math.random()*10000-5000);hFb(d.ab,Math.random()*3+1);Kyb(this.C,d);T9(this.f,d)}this.C.S=false;g=new csb;swb(Us(g.j.b[_mc],133),i);e=new _Qb(g);PMb(e,(FOb(),COb));d=new KRb(new vJb(100000,100000,100000),e);Kyb(this.e,d);this.B.J=false};_.sd=function R5b(){};_.ib=function S5b(a){var b,c,d,e;e=1.0E-4*a;zEb(this.A.X,(this.c-this.A.X.d)*0.05);AEb(this.A.X,(-this.d-this.A.X.e)*0.05);izb(this.A,this.C.X);this.b.$.ke(this.A.$);for(b=0,c=this.f.c;b<c;++b){d=Us(X9(this.f,b),202);FEb(d.X,5000*Math.cos(e+b));GEb(d.X,5000*Math.sin(e+b*1.1))}Upb(this.B);eqb(this.B,this.e,this.b,null,false)};_.cM={227:1};_.b=null;_.c=0;_.d=0;_.e=null;_.f=null;var cB=p4(Ymc,'FresnelShader'),bB=p4(Ymc,'FresnelShader_Resources_default_InlineClientBundleGenerator'),_A=p4(Ymc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1'),aB=p4(Ymc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2'),KG=p4(Wlc,'MaterialsCubemapFresnel$DemoScene');sic(ge)(26);