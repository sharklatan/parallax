function ltc(){}
function vtc(){}
function ztc(){}
function Dtc(){}
function Htc(){}
function Qtc(){}
function Ntc(){}
function Vtc(){}
function Utc(){}
function Ztc(){}
function Ytc(){}
function Kxc(){}
function Vxc(){}
function Sxc(){}
function $xc(){}
function Zxc(){}
function ZGc(){}
function IGc(){}
function RGc(){}
function OGc(){}
function WGc(){}
function VGc(){}
function $Gc(){}
function cyc(){}
function byc(){}
function sIc(){}
function BIc(){}
function yIc(){}
function GIc(){}
function FIc(){}
function KIc(){}
function JIc(){}
function PIc(){}
function YIc(){}
function VIc(){}
function bJc(){}
function aJc(){}
function fJc(){}
function eJc(){}
function kJc(){}
function tJc(){}
function qJc(){}
function yJc(){}
function xJc(){}
function CJc(){}
function BJc(){}
function HJc(){}
function QJc(){}
function NJc(){}
function VJc(){}
function UJc(){}
function ZJc(){}
function YJc(){}
function v$b(a,b){a.t=b}
function f_b(a,b){a.b=b}
function H5b(a,b){a.g=b}
function qGc(a,b){Emb(a.b,b)}
function ptc(){H7b.call(this)}
function Mtc(){Mtc=gLc;Ltc=new Qtc}
function auc(){auc=gLc;Otc=new Vtc}
function buc(){buc=gLc;Ptc=new Ztc}
function bHc(){bHc=gLc;PGc=new WGc}
function cHc(){cHc=gLc;QGc=new $Gc}
function NGc(){NGc=gLc;MGc=new RGc}
function NIc(){NIc=gLc;zIc=new GIc}
function xIc(){xIc=gLc;wIc=new BIc}
function OIc(){OIc=gLc;AIc=new KIc}
function UIc(){UIc=gLc;TIc=new YIc}
function fyc(){fyc=gLc;Txc=new $xc}
function gyc(){gyc=gLc;Uxc=new cyc}
function Rxc(){Rxc=gLc;Qxc=new Vxc}
function aKc(){aKc=gLc;OJc=new VJc}
function bKc(){bKc=gLc;PJc=new ZJc}
function pJc(){pJc=gLc;oJc=new tJc}
function FJc(){FJc=gLc;rJc=new yJc}
function GJc(){GJc=gLc;sJc=new CJc}
function MJc(){MJc=gLc;LJc=new QJc}
function iJc(){iJc=gLc;WIc=new bJc}
function jJc(){jJc=gLc;XIc=new fJc}
function wtc(a,b){this.a=a;this.b=b}
function Atc(a,b){this.a=a;this.b=b}
function Etc(a,b){this.a=a;this.b=b}
function Itc(a,b){this.a=a;this.b=b}
function IJc(){cFb.call(this,(MJc(),LJc))}
function lJc(){cFb.call(this,(pJc(),oJc))}
function Lxc(){cFb.call(this,(Rxc(),Qxc))}
function JGc(){cFb.call(this,(NGc(),MGc))}
function tIc(){cFb.call(this,(xIc(),wIc))}
function QIc(){cFb.call(this,(UIc(),TIc))}
function otc(a){a.w+=1;a.w==3&&(a.v.db=true,undefined)}
function ntc(a,b,c,d){var e,f,g;g=new N4b(b);$Jb(Qq(O_b(g).i.a[CPc],166),c);f=new x6b;e=new z5b(new vYb(a.u,a.t),g);e.W.b=-500;IMb(f,e);HDb(a.C.n,f,a.c,d,true)}
function mtc(a,b,c,d,e,f){var g,i;g=new V2b;P2b(g,new bOb(16755285));g.i=true;T2b(g,(K0b(),H0b));i=new J5b(b,g);i.b=c;H5b(i,Yq(600*Math.random()));xTb(i.W,d,e,f);i.Z.d=1.5707963267948966;i.M=true;i.N=true;IMb(a.D,i);Emb(a.n,i);t6b(a.D,a.C.n)}
var aRc='enableDiffuse1',bRc='enableDiffuse2',VQc='h',XQc='heightMap',eRc='heightmap',gRc='r',_Qc='tDetail',ZQc='tDiffuse1',$Qc='tDiffuse2',dRc='uRepeatOverlay',WQc='v';_=gtc.prototype;_.vb=function ktc(){D7b(this.b,new ptc(this.a))};_=ptc.prototype=ltc.prototype=new G7b;_.gC=function qtc(){return mI};_.Rd=function rtc(a){otc(this)};_.Gd=function stc(a){this.u=a.a.o;this.t=a.a.n;$Jb(Qq(O_b(this.f.b).i.a[VQc],166),new xfb(6/this.u));$Jb(Qq(O_b(this.A.b).i.a[WQc],166),new xfb(6/this.t))};_.mb=function ttc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w;pp((xvb(),wvb),(Ivb(),Hvb),this);this.b=new HNb(40,CDb(this.C.n),2,4000);this.u=this.C.n.o;this.t=this.C.n.n;this.c=new yNb(this.u,this.t,-10000,10000);xTb(this.b.W,-1200,800,1200);this.c.W.b=100;this.s=new x6b;IMb(this.s,this.c);this.d=new tub(this.b,this.C.b);yTb(this.d.v,0);this.d.s=1;this.d.x=1.2;this.d.o=0.8;this.d.g=true;this.d.e=true;this.d.f=true;this.d.a=0.15;w6b(this.D,new h6b(328965,2000,4000));XNb(this.D.b.c,0.102,0.9,0.825);IMb(this.D,new k$b(1118481));this.e=new P$b(16777215,1.15);xTb(this.e.W,500,2000,0);IMb(this.D,this.e);this.q=new h_b(16729088,1.5,0);yTb(this.q.W,0);IMb(this.D,this.q);this.g=new DLb(256,256);PKb(this.g,(DBb(),yBb));NKb(this.g,(rBb(),pBb));LKb(this.g,(qAb(),oAb));this.o=new DLb(256,256);PKb(this.o,yBb);NKb(this.o,pBb);LKb(this.o,oAb);p=new lJc;w=p.i;$Jb(Qq(w.a[pMc],166),new xfb(0.05));VSb(Qq(Qq(w.a[iQc],166).d,192),256,256);$Jb(Qq(w.a[XQc],166),this.g);u=new DLb(2048,2048);PKb(u,yBb);NKb(u,pBb);LKb(u,oAb);VKb(u,(ZCb(),YCb));WKb(u,YCb);d=new ZKb('./static/textures/terrain/grasslight-big.jpg',new wtc(this,u));VKb(d,YCb);WKb(d,YCb);e=new ZKb('./static/textures/terrain/backgrounddetailed6.jpg',this);VKb(e,YCb);WKb(e,YCb);c=new ZKb('./static/textures/terrain/grasslight-big-nm.jpg',this);VKb(c,YCb);WKb(c,YCb);v=new Lxc;this.y=v.i;$Jb(Qq(this.y.a[xQc],166),this.o);$Jb(Qq(this.y.a[yQc],166),new xfb(3.5));$Jb(Qq(this.y.a[YQc],166),this.g);$Jb(Qq(this.y.a[ZQc],166),d);$Jb(Qq(this.y.a[$Qc],166),e);$Jb(Qq(this.y.a[zQc],166),u);$Jb(Qq(this.y.a[_Qc],166),c);$Jb(Qq(this.y.a[aRc],166),(zeb(),zeb(),yeb));$Jb(Qq(this.y.a[bRc],166),yeb);$Jb(Qq(this.y.a[APc],166),yeb);YNb(Qq(Qq(this.y.a[GPc],166).d,178),16777215);YNb(Qq(Qq(this.y.a[HPc],166).d,178),16777215);YNb(Qq(Qq(this.y.a[FPc],166).d,178),1118481);$Jb(Qq(this.y.a[CQc],166),new xfb(30));$Jb(Qq(this.y.a[cRc],166),new xfb(375));VSb(Qq(Qq(this.y.a[dRc],166).d,192),6,6);this.x=new Qpb;Ikb(this.x,mQc,new aKb((uKb(),gKb),new xfb(1)));Ikb(this.x,IQc,new aKb(oKb,new ZSb(1.5,1.5)));Ikb(this.x,gQc,new aKb(oKb,new ZSb(0,0)));this.k=new Qpb;k=new L4b((Mtc(),Ltc));$Eb(O_b(k),this.x);k.c=false;k.b=true;Ikb(this.k,eRc,k);n=new N4b(p);$Eb(O_b(n),w);n.c=false;n.b=true;Ikb(this.k,fRc,n);o=new N4b(v);$Eb(O_b(o),this.y);o.c=true;o.b=true;Ikb(this.k,'terrain',o);q=new vYb(this.u,this.t);r=new a2b;X1b(r,new bOb(0));this.r=new z5b(q,r);this.r.W.b=-500;IMb(this.s,this.r);i=new wYb(6000,6000,64,64);DOb(i,xeb);GOb(i);FOb(i);this.v=new z5b(i,o);xTb(this.v.W,0,-125,0);this.v.Z.c=-1.5707963267948966;this.v.db=false;IMb(this.D,this.v);ODb(this.C.n,this.D.b.c);this.C.n.P=true;this.C.n.Q=true;this.C.n.N=false;s=new BGc(this.D,this.b);g=new iGc(0.6);f=new FGc(new JGc);$Jb(Qq(O_b(f.b).i.a[YPc],166),new xfb(0.65));this.f=new FGc(new tIc);this.A=new FGc(new IJc);$Jb(Qq(O_b(this.f.b).i.a[VQc],166),new xfb(6/this.u));$Jb(Qq(O_b(this.A.b).i.a[WQc],166),new xfb(6/this.t));$Jb(Qq(O_b(this.f.b).i.a[gRc],166),new xfb(0.5));$Jb(Qq(O_b(this.A.b).i.a[gRc],166),new xfb(0.5));this.A.a=true;t=new DLb(this.u,this.t);PKb(u,xBb);NKb(u,pBb);LKb(u,oAb);u.f=false;b=new sGc(this.C.n,t);Emb(b.b,s);Emb(b.b,g);Emb(b.b,f);qGc(b,this.f);qGc(b,this.A);j=new wyc;this.n=new Qmb;try{jyc(j,'./static/models/animated/parrot.js',new Atc(this,j));jyc(j,fPc,new Etc(this,j));jyc(j,'./static/models/animated/stork.js',new Itc(this,j))}catch(a){a=kM(a);if(Tq(a,41)){xMb();VP(wMb,(BP(),zP),gPc)}else throw a}t6b(this.D,this.C.n);this.p=Uc()};_.nb=function utc(a){var b,c,d,e,f;b=(Uc()-this.p)*0.001;if(this.v.db){rub(this.d);this.j=rRb(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;XNb(this.D.b.c,0.1,e,this.j);ODb(this.C.n,this.D.b.c);v$b(this.e,0.1+f*1.0499999999999998);f_b(this.q,0.9+f*0.6);$Jb(Qq(this.y.a[yQc],166),new xfb(0.6+f*2.9));if(this.z){this.a=rRb(this.a+-7.5E-4,0,0.05);$Jb(Qq(Dkb(this.x,mQc),166),new xfb(Qq(Qq(Dkb(this.x,mQc),166).d,95).a+b*this.a));QSb(Qq(Qq(Dkb(this.x,gQc),166).d,192),b*0.05);WSb(Qq(Qq(this.y.a[hRc],166).d,192),4*Qq(Qq(Dkb(this.x,gQc),166).d,192).c);GZb(this.r,Qq(Dkb(this.k,eRc),224));HDb(this.C.n,this.s,this.c,this.g,true);GZb(this.r,Qq(Dkb(this.k,fRc),224));HDb(this.C.n,this.s,this.c,this.o,true);this.z=false}for(c=0;c<this.n.b;++c){d=Qq(Imb(this.n,c),241);I5b(d,Yq(1000*b));QSb(d.W,d.b*b);d.W.c>2000&&WSb(d.W,-1500-Math.random()*500)}HDb(this.C.n,this.D,this.b,null,false)}this.p=Uc()};_.cM={38:1,131:1,273:1};_.a=0;_.b=null;_.c=null;_.d=null;_.e=null;_.f=null;_.g=null;_.i=1;_.j=0;_.k=null;_.n=null;_.o=null;_.p=0;_.q=null;_.r=null;_.s=null;_.t=1000;_.u=1000;_.v=null;_.w=0;_.x=null;_.y=null;_.z=true;_.A=null;_=wtc.prototype=vtc.prototype=new Jb;_.gC=function xtc(){return iI};_.Rd=function ytc(a){otc(this.a);ntc(this.a,new QIc,a,this.b)};_.a=null;_.b=null;_=Atc.prototype=ztc.prototype=new Jb;_.gC=function Btc(){return jI};_.zf=function Ctc(){var a;a=this.b.a;pyc(this.b);mtc(this.a,a,500,-3500,500,700);mtc(this.a,a,500,-3000-Math.random()*500,500,-200);mtc(this.a,a,500,-3000-Math.random()*500,500,200);mtc(this.a,a,500,-3000-Math.random()*500,500,1000)};_.a=null;_.b=null;_=Etc.prototype=Dtc.prototype=new Jb;_.gC=function Ftc(){return kI};_.zf=function Gtc(){var a;a=this.b.a;pyc(this.b);mtc(this.a,a,1000,-3000-Math.random()*500,350,40)};_.a=null;_.b=null;_=Itc.prototype=Htc.prototype=new Jb;_.gC=function Jtc(){return lI};_.zf=function Ktc(){var a;a=this.b.a;pyc(this.b);mtc(this.a,a,1000,-3000-Math.random()*500,350,340)};_.a=null;_.b=null;var Ltc;_=Qtc.prototype=Ntc.prototype=new Jb;_.gC=function Rtc(){return pI};_.Md=function Stc(){return auc(),Otc};_.Nd=function Ttc(){return buc(),Ptc};var Otc=null,Ptc=null;_=Vtc.prototype=Utc.prototype=new Jb;_.gC=function Wtc(){return nI};_.Yb=function Xtc(){return '//\r\n// Description : Array and textureless GLSL 3D simplex noise function.\r\n//      Author : Ian McEwan, Ashima Arts.\r\n//  Maintainer : ijm\r\n//     Lastmod : 20110409 (stegu)\r\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\r\n//               Distributed under the MIT License. See LICENSE file.\r\n//\r\n\r\nuniform float time;\r\nvarying vec2 vUv;\r\n\r\nvec4 permute( vec4 x ) {\r\n\r\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\r\n\r\n}\r\n\r\nvec4 taylorInvSqrt( vec4 r ) {\r\n\r\n\treturn 1.79284291400159 - 0.85373472095314 * r;\r\n\r\n}\r\n\r\nfloat snoise( vec3 v ) {\r\n\r\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\r\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\r\n\r\n\t// First corner\r\n\r\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\r\n\tvec3 x0 = v - i + dot( i, C.xxx );\r\n\r\n\t// Other corners\r\n\r\n\tvec3 g = step( x0.yzx, x0.xyz );\r\n\tvec3 l = 1.0 - g;\r\n\tvec3 i1 = min( g.xyz, l.zxy );\r\n\tvec3 i2 = max( g.xyz, l.zxy );\r\n\r\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\r\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\r\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\r\n\r\n\t// Permutations\r\n\r\n\ti = mod( i, 289.0 );\r\n\tvec4 p = permute( permute( permute(\r\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\r\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\r\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\r\n\r\n\t// Gradients\r\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\r\n\r\n\tfloat n_ = 1.0 / 7.0; // N=7\r\n\r\n\tvec3 ns = n_ * D.wyz - D.xzx;\r\n\r\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\r\n\r\n\tvec4 x_ = floor( j * ns.z );\r\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\r\n\r\n\tvec4 x = x_ *ns.x + ns.yyyy;\r\n\tvec4 y = y_ *ns.x + ns.yyyy;\r\n\tvec4 h = 1.0 - abs( x ) - abs( y );\r\n\r\n\tvec4 b0 = vec4( x.xy, y.xy );\r\n\tvec4 b1 = vec4( x.zw, y.zw );\r\n\r\n\r\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\r\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\r\n\tvec4 sh = -step( h, vec4( 0.0 ) );\r\n\r\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\r\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\r\n\r\n\tvec3 p0 = vec3( a0.xy, h.x );\r\n\tvec3 p1 = vec3( a0.zw, h.y );\r\n\tvec3 p2 = vec3( a1.xy, h.z );\r\n\tvec3 p3 = vec3( a1.zw, h.w );\r\n\r\n\t// Normalise gradients\r\n\r\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\r\n\tp0 *= norm.x;\r\n\tp1 *= norm.y;\r\n\tp2 *= norm.z;\r\n\tp3 *= norm.w;\r\n\r\n\t// Mix final noise value\r\n\r\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\r\n\tm = m * m;\r\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\r\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\r\n\r\n}\r\n\r\nfloat surface3( vec3 coord ) {\r\n\r\n\tfloat n = 0.0;\r\n\r\n\tn += 1.0 * abs( snoise( coord ) );\r\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\r\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\r\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\r\n\r\n\treturn n;\r\n\r\n}\r\n\r\nvoid main( void ) {\r\n\r\n\tvec3 coord = vec3( vUv, -time );\r\n\tfloat n = surface3( coord );\r\n\r\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\r\n\r\n}\r\n'};_=Ztc.prototype=Ytc.prototype=new Jb;_.gC=function $tc(){return oI};_.Yb=function _tc(){return 'varying vec2 vUv;\r\nuniform vec2 scale;\r\nuniform vec2 offset;\r\n\r\nvoid main( void ) {\r\n\r\n\tvUv = uv * scale + offset;\r\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n}\r\n'};_=Lxc.prototype=Kxc.prototype=new QEb;_.gC=function Mxc(){return LI};_.Jd=function Nxc(){$Eb(this,zKb());$Eb(this,AKb());$Eb(this,BKb());TEb(this,aRc,new aKb((uKb(),jKb),(zeb(),zeb(),xeb)));TEb(this,bRc,new aKb(jKb,xeb));TEb(this,APc,new aKb(jKb,xeb));TEb(this,iRc,new aKb(jKb,xeb));TEb(this,ZQc,new _Jb(mKb));TEb(this,$Qc,new _Jb(mKb));TEb(this,_Qc,new _Jb(mKb));TEb(this,xQc,new _Jb(mKb));TEb(this,zQc,new _Jb(mKb));TEb(this,YQc,new _Jb(mKb));TEb(this,yQc,new aKb(gKb,new xfb(1)));TEb(this,jRc,new aKb(gKb,new xfb(0)));TEb(this,cRc,new aKb(gKb,new xfb(1)));TEb(this,GPc,new aKb(fKb,new bOb(15658734)));TEb(this,HPc,new aKb(fKb,new bOb(1118481)));TEb(this,FPc,new aKb(fKb,new bOb(328965)));TEb(this,CQc,new aKb(gKb,new xfb(30)));TEb(this,NPc,new aKb(gKb,new xfb(1)));TEb(this,'uRepeatBase',new aKb(oKb,new ZSb(1,1)));TEb(this,dRc,new aKb(oKb,new ZSb(1,1)));TEb(this,hRc,new aKb(oKb,new ZSb(0,0)))};_.Kd=function Oxc(a){var b,c;c=new rnb(Hq(cL,{88:1,106:1},1,[OPc,PPc]));b=new rnb(Hq(cL,{88:1,106:1},1,[RPc,SPc,TPc]));aFb(this,iFb(a,Hq(gL,{88:1,106:1},117,[c,b])))};_.Ld=function Pxc(a){var b,c;c=new rnb(Hq(cL,{88:1,106:1},1,[UPc]));b=new rnb(Hq(cL,{88:1,106:1},1,[VPc]));bFb(this,iFb(a,Hq(gL,{88:1,106:1},117,[c,b])))};_.cM={164:1};var Qxc;_=Vxc.prototype=Sxc.prototype=new Jb;_.gC=function Wxc(){return KI};_.Md=function Xxc(){return fyc(),Txc};_.Nd=function Yxc(){return gyc(),Uxc};var Txc=null,Uxc=null;_=$xc.prototype=Zxc.prototype=new Jb;_.gC=function _xc(){return II};_.Yb=function ayc(){return 'uniform vec3 uAmbientColor;\r\nuniform vec3 uDiffuseColor;\r\nuniform vec3 uSpecularColor;\r\nuniform float uShininess;\r\nuniform float uOpacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\r\n\r\n\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\r\n\r\n[*]\r\n}'};_=cyc.prototype=byc.prototype=new Jb;_.gC=function dyc(){return JI};_.Yb=function eyc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n\t[*]\r\n\r\n}\r\n'};_=JGc.prototype=IGc.prototype=new QEb;_.gC=function KGc(){return QJ};_.Jd=function LGc(){TEb(this,CPc,new _Jb((uKb(),mKb)));TEb(this,YPc,new aKb(gKb,new xfb(1)))};_.cM={164:1};var MGc;_=RGc.prototype=OGc.prototype=new Jb;_.gC=function SGc(){return PJ};_.Md=function TGc(){return bHc(),PGc};_.Nd=function UGc(){return cHc(),QGc};var PGc=null,QGc=null;_=WGc.prototype=VGc.prototype=new Jb;_.gC=function XGc(){return NJ};_.Yb=function YGc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};_=$Gc.prototype=ZGc.prototype=new Jb;_.gC=function _Gc(){return OJ};_.Yb=function aHc(){return MPc};_=tIc.prototype=sIc.prototype=new QEb;_.gC=function uIc(){return eK};_.Jd=function vIc(){TEb(this,CPc,new _Jb((uKb(),mKb)));TEb(this,VQc,new aKb(gKb,new xfb(0.001953125)));TEb(this,gRc,new aKb(gKb,new xfb(0.35)))};_.cM={164:1};var wIc;_=BIc.prototype=yIc.prototype=new Jb;_.gC=function CIc(){return dK};_.Md=function DIc(){return NIc(),zIc};_.Nd=function EIc(){return OIc(),AIc};var zIc=null,AIc=null;_=GIc.prototype=FIc.prototype=new Jb;_.gC=function HIc(){return bK};_.Yb=function IIc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};_=KIc.prototype=JIc.prototype=new Jb;_.gC=function LIc(){return cK};_.Yb=function MIc(){return MPc};_=QIc.prototype=PIc.prototype=new QEb;_.gC=function RIc(){return iK};_.Jd=function SIc(){TEb(this,CPc,new _Jb((uKb(),mKb)))};_.cM={164:1};var TIc;_=YIc.prototype=VIc.prototype=new Jb;_.gC=function ZIc(){return hK};_.Md=function $Ic(){return iJc(),WIc};_.Nd=function _Ic(){return jJc(),XIc};var WIc=null,XIc=null;_=bJc.prototype=aJc.prototype=new Jb;_.gC=function cJc(){return fK};_.Yb=function dJc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};_=fJc.prototype=eJc.prototype=new Jb;_.gC=function gJc(){return gK};_.Yb=function hJc(){return MPc};_=lJc.prototype=kJc.prototype=new QEb;_.gC=function mJc(){return mK};_.Jd=function nJc(){TEb(this,XQc,new _Jb((uKb(),mKb)));TEb(this,iQc,new aKb(oKb,new ZSb(512,512)));TEb(this,IQc,new aKb(oKb,new ZSb(1,1)));TEb(this,pMc,new aKb(gKb,new xfb(0.05)))};_.cM={164:1};var oJc;_=tJc.prototype=qJc.prototype=new Jb;_.gC=function uJc(){return lK};_.Md=function vJc(){return FJc(),rJc};_.Nd=function wJc(){return GJc(),sJc};var rJc=null,sJc=null;_=yJc.prototype=xJc.prototype=new Jb;_.gC=function zJc(){return jK};_.Yb=function AJc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};_=CJc.prototype=BJc.prototype=new Jb;_.gC=function DJc(){return kK};_.Yb=function EJc(){return MPc};_=IJc.prototype=HJc.prototype=new QEb;_.gC=function JJc(){return qK};_.Jd=function KJc(){TEb(this,CPc,new _Jb((uKb(),mKb)));TEb(this,WQc,new aKb(gKb,new xfb(0.001953125)));TEb(this,gRc,new aKb(gKb,new xfb(0.35)))};_.cM={164:1};var LJc;_=QJc.prototype=NJc.prototype=new Jb;_.gC=function RJc(){return pK};_.Md=function SJc(){return aKc(),OJc};_.Nd=function TJc(){return bKc(),PJc};var OJc=null,PJc=null;_=VJc.prototype=UJc.prototype=new Jb;_.gC=function WJc(){return nK};_.Yb=function XJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};_=ZJc.prototype=YJc.prototype=new Jb;_.gC=function $Jc(){return oK};_.Yb=function _Jc(){return MPc};var mI=mfb(ZOc,'TerrainDynamic$DemoScene',XD),iI=mfb(ZOc,'TerrainDynamic$DemoScene$1',Nx),jI=mfb(ZOc,'TerrainDynamic$DemoScene$2',Nx),kI=mfb(ZOc,'TerrainDynamic$DemoScene$3',Nx),lI=mfb(ZOc,'TerrainDynamic$DemoScene$4',Nx),pI=mfb(ZOc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',Nx),nI=mfb(ZOc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',Nx),oI=mfb(ZOc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',Nx),LI=mfb($Oc,'TerrainShader',eB),KI=mfb($Oc,'TerrainShader_Resources_default_InlineClientBundleGenerator',Nx),II=mfb($Oc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',Nx),JI=mfb($Oc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',Nx),QJ=mfb(vQc,'BleachBypassShader',eB),PJ=mfb(vQc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',Nx),NJ=mfb(vQc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',Nx),OJ=mfb(vQc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',Nx),eK=mfb(vQc,'HorizontalTiltShiftShader',eB),dK=mfb(vQc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',Nx),bK=mfb(vQc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',Nx),cK=mfb(vQc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',Nx),iK=mfb(vQc,'LuminosityShader',eB),hK=mfb(vQc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',Nx),fK=mfb(vQc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',Nx),gK=mfb(vQc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',Nx),mK=mfb(vQc,kRc,eB),lK=mfb(vQc,lRc,Nx),jK=mfb(vQc,mRc,Nx),kK=mfb(vQc,nRc,Nx),qK=mfb(vQc,'VerticalTiltShiftShader',eB),pK=mfb(vQc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',Nx),nK=mfb(vQc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',Nx),oK=mfb(vQc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',Nx);xLc(Wd)(49);