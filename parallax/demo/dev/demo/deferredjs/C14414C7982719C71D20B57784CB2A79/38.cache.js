function jtc(){}
function ntc(){}
function qtc(){}
function syc(){}
function wyc(){}
function zyc(){}
function fJc(){}
function jJc(){}
function mJc(){}
function BKc(){}
function FKc(){}
function IKc(){}
function UKc(){}
function YKc(){}
function _Kc(){}
function lLc(){}
function pLc(){}
function sLc(){}
function ELc(){}
function ILc(){}
function LLc(){}
function DYb(a,b){a.b=b}
function y7b(a,b){a.k=b}
function LIc(a,b){iqb(a.b,b)}
function Ysc(a){this.a=a}
function _sc(a){this.a=a}
function ctc(a){this.a=a}
function ftc(){ftc=FMc;etc=new jtc}
function stc(){stc=FMc;htc=new ntc}
function ttc(){ttc=FMc;itc=new qtc}
function oyc(){oyc=FMc;nyc=new syc}
function Byc(){Byc=FMc;qyc=new wyc}
function Cyc(){Cyc=FMc;ryc=new zyc}
function bJc(){bJc=FMc;aJc=new fJc}
function oJc(){oJc=FMc;dJc=new jJc}
function pJc(){pJc=FMc;eJc=new mJc}
function xKc(){xKc=FMc;wKc=new BKc}
function KKc(){KKc=FMc;zKc=new FKc}
function LKc(){LKc=FMc;AKc=new IKc}
function QKc(){QKc=FMc;PKc=new UKc}
function bLc(){bLc=FMc;SKc=new YKc}
function cLc(){cLc=FMc;TKc=new _Kc}
function hLc(){hLc=FMc;gLc=new lLc}
function uLc(){uLc=FMc;jLc=new pLc}
function vLc(){vLc=FMc;kLc=new sLc}
function ALc(){ALc=FMc;zLc=new ELc}
function NLc(){NLc=FMc;CLc=new ILc}
function OLc(){OLc=FMc;DLc=new LLc}
function Vsc(a,b){this.a=a;this.b=b}
function jyc(){rIb.call(this,(oyc(),nyc))}
function $Ic(){rIb.call(this,(bJc(),aJc))}
function uKc(){rIb.call(this,(xKc(),wKc))}
function NKc(){rIb.call(this,(QKc(),PKc))}
function eLc(){rIb.call(this,(hLc(),gLc))}
function xLc(){rIb.call(this,(ALc(),zLc))}
function Osc(a){a.w+=1;a.w==3&&mPb(a.v,true)}
function Psc(){x9b.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Nsc(a,b,c,d){var e,f,g;g=new j2b(b);FMb(qu(GRb(bZb(g).i,STc),225),c);f=new d8b;e=new q7b(new vWb(a.u,a.t),g);Q5b(e._,-500);bPb(f,e);GGb(a.G.k,f,a.c,d,true)}
function Msc(a,b,c,d,e,f){var g,i;g=new b0b;W_b(g,new Z2b(16755285));g.j=true;__b(g,(VZb(),SZb));i=new A7b(b,g);i.d=c;y7b(i,yu(600*Mkb()));O5b(i._,d,e,f);l3b(i.cb,1.5707963267948966);i.S=true;i.U=true;bPb(a.H,i);iqb(a.n,i)}
var gVc='enableDiffuse1',hVc='enableDiffuse2',_Uc='h',bVc='heightMap',mVc='heightmap',lVc='offset',nVc='r',fVc='tDetail',dVc='tDiffuse1',eVc='tDiffuse2',jVc='uRepeatOverlay',aVc='v';ZT(1238,1,oOc);_.zb=function Ksc(){Z8b(this.b,new Psc(this.a))};ZT(1239,972,{78:1,186:1,338:1},Psc);_.Ud=function Qsc(a){Osc(this)};_.Gd=function Rsc(a){this.u=a.a.Z;this.t=a.a.Y;FMb(qu(GRb(bZb(this.f.b).i,_Uc),225),new Fjb(6/this.u));FMb(qu(GRb(bZb(this.D.b).i,aVc),225),new Fjb(6/this.t))};_.nb=function Ssc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;ft((yxb(),xxb),(Ixb(),Hxb),this);this.b=new eQb(40,uGb(this.G.k),2,4000);this.u=this.G.k.Z;this.t=this.G.k.Y;this.c=new RPb(this.u,this.t,-10000,10000);O5b(this.b._,-1200,800,1200);Q5b(this.c._,100);this.s=new d8b;bPb(this.s,this.c);this.d=new Dwb(this.b,this.G.c);N5b(this.d.v,0);this.d.s=1;this.d.A=1.2;Awb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;ywb(this.d,0.15);b8b(this.H,new T7b(328965,2000,4000));bPb(this.H,new LXb(1118481));this.e=new mYb(16777215,1.15);O5b(this.e._,500,2000,0);bPb(this.H,this.e);this.q=new FYb(16729088,1.5,0);N5b(this.q._,0);bPb(this.H,this.q);this.g=new bOb(256,256);tNb(this.g,(fEb(),aEb));rNb(this.g,(WDb(),UDb));oNb(this.g,(qCb(),oCb));pNb(this.g,false);this.o=new bOb(256,256);tNb(this.o,aEb);rNb(this.o,UDb);oNb(this.o,oCb);pNb(this.o,false);n=new eLc;u=n.i;FMb(qu(u.a[KQc],225),new Fjb(0.05));a5b(qu(qu(u.a[wUc],225).d,297),256,256);FMb(qu(u.a[bVc],225),this.g);s=new bOb(2048,2048);tNb(s,aEb);rNb(s,UDb);oNb(s,oCb);s.r=false;ANb(s,(xFb(),wFb));BNb(s,wFb);c=new HNb('./static/textures/terrain/grasslight-big.jpg',new Vsc(this,s));ANb(c,wFb);BNb(c,wFb);d=new HNb('./static/textures/terrain/backgrounddetailed6.jpg',this);ANb(d,wFb);BNb(d,wFb);b=new HNb('./static/textures/terrain/grasslight-big-nm.jpg',this);ANb(b,wFb);BNb(b,wFb);t=new jyc;this.B=t.i;FMb(qu(GRb(this.B,qUc),225),this.o);FMb(qu(GRb(this.B,rUc),225),new Fjb(3.5));FMb(qu(GRb(this.B,cVc),225),this.g);FMb(qu(GRb(this.B,dVc),225),c);FMb(qu(GRb(this.B,eVc),225),d);FMb(qu(GRb(this.B,sUc),225),s);FMb(qu(GRb(this.B,fVc),225),b);FMb(qu(GRb(this.B,gVc),225),(Gib(),Gib(),Fib));FMb(qu(GRb(this.B,hVc),225),Fib);FMb(qu(GRb(this.B,QTc),225),Fib);W2b(qu(qu(GRb(this.B,WTc),225).d,293),16777215);W2b(qu(qu(GRb(this.B,XTc),225).d,293),16777215);W2b(qu(qu(GRb(this.B,VTc),225).d,293),1118481);FMb(qu(GRb(this.B,vUc),225),new Fjb(30));FMb(qu(GRb(this.B,iVc),225),new Fjb(375));a5b(qu(qu(GRb(this.B,jVc),225).d,297),6,6);this.A=new atb;yob(this.A,zUc,new HMb(($Mb(),MMb),new Fjb(1)));yob(this.A,kVc,new HMb(UMb,new e5b(1.5,1.5)));yob(this.A,lVc,new HMb(UMb,new e5b(0,0)));this.k=new atb;i=new i2b((ftc(),etc));mIb(bZb(i),this.A);i.c=false;i.b=true;yob(this.k,mVc,i);j=new j2b(n);mIb(bZb(j),u);j.c=false;j.b=true;yob(this.k,MTc,j);k=new j2b(t);mIb(bZb(k),this.B);k.c=true;k.b=true;yob(this.k,'terrain',k);o=new vWb(this.u,this.t);p=new i_b;c_b(p,new Z2b(0));this.r=new q7b(o,p);Q5b(this.r._,-500);bPb(this.s,this.r);g=new wWb(6000,6000,64,64);LQb(g);this.v=new q7b(g,k);O5b(this.v._,0,-125,0);k3b(this.v.cb,-1.5707963267948966);mPb(this.v,false);bPb(this.H,this.v);SGb(this.G.k,this.H.a.c,1);this.G.k.ab=true;this.G.k.bb=true;OGb(this.G.k,false);q=new UIc(this.H,this.b);f=new FIc(0.6);e=new XIc(new $Ic);FMb(qu(GRb(bZb(e.b).i,aUc),225),new Fjb(0.65));this.f=new XIc(new uKc);this.D=new XIc(new xLc);FMb(qu(GRb(bZb(this.f.b).i,_Uc),225),new Fjb(6/this.u));FMb(qu(GRb(bZb(this.D.b).i,aVc),225),new Fjb(6/this.t));FMb(qu(GRb(bZb(this.f.b).i,nVc),225),new Fjb(0.5));FMb(qu(GRb(bZb(this.D.b).i,nVc),225),new Fjb(0.5));this.D.a=true;r=new bOb(this.u,this.t);tNb(s,_Db);rNb(s,UDb);oNb(s,oCb);s.f=false;s.r=false;a=new NIc(this.G.k,r);iqb(a.b,q);iqb(a.b,f);iqb(a.b,e);LIc(a,this.f);LIc(a,this.D);this.n=new sqb;new rzc('./static/models/animated/parrot.js',new Ysc(this));new rzc($Uc,new _sc(this));new rzc('./static/models/animated/stork.js',new ctc(this));this.p=rh()};_.ob=function Tsc(a){var b,c,d,e,f;b=(rh()-this.p)*0.001;if(this.v.gb){Bwb(this.d);this.j=u3b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;V2b(this.H.a.c,0.1,e,this.j);SGb(this.G.k,this.H.a.c,1);VXb(this.e,0.1+f*1.0499999999999998);DYb(this.q,0.9+f*0.6);FMb(qu(GRb(this.B,rUc),225),new Fjb(0.6+f*2.9));if(this.C){this.a=u3b(this.a+-7.5E-4,0,0.05);FMb(qu(tob(this.A,zUc),225),new Fjb(qu(qu(tob(this.A,zUc),225).d,150).a+b*this.a));Y4b(qu(qu(tob(this.A,lVc),225).d,297),b*0.05);b5b(qu(qu(GRb(this.B,oVc),225).d,297),4*qu(qu(tob(this.A,lVc),225).d,297).c);QSb(this.r,qu(tob(this.k,mVc),282));GGb(this.G.k,this.s,this.c,this.g,true);QSb(this.r,qu(tob(this.k,MTc),282));GGb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=qu(lqb(this.n,c),305);z7b(d,yu(1000*b));Y4b(d._,d.d*b);d._.c>2000&&b5b(d._,-1500-Mkb()*500)}GGb(this.G.k,this.H,this.b,null,false)}this.p=rh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;ZT(1240,1,{},Vsc);_.Ud=function Wsc(a){Osc(this.a);Nsc(this.a,new NKc,a,this.b)};ZT(1241,1,{},Ysc);_.Bf=function Zsc(a,b){mzc((qu(a,339),qu(b,242)));Msc(this.a,qu(b,242),500,-3500,500,700);Msc(this.a,qu(b,242),500,-3000-Mkb()*500,500,-200);Msc(this.a,qu(b,242),500,-3000-Mkb()*500,500,200);Msc(this.a,qu(b,242),500,-3000-Mkb()*500,500,1000)};ZT(1242,1,{},_sc);_.Bf=function atc(a,b){mzc((qu(a,339),qu(b,242)));Msc(this.a,qu(b,242),1000,-3000-Mkb()*500,350,40)};ZT(1243,1,{},ctc);_.Bf=function dtc(a,b){mzc((qu(a,339),qu(b,242)));Msc(this.a,qu(b,242),1000,-3000-Mkb()*500,350,340)};var etc;ZT(1244,1,{},jtc);_.Od=function ktc(){return stc(),htc};_.Pd=function ltc(){return ttc(),itc};var htc,itc;ZT(1245,1,{},ntc);_.nc=function otc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};ZT(1246,1,{},qtc);_.nc=function rtc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};ZT(1352,730,bOc,jyc);_.Ld=function kyc(){mIb(this,cNb());mIb(this,dNb());mIb(this,eNb());fIb(this,gVc,new HMb(($Mb(),PMb),(Gib(),Gib(),Eib)));fIb(this,hVc,new HMb(PMb,Eib));fIb(this,QTc,new HMb(PMb,Eib));fIb(this,pVc,new HMb(PMb,Eib));fIb(this,dVc,new GMb(SMb));fIb(this,eVc,new GMb(SMb));fIb(this,fVc,new GMb(SMb));fIb(this,qUc,new GMb(SMb));fIb(this,sUc,new GMb(SMb));fIb(this,cVc,new GMb(SMb));fIb(this,rUc,new HMb(MMb,new Fjb(1)));fIb(this,qVc,new HMb(MMb,new Fjb(0)));fIb(this,iVc,new HMb(MMb,new Fjb(1)));fIb(this,WTc,new HMb(LMb,new Z2b(15658734)));fIb(this,XTc,new HMb(LMb,new Z2b(1118481)));fIb(this,VTc,new HMb(LMb,new Z2b(328965)));fIb(this,vUc,new HMb(MMb,new Fjb(30)));fIb(this,aUc,new HMb(MMb,new Fjb(1)));fIb(this,'uRepeatBase',new HMb(UMb,new e5b(1,1)));fIb(this,jVc,new HMb(UMb,new e5b(1,1)));fIb(this,oVc,new HMb(UMb,new e5b(0,0)))};_.Md=function lyc(a){var b,c;c=new Qqb(gu(WR,KMc,1,[bUc,cUc]));b=new Qqb(gu(WR,KMc,1,[eUc,fUc,gUc]));oIb(this,wIb(a,gu(ZR,KMc,173,[c,b])))};_.Nd=function myc(a){var b,c;c=new Qqb(gu(WR,KMc,1,[hUc]));b=new Qqb(gu(WR,KMc,1,[iUc]));pIb(this,wIb(a,gu(ZR,KMc,173,[c,b])))};var nyc;ZT(1353,1,{},syc);_.Od=function tyc(){return Byc(),qyc};_.Pd=function uyc(){return Cyc(),ryc};var qyc,ryc;ZT(1354,1,{},wyc);_.nc=function xyc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};ZT(1355,1,{},zyc);_.nc=function Ayc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};ZT(1447,730,bOc,$Ic);_.Ld=function _Ic(){fIb(this,STc,new GMb(($Mb(),SMb)));fIb(this,aUc,new HMb(MMb,new Fjb(1)))};var aJc;ZT(1448,1,{},fJc);_.Od=function gJc(){return oJc(),dJc};_.Pd=function hJc(){return pJc(),eJc};var dJc,eJc;ZT(1449,1,{},jJc);_.nc=function kJc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};ZT(1450,1,{},mJc);_.nc=function nJc(){return HUc};ZT(1471,730,bOc,uKc);_.Ld=function vKc(){fIb(this,STc,new GMb(($Mb(),SMb)));fIb(this,_Uc,new HMb(MMb,new Fjb(0.001953125)));fIb(this,nVc,new HMb(MMb,new Fjb(0.35)))};var wKc;ZT(1472,1,{},BKc);_.Od=function CKc(){return KKc(),zKc};_.Pd=function DKc(){return LKc(),AKc};var zKc,AKc;ZT(1473,1,{},FKc);_.nc=function GKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};ZT(1474,1,{},IKc);_.nc=function JKc(){return HUc};ZT(1477,730,bOc,NKc);_.Ld=function OKc(){fIb(this,STc,new GMb(($Mb(),SMb)))};var PKc;ZT(1478,1,{},UKc);_.Od=function VKc(){return bLc(),SKc};_.Pd=function WKc(){return cLc(),TKc};var SKc,TKc;ZT(1479,1,{},YKc);_.nc=function ZKc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};ZT(1480,1,{},_Kc);_.nc=function aLc(){return HUc};ZT(1483,730,bOc,eLc);_.Ld=function fLc(){fIb(this,bVc,new GMb(($Mb(),SMb)));fIb(this,wUc,new HMb(UMb,new e5b(512,512)));fIb(this,kVc,new HMb(UMb,new e5b(1,1)));fIb(this,KQc,new HMb(MMb,new Fjb(0.05)))};var gLc;ZT(1484,1,{},lLc);_.Od=function mLc(){return uLc(),jLc};_.Pd=function nLc(){return vLc(),kLc};var jLc,kLc;ZT(1485,1,{},pLc);_.nc=function qLc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};ZT(1486,1,{},sLc);_.nc=function tLc(){return HUc};ZT(1489,730,bOc,xLc);_.Ld=function yLc(){fIb(this,STc,new GMb(($Mb(),SMb)));fIb(this,aVc,new HMb(MMb,new Fjb(0.001953125)));fIb(this,nVc,new HMb(MMb,new Fjb(0.35)))};var zLc;ZT(1490,1,{},ELc);_.Od=function FLc(){return NLc(),CLc};_.Pd=function GLc(){return OLc(),DLc};var CLc,DLc;ZT(1491,1,{},ILc);_.nc=function JLc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};ZT(1492,1,{},LLc);_.nc=function MLc(){return HUc};var lO=tjb(hTc,'TerrainDynamic$DemoScene',1239),hO=tjb(hTc,'TerrainDynamic$DemoScene$1',1240),iO=tjb(hTc,'TerrainDynamic$DemoScene$2',1241),jO=tjb(hTc,'TerrainDynamic$DemoScene$3',1242),kO=tjb(hTc,'TerrainDynamic$DemoScene$4',1243),$Q=tjb(JUc,rVc,1483),YO=tjb(ZSc,'TerrainShader',1352),CQ=tjb(JUc,'BleachBypassShader',1447),SQ=tjb(JUc,'HorizontalTiltShiftShader',1471),cR=tjb(JUc,'VerticalTiltShiftShader',1489),oO=tjb(hTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1244),mO=tjb(hTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1245),nO=tjb(hTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1246),ZQ=tjb(JUc,sVc,1484),XQ=tjb(JUc,tVc,1485),YQ=tjb(JUc,uVc,1486),XO=tjb(ZSc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1353),VO=tjb(ZSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1354),WO=tjb(ZSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1355),BQ=tjb(JUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1448),zQ=tjb(JUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1449),AQ=tjb(JUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1450),RQ=tjb(JUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1472),PQ=tjb(JUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1473),QQ=tjb(JUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1474),bR=tjb(JUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1490),_Q=tjb(JUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1491),aR=tjb(JUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1492),WQ=tjb(JUc,'LuminosityShader',1477),VQ=tjb(JUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1478),TQ=tjb(JUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1479),UQ=tjb(JUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1480);COc(xi)(38);