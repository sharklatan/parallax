function Hdb(){}
function Wdb(){}
function Uqb(){}
function drb(){}
function arb(){}
function irb(){}
function hrb(){}
function mrb(){}
function lrb(){}
function $$b(){}
function _$b(){dOb.call(this)}
function beb(a,b){kh.call(this,a,b)}
function Vqb(){Job.call(this,(_qb(),$qb))}
function _qb(){_qb=X4b;$qb=new drb}
function prb(){prb=X4b;brb=new irb}
function qrb(){qrb=X4b;crb=new mrb}
function deb(){aeb();return Xdb}
function Xvb(a){cwb(a,a.d*a.d);_vb(a,a.b*a.b);$vb(a,a.a*a.a);return a}
function Idb(a,b,c){return new qAb((b-Gg(a.x.A))/a.k*0.5,(c-Hg(a.x.A))/a.k*0.5)}
function $zb(a,b,c){var d,e;d=c/2;e=Math.sin(d);a.b=b.c*e;a.c=b.d*e;a.d=b.b*e;a.a=Math.cos(d)}
function Ndb(a){var b;b=1+(a.r.d-a.s.d)*1.2;if(b!=1&&b>0){a.b.le(b);iAb(a.s,(a.r.d-a.s.d)*a.a)}}
function aeb(){aeb=X4b;Ydb=new beb(S5b,0);$db=new beb(ftc,1);_db=new beb(gtc,2);Zdb=new beb(htc,3);Xdb=kr(DF,{86:1,87:1,91:1,103:1},120,[Ydb,$db,_db,Zdb])}
function Kdb(a){var b,c;b=a.g.Wd().ee(a.j);if(b._d()>0){b.ae(a.b.$d()*a.i);c=OAb(a.b.ie(),a.w.J).ne(b.c);c.he(a.w.J.ie().ne(b.d));a.w.D.he(c);a.q.he(c);a.j.Td(b.fe(a.g,a.j).ae(a.a))}}
function Ldb(a){var b,c,d;b=Z2(PAb(a.o,a.n)/a.o.$d()/a.n.$d());if(b>0){c=NAb(new VAb,a.o,a.n).me();d=new _zb;b*=1;$zb(d,c,-b);Xzb(d,a.b);Xzb(d,a.w.J);Xzb(d,a.n);$zb(d,c,b*(a.a-1));Xzb(d,a.o)}}
function Mdb(a){a.b.je(a.w.D).oe(a.q);Ldb(a);Ndb(a);Kdb(a);LAb(a.w.D,a.q,a.b);a.w.D._d()>a.e*a.e&&a.w.D.ne(a.e);a.b._d()<a.f*a.f&&LAb(a.w.D,a.q,a.b.ne(a.f));svb(a.w,a.q);a.d.Xd(a.w.D)>0&&a.d.je(a.w.D)}
function Xzb(a,b){var c,d,e,f,g,i,j,k,n,o,p;return n=b.c,o=b.d,p=b.b,i=a.b,j=a.c,k=a.d,g=a.a,d=g*n+j*p-k*o,e=g*o+k*n-i*p,f=g*p+i*o-j*n,c=-i*n-j*o-k*p,b.c=d*g+c*-i+e*-k-f*-j,b.d=e*g+c*-j+f*-i-d*-k,b.b=f*g+c*-k+d*-j-e*-i,b}
function Jdb(a,b,c){var d,e,f;e=new WAb((b-bg(a.x.A,npc)*0.5-Gg(a.x.A))/a.k,(bg(a.x.A,opc)*0.5+Hg(a.x.A)-c)/a.k,0);d=e.$d();d>1?e.me():TAb(e,Math.sqrt(1-d*d));a.b.je(a.w.D).oe(a.q);f=a.w.J.ie().ne(e.d);f.he(OAb(a.w.J.ie(),a.b).ne(e.c));f.he(a.b.ne(e.b));return f}
function Odb(a,b){gdb.call(this,a,b);this.p=(aeb(),Ydb);this.k=(bg(b.A,npc)+bg(b.A,opc))/4;my!=$v&&(this.x.A.setAttribute(lpc,mpc),undefined);this.q=new VAb;this.d=new VAb;this.b=new VAb;this.o=new VAb;this.n=new VAb;this.s=new pAb;this.r=new pAb;this.j=new pAb;this.g=new pAb;gN(this.x,this,(Lk(),Lk(),Kk));gN(this.x,this,(Pl(),Pl(),Ol));gN(this.x,this,(Il(),Il(),Hl));gN(this.x,this,(Wl(),Wl(),Vl));gN((GY(),KY(null)),this,(ml(),ml(),ll));gN(KY(null),this,(tl(),tl(),sl))}
var Ltc='./static/textures/planets/earth_atmos_2048.jpg',Mtc='./static/textures/planets/earth_clouds_1024.png',Ntc='./static/textures/planets/earth_normal_2048.jpg',Otc='./static/textures/planets/earth_specular_2048.jpg',Ptc='./static/textures/planets/moon_1024.jpg',htc='PAN',ftc='ROTATE',Utc='ShaderNormalMap',Vtc='ShaderNormalMap_Resources_default_StaticClientBundleGenerator',Wtc='ShaderNormalMap_Resources_default_StaticClientBundleGenerator$1',Xtc='ShaderNormalMap_Resources_default_StaticClientBundleGenerator$2',Qtc='TrackballControl',Rtc='TrackballControl$STATE',Ttc='TrackballControl$STATE;',Ytc='TrackballEarth$DemoScene',gtc='ZOOM',Stc='[Lthothbot.parallax.core.client.controls.',Ktc='attribute vec4 tangent;\r\n\r\nuniform vec2 uOffset;\r\nuniform vec2 uRepeat;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\t// normal, tangent and binormal vectors\r\n\r\n\tvNormal = normalMatrix * normal;\r\n\tvTangent = normalMatrix * tangent.xyz;\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\r\n\tvUv = uv * uRepeat + uOffset;\r\n\r\n\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvPointLight[ i ] = vec4( lVector, lDistance );\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec4 displacedPosition = vec4( normalize( vNormal.xyz ) * df, 0.0 ) + mvPosition;\r\n\t\tgl_Position = projectionMatrix * displacedPosition;\r\n\r\n\t#else\r\n\r\n\t\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\t#endif\r\n\r\n[*]\r\n\r\n}\r\n',itc='enableAO',jtc='enableDiffuse',ltc='enableReflection',ktc='enableSpecular',otc='tAO',ptc='tDisplacement',mtc='tNormal',ntc='tSpecular',vtc='uAmbientColor',ttc='uDiffuseColor',rtc='uDisplacementBias',stc='uDisplacementScale',qtc='uNormalScale',ztc='uOffset',xtc='uOpacity',ytc='uReflectivity',Atc='uRepeat',wtc='uShininess',utc='uSpecularColor',Jtc='uniform vec3 uAmbientColor;\r\nuniform vec3 uDiffuseColor;\r\nuniform vec3 uSpecularColor;\r\nuniform float uShininess;\r\nuniform float uOpacity;\r\n\r\nuniform bool enableDiffuse;\r\nuniform bool enableSpecular;\r\nuniform bool enableAO;\r\nuniform bool enableReflection;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tAO;\r\n\r\nuniform samplerCube tCube;\r\n\r\nuniform float uNormalScale;\r\nuniform float uReflectivity;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\r\n#endif\r\n\r\n#ifdef WRAP_AROUND\r\n\tuniform vec3 wrapRGB;\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse ) {\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\r\n\t\t\ttexelColor.xyz *= texelColor.xyz;\r\n\r\n\t\t\tgl_FragColor = gl_FragColor * texelColor;\r\n\r\n\t\t#else\r\n\r\n\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n\tif( enableAO ) {\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tvec4 aoColor = texture2D( tAO, vUv );\r\n\t\t\taoColor.xyz *= aoColor.xyz;\r\n\r\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\r\n\r\n\t\t#else\r\n\r\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\r\n\r\n\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec3 pointVector = normalize( vPointLight[ i ].xyz );\r\n\t\t\tfloat pointDistance = vPointLight[ i ].w;\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\t#ifdef WRAP_AROUND\r\n\r\n\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\r\n\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\r\n\r\n\t\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\r\n\r\n\t\t\t// specular\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\r\n\r\n\t\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\tfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\r\n\r\n\t\t\t\tvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\r\n\t\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\t#ifdef WRAP_AROUND\r\n\r\n\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\r\n\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\r\n\r\n\t\t\t// specular\r\n\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\r\n\r\n\t\t\t#ifdef PHYSICALLY_BASED_SHADING\r\n\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\tfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\r\n\r\n\t\t\t\tvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\r\n\t\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\tdirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\r\n\r\n\tif ( enableReflection ) {\r\n\r\n\t\tvec3 wPos = cameraPosition - vViewPosition;\r\n\t\tvec3 vReflect = reflect( normalize( wPos ), normal );\r\n\r\n\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcubeColor.xyz *= cubeColor.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\r\n\r\n\t}\r\n\r\n[*]\r\n\r\n}\r\n';_=Odb.prototype=Hdb.prototype=new fdb;_.gC=function Pdb(){return sy};_.Eb=function Qdb(a){vg(a.a)};_.Fb=function Rdb(a){if(this.p!=(aeb(),Ydb)){return}else (a.a.keyCode||0)==65?(this.p=$db):(a.a.keyCode||0)==83?(this.p=_db):(a.a.keyCode||0)==68&&(this.p=Zdb);this.p!=Ydb&&(this.c=true)};_.Gb=function Sdb(a){this.p=(aeb(),Ydb)};_.Hb=function Tdb(a){vg(a.a);wg(a.a);if(this.p==(aeb(),Ydb)){if((a.a.button||0)==1){this.o=this.n=Jdb(this,Ak(a),Bk(a));this.p=$db}else if((a.a.button||0)==4){this.s=this.r=Idb(this,Ak(a),Bk(a));this.p=_db}else (a.a.button||0)==2&&(this.j=this.g=Idb(this,Ak(a),Bk(a)))}};_.Ib=function Udb(a){if(this.c){this.o=this.n=Jdb(this,Ak(a),Bk(a));this.s=this.r=Idb(this,Ak(a),Bk(a));this.j=this.g=Idb(this,Ak(a),Bk(a));this.c=false}if(this.p==(aeb(),Ydb)){return}else this.p==$db?(this.n=Jdb(this,Ak(a),Bk(a))):this.p==_db?(this.r=Idb(this,Ak(a),Bk(a))):this.p==Zdb&&(this.g=Idb(this,Ak(a),Bk(a)))};_.Jb=function Vdb(a){vg(a.a);wg(a.a);this.p=(aeb(),Ydb)};_.cM={17:1,20:1,21:1,23:1,24:1,25:1,37:1};_.a=0.2;_.b=null;_.c=false;_.d=null;_.e=1.7976931348623157E308;_.f=0;_.g=null;_.i=0.3;_.j=null;_.k=0;_.n=null;_.o=null;_.q=null;_.r=null;_.s=null;_=beb.prototype=Wdb.prototype=new ih;_.gC=function ceb(){return ry};_.cM={86:1,90:1,94:1,120:1};var Xdb,Ydb,Zdb,$db,_db;_=Vqb.prototype=Uqb.prototype=new wob;_.gC=function Wqb(){return kz};_.yd=function Xqb(){Fob(this,htb());Fob(this,itb());Fob(this,jtb());yob(this,itc,new Jsb((ctb(),Tsb),U2(0)));yob(this,jtc,new Jsb(Tsb,U2(0)));yob(this,ktc,new Jsb(Tsb,U2(0)));yob(this,ltc,new Jsb(Tsb,U2(0)));yob(this,jrc,new Jsb(Wsb,U2(0)));yob(this,Ksc,new Jsb(Wsb,U2(1)));yob(this,mtc,new Jsb(Wsb,U2(2)));yob(this,ntc,new Jsb(Wsb,U2(3)));yob(this,otc,new Jsb(Wsb,U2(4)));yob(this,ptc,new Jsb(Wsb,U2(5)));yob(this,qtc,new Jsb(Qsb,new q2(1)));yob(this,rtc,new Jsb(Qsb,new q2(0)));yob(this,stc,new Jsb(Qsb,new q2(1)));yob(this,ttc,new Jsb(Psb,new gwb(16777215)));yob(this,utc,new Jsb(Psb,new gwb(1118481)));yob(this,vtc,new Jsb(Psb,new gwb(16777215)));yob(this,wtc,new Jsb(Qsb,new q2(30)));yob(this,xtc,new Jsb(Qsb,new q2(1)));yob(this,ytc,new Jsb(Qsb,new q2(0.5)));yob(this,ztc,new Jsb(Ysb,new qAb(0,0)));yob(this,Atc,new Jsb(Ysb,new qAb(1,1)));yob(this,Btc,new Jsb($sb,new WAb(1,1,1)))};_.zd=function Yqb(a){var b,c;c=new t8(kr(yF,{86:1,87:1,91:1,103:1},1,[Ctc,Dtc]));b=new t8(kr(yF,{86:1,87:1,91:1,103:1},1,[Etc,Ftc,Gtc]));Hob(this,Pob(a,kr(AF,{86:1,103:1},110,[c,b])))};_.Ad=function Zqb(a){var b,c;c=new t8(kr(yF,{86:1,87:1,91:1,103:1},1,[Htc]));b=new t8(kr(yF,{86:1,87:1,91:1,103:1},1,[Itc]));Iob(this,Pob(a,kr(AF,{86:1,103:1},110,[c,b])))};_.cM={134:1};var $qb;_=drb.prototype=arb.prototype=new Tb;_.gC=function erb(){return jz};_.Bd=function frb(){return prb(),brb};_.Cd=function grb(){return qrb(),crb};var brb=null,crb=null;_=irb.prototype=hrb.prototype=new Tb;_.gC=function jrb(){return hz};_.$b=function krb(){return Jtc};_=mrb.prototype=lrb.prototype=new Tb;_.gC=function nrb(){return iz};_.$b=function orb(){return Ktc};_=KAb.prototype;_.ne=function qBb(a){this.me();return this.le(a)};_=wBb.prototype;_.ne=function VBb(a){return ABb(this,j3(this.c*this.c+this.d*this.d+this.b*this.b+this.a*this.a)),BBb(this,a)};_=V$b.prototype;_.qb=function Z$b(){_Nb(this.b,new _$b(this.a))};_=_$b.prototype=$$b.prototype=new cOb;_.gC=function a_b(){return pE};_.ud=function b_b(){ccb(this,new Ovb(25,Wcb(this.A.C),50,10000000))};_.hb=function c_b(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w,x,y,z;this.z.D.b=44597;Yub(this.B,this.z);this.a=new Odb(this.z,this.A.C);this.a.i=0.2;this.a.a=0.3;this.a.f=7008.1;this.a.e=637100;b=new UGb;RAb(b.D,-1,0,1).me();Yub(this.B,b);s=(dNb(),fNb(Ltc,(fub(),eub),null));a=fNb(Mtc,eub,null);j=fNb(Ntc,eub,null);u=fNb(Otc,eub,null);i=fNb(Ptc,eub,null);g=new gLb(new Vqb);g.c=true;y=jHb(g).i;Hsb(tr(y.a[mtc],136),j);Isb(tr(y.a[qtc],136),new q2(0.85));Hsb(tr(y.a[jrc],136),s);Hsb(tr(y.a[ntc],136),u);Isb(tr(y.a[itc],136),U2(0));Isb(tr(y.a[jtc],136),U2(1));Isb(tr(y.a[ktc],136),U2(1));bwb(tr(tr(y.a[ttc],136).e,144),16777215);bwb(tr(tr(y.a[utc],136).e,144),6710886);bwb(tr(tr(y.a[vtc],136).e,144),0);Isb(tr(y.a[wtc],136),new q2(20));Xvb(tr(tr(y.a[ttc],136).e,144));Xvb(tr(tr(y.a[utc],136).e,144));Xvb(tr(tr(y.a[vtc],136).e,144));c=new OFb(6371,100,50);ywb(c);this.d=new fMb(c,g);this.d.G.d=0;this.d.G.b=0.41;Yub(this.B,this.d);e=new OJb;IJb(e,new gwb(16777215));e.p=a;e.K=true;this.b=new fMb(c,e);SAb(this.b.I,1.005);this.b.G.b=0.41;Yub(this.B,this.b);f=new xKb;rKb(f,new gwb(16777215));f.r=i;this.c=new fMb(c,f);RAb(this.c.D,31855,0,0);SAb(this.c.I,0.23);Yub(this.B,this.c);w=new Hwb;for(d=0;d<1500;++d){z=new VAb;nAb(z,Math.random()*2-1);oAb(z,Math.random()*2-1);TAb(z,Math.random()*2-1);z.le(6371);w.H.Jc(z)}k=new WKb;UKb(k,new gwb(5592405));k.d=2;k.e=false;x=new S7;lr(x.a,x.b++,k);n=new WKb;UKb(n,new gwb(5592405));n.d=1;n.e=false;lr(x.a,x.b++,n);o=new WKb;UKb(o,new gwb(3355443));o.d=2;o.e=false;lr(x.a,x.b++,o);p=new WKb;UKb(p,new gwb(3815994));p.d=1;p.e=false;lr(x.a,x.b++,p);q=new WKb;UKb(q,new gwb(1710618));q.d=2;q.e=false;lr(x.a,x.b++,q);r=new WKb;UKb(r,new gwb(1710618));r.d=1;r.e=false;lr(x.a,x.b++,r);for(d=10;d<30;++d){v=new pMb(w,tr((t6(d%6,x.b),x.a[d%6]),181));nAb(v.G,Math.random()*6);oAb(v.G,Math.random()*6);TAb(v.G,Math.random()*6);t=d*10;SAb(v.I,t);v.z=false;fvb(v);Yub(this.B,v)}this.A.M=false;this.A.H=false;this.e=ad()};_.td=function d_b(){};_.ib=function e_b(a){var b,c;c=(ad()-this.e)*0.001;iAb(this.d.G,0.1*c);iAb(this.b.G,0.125*c);b=c*0.1;_ub(this.c,new WAb(Math.cos(b)*this.c.D.c-Math.sin(b)*this.c.D.b,0,Math.sin(b)*this.c.D.c+Math.cos(b)*this.c.D.b));iAb(this.c.G,-b);Mdb(this.a);tnb(this.A,false,false,false);this.e=ad()};_.a=null;_.b=null;_.c=null;_.d=null;_.e=0;var sy=e2(Gpc,Qtc),ry=f2(Gpc,Rtc,deb),DF=d2(Stc,Ttc),kz=e2(zsc,Utc),jz=e2(zsc,Vtc),hz=e2(zsc,Wtc),iz=e2(zsc,Xtc),pE=e2(aoc,Ytc);Z4b(be)(25);