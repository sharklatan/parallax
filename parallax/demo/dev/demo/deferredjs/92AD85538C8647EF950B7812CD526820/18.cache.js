function Psc(){}
function Tsc(){}
function Wsc(){}
function hwc(){}
function lwc(){}
function owc(){}
function ajc(a){this.a=a}
function Lsc(){Lsc=PKc;Ksc=new Psc}
function Ysc(){Ysc=PKc;Nsc=new Tsc}
function Zsc(){Zsc=PKc;Osc=new Wsc}
function dwc(){dwc=PKc;cwc=new hwc}
function qwc(){qwc=PKc;fwc=new lwc}
function rwc(){rwc=PKc;gwc=new owc}
function $vc(){eIb.call(this,(dwc(),cwc))}
function Isc(){eIb.call(this,(Lsc(),Ksc))}
function Yic(){G8b.call(this);this.d=0;this.e=0}
function Xic(a,b){var c,d,e,f,g,i;d=new $Mb(gSc);d.k=4;k4b(d.B,0.998,0.998);k4b(d.A,0.001,0.001);UMb(d,(kFb(),jFb));VMb(d,jFb);IMb(d,(dCb(),bCb));e=new $Mb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');k4b(e.B,0.998,0.998);k4b(e.A,0.001,0.001);UMb(e,jFb);VMb(e,jFb);IMb(e,bCb);c=new $Mb('./static/models/obj/leeperrysmith/Map-COL.jpg');k4b(c.B,0.998,0.998);k4b(c.A,0.001,0.001);UMb(c,jFb);VMb(c,jFb);IMb(c,bCb);g=new $vc;i=g.i;ZLb(Au(i.a[iSc],225),(uib(),uib(),tib));ZLb(Au(i.a[jSc],225),tib);ZLb(Au(i.a[kSc],225),a.b.e);ZLb(Au(i.a[lSc],225),c);ZLb(Au(i.a[mSc],225),d);ZLb(Au(i.a[nSc],225),e);e2b(Au(Au(i.a[oSc],225).d,293),10526880);e2b(Au(Au(i.a[pSc],225).d,293),10526880);e2b(Au(Au(i.a[qSc],225).d,293),10526880);ZLb(Au(i.a[rSc],225),new tjb(0.145));ZLb(Au(i.a[sSc],225),new tjb(0.75));ZLb(Au(i.a[tSc],225),new tjb(16));L5b(Au(Au(i.a[uSc],225).d,301),0.001,0.001,0.998,0.998);f=new t1b(g);f.c=true;a.c=new z6b(b,f);m4b(a.c._,-50);W4b(a.c.eb,100);AOb(a.c,true);a.c.U=true;vOb(a.H,a.c)}
var iSc='enableBump',kSc='tBeckmann',rSc='uRoughness',sSc='uSpecularBrightness';TT(1109,1,xMc);_.zb=function Vic(){g8b(this.b,new Yic(this.a))};TT(1110,964,{323:1},Yic);_.nb=function Zic(){var a,b,c,d,e,f,g;this.a=new vPb(27,hGb(this.G.k),1,10000);Z4b(this.a._,1200);vOb(this.H,new WWb(5592405));d=new QXb(16777215,1.5,1000);X4b(d._,0,0,600);vOb(this.H,d);f=new YXb(1);X4b(f._,0.05,0.05,1);vOb(this.H,f);f._.lf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new xXb(16777215,0.85);X4b(a._,1,-0.5,1);d2b(a.L,0.6,1,0.85);vOb(this.H,a);a._.lf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new xXb(16777215,0.85);X4b(b._,1,-0.5,-1);vOb(this.H,b);new fHc(new Isc);c=new fHc(new UHc);c.a=true;g=new vNb(512,512);NMb(g,(UDb(),ODb));LMb(g,(JDb(),HDb));IMb(g,(dCb(),bCb));g.f=false;this.b=new XGc(this.G.k,g);new Bxc(hSc,new ajc(this));FGb(this.G.k,new h2b(5001561),1);e=new yFb(this.G.k,this.H);e.g=false;BGb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function $ic(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){n2b(this.c.cb,0.05*(b-this.c.cb.d));m2b(this.c.cb,0.05*(c-this.c.cb.c))}bGb(this.G.k);tGb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;TT(1111,1,{},ajc);_.yf=function bjc(a,b){Xic(this.a,Au(b,241))};TT(1243,728,kMc,Isc);_.Kd=function Jsc(){};var Ksc;TT(1244,1,{},Psc);_.Nd=function Qsc(){return Ysc(),Nsc};_.Od=function Rsc(){return Zsc(),Osc};var Nsc,Osc;TT(1245,1,{},Tsc);_.mc=function Usc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};TT(1246,1,{},Wsc);_.mc=function Xsc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};TT(1322,728,kMc,$vc);_.Kd=function _vc(){_Hb(this,wMb());_Hb(this,xMb());_Hb(this,yMb());UHb(this,iSc,new _Lb((sMb(),hMb),_jb(0)));UHb(this,jSc,new _Lb(hMb,_jb(0)));UHb(this,lSc,new $Lb(kMb));UHb(this,kSc,new $Lb(kMb));UHb(this,pSc,new _Lb(dMb,new h2b(15658734)));UHb(this,qSc,new _Lb(dMb,new h2b(1118481)));UHb(this,oSc,new _Lb(dMb,new h2b(328965)));UHb(this,vSc,new _Lb(eMb,new tjb(1)));UHb(this,rSc,new _Lb(eMb,new tjb(0.15)));UHb(this,sSc,new _Lb(eMb,new tjb(0.75)));UHb(this,mSc,new $Lb(kMb));UHb(this,tSc,new _Lb(eMb,new tjb(1)));UHb(this,nSc,new $Lb(kMb));UHb(this,uSc,new _Lb(qMb,new P5b(0,0,1,1)));UHb(this,'uWrapRGB',new _Lb(oMb,new b5b(0.75,0.375,0.1875)))};_.Ld=function awc(a){var b,c;c=new Eqb(qu(QR,UKc,1,[wSc,xSc,ySc]));b=new Eqb(qu(QR,UKc,1,[zSc,ASc,BSc]));bIb(this,jIb(a,qu(TR,UKc,173,[c,b])))};_.Md=function bwc(a){var b,c;c=new Eqb(qu(QR,UKc,1,[CSc]));b=new Eqb(qu(QR,UKc,1,[DSc]));cIb(this,jIb(a,qu(TR,UKc,173,[c,b])))};var cwc;TT(1323,1,{},hwc);_.Nd=function iwc(){return qwc(),fwc};_.Od=function jwc(){return rwc(),gwc};var fwc,gwc;TT(1324,1,{},lwc);_.mc=function mwc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};TT(1325,1,{},owc);_.mc=function pwc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var hM=hjb(yRc,'MaterialsBumpmapSkin$DemoScene',1110),gM=hjb(yRc,'MaterialsBumpmapSkin$DemoScene$1',1111),zO=hjb(rRc,'BeckmannShader',1243),yO=hjb(rRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1244),wO=hjb(rRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1245),xO=hjb(rRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1246),OO=hjb(rRc,'SkinSimpleShader',1322),NO=hjb(rRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1323),LO=hjb(rRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1324),MO=hjb(rRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1325);LMc(xi)(18);