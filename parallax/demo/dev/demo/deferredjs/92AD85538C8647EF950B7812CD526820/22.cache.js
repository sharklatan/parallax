function BJb(){}
function FJb(){}
function IJb(){}
function xJb(){xJb=PKc;wJb=new BJb}
function KJb(){KJb=PKc;zJb=new FJb}
function LJb(){LJb=PKc;AJb=new IJb}
function uJb(){eIb.call(this,(xJb(),wJb))}
function rkc(){G8b.call(this);this.c=0;this.d=0}
TT(746,728,kMc,uJb);_.Kd=function vJb(){UHb(this,'mRefractionRatio',new _Lb((sMb(),eMb),new tjb(1.02)));UHb(this,'mFresnelBias',new _Lb(eMb,new tjb(0.1)));UHb(this,'mFresnelPower',new _Lb(eMb,new tjb(2)));UHb(this,'mFresnelScale',new _Lb(eMb,new tjb(1)));UHb(this,KSc,new $Lb(kMb))};var wJb;TT(747,1,{},BJb);_.Nd=function CJb(){return KJb(),zJb};_.Od=function DJb(){return LJb(),AJb};var zJb,AJb;TT(748,1,{},FJb);_.mc=function GJb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};TT(749,1,{},IJb);_.mc=function JJb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};TT(1129,1,xMc);_.zb=function pkc(){g8b(this.b,new rkc(this.a))};TT(1130,964,{327:1},rkc);_.nb=function skc(){var a,b,c,d,e,f,g,i,j;this.a=new vPb(60,hGb(this.G.k),1,100000);Z4b(this.a._,3200);this.b=new vPb(60,hGb(this.G.k),1,100000);this.e=new m7b;a=new OVb(100,32,16);j=new hNb('./static/textures/cube/park2/*.jpg');IMb(j,(dCb(),bCb));g=new uJb;ZLb(Au(TQb(g.i,KSc),225),j);c=new t1b(g);this.f=new gqb;for(b=0;b<500;b++){d=new z6b(a,c);l4b(d._,Akb()*10000-5000);m4b(d._,Akb()*10000-5000);Z4b(d._,Akb()*10000-5000);W4b(d.eb,Akb()*3+1);vOb(this.H,d);Ypb(this.f,d)}this.H.W=false;i=new GIb;ZLb(Au(TQb(i.i,KSc),225),j);f=new t1b(i);xYb(f,(j$b(),g$b));e=new z6b(new ZUb(100000,100000,100000),f);vOb(this.e,e);BGb(this.G.k,false)};_.ob=function tkc(a){var b,c,d,e;e=1.0E-4*a;g4b(this.a._,(this.c-this.a._.c)*0.05);h4b(this.a._,(-this.d-this.a._.d)*0.05);TOb(this.a,this.H._);o2b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=Au(_pb(this.f,b),304);l4b(d._,5000*Math.cos(e+b));m4b(d._,5000*Math.sin(e+b*1.1))}bGb(this.G.k);tGb(this.G.k,this.e,this.b,null,false);tGb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var CM=hjb(yRc,'MaterialsCubemapFresnel$DemoScene',1130),dG=hjb(LSc,'FresnelShader',746),cG=hjb(LSc,'FresnelShader_Resources_default_InlineClientBundleGenerator',747),aG=hjb(LSc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',748),bG=hjb(LSc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',749);LMc(xi)(22);