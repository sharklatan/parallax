function evc(){}
function ivc(){}
function lvc(){}
function lLc(){}
function pLc(){}
function sLc(){}
function ELc(){}
function ILc(){}
function LLc(){}
function Lyc(){}
function Pyc(){}
function Syc(){}
function yJc(){}
function CJc(){}
function FJc(){}
function UKc(){}
function YKc(){}
function _Kc(){}
function _Lc(){}
function XLc(){}
function cMc(){}
function b_b(a,b){a.c=b}
function $9b(a,b){a.n=b}
function cJc(a,b){yrb(a.c,b)}
function Tuc(a){this.b=a}
function Wuc(a){this.b=a}
function Zuc(a){this.b=a}
function avc(){avc=YMc;_uc=new evc}
function nvc(){nvc=YMc;cvc=new ivc}
function ovc(){ovc=YMc;dvc=new lvc}
function hLc(){hLc=YMc;gLc=new lLc}
function uLc(){uLc=YMc;jLc=new pLc}
function vLc(){vLc=YMc;kLc=new sLc}
function ALc(){ALc=YMc;zLc=new ELc}
function NLc(){NLc=YMc;CLc=new ILc}
function OLc(){OLc=YMc;DLc=new LLc}
function TLc(){TLc=YMc;SLc=new XLc}
function bLc(){bLc=YMc;SKc=new YKc}
function cLc(){cLc=YMc;TKc=new _Kc}
function QKc(){QKc=YMc;PKc=new UKc}
function Hyc(){Hyc=YMc;Gyc=new Lyc}
function Uyc(){Uyc=YMc;Jyc=new Pyc}
function Vyc(){Vyc=YMc;Kyc=new Syc}
function uJc(){uJc=YMc;tJc=new yJc}
function HJc(){HJc=YMc;wJc=new CJc}
function IJc(){IJc=YMc;xJc=new FJc}
function eMc(){eMc=YMc;VLc=new _Lc}
function fMc(){fMc=YMc;WLc=new cMc}
function Quc(a,b){this.b=a;this.c=b}
function QLc(){_Jb.call(this,(TLc(),SLc))}
function eLc(){_Jb.call(this,(hLc(),gLc))}
function xLc(){_Jb.call(this,(ALc(),zLc))}
function Cyc(){_Jb.call(this,(Hyc(),Gyc))}
function rJc(){_Jb.call(this,(uJc(),tJc))}
function NKc(){_Jb.call(this,(QKc(),PKc))}
function Juc(a){a.A+=1;a.A==3&&WQb(a.w,true)}
function Kuc(){_bc.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function Iuc(a,b,c,d){var e,f,g;g=new L4b(b);nOb(bw(rTb(D_b(g).j,AUc),226),c);f=new Fac;e=new RZb(new fYb(a.v,a.u),g);Y8b(e.ab,-500);LQb(f,e);qIb(a.H.n,f,a.d,d,true)}
function Huc(a,b,c,d,e,f){var g,i;g=new D2b;w2b(g,new G5b(16755285));g.k=true;B2b(g,(v0b(),s0b));i=new aac(b,g);i.e=c;$9b(i,jw(600*$lb()));W8b(i.ab,d,e,f);V5b(i.db,1.5707963267948966);i.T=true;i.V=true;LQb(a.I,i);yrb(a.o,i)}
var QVc='enableDiffuse1',RVc='enableDiffuse2',JVc='h',LVc='heightMap',WVc='heightmap',VVc='offset',XVc='r',PVc='tDetail',NVc='tDiffuse1',OVc='tDiffuse2',TVc='uRepeatOverlay',KVc='v';kW(1260,1,KOc);_.Qb=function Fuc(){Bbc(this.c,new Kuc(this.b))};kW(1261,990,{78:1,186:1,342:1},Kuc);_._d=function Luc(a){Juc(this)};_.Nd=function Muc(a){this.v=a.b.ib;this.u=a.b.hb;nOb(bw(rTb(D_b(this.g.c).j,JVc),226),new Tkb(6/this.v));nOb(bw(rTb(D_b(this.F.c).j,KVc),226),new Tkb(6/this.u))};_.ob=function Nuc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Su((Pyb(),Oyb),(Zyb(),Yyb),this);this.c=new PRb(40,UGb(this.H.n),2,4000);this.v=this.H.n.ib;this.u=this.H.n.hb;this.d=new ARb(this.v,this.u,-10000,10000);W8b(this.c.ab,-1200,800,1200);Y8b(this.d.ab,100);this.t=new Fac;LQb(this.t,this.d);this.e=new Uxb(this.c,this.H.d);V8b(this.e.w,0);this.e.t=1;this.e.B=1.2;Rxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;Pxb(this.e,0.15);Dac(this.I,new tac(328965,2000,4000));LQb(this.I,new h$b(1118481));this.f=new L$b(16777215,1.15);W8b(this.f.ab,500,2000,0);LQb(this.I,this.f);this.r=new e_b(16729088,1.5,0);V8b(this.r.ab,0);LQb(this.I,this.r);this.i=new LPb(256,256);bPb(this.i,(yFb(),tFb));_Ob(this.i,(nFb(),lFb));YOb(this.i,(JDb(),HDb));ZOb(this.i,false);this.p=new LPb(256,256);bPb(this.p,tFb);_Ob(this.p,lFb);YOb(this.p,HDb);ZOb(this.p,false);n=new xLc;u=n.j;nOb(bw(u.b[sRc],226),new Tkb(0.05));n8b(bw(bw(u.b[eVc],226).e,301),256,256);nOb(bw(u.b[LVc],226),this.i);s=new LPb(2048,2048);bPb(s,tFb);_Ob(s,lFb);YOb(s,HDb);s.s=false;iPb(s,(QGb(),PGb));jPb(s,PGb);c=new pPb('./static/textures/terrain/grasslight-big.jpg',new Quc(this,s));iPb(c,PGb);jPb(c,PGb);d=new pPb('./static/textures/terrain/backgrounddetailed6.jpg',this);iPb(d,PGb);jPb(d,PGb);b=new pPb('./static/textures/terrain/grasslight-big-nm.jpg',this);iPb(b,PGb);jPb(b,PGb);t=new Cyc;this.C=t.j;nOb(bw(rTb(this.C,$Uc),226),this.p);nOb(bw(rTb(this.C,_Uc),226),new Tkb(3.5));nOb(bw(rTb(this.C,MVc),226),this.i);nOb(bw(rTb(this.C,NVc),226),c);nOb(bw(rTb(this.C,OVc),226),d);nOb(bw(rTb(this.C,aVc),226),s);nOb(bw(rTb(this.C,PVc),226),b);nOb(bw(rTb(this.C,QVc),226),(Ujb(),Ujb(),Tjb));nOb(bw(rTb(this.C,RVc),226),Tjb);nOb(bw(rTb(this.C,yUc),226),Tjb);C5b(bw(bw(rTb(this.C,EUc),226).e,298),16777215);C5b(bw(bw(rTb(this.C,FUc),226).e,298),16777215);C5b(bw(bw(rTb(this.C,DUc),226).e,298),1118481);nOb(bw(rTb(this.C,dVc),226),new Tkb(30));nOb(bw(rTb(this.C,SVc),226),new Tkb(375));n8b(bw(bw(rTb(this.C,TVc),226).e,301),6,6);this.B=new rub;Opb(this.B,hVc,new pOb((IOb(),uOb),new Tkb(1)));Opb(this.B,UVc,new pOb(COb,new t8b(1.5,1.5)));Opb(this.B,VVc,new pOb(COb,new t8b(0,0)));this.n=new rub;i=new K4b((avc(),_uc));WJb(D_b(i),this.B);i.d=false;i.c=true;Opb(this.n,WVc,i);j=new L4b(n);WJb(D_b(j),u);j.d=false;j.c=true;Opb(this.n,uUc,j);k=new L4b(t);WJb(D_b(k),this.C);k.d=true;k.c=true;Opb(this.n,'terrain',k);o=new fYb(this.v,this.u);p=new K1b;E1b(p,new G5b(0));this.s=new RZb(o,p);Y8b(this.s.ab,-500);LQb(this.t,this.s);g=new gYb(6000,6000,64,64);wSb(g);this.w=new RZb(g,k);W8b(this.w.ab,0,-125,0);U5b(this.w.db,-1.5707963267948966);WQb(this.w,false);LQb(this.I,this.w);AIb(this.H.n,this.I.b.d,1);this.H.n.Y=true;this.H.n.Z=true;VGb(this.H.n,false);q=new lJc(this.I,this.c);f=new YIc(0.6);e=new oJc(new rJc);nOb(bw(rTb(D_b(e.c).j,KUc),226),new Tkb(0.65));this.g=new oJc(new NKc);this.F=new oJc(new QLc);nOb(bw(rTb(D_b(this.g.c).j,JVc),226),new Tkb(6/this.v));nOb(bw(rTb(D_b(this.F.c).j,KVc),226),new Tkb(6/this.u));nOb(bw(rTb(D_b(this.g.c).j,XVc),226),new Tkb(0.5));nOb(bw(rTb(D_b(this.F.c).j,XVc),226),new Tkb(0.5));this.F.b=true;r=new LPb(this.v,this.u);bPb(s,sFb);_Ob(s,lFb);YOb(s,HDb);s.g=false;s.s=false;a=new eJc(this.H.n,r);yrb(a.c,q);yrb(a.c,f);yrb(a.c,e);cJc(a,this.g);cJc(a,this.F);this.o=new Irb;new Kzc('./static/models/animated/parrot.js',new Tuc(this));new Kzc(IVc,new Wuc(this));new Kzc('./static/models/animated/stork.js',new Zuc(this));this.q=Ji()};_.pb=function Ouc(a){var b,c,d,e,f;b=(Ji()-this.q)*0.001;if(this.w.hb){Sxb(this.e);this.k=e6b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;B5b(this.I.b.d,0.1,e,this.k);AIb(this.H.n,this.I.b.d,1);r$b(this.f,0.1+f*1.0499999999999998);b_b(this.r,0.9+f*0.6);nOb(bw(rTb(this.C,_Uc),226),new Tkb(0.6+f*2.9));if(this.D){this.b=e6b(this.b+-7.5E-4,0,0.05);nOb(bw(Jpb(this.B,hVc),226),new Tkb(bw(bw(Jpb(this.B,hVc),226).e,150).b+b*this.b));i8b(bw(bw(Jpb(this.B,VVc),226).e,301),b*0.05);o8b(bw(bw(rTb(this.C,YVc),226).e,301),4*bw(bw(Jpb(this.B,VVc),226).e,301).d);BUb(this.s,bw(Jpb(this.n,WVc),287));qIb(this.H.n,this.t,this.d,this.i,true);BUb(this.s,bw(Jpb(this.n,uUc),287));qIb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=bw(Brb(this.o,c),309);_9b(d,jw(1000*b));i8b(d.ab,d.e*b);d.ab.d>2000&&o8b(d.ab,-1500-$lb()*500)}qIb(this.H.n,this.I,this.c,null,false)}this.q=Ji()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;kW(1262,1,{},Quc);_._d=function Ruc(a){Juc(this.b);Iuc(this.b,new eLc,a,this.c)};kW(1263,1,{},Tuc);_.wf=function Uuc(a,b){Fzc((bw(a,344),bw(b,243)));Huc(this.b,bw(b,243),500,-3500,500,700);Huc(this.b,bw(b,243),500,-3000-$lb()*500,500,-200);Huc(this.b,bw(b,243),500,-3000-$lb()*500,500,200);Huc(this.b,bw(b,243),500,-3000-$lb()*500,500,1000)};kW(1264,1,{},Wuc);_.wf=function Xuc(a,b){Fzc((bw(a,344),bw(b,243)));Huc(this.b,bw(b,243),1000,-3000-$lb()*500,350,40)};kW(1265,1,{},Zuc);_.wf=function $uc(a,b){Fzc((bw(a,344),bw(b,243)));Huc(this.b,bw(b,243),1000,-3000-$lb()*500,350,340)};var _uc;kW(1266,1,{},evc);_.Vd=function fvc(){return nvc(),cvc};_.Wd=function gvc(){return ovc(),dvc};var cvc,dvc;kW(1267,1,{},ivc);_.uc=function jvc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};kW(1268,1,{},lvc);_.uc=function mvc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};kW(1329,742,wOc,Cyc);_.Sd=function Dyc(){WJb(this,MOb());WJb(this,NOb());WJb(this,OOb());PJb(this,QVc,new pOb((IOb(),xOb),(Ujb(),Ujb(),Sjb)));PJb(this,RVc,new pOb(xOb,Sjb));PJb(this,yUc,new pOb(xOb,Sjb));PJb(this,ZVc,new pOb(xOb,Sjb));PJb(this,NVc,new oOb(AOb));PJb(this,OVc,new oOb(AOb));PJb(this,PVc,new oOb(AOb));PJb(this,$Uc,new oOb(AOb));PJb(this,aVc,new oOb(AOb));PJb(this,MVc,new oOb(AOb));PJb(this,_Uc,new pOb(uOb,new Tkb(1)));PJb(this,$Vc,new pOb(uOb,new Tkb(0)));PJb(this,SVc,new pOb(uOb,new Tkb(1)));PJb(this,EUc,new pOb(tOb,new G5b(15658734)));PJb(this,FUc,new pOb(tOb,new G5b(1118481)));PJb(this,DUc,new pOb(tOb,new G5b(328965)));PJb(this,dVc,new pOb(uOb,new Tkb(30)));PJb(this,KUc,new pOb(uOb,new Tkb(1)));PJb(this,'uRepeatBase',new pOb(COb,new t8b(1,1)));PJb(this,TVc,new pOb(COb,new t8b(1,1)));PJb(this,YVc,new pOb(COb,new t8b(0,0)))};_.Td=function Eyc(a){var b,c;c=new fsb(Tv(gU,cNc,1,[LUc,MUc]));b=new fsb(Tv(gU,cNc,1,[OUc,PUc,QUc]));YJb(this,eKb(a,Tv(jU,cNc,173,[c,b])))};_.Ud=function Fyc(a){var b,c;c=new fsb(Tv(gU,cNc,1,[RUc]));b=new fsb(Tv(gU,cNc,1,[SUc]));ZJb(this,eKb(a,Tv(jU,cNc,173,[c,b])))};var Gyc;kW(1330,1,{},Lyc);_.Vd=function Myc(){return Uyc(),Jyc};_.Wd=function Nyc(){return Vyc(),Kyc};var Jyc,Kyc;kW(1331,1,{},Pyc);_.uc=function Qyc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};kW(1332,1,{},Syc);_.uc=function Tyc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};kW(1424,742,wOc,rJc);_.Sd=function sJc(){PJb(this,AUc,new oOb((IOb(),AOb)));PJb(this,KUc,new pOb(uOb,new Tkb(1)))};var tJc;kW(1425,1,{},yJc);_.Vd=function zJc(){return HJc(),wJc};_.Wd=function AJc(){return IJc(),xJc};var wJc,xJc;kW(1426,1,{},CJc);_.uc=function DJc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};kW(1427,1,{},FJc);_.uc=function GJc(){return pVc};kW(1448,742,wOc,NKc);_.Sd=function OKc(){PJb(this,AUc,new oOb((IOb(),AOb)));PJb(this,JVc,new pOb(uOb,new Tkb(0.001953125)));PJb(this,XVc,new pOb(uOb,new Tkb(0.35)))};var PKc;kW(1449,1,{},UKc);_.Vd=function VKc(){return bLc(),SKc};_.Wd=function WKc(){return cLc(),TKc};var SKc,TKc;kW(1450,1,{},YKc);_.uc=function ZKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};kW(1451,1,{},_Kc);_.uc=function aLc(){return pVc};kW(1454,742,wOc,eLc);_.Sd=function fLc(){PJb(this,AUc,new oOb((IOb(),AOb)))};var gLc;kW(1455,1,{},lLc);_.Vd=function mLc(){return uLc(),jLc};_.Wd=function nLc(){return vLc(),kLc};var jLc,kLc;kW(1456,1,{},pLc);_.uc=function qLc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};kW(1457,1,{},sLc);_.uc=function tLc(){return pVc};kW(1460,742,wOc,xLc);_.Sd=function yLc(){PJb(this,LVc,new oOb((IOb(),AOb)));PJb(this,eVc,new pOb(COb,new t8b(512,512)));PJb(this,UVc,new pOb(COb,new t8b(1,1)));PJb(this,sRc,new pOb(uOb,new Tkb(0.05)))};var zLc;kW(1461,1,{},ELc);_.Vd=function FLc(){return NLc(),CLc};_.Wd=function GLc(){return OLc(),DLc};var CLc,DLc;kW(1462,1,{},ILc);_.uc=function JLc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};kW(1463,1,{},LLc);_.uc=function MLc(){return pVc};kW(1466,742,wOc,QLc);_.Sd=function RLc(){PJb(this,AUc,new oOb((IOb(),AOb)));PJb(this,KVc,new pOb(uOb,new Tkb(0.001953125)));PJb(this,XVc,new pOb(uOb,new Tkb(0.35)))};var SLc;kW(1467,1,{},XLc);_.Vd=function YLc(){return eMc(),VLc};_.Wd=function ZLc(){return fMc(),WLc};var VLc,WLc;kW(1468,1,{},_Lc);_.uc=function aMc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};kW(1469,1,{},cMc);_.uc=function dMc(){return pVc};var uQ=Hkb(QTc,'TerrainDynamic$DemoScene',1261),qQ=Hkb(QTc,'TerrainDynamic$DemoScene$1',1262),rQ=Hkb(QTc,'TerrainDynamic$DemoScene$2',1263),sQ=Hkb(QTc,'TerrainDynamic$DemoScene$3',1264),tQ=Hkb(QTc,'TerrainDynamic$DemoScene$4',1265),kT=Hkb(rVc,_Vc,1460),iR=Hkb(GTc,'TerrainShader',1329),OS=Hkb(rVc,'BleachBypassShader',1424),cT=Hkb(rVc,'HorizontalTiltShiftShader',1448),oT=Hkb(rVc,'VerticalTiltShiftShader',1466),xQ=Hkb(QTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1266),vQ=Hkb(QTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1267),wQ=Hkb(QTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1268),jT=Hkb(rVc,aWc,1461),hT=Hkb(rVc,bWc,1462),iT=Hkb(rVc,cWc,1463),hR=Hkb(GTc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1330),fR=Hkb(GTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1331),gR=Hkb(GTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1332),NS=Hkb(rVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1425),LS=Hkb(rVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1426),MS=Hkb(rVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1427),bT=Hkb(rVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1449),_S=Hkb(rVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1450),aT=Hkb(rVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1451),nT=Hkb(rVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1467),lT=Hkb(rVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1468),mT=Hkb(rVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1469),gT=Hkb(rVc,'LuminosityShader',1454),fT=Hkb(rVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1455),dT=Hkb(rVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1456),eT=Hkb(rVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1457);YOc(Pj)(38);