function vJb(){}
function zJb(){}
function CJb(){}
function rJb(){rJb=JKc;qJb=new vJb}
function EJb(){EJb=JKc;tJb=new zJb}
function FJb(){FJb=JKc;uJb=new CJb}
function oJb(){$Hb.call(this,(rJb(),qJb))}
function lkc(){A8b.call(this);this.c=0;this.d=0}
KT(747,729,eMc,oJb);_.Kd=function pJb(){OHb(this,'mRefractionRatio',new VLb((mMb(),$Lb),new njb(1.02)));OHb(this,'mFresnelBias',new VLb($Lb,new njb(0.1)));OHb(this,'mFresnelPower',new VLb($Lb,new njb(2)));OHb(this,'mFresnelScale',new VLb($Lb,new njb(1)));OHb(this,tSc,new ULb(eMb))};var qJb;KT(748,1,{},vJb);_.Nd=function wJb(){return EJb(),tJb};_.Od=function xJb(){return FJb(),uJb};var tJb,uJb;KT(749,1,{},zJb);_.mc=function AJb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};KT(750,1,{},CJb);_.mc=function DJb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};KT(1130,1,rMc);_.zb=function jkc(){a8b(this.b,new lkc(this.a))};KT(1131,965,{327:1},lkc);_.nb=function mkc(){var a,b,c,d,e,f,g,i,j;this.a=new pPb(60,bGb(this.G.k),1,100000);T4b(this.a._,3200);this.b=new pPb(60,bGb(this.G.k),1,100000);this.e=new g7b;a=new IVb(100,32,16);j=new bNb('./static/textures/cube/park2/*.jpg');CMb(j,(ZBb(),XBb));g=new oJb;TLb(qu(NQb(g.i,tSc),225),j);c=new n1b(g);this.f=new aqb;for(b=0;b<500;b++){e=new t6b(a,c);f4b(e._,ukb()*10000-5000);g4b(e._,ukb()*10000-5000);T4b(e._,ukb()*10000-5000);Q4b(e.eb,ukb()*3+1);pOb(this.H,e);Spb(this.f,e)}this.H.W=false;i=new AIb;TLb(qu(NQb(i.i,tSc),225),j);f=new n1b(i);rYb(f,(d$b(),a$b));d=new t6b(new TUb(100000,100000,100000),f);pOb(this.e,d);vGb(this.G.k,false)};_.ob=function nkc(a){var b,c,d,e;e=1.0E-4*a;a4b(this.a._,(this.c-this.a._.c)*0.05);b4b(this.a._,(-this.d-this.a._.d)*0.05);NOb(this.a,this.H._);i2b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=qu(Vpb(this.f,b),304);f4b(d._,5000*Math.cos(e+b));g4b(d._,5000*Math.sin(e+b*1.1))}XFb(this.G.k);nGb(this.G.k,this.e,this.b,null,false);nGb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var sM=bjb(hRc,'MaterialsCubemapFresnel$DemoScene',1131),WF=bjb(uSc,'FresnelShader',747),VF=bjb(uSc,'FresnelShader_Resources_default_InlineClientBundleGenerator',748),TF=bjb(uSc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',749),UF=bjb(uSc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',750);FMc(xi)(22);