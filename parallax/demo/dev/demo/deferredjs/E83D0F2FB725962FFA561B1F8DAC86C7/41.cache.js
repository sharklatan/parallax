function Cnc(){}
function Gnc(){}
function Jnc(){}
function trc(){}
function xrc(){}
function Arc(){}
function Pzc(){}
function Tzc(){}
function Wzc(){}
function jBc(){}
function nBc(){}
function qBc(){}
function CBc(){}
function GBc(){}
function JBc(){}
function VBc(){}
function ZBc(){}
function aCc(){}
function mCc(){}
function qCc(){}
function tCc(){}
function yUb(a,b){a.t=b}
function dVb(a,b){a.c=b}
function p3b(a,b){a.i=b}
function tzc(a,b){Lob(a.c,b)}
function Lzc(){Lzc=tDc;Kzc=new Pzc}
function Yzc(){Yzc=tDc;Nzc=new Tzc}
function Zzc(){Zzc=tDc;Ozc=new Wzc}
function ync(){ync=tDc;xnc=new Cnc}
function Lnc(){Lnc=tDc;Anc=new Gnc}
function Mnc(){Mnc=tDc;Bnc=new Jnc}
function MBc(){MBc=tDc;BBc=new JBc}
function fBc(){fBc=tDc;eBc=new jBc}
function sBc(){sBc=tDc;hBc=new nBc}
function tBc(){tBc=tDc;iBc=new qBc}
function yBc(){yBc=tDc;xBc=new CBc}
function LBc(){LBc=tDc;ABc=new GBc}
function RBc(){RBc=tDc;QBc=new VBc}
function cCc(){cCc=tDc;TBc=new ZBc}
function dCc(){dCc=tDc;UBc=new aCc}
function iCc(){iCc=tDc;hCc=new mCc}
function vCc(){vCc=tDc;kCc=new qCc}
function wCc(){wCc=tDc;lCc=new tCc}
function orc(){orc=tDc;nrc=new trc}
function Crc(){Crc=tDc;qrc=new xrc}
function Drc(){Drc=tDc;rrc=new Arc}
function mnc(a,b){this.b=a;this.c=b}
function pnc(a,b){this.b=a;this.c=b}
function snc(a,b){this.b=a;this.c=b}
function vnc(a,b){this.b=a;this.c=b}
function vBc(){XEb.call(this,(yBc(),xBc))}
function cBc(){XEb.call(this,(fBc(),eBc))}
function OBc(){XEb.call(this,(RBc(),QBc))}
function jrc(){XEb.call(this,(orc(),nrc))}
function Izc(){XEb.call(this,(Lzc(),Kzc))}
function fCc(){XEb.call(this,(iCc(),hCc))}
function fnc(a){a.A+=1;a.A==3&&GLb(a.w,true)}
function gnc(){$4b.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function enc(a,b,c,d){var e,f,g;g=new r$b(b);cJb(Uu(mOb(GVb(g).j,sKc),168),c);f=new _3b;e=new h3b(new OSb(a.v,a.u),g);L1b(e.bb,-500);xLb(f,e);GDb(a.H.o,f,a.d,d,true)}
function dnc(a,b,c,d,e,f){var g,i;g=new DYb;xYb(g,new b_b(16755285));g.j=true;BYb(g,(zWb(),wWb));i=new r3b(b,g);i.c=c;p3b(i,av(600*njb()));H1b(i.bb,d,e,f);c1b(i.eb,1.5707963267948966);i.R=true;i.T=true;xLb(a.I,i);Lob(a.o,i);X3b(a.I,a.H.o)}
var QLc='enableDiffuse1',RLc='enableDiffuse2',JLc='h',LLc='heightMap',VLc='heightmap',XLc='r',PLc='tDetail',NLc='tDiffuse1',OLc='tDiffuse2',TLc='uRepeatOverlay',KLc='v';kT(1192,1,UEc);_.Gb=function bnc(){X4b(this.c,new gnc(this.b))};kT(1193,940,{43:1,133:1,275:1},gnc);_.$d=function hnc(a){fnc(this)};_.Pd=function inc(a){this.v=a.b.p;this.u=a.b.o;cJb(Uu(mOb(GVb(this.g.c).j,JLc),168),new gib(6/this.v));cJb(Uu(mOb(GVb(this.F.c).j,KLc),168),new gib(6/this.u))};_.rb=function jnc(){var b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w;It((Uvb(),Tvb),(cwb(),bwb),this);this.c=new BMb(40,BDb(this.H.o),2,4000);this.v=this.H.o.p;this.u=this.H.o.o;this.d=new qMb(this.v,this.u,-10000,10000);H1b(this.c.bb,-1200,800,1200);L1b(this.d.bb,100);this.t=new _3b;xLb(this.t,this.d);this.e=new Zub(this.c,this.H.c);G1b(this.e.w,0);this.e.t=1;this.e.B=1.2;Wub(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;Uub(this.e,0.15);$3b(this.I,new N3b(328965,2000,4000));Z$b(this.I.c.d,0.102,0.9,0.825);xLb(this.I,new pUb(1118481));this.f=new RUb(16777215,1.15);H1b(this.f.bb,500,2000,0);xLb(this.I,this.f);this.r=new fVb(16729088,1.5,0);G1b(this.r.bb,0);xLb(this.I,this.r);this.i=new AKb(256,256);RJb(this.i,(JBb(),EBb));PJb(this.i,(yBb(),wBb));NJb(this.i,(CAb(),AAb));this.p=new AKb(256,256);RJb(this.p,EBb);PJb(this.p,wBb);NJb(this.p,AAb);p=new OBc;w=p.j;cJb(Uu(w.b[yHc],168),new gib(0.05));a1b(Uu(Uu(w.b[fLc],168).e,234),256,256);cJb(Uu(w.b[LLc],168),this.i);u=new AKb(2048,2048);RJb(u,EBb);PJb(u,wBb);NJb(u,AAb);XJb(u,(_Cb(),$Cb));YJb(u,$Cb);d=new cKb('./static/textures/terrain/grasslight-big.jpg',new mnc(this,u));XJb(d,$Cb);YJb(d,$Cb);e=new cKb('./static/textures/terrain/backgrounddetailed6.jpg',this);XJb(e,$Cb);YJb(e,$Cb);c=new cKb('./static/textures/terrain/grasslight-big-nm.jpg',this);XJb(c,$Cb);YJb(c,$Cb);v=new jrc;this.C=v.j;cJb(Uu(mOb(this.C,_Kc),168),this.p);cJb(Uu(mOb(this.C,aLc),168),new gib(3.5));cJb(Uu(mOb(this.C,MLc),168),this.i);cJb(Uu(mOb(this.C,NLc),168),d);cJb(Uu(mOb(this.C,OLc),168),e);cJb(Uu(mOb(this.C,bLc),168),u);cJb(Uu(mOb(this.C,PLc),168),c);cJb(Uu(mOb(this.C,QLc),168),(khb(),khb(),jhb));cJb(Uu(mOb(this.C,RLc),168),jhb);cJb(Uu(mOb(this.C,qKc),168),jhb);$$b(Uu(Uu(mOb(this.C,wKc),168).e,230),16777215);$$b(Uu(Uu(mOb(this.C,xKc),168).e,230),16777215);$$b(Uu(Uu(mOb(this.C,vKc),168).e,230),1118481);cJb(Uu(mOb(this.C,eLc),168),new gib(30));cJb(Uu(mOb(this.C,SLc),168),new gib(375));a1b(Uu(Uu(mOb(this.C,TLc),168).e,234),6,6);this.B=new Arb;_mb(this.B,iLc,new eJb((xJb(),jJb),new gib(1)));_mb(this.B,ULc,new eJb(rJb,new e1b(1.5,1.5)));_mb(this.B,NKc,new eJb(rJb,new e1b(0,0)));this.n=new Arb;k=new q$b((ync(),xnc));SEb(GVb(k),this.B);k.d=false;k.c=true;_mb(this.n,VLc,k);n=new r$b(p);SEb(GVb(n),w);n.d=false;n.c=true;_mb(this.n,WLc,n);o=new r$b(v);SEb(GVb(o),this.C);o.d=true;o.c=true;_mb(this.n,'terrain',o);q=new OSb(this.v,this.u);r=new NXb;IXb(r,new b_b(0));this.s=new h3b(q,r);L1b(this.s.bb,-500);xLb(this.t,this.s);i=new PSb(6000,6000,64,64);cNb(i,khb());fNb(i);eNb(i);this.w=new h3b(i,o);H1b(this.w.bb,0,-125,0);b1b(this.w.eb,-1.5707963267948966);GLb(this.w,false);xLb(this.I,this.w);NDb(this.H.o,this.I.c.d);this.H.o.U=true;this.H.o.V=true;this.H.o.S=false;s=new Czc(this.I,this.c);g=new nzc(0.6);f=new Fzc(new Izc);cJb(Uu(mOb(GVb(f.c).j,RKc),168),new gib(0.65));this.g=new Fzc(new cBc);this.F=new Fzc(new fCc);cJb(Uu(mOb(GVb(this.g.c).j,JLc),168),new gib(6/this.v));cJb(Uu(mOb(GVb(this.F.c).j,KLc),168),new gib(6/this.u));cJb(Uu(mOb(GVb(this.g.c).j,XLc),168),new gib(0.5));cJb(Uu(mOb(GVb(this.F.c).j,XLc),168),new gib(0.5));this.F.b=true;t=new AKb(this.v,this.u);RJb(u,DBb);PJb(u,wBb);NJb(u,AAb);u.g=false;b=new vzc(this.H.o,t);Lob(b.c,s);Lob(b.c,g);Lob(b.c,f);tzc(b,this.g);tzc(b,this.F);j=new osc;this.o=new Vob;try{csc(j,'./static/models/animated/parrot.js',new pnc(this,j));csc(j,ILc,new snc(this,j));csc(j,'./static/models/animated/stork.js',new vnc(this,j))}catch(a){a=pS(a);if(Xu(a,46)){mLb();nV(lLb,(ysb(),wsb),oKc)}else throw oS(a)}X3b(this.I,this.H.o);this.q=yh()};_.sb=function knc(a){var b,c,d,e,f;b=(yh()-this.q)*0.001;if(this.w.kb){Xub(this.e);this.k=j_b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;Z$b(this.I.c.d,0.1,e,this.k);NDb(this.H.o,this.I.c.d);yUb(this.f,0.1+f*1.0499999999999998);dVb(this.r,0.9+f*0.6);cJb(Uu(mOb(this.C,aLc),168),new gib(0.6+f*2.9));if(this.D){this.b=j_b(this.b+-7.5E-4,0,0.05);cJb(Uu(Wmb(this.B,iLc),168),new gib(Uu(Uu(Wmb(this.B,iLc),168).e,98).b+b*this.b));Y0b(Uu(Uu(Wmb(this.B,NKc),168).e,234),b*0.05);b1b(Uu(Uu(mOb(this.C,YLc),168).e,234),4*Uu(Uu(Wmb(this.B,NKc),168).e,234).d);PTb(this.s,Uu(Wmb(this.n,VLc),218));GDb(this.H.o,this.t,this.d,this.i,true);PTb(this.s,Uu(Wmb(this.n,WLc),218));GDb(this.H.o,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Uu(Oob(this.o,c),243);q3b(d,av(1000*b));Y0b(d.bb,d.c*b);d.bb.d>2000&&b1b(d.bb,-1500-njb()*500)}GDb(this.H.o,this.I,this.c,null,false)}this.q=yh()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;kT(1194,1,{},mnc);_.$d=function nnc(a){fnc(this.b);enc(this.b,new vBc,a,this.c)};kT(1195,1,{},pnc);_.Lf=function qnc(){var a;a=this.c.b;hsc(this.c);dnc(this.b,a,500,-3500,500,700);dnc(this.b,a,500,-3000-njb()*500,500,-200);dnc(this.b,a,500,-3000-njb()*500,500,200);dnc(this.b,a,500,-3000-njb()*500,500,1000)};kT(1196,1,{},snc);_.Lf=function tnc(){var a;a=this.c.b;hsc(this.c);dnc(this.b,a,1000,-3000-njb()*500,350,40)};kT(1197,1,{},vnc);_.Lf=function wnc(){var a;a=this.c.b;hsc(this.c);dnc(this.b,a,1000,-3000-njb()*500,350,340)};var xnc;kT(1198,1,{},Cnc);_.Vd=function Dnc(){return Lnc(),Anc};_.Wd=function Enc(){return Mnc(),Bnc};var Anc,Bnc;kT(1199,1,{},Gnc);_.mc=function Hnc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};kT(1200,1,{},Jnc);_.mc=function Knc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};kT(1280,709,IEc,jrc);_.Sd=function krc(){SEb(this,BJb());SEb(this,CJb());SEb(this,DJb());LEb(this,QLc,new eJb((xJb(),mJb),(khb(),khb(),ihb)));LEb(this,RLc,new eJb(mJb,ihb));LEb(this,qKc,new eJb(mJb,ihb));LEb(this,ZLc,new eJb(mJb,ihb));LEb(this,NLc,new dJb(pJb));LEb(this,OLc,new dJb(pJb));LEb(this,PLc,new dJb(pJb));LEb(this,_Kc,new dJb(pJb));LEb(this,bLc,new dJb(pJb));LEb(this,MLc,new dJb(pJb));LEb(this,aLc,new eJb(jJb,new gib(1)));LEb(this,$Lc,new eJb(jJb,new gib(0)));LEb(this,SLc,new eJb(jJb,new gib(1)));LEb(this,wKc,new eJb(iJb,new b_b(15658734)));LEb(this,xKc,new eJb(iJb,new b_b(1118481)));LEb(this,vKc,new eJb(iJb,new b_b(328965)));LEb(this,eLc,new eJb(jJb,new gib(30)));LEb(this,CKc,new eJb(jJb,new gib(1)));LEb(this,'uRepeatBase',new eJb(rJb,new e1b(1,1)));LEb(this,TLc,new eJb(rJb,new e1b(1,1)));LEb(this,YLc,new eJb(rJb,new e1b(0,0)))};_.Td=function lrc(a){var b,c;c=new tpb(Ku(iR,zDc,1,[DKc,EKc]));b=new tpb(Ku(iR,zDc,1,[GKc,HKc,IKc]));UEb(this,aFb(a,Ku(lR,zDc,120,[c,b])))};_.Ud=function mrc(a){var b,c;c=new tpb(Ku(iR,zDc,1,[JKc]));b=new tpb(Ku(iR,zDc,1,[KKc]));VEb(this,aFb(a,Ku(lR,zDc,120,[c,b])))};var nrc;kT(1281,1,{},trc);_.Vd=function urc(){return Crc(),qrc};_.Wd=function vrc(){return Drc(),rrc};var qrc,rrc;kT(1282,1,{},xrc);_.mc=function yrc(){return 'uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\n\nuniform bool enableDiffuse1;\nuniform bool enableDiffuse2;\nuniform bool enableSpecular;\n\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nuniform sampler2D tDetail;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tDisplacement;\n\nuniform float uNormalScale;\n\nuniform vec2 uRepeatOverlay;\nuniform vec2 uRepeatBase;\n\nuniform vec2 uOffset;\n\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\nvarying vec3 vViewPosition;\n\n[*]\n\nvoid main() {\n\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\n\n\tvec3 specularTex = vec3( 1.0 );\n\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\n\tvec2 uvBase = uRepeatBase * vUv;\n\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\n\tnormalTex.xy *= uNormalScale;\n\tnormalTex = normalize( normalTex );\n\n\tif( enableDiffuse1 && enableDiffuse2 ) {\n\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\n\n\t\t#ifdef GAMMA_INPUT\n\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\n\n\t\t#endif\n\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\n\n\t } else if( enableDiffuse1 ) {\n\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\n\n\t} else if( enableDiffuse2 ) {\n\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\n\n\t}\n\n\tif( enableSpecular )\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\n\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\n\tvec3 finalNormal = tsb * normalTex;\n\n\tvec3 normal = normalize( finalNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\n\t// point lights\n\n\t#if MAX_POINT_LIGHTS > 0\n\n\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\tvec3 pointSpecular = vec3( 0.0 );\n\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat pointDistance = lDistance;\n\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\n\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n\n\t\t}\n\n\t#endif\n\n\t// directional lights\n\n\t#if MAX_DIR_LIGHTS > 0\n\n\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\tvec3 dirSpecular = vec3( 0.0 );\n\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n\n\t\t\tdirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\n\t\t\tdirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n\n\t\t}\n\n\t#endif\n\n\t// hemisphere lights\n\n\t#if MAX_HEMI_LIGHTS > 0\n\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\n\t\tvec3 hemiSpecular = vec3( 0.0 );\n\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\n\n\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\t\themiDiffuse += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t\t// specular (sky light)\n\n\t\t\tfloat hemiSpecularWeight = 0.0;\n\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\n\n\t\t\t// specular (ground light)\n\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\n\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n\n\t\t\themiSpecular += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\n\n\t\t}\n\n\t#endif\n\n\t// all lights contribution summation\n\n\tvec3 totalDiffuse = vec3( 0.0 );\n\tvec3 totalSpecular = vec3( 0.0 );\n\n\t#if MAX_DIR_LIGHTS > 0\n\n\t\ttotalDiffuse += dirDiffuse;\n\t\ttotalSpecular += dirSpecular;\n\n\t#endif\n\n\t#if MAX_HEMI_LIGHTS > 0\n\n\t\ttotalDiffuse += hemiDiffuse;\n\t\ttotalSpecular += hemiSpecular;\n\n\t#endif\n\n\t#if MAX_POINT_LIGHTS > 0\n\n\t\ttotalDiffuse += pointDiffuse;\n\t\ttotalSpecular += pointSpecular;\n\n\t#endif\n\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n\n[*]\n}'};kT(1283,1,{},Arc);_.mc=function Brc(){return 'attribute vec4 tangent;\n\nuniform vec2 uRepeatBase;\n\nuniform sampler2D tNormal;\n\n#ifdef VERTEX_TEXTURES\n\n\tuniform sampler2D tDisplacement;\n\tuniform float uDisplacementScale;\n\tuniform float uDisplacementBias;\n\n#endif\n\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nvarying vec3 vViewPosition;\n\n[*]\n\nvoid main() {\n\n\tvNormal = normalize( normalMatrix * normal );\n\n\t// tangent and binormal vectors\n\n\tvTangent = normalize( normalMatrix * tangent.xyz );\n\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\n\tvBinormal = normalize( vBinormal );\n\n\t// texture coordinates\n\n\tvUv = uv;\n\n\tvec2 uvBase = uv * uRepeatBase;\n\n\t// displacement mapping\n\n\t#ifdef VERTEX_TEXTURES\n\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\n\t\tvec3 displacedPosition = normal * df + position;\n\n\t\tvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n\n\t#else\n\n\t\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\tvViewPosition = -mvPosition.xyz;\n\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\n\tvNormal = normalMatrix * normalTex;\n\n\t[*]\n\n}\n'};kT(1347,709,IEc,Izc);_.Sd=function Jzc(){LEb(this,sKc,new dJb((xJb(),pJb)));LEb(this,RKc,new eJb(jJb,new gib(1)))};var Kzc;kT(1348,1,{},Pzc);_.Vd=function Qzc(){return Yzc(),Nzc};_.Wd=function Rzc(){return Zzc(),Ozc};var Nzc,Ozc;kT(1349,1,{},Tzc);_.mc=function Uzc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};kT(1350,1,{},Wzc);_.mc=function Xzc(){return qLc};kT(1371,709,IEc,cBc);_.Sd=function dBc(){LEb(this,sKc,new dJb((xJb(),pJb)));LEb(this,JLc,new eJb(jJb,new gib(0.001953125)));LEb(this,XLc,new eJb(jJb,new gib(0.35)))};var eBc;kT(1372,1,{},jBc);_.Vd=function kBc(){return sBc(),hBc};_.Wd=function lBc(){return tBc(),iBc};var hBc,iBc;kT(1373,1,{},nBc);_.mc=function oBc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};kT(1374,1,{},qBc);_.mc=function rBc(){return qLc};kT(1377,709,IEc,vBc);_.Sd=function wBc(){LEb(this,sKc,new dJb((xJb(),pJb)))};var xBc;kT(1378,1,{},CBc);_.Vd=function DBc(){return LBc(),ABc};_.Wd=function EBc(){return MBc(),BBc};var ABc,BBc;kT(1379,1,{},GBc);_.mc=function HBc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};kT(1380,1,{},JBc);_.mc=function KBc(){return qLc};kT(1383,709,IEc,OBc);_.Sd=function PBc(){LEb(this,LLc,new dJb((xJb(),pJb)));LEb(this,fLc,new eJb(rJb,new e1b(512,512)));LEb(this,ULc,new eJb(rJb,new e1b(1,1)));LEb(this,yHc,new eJb(jJb,new gib(0.05)))};var QBc;kT(1384,1,{},VBc);_.Vd=function WBc(){return cCc(),TBc};_.Wd=function XBc(){return dCc(),UBc};var TBc,UBc;kT(1385,1,{},ZBc);_.mc=function $Bc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};kT(1386,1,{},aCc);_.mc=function bCc(){return qLc};kT(1389,709,IEc,fCc);_.Sd=function gCc(){LEb(this,sKc,new dJb((xJb(),pJb)));LEb(this,KLc,new eJb(jJb,new gib(0.001953125)));LEb(this,XLc,new eJb(jJb,new gib(0.35)))};var hCc;kT(1390,1,{},mCc);_.Vd=function nCc(){return vCc(),kCc};_.Wd=function oCc(){return wCc(),lCc};var kCc,lCc;kT(1391,1,{},qCc);_.mc=function rCc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};kT(1392,1,{},tCc);_.mc=function uCc(){return qLc};var hO=Whb(QJc,'TerrainDynamic$DemoScene',1193),dO=Whb(QJc,'TerrainDynamic$DemoScene$1',1194),eO=Whb(QJc,'TerrainDynamic$DemoScene$2',1195),fO=Whb(QJc,'TerrainDynamic$DemoScene$3',1196),gO=Whb(QJc,'TerrainDynamic$DemoScene$4',1197),oQ=Whb(sLc,_Lc,1383),IO=Whb(GJc,'TerrainShader',1280),SP=Whb(sLc,'BleachBypassShader',1347),gQ=Whb(sLc,'HorizontalTiltShiftShader',1371),sQ=Whb(sLc,'VerticalTiltShiftShader',1389),kO=Whb(QJc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1198),iO=Whb(QJc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1199),jO=Whb(QJc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1200),nQ=Whb(sLc,aMc,1384),lQ=Whb(sLc,bMc,1385),mQ=Whb(sLc,cMc,1386),HO=Whb(GJc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1281),FO=Whb(GJc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1282),GO=Whb(GJc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1283),RP=Whb(sLc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1348),PP=Whb(sLc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1349),QP=Whb(sLc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1350),fQ=Whb(sLc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1372),dQ=Whb(sLc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1373),eQ=Whb(sLc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1374),rQ=Whb(sLc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1390),pQ=Whb(sLc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1391),qQ=Whb(sLc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1392),kQ=Whb(sLc,'LuminosityShader',1377),jQ=Whb(sLc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1378),hQ=Whb(sLc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1379),iQ=Whb(sLc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1380);fFc(Ei)(41);