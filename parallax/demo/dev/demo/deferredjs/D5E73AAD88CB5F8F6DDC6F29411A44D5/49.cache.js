function Zuc(){}
function hvc(){}
function lvc(){}
function pvc(){}
function tvc(){}
function Cvc(){}
function zvc(){}
function Hvc(){}
function Gvc(){}
function Lvc(){}
function Kvc(){}
function sAc(){}
function DAc(){}
function AAc(){}
function IAc(){}
function HAc(){}
function MAc(){}
function LAc(){}
function qJc(){}
function zJc(){}
function wJc(){}
function EJc(){}
function DJc(){}
function IJc(){}
function HJc(){}
function aLc(){}
function jLc(){}
function gLc(){}
function oLc(){}
function nLc(){}
function sLc(){}
function rLc(){}
function xLc(){}
function GLc(){}
function DLc(){}
function LLc(){}
function KLc(){}
function PLc(){}
function OLc(){}
function ULc(){}
function $Lc(){}
function bMc(){}
function gMc(){}
function fMc(){}
function kMc(){}
function jMc(){}
function pMc(){}
function yMc(){}
function vMc(){}
function DMc(){}
function CMc(){}
function HMc(){}
function GMc(){}
function g0b(a,b){a.t=b}
function S0b(a,b){a.b=b}
function s7b(a,b){a.g=b}
function $Ic(a,b){pob(a.b,b)}
function bvc(){s9b.call(this)}
function yvc(){yvc=QNc;xvc=new Cvc}
function Ovc(){Ovc=QNc;Avc=new Hvc}
function Pvc(){Pvc=QNc;Bvc=new Lvc}
function PAc(){PAc=QNc;BAc=new IAc}
function zAc(){zAc=QNc;yAc=new DAc}
function QAc(){QAc=QNc;CAc=new MAc}
function vJc(){vJc=QNc;uJc=new zJc}
function LJc(){LJc=QNc;xJc=new EJc}
function MJc(){MJc=QNc;yJc=new IJc}
function fLc(){fLc=QNc;eLc=new jLc}
function vLc(){vLc=QNc;hLc=new oLc}
function wLc(){wLc=QNc;iLc=new sLc}
function CLc(){CLc=QNc;BLc=new GLc}
function SLc(){SLc=QNc;ELc=new LLc}
function TLc(){TLc=QNc;FLc=new PLc}
function ZLc(){ZLc=QNc;YLc=new bMc}
function nMc(){nMc=QNc;_Lc=new gMc}
function oMc(){oMc=QNc;aMc=new kMc}
function uMc(){uMc=QNc;tMc=new yMc}
function KMc(){KMc=QNc;wMc=new DMc}
function LMc(){LMc=QNc;xMc=new HMc}
function ivc(a,b){this.a=a;this.b=b}
function mvc(a,b){this.a=a;this.b=b}
function qvc(a,b){this.a=a;this.b=b}
function uvc(a,b){this.a=a;this.b=b}
function tAc(){PGb.call(this,(zAc(),yAc))}
function rJc(){PGb.call(this,(vJc(),uJc))}
function bLc(){PGb.call(this,(fLc(),eLc))}
function yLc(){PGb.call(this,(CLc(),BLc))}
function VLc(){PGb.call(this,(ZLc(),YLc))}
function qMc(){PGb.call(this,(uMc(),tMc))}
function avc(a){a.w+=1;a.w==3&&(a.v.db=true,undefined)}
function _uc(a,b,c,d){var e,f,g;g=new y6b(b);LLb(kr(z1b(g).i.a[kad],167),c);f=new i8b;e=new k7b(new g$b(a.u,a.t),g);e.W.b=-500;tOb(f,e);sFb(a.C.n,f,a.c,d,true)}
function $uc(a,b,c,d,e,f){var g,i;g=new G4b;A4b(g,new OPb(16755285));g.i=true;E4b(g,(v2b(),s2b));i=new u7b(b,g);i.b=c;s7b(i,sr(600*Math.random()));iVb(i.W,d,e,f);i.Z.d=1.5707963267948966;i.M=true;i.N=true;tOb(a.D,i);pob(a.n,i);e8b(a.D,a.C.n)}
var Ted='./static/models/animated/parrot.js',Ued='./static/models/animated/stork.js',Fed='./static/textures/terrain/backgrounddetailed6.jpg',Ged='./static/textures/terrain/grasslight-big-nm.jpg',Eed='./static/textures/terrain/grasslight-big.jpg',Wed='//\r\n// Description : Array and textureless GLSL 3D simplex noise function.\r\n//      Author : Ian McEwan, Ashima Arts.\r\n//  Maintainer : ijm\r\n//     Lastmod : 20110409 (stegu)\r\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\r\n//               Distributed under the MIT License. See LICENSE file.\r\n//\r\n\r\nuniform float time;\r\nvarying vec2 vUv;\r\n\r\nvec4 permute( vec4 x ) {\r\n\r\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\r\n\r\n}\r\n\r\nvec4 taylorInvSqrt( vec4 r ) {\r\n\r\n\treturn 1.79284291400159 - 0.85373472095314 * r;\r\n\r\n}\r\n\r\nfloat snoise( vec3 v ) {\r\n\r\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\r\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\r\n\r\n\t// First corner\r\n\r\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\r\n\tvec3 x0 = v - i + dot( i, C.xxx );\r\n\r\n\t// Other corners\r\n\r\n\tvec3 g = step( x0.yzx, x0.xyz );\r\n\tvec3 l = 1.0 - g;\r\n\tvec3 i1 = min( g.xyz, l.zxy );\r\n\tvec3 i2 = max( g.xyz, l.zxy );\r\n\r\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\r\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\r\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\r\n\r\n\t// Permutations\r\n\r\n\ti = mod( i, 289.0 );\r\n\tvec4 p = permute( permute( permute(\r\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\r\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\r\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\r\n\r\n\t// Gradients\r\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\r\n\r\n\tfloat n_ = 1.0 / 7.0; // N=7\r\n\r\n\tvec3 ns = n_ * D.wyz - D.xzx;\r\n\r\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\r\n\r\n\tvec4 x_ = floor( j * ns.z );\r\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\r\n\r\n\tvec4 x = x_ *ns.x + ns.yyyy;\r\n\tvec4 y = y_ *ns.x + ns.yyyy;\r\n\tvec4 h = 1.0 - abs( x ) - abs( y );\r\n\r\n\tvec4 b0 = vec4( x.xy, y.xy );\r\n\tvec4 b1 = vec4( x.zw, y.zw );\r\n\r\n\r\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\r\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\r\n\tvec4 sh = -step( h, vec4( 0.0 ) );\r\n\r\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\r\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\r\n\r\n\tvec3 p0 = vec3( a0.xy, h.x );\r\n\tvec3 p1 = vec3( a0.zw, h.y );\r\n\tvec3 p2 = vec3( a1.xy, h.z );\r\n\tvec3 p3 = vec3( a1.zw, h.w );\r\n\r\n\t// Normalise gradients\r\n\r\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\r\n\tp0 *= norm.x;\r\n\tp1 *= norm.y;\r\n\tp2 *= norm.z;\r\n\tp3 *= norm.w;\r\n\r\n\t// Mix final noise value\r\n\r\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\r\n\tm = m * m;\r\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\r\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\r\n\r\n}\r\n\r\nfloat surface3( vec3 coord ) {\r\n\r\n\tfloat n = 0.0;\r\n\r\n\tn += 1.0 * abs( snoise( coord ) );\r\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\r\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\r\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\r\n\r\n\treturn n;\r\n\r\n}\r\n\r\nvoid main( void ) {\r\n\r\n\tvec3 coord = vec3( vUv, -time );\r\n\tfloat n = surface3( coord );\r\n\r\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\r\n\r\n}\r\n',sfd='BleachBypassShader',tfd='BleachBypassShader_Resources_default_StaticClientBundleGenerator',ufd='BleachBypassShader_Resources_default_StaticClientBundleGenerator$1',vfd='BleachBypassShader_Resources_default_StaticClientBundleGenerator$2',wfd='HorizontalTiltShiftShader',xfd='HorizontalTiltShiftShader_Resources_default_StaticClientBundleGenerator',yfd='HorizontalTiltShiftShader_Resources_default_StaticClientBundleGenerator$1',zfd='HorizontalTiltShiftShader_Resources_default_StaticClientBundleGenerator$2',Afd='LuminosityShader',Bfd='LuminosityShader_Resources_default_StaticClientBundleGenerator',Cfd='LuminosityShader_Resources_default_StaticClientBundleGenerator$1',Dfd='LuminosityShader_Resources_default_StaticClientBundleGenerator$2',gfd='TerrainDynamic$DemoScene',hfd='TerrainDynamic$DemoScene$1',ifd='TerrainDynamic$DemoScene$2',jfd='TerrainDynamic$DemoScene$3',kfd='TerrainDynamic$DemoScene$4',lfd='TerrainDynamic_Resources_default_StaticClientBundleGenerator',mfd='TerrainDynamic_Resources_default_StaticClientBundleGenerator$1',nfd='TerrainDynamic_Resources_default_StaticClientBundleGenerator$2',ofd='TerrainShader',pfd='TerrainShader_Resources_default_StaticClientBundleGenerator',qfd='TerrainShader_Resources_default_StaticClientBundleGenerator$1',rfd='TerrainShader_Resources_default_StaticClientBundleGenerator$2',Ifd='VerticalTiltShiftShader',Jfd='VerticalTiltShiftShader_Resources_default_StaticClientBundleGenerator',Kfd='VerticalTiltShiftShader_Resources_default_StaticClientBundleGenerator$1',Lfd='VerticalTiltShiftShader_Resources_default_StaticClientBundleGenerator$2',afd='attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n\t[*]\r\n\r\n}\r\n',Led='enableDiffuse1',Med='enableDiffuse2',Bed='h',Ded='heightMap',Ped='heightmap',Sed='r',Ked='tDetail',Ied='tDiffuse1',Jed='tDiffuse2',Red='terrain',$ed='uRepeatBase',Oed='uRepeatOverlay',efd='uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n',bfd='uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n',dfd='uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n',cfd='uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n',ffd='uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n',_ed='uniform vec3 uAmbientColor;\r\nuniform vec3 uDiffuseColor;\r\nuniform vec3 uSpecularColor;\r\nuniform float uShininess;\r\nuniform float uOpacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\r\n\r\n\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\r\n\r\n[*]\r\n}',Ced='v',Xed='varying vec2 vUv;\r\nuniform vec2 scale;\r\nuniform vec2 offset;\r\n\r\nvoid main( void ) {\r\n\r\n\tvUv = uv * scale + offset;\r\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n}\r\n';_=Uuc.prototype;_.vb=function Yuc(){o9b(this.b,new bvc(this.a))};_=bvc.prototype=Zuc.prototype=new r9b;_.gC=function cvc(){return OI};_.Yd=function dvc(a){avc(this)};_.Nd=function evc(a){this.u=a.a.o;this.t=a.a.n;LLb(kr(z1b(this.f.b).i.a[Bed],167),new ihb(6/this.u));LLb(kr(z1b(this.A.b).i.a[Ced],167),new ihb(6/this.t))};_.mb=function fvc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w;Lp((ixb(),hxb),(txb(),sxb),this);this.b=new sPb(40,nFb(this.C.n),2,4000);this.u=this.C.n.o;this.t=this.C.n.n;this.c=new jPb(this.u,this.t,-10000,10000);iVb(this.b.W,-1200,800,1200);this.c.W.b=100;this.s=new i8b;tOb(this.s,this.c);this.d=new ewb(this.b,this.C.b);jVb(this.d.v,0);this.d.s=1;this.d.x=1.2;this.d.o=0.8;this.d.g=true;this.d.e=true;this.d.f=true;this.d.a=0.15;h8b(this.D,new U7b(328965,2000,4000));IPb(this.D.b.c,0.102,0.9,0.825);tOb(this.D,new X_b(1118481));this.e=new A0b(16777215,1.15);iVb(this.e.W,500,2000,0);tOb(this.D,this.e);this.q=new U0b(16729088,1.5,0);jVb(this.q.W,0);tOb(this.D,this.q);this.g=new oNb(256,256);AMb(this.g,(oDb(),jDb));yMb(this.g,(cDb(),aDb));wMb(this.g,(bCb(),_Bb));this.o=new oNb(256,256);AMb(this.o,jDb);yMb(this.o,aDb);wMb(this.o,_Bb);p=new VLc;w=p.i;LLb(kr(w.a[zQc],167),new ihb(0.05));GUb(kr(kr(w.a[Pbd],167).d,193),256,256);LLb(kr(w.a[Ded],167),this.g);u=new oNb(2048,2048);AMb(u,jDb);yMb(u,aDb);wMb(u,_Bb);GMb(u,(KEb(),JEb));HMb(u,JEb);d=new KMb(Eed,new ivc(this,u));GMb(d,JEb);HMb(d,JEb);e=new KMb(Fed,this);GMb(e,JEb);HMb(e,JEb);c=new KMb(Ged,this);GMb(c,JEb);HMb(c,JEb);v=new tAc;this.y=v.i;LLb(kr(this.y.a[Wcd],167),this.o);LLb(kr(this.y.a[Xcd],167),new ihb(3.5));LLb(kr(this.y.a[Hed],167),this.g);LLb(kr(this.y.a[Ied],167),d);LLb(kr(this.y.a[Jed],167),e);LLb(kr(this.y.a[Ycd],167),u);LLb(kr(this.y.a[Ked],167),c);LLb(kr(this.y.a[Led],167),(kgb(),kgb(),jgb));LLb(kr(this.y.a[Med],167),jgb);LLb(kr(this.y.a[iad],167),jgb);JPb(kr(kr(this.y.a[oad],167).d,179),16777215);JPb(kr(kr(this.y.a[pad],167).d,179),16777215);JPb(kr(kr(this.y.a[nad],167).d,179),1118481);LLb(kr(this.y.a[_cd],167),new ihb(30));LLb(kr(this.y.a[Ned],167),new ihb(375));GUb(kr(kr(this.y.a[Oed],167).d,193),6,6);this.x=new Brb;tmb(this.x,Ubd,new NLb((fMb(),TLb),new ihb(1)));tmb(this.x,udd,new NLb(_Lb,new KUb(1.5,1.5)));tmb(this.x,Dbd,new NLb(_Lb,new KUb(0,0)));this.k=new Brb;k=new w6b((yvc(),xvc));LGb(z1b(k),this.x);k.c=false;k.b=true;tmb(this.k,Ped,k);n=new y6b(p);LGb(z1b(n),w);n.c=false;n.b=true;tmb(this.k,Qed,n);o=new y6b(v);LGb(z1b(o),this.y);o.c=true;o.b=true;tmb(this.k,Red,o);q=new g$b(this.u,this.t);r=new N3b;I3b(r,new OPb(0));this.r=new k7b(q,r);this.r.W.b=-500;tOb(this.s,this.r);i=new h$b(6000,6000,64,64);oQb(i,igb);rQb(i);qQb(i);this.v=new k7b(i,o);iVb(this.v.W,0,-125,0);this.v.Z.c=-1.5707963267948966;this.v.db=false;tOb(this.D,this.v);zFb(this.C.n,this.D.b.c);this.C.n.P=true;this.C.n.Q=true;this.C.n.N=false;s=new jJc(this.D,this.b);g=new SIc(0.6);f=new nJc(new rJc);LLb(kr(z1b(f.b).i.a[Uad],167),new ihb(0.65));this.f=new nJc(new bLc);this.A=new nJc(new qMc);LLb(kr(z1b(this.f.b).i.a[Bed],167),new ihb(6/this.u));LLb(kr(z1b(this.A.b).i.a[Ced],167),new ihb(6/this.t));LLb(kr(z1b(this.f.b).i.a[Sed],167),new ihb(0.5));LLb(kr(z1b(this.A.b).i.a[Sed],167),new ihb(0.5));this.A.a=true;t=new oNb(this.u,this.t);AMb(u,iDb);yMb(u,aDb);wMb(u,_Bb);u.f=false;b=new aJc(this.C.n,t);pob(b.b,s);pob(b.b,g);pob(b.b,f);$Ic(b,this.f);$Ic(b,this.A);j=new eBc;this.n=new Bob;try{TAc(j,Ted,new mvc(this,j));TAc(j,k8c,new qvc(this,j));TAc(j,Ued,new uvc(this,j))}catch(a){a=NM(a);if(nr(a,41)){iOb();XQ(hOb,(DQ(),BQ),l8c)}else throw a}e8b(this.D,this.C.n);this.p=Uc()};_.nb=function gvc(a){var b,c,d,e,f;b=(Uc()-this.p)*0.001;if(this.v.db){cwb(this.d);this.j=cTb(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;IPb(this.D.b.c,0.1,e,this.j);zFb(this.C.n,this.D.b.c);g0b(this.e,0.1+f*1.0499999999999998);S0b(this.q,0.9+f*0.6);LLb(kr(this.y.a[Xcd],167),new ihb(0.6+f*2.9));if(this.z){this.a=cTb(this.a+-7.5E-4,0,0.05);LLb(kr(omb(this.x,Ubd),167),new ihb(kr(kr(omb(this.x,Ubd),167).d,96).a+b*this.a));BUb(kr(kr(omb(this.x,Dbd),167).d,193),b*0.05);HUb(kr(kr(this.y.a[Ved],167).d,193),4*kr(kr(omb(this.x,Dbd),167).d,193).c);r_b(this.r,kr(omb(this.k,Ped),225));sFb(this.C.n,this.s,this.c,this.g,true);r_b(this.r,kr(omb(this.k,Qed),225));sFb(this.C.n,this.s,this.c,this.o,true);this.z=false}for(c=0;c<this.n.b;++c){d=kr(tob(this.n,c),242);t7b(d,sr(1000*b));BUb(d.W,d.b*b);d.W.c>2000&&HUb(d.W,-1500-Math.random()*500)}sFb(this.C.n,this.D,this.b,null,false)}this.p=Uc()};_.cM={38:1,132:1,274:1};_.a=0;_.b=null;_.c=null;_.d=null;_.e=null;_.f=null;_.g=null;_.i=1;_.j=0;_.k=null;_.n=null;_.o=null;_.p=0;_.q=null;_.r=null;_.s=null;_.t=1000;_.u=1000;_.v=null;_.w=0;_.x=null;_.y=null;_.z=true;_.A=null;_=ivc.prototype=hvc.prototype=new Jb;_.gC=function jvc(){return KI};_.Yd=function kvc(a){avc(this.a);_uc(this.a,new yLc,a,this.b)};_.a=null;_.b=null;_=mvc.prototype=lvc.prototype=new Jb;_.gC=function nvc(){return LI};_.Gf=function ovc(){var a;a=this.b.a;ZAc(this.b);$uc(this.a,a,500,-3500,500,700);$uc(this.a,a,500,-3000-Math.random()*500,500,-200);$uc(this.a,a,500,-3000-Math.random()*500,500,200);$uc(this.a,a,500,-3000-Math.random()*500,500,1000)};_.a=null;_.b=null;_=qvc.prototype=pvc.prototype=new Jb;_.gC=function rvc(){return MI};_.Gf=function svc(){var a;a=this.b.a;ZAc(this.b);$uc(this.a,a,1000,-3000-Math.random()*500,350,40)};_.a=null;_.b=null;_=uvc.prototype=tvc.prototype=new Jb;_.gC=function vvc(){return NI};_.Gf=function wvc(){var a;a=this.b.a;ZAc(this.b);$uc(this.a,a,1000,-3000-Math.random()*500,350,340)};_.a=null;_.b=null;var xvc;_=Cvc.prototype=zvc.prototype=new Jb;_.gC=function Dvc(){return RI};_.Td=function Evc(){return Ovc(),Avc};_.Ud=function Fvc(){return Pvc(),Bvc};var Avc=null,Bvc=null;_=Hvc.prototype=Gvc.prototype=new Jb;_.gC=function Ivc(){return PI};_.ac=function Jvc(){return Wed};_=Lvc.prototype=Kvc.prototype=new Jb;_.gC=function Mvc(){return QI};_.ac=function Nvc(){return Xed};_=tAc.prototype=sAc.prototype=new BGb;_.gC=function uAc(){return lJ};_.Qd=function vAc(){LGb(this,kMb());LGb(this,lMb());LGb(this,mMb());EGb(this,Led,new NLb((fMb(),WLb),(kgb(),kgb(),igb)));EGb(this,Med,new NLb(WLb,igb));EGb(this,iad,new NLb(WLb,igb));EGb(this,Yed,new NLb(WLb,igb));EGb(this,Ied,new MLb(ZLb));EGb(this,Jed,new MLb(ZLb));EGb(this,Ked,new MLb(ZLb));EGb(this,Wcd,new MLb(ZLb));EGb(this,Ycd,new MLb(ZLb));EGb(this,Hed,new MLb(ZLb));EGb(this,Xcd,new NLb(TLb,new ihb(1)));EGb(this,Zed,new NLb(TLb,new ihb(0)));EGb(this,Ned,new NLb(TLb,new ihb(1)));EGb(this,oad,new NLb(SLb,new OPb(15658734)));EGb(this,pad,new NLb(SLb,new OPb(1118481)));EGb(this,nad,new NLb(SLb,new OPb(328965)));EGb(this,_cd,new NLb(TLb,new ihb(30)));EGb(this,wad,new NLb(TLb,new ihb(1)));EGb(this,$ed,new NLb(_Lb,new KUb(1,1)));EGb(this,Oed,new NLb(_Lb,new KUb(1,1)));EGb(this,Ved,new NLb(_Lb,new KUb(0,0)))};_.Rd=function wAc(a){var b,c;c=new cpb(br(FL,{89:1,107:1},1,[yad,zad]));b=new cpb(br(FL,{89:1,107:1},1,[Bad,Cad,Dad]));NGb(this,VGb(a,br(JL,{89:1,107:1},118,[c,b])))};_.Sd=function xAc(a){var b,c;c=new cpb(br(FL,{89:1,107:1},1,[Ead]));b=new cpb(br(FL,{89:1,107:1},1,[Fad]));OGb(this,VGb(a,br(JL,{89:1,107:1},118,[c,b])))};_.cM={165:1};var yAc;_=DAc.prototype=AAc.prototype=new Jb;_.gC=function EAc(){return kJ};_.Td=function FAc(){return PAc(),BAc};_.Ud=function GAc(){return QAc(),CAc};var BAc=null,CAc=null;_=IAc.prototype=HAc.prototype=new Jb;_.gC=function JAc(){return iJ};_.ac=function KAc(){return _ed};_=MAc.prototype=LAc.prototype=new Jb;_.gC=function NAc(){return jJ};_.ac=function OAc(){return afd};_=rJc.prototype=qJc.prototype=new BGb;_.gC=function sJc(){return qK};_.Qd=function tJc(){EGb(this,kad,new MLb((fMb(),ZLb)));EGb(this,Uad,new NLb(TLb,new ihb(1)))};_.cM={165:1};var uJc;_=zJc.prototype=wJc.prototype=new Jb;_.gC=function AJc(){return pK};_.Td=function BJc(){return LJc(),xJc};_.Ud=function CJc(){return MJc(),yJc};var xJc=null,yJc=null;_=EJc.prototype=DJc.prototype=new Jb;_.gC=function FJc(){return nK};_.ac=function GJc(){return bfd};_=IJc.prototype=HJc.prototype=new Jb;_.gC=function JJc(){return oK};_.ac=function KJc(){return vad};_=bLc.prototype=aLc.prototype=new BGb;_.gC=function cLc(){return GK};_.Qd=function dLc(){EGb(this,kad,new MLb((fMb(),ZLb)));EGb(this,Bed,new NLb(TLb,new ihb(0.001953125)));EGb(this,Sed,new NLb(TLb,new ihb(0.35)))};_.cM={165:1};var eLc;_=jLc.prototype=gLc.prototype=new Jb;_.gC=function kLc(){return FK};_.Td=function lLc(){return vLc(),hLc};_.Ud=function mLc(){return wLc(),iLc};var hLc=null,iLc=null;_=oLc.prototype=nLc.prototype=new Jb;_.gC=function pLc(){return DK};_.ac=function qLc(){return cfd};_=sLc.prototype=rLc.prototype=new Jb;_.gC=function tLc(){return EK};_.ac=function uLc(){return vad};_=yLc.prototype=xLc.prototype=new BGb;_.gC=function zLc(){return KK};_.Qd=function ALc(){EGb(this,kad,new MLb((fMb(),ZLb)))};_.cM={165:1};var BLc;_=GLc.prototype=DLc.prototype=new Jb;_.gC=function HLc(){return JK};_.Td=function ILc(){return SLc(),ELc};_.Ud=function JLc(){return TLc(),FLc};var ELc=null,FLc=null;_=LLc.prototype=KLc.prototype=new Jb;_.gC=function MLc(){return HK};_.ac=function NLc(){return dfd};_=PLc.prototype=OLc.prototype=new Jb;_.gC=function QLc(){return IK};_.ac=function RLc(){return vad};_=VLc.prototype=ULc.prototype=new BGb;_.gC=function WLc(){return OK};_.Qd=function XLc(){EGb(this,Ded,new MLb((fMb(),ZLb)));EGb(this,Pbd,new NLb(_Lb,new KUb(512,512)));EGb(this,udd,new NLb(_Lb,new KUb(1,1)));EGb(this,zQc,new NLb(TLb,new ihb(0.05)))};_.cM={165:1};var YLc;_=bMc.prototype=$Lc.prototype=new Jb;_.gC=function cMc(){return NK};_.Td=function dMc(){return nMc(),_Lc};_.Ud=function eMc(){return oMc(),aMc};var _Lc=null,aMc=null;_=gMc.prototype=fMc.prototype=new Jb;_.gC=function hMc(){return LK};_.ac=function iMc(){return efd};_=kMc.prototype=jMc.prototype=new Jb;_.gC=function lMc(){return MK};_.ac=function mMc(){return vad};_=qMc.prototype=pMc.prototype=new BGb;_.gC=function rMc(){return SK};_.Qd=function sMc(){EGb(this,kad,new MLb((fMb(),ZLb)));EGb(this,Ced,new NLb(TLb,new ihb(0.001953125)));EGb(this,Sed,new NLb(TLb,new ihb(0.35)))};_.cM={165:1};var tMc;_=yMc.prototype=vMc.prototype=new Jb;_.gC=function zMc(){return RK};_.Td=function AMc(){return KMc(),wMc};_.Ud=function BMc(){return LMc(),xMc};var wMc=null,xMc=null;_=DMc.prototype=CMc.prototype=new Jb;_.gC=function EMc(){return PK};_.ac=function FMc(){return ffd};_=HMc.prototype=GMc.prototype=new Jb;_.gC=function IMc(){return QK};_.ac=function JMc(){return vad};var OI=Zgb(K7c,gfd,xE),KI=Zgb(K7c,hfd,ny),LI=Zgb(K7c,ifd,ny),MI=Zgb(K7c,jfd,ny),NI=Zgb(K7c,kfd,ny),RI=Zgb(K7c,lfd,ny),PI=Zgb(K7c,mfd,ny),QI=Zgb(K7c,nfd,ny),lJ=Zgb(T7c,ofd,GB),kJ=Zgb(T7c,pfd,ny),iJ=Zgb(T7c,qfd,ny),jJ=Zgb(T7c,rfd,ny),qK=Zgb(kcd,sfd,GB),pK=Zgb(kcd,tfd,ny),nK=Zgb(kcd,ufd,ny),oK=Zgb(kcd,vfd,ny),GK=Zgb(kcd,wfd,GB),FK=Zgb(kcd,xfd,ny),DK=Zgb(kcd,yfd,ny),EK=Zgb(kcd,zfd,ny),KK=Zgb(kcd,Afd,GB),JK=Zgb(kcd,Bfd,ny),HK=Zgb(kcd,Cfd,ny),IK=Zgb(kcd,Dfd,ny),OK=Zgb(kcd,Efd,GB),NK=Zgb(kcd,Ffd,ny),LK=Zgb(kcd,Gfd,ny),MK=Zgb(kcd,Hfd,ny),SK=Zgb(kcd,Ifd,GB),RK=Zgb(kcd,Jfd,ny),PK=Zgb(kcd,Kfd,ny),QK=Zgb(kcd,Lfd,ny);fOc(Wd)(49);