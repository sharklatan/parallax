function $sc(){}
function ctc(){}
function ftc(){}
function twc(){}
function xwc(){}
function Awc(){}
function gHc(){}
function kHc(){}
function nHc(){}
function CIc(){}
function GIc(){}
function JIc(){}
function VIc(){}
function ZIc(){}
function aJc(){}
function mJc(){}
function qJc(){}
function tJc(){}
function FJc(){}
function JJc(){}
function MJc(){}
function mZb(a,b){a.c=b}
function h8b(a,b){a.n=b}
function MGc(a,b){Tqb(a.c,b)}
function Nsc(a){this.b=a}
function Qsc(a){this.b=a}
function Tsc(a){this.b=a}
function Wsc(){Wsc=GKc;Vsc=new $sc}
function htc(){htc=GKc;Ysc=new ctc}
function itc(){itc=GKc;Zsc=new ftc}
function pwc(){pwc=GKc;owc=new twc}
function Cwc(){Cwc=GKc;rwc=new xwc}
function Dwc(){Dwc=GKc;swc=new Awc}
function cHc(){cHc=GKc;bHc=new gHc}
function pHc(){pHc=GKc;eHc=new kHc}
function qHc(){qHc=GKc;fHc=new nHc}
function yIc(){yIc=GKc;xIc=new CIc}
function LIc(){LIc=GKc;AIc=new GIc}
function MIc(){MIc=GKc;BIc=new JIc}
function RIc(){RIc=GKc;QIc=new VIc}
function cJc(){cJc=GKc;TIc=new ZIc}
function dJc(){dJc=GKc;UIc=new aJc}
function iJc(){iJc=GKc;hJc=new mJc}
function vJc(){vJc=GKc;kJc=new qJc}
function wJc(){wJc=GKc;lJc=new tJc}
function BJc(){BJc=GKc;AJc=new FJc}
function OJc(){OJc=GKc;DJc=new JJc}
function PJc(){PJc=GKc;EJc=new MJc}
function fJc(){aJb.call(this,(iJc(),hJc))}
function yJc(){aJb.call(this,(BJc(),AJc))}
function kwc(){aJb.call(this,(pwc(),owc))}
function _Gc(){aJb.call(this,(cHc(),bHc))}
function vIc(){aJb.call(this,(yIc(),xIc))}
function OIc(){aJb.call(this,(RIc(),QIc))}
function Ksc(a,b){this.b=a;this.c=b}
function Dsc(a){a.A+=1;a.A==3&&XPb(a.w,true)}
function Esc(){hac.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function Csc(a,b,c,d){var e,f,g;g=new U2b(b);oNb(Wu(pSb(MZb(g).j,fSc),225),c);f=new O8b;e=new _7b(new eXb(a.v,a.u),g);z6b(e.ab,-500);MPb(f,e);pHb(a.H.n,f,a.d,d,true)}
function Bsc(a,b,c,d,e,f){var g,i;g=new M0b;F0b(g,new I3b(16755285));g.k=true;K0b(g,(E$b(),B$b));i=new j8b(b,g);i.e=c;h8b(i,cv(600*tlb()));x6b(i.ab,d,e,f);W3b(i.db,1.5707963267948966);i.T=true;i.V=true;MPb(a.I,i);Tqb(a.o,i)}
var vTc='enableDiffuse1',wTc='enableDiffuse2',oTc='h',qTc='heightMap',BTc='heightmap',ATc='offset',CTc='r',uTc='tDetail',sTc='tDiffuse1',tTc='tDiffuse2',yTc='uRepeatOverlay',pTc='v';JU(1239,1,rMc);_.Db=function zsc(){J9b(this.c,new Esc(this.b))};JU(1240,973,{78:1,186:1,338:1},Esc);_._d=function Fsc(a){Dsc(this)};_.Nd=function Gsc(a){this.v=a.b.$;this.u=a.b.Z;oNb(Wu(pSb(MZb(this.g.c).j,oTc),225),new mkb(6/this.v));oNb(Wu(pSb(MZb(this.F.c).j,pTc),225),new mkb(6/this.u))};_.ob=function Hsc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Lt((hyb(),gyb),(ryb(),qyb),this);this.c=new PQb(40,dHb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new AQb(this.v,this.u,-10000,10000);x6b(this.c.ab,-1200,800,1200);z6b(this.d.ab,100);this.t=new O8b;MPb(this.t,this.d);this.e=new mxb(this.c,this.H.d);w6b(this.e.w,0);this.e.t=1;this.e.B=1.2;jxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;hxb(this.e,0.15);M8b(this.I,new C8b(328965,2000,4000));MPb(this.I,new uYb(1118481));this.f=new XYb(16777215,1.15);x6b(this.f.ab,500,2000,0);MPb(this.I,this.f);this.r=new oZb(16729088,1.5,0);w6b(this.r.ab,0);MPb(this.I,this.r);this.i=new MOb(256,256);cOb(this.i,(QEb(),LEb));aOb(this.i,(FEb(),DEb));ZNb(this.i,(_Cb(),ZCb));$Nb(this.i,false);this.p=new MOb(256,256);cOb(this.p,LEb);aOb(this.p,DEb);ZNb(this.p,ZCb);$Nb(this.p,false);n=new fJc;u=n.j;oNb(Wu(u.b[YOc],225),new mkb(0.05));L5b(Wu(Wu(u.b[LSc],225).e,297),256,256);oNb(Wu(u.b[qTc],225),this.i);s=new MOb(2048,2048);cOb(s,LEb);aOb(s,DEb);ZNb(s,ZCb);s.s=false;jOb(s,(gGb(),fGb));kOb(s,fGb);c=new qOb('./static/textures/terrain/grasslight-big.jpg',new Ksc(this,s));jOb(c,fGb);kOb(c,fGb);d=new qOb('./static/textures/terrain/backgrounddetailed6.jpg',this);jOb(d,fGb);kOb(d,fGb);b=new qOb('./static/textures/terrain/grasslight-big-nm.jpg',this);jOb(b,fGb);kOb(b,fGb);t=new kwc;this.C=t.j;oNb(Wu(pSb(this.C,FSc),225),this.p);oNb(Wu(pSb(this.C,GSc),225),new mkb(3.5));oNb(Wu(pSb(this.C,rTc),225),this.i);oNb(Wu(pSb(this.C,sTc),225),c);oNb(Wu(pSb(this.C,tTc),225),d);oNb(Wu(pSb(this.C,HSc),225),s);oNb(Wu(pSb(this.C,uTc),225),b);oNb(Wu(pSb(this.C,vTc),225),(njb(),njb(),mjb));oNb(Wu(pSb(this.C,wTc),225),mjb);oNb(Wu(pSb(this.C,dSc),225),mjb);F3b(Wu(Wu(pSb(this.C,jSc),225).e,293),16777215);F3b(Wu(Wu(pSb(this.C,kSc),225).e,293),16777215);F3b(Wu(Wu(pSb(this.C,iSc),225).e,293),1118481);oNb(Wu(pSb(this.C,KSc),225),new mkb(30));oNb(Wu(pSb(this.C,xTc),225),new mkb(375));L5b(Wu(Wu(pSb(this.C,yTc),225).e,297),6,6);this.B=new Ltb;hpb(this.B,OSc,new qNb((JNb(),vNb),new mkb(1)));hpb(this.B,zTc,new qNb(DNb,new P5b(1.5,1.5)));hpb(this.B,ATc,new qNb(DNb,new P5b(0,0)));this.n=new Ltb;i=new T2b((Wsc(),Vsc));XIb(MZb(i),this.B);i.d=false;i.c=true;hpb(this.n,BTc,i);j=new U2b(n);XIb(MZb(j),u);j.d=false;j.c=true;hpb(this.n,_Rc,j);k=new U2b(t);XIb(MZb(k),this.C);k.d=true;k.c=true;hpb(this.n,'terrain',k);o=new eXb(this.v,this.u);p=new T_b;N_b(p,new I3b(0));this.s=new _7b(o,p);z6b(this.s.ab,-500);MPb(this.t,this.s);g=new fXb(6000,6000,64,64);uRb(g);this.w=new _7b(g,k);x6b(this.w.ab,0,-125,0);V3b(this.w.db,-1.5707963267948966);XPb(this.w,false);MPb(this.I,this.w);BHb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;xHb(this.H.n,false);q=new VGc(this.I,this.c);f=new GGc(0.6);e=new YGc(new _Gc);oNb(Wu(pSb(MZb(e.c).j,pSc),225),new mkb(0.65));this.g=new YGc(new vIc);this.F=new YGc(new yJc);oNb(Wu(pSb(MZb(this.g.c).j,oTc),225),new mkb(6/this.v));oNb(Wu(pSb(MZb(this.F.c).j,pTc),225),new mkb(6/this.u));oNb(Wu(pSb(MZb(this.g.c).j,CTc),225),new mkb(0.5));oNb(Wu(pSb(MZb(this.F.c).j,CTc),225),new mkb(0.5));this.F.b=true;r=new MOb(this.v,this.u);cOb(s,KEb);aOb(s,DEb);ZNb(s,ZCb);s.g=false;s.s=false;a=new OGc(this.H.n,r);Tqb(a.c,q);Tqb(a.c,f);Tqb(a.c,e);MGc(a,this.g);MGc(a,this.F);this.o=new brb;new sxc('./static/models/animated/parrot.js',new Nsc(this));new sxc(nTc,new Qsc(this));new sxc('./static/models/animated/stork.js',new Tsc(this));this.q=Ch()};_.pb=function Isc(a){var b,c,d,e,f;b=(Ch()-this.q)*0.001;if(this.w.hb){kxb(this.e);this.k=d4b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;E3b(this.I.b.d,0.1,e,this.k);BHb(this.H.n,this.I.b.d,1);EYb(this.f,0.1+f*1.0499999999999998);mZb(this.r,0.9+f*0.6);oNb(Wu(pSb(this.C,GSc),225),new mkb(0.6+f*2.9));if(this.D){this.b=d4b(this.b+-7.5E-4,0,0.05);oNb(Wu(cpb(this.B,OSc),225),new mkb(Wu(Wu(cpb(this.B,OSc),225).e,150).b+b*this.b));H5b(Wu(Wu(cpb(this.B,ATc),225).e,297),b*0.05);M5b(Wu(Wu(pSb(this.C,DTc),225).e,297),4*Wu(Wu(cpb(this.B,ATc),225).e,297).d);zTb(this.s,Wu(cpb(this.n,BTc),282));pHb(this.H.n,this.t,this.d,this.i,true);zTb(this.s,Wu(cpb(this.n,_Rc),282));pHb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Wu(Wqb(this.o,c),305);i8b(d,cv(1000*b));H5b(d.ab,d.e*b);d.ab.d>2000&&M5b(d.ab,-1500-tlb()*500)}pHb(this.H.n,this.I,this.c,null,false)}this.q=Ch()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;JU(1241,1,{},Ksc);_._d=function Lsc(a){Dsc(this.b);Csc(this.b,new OIc,a,this.c)};JU(1242,1,{},Nsc);_.Hf=function Osc(a,b){nxc((Wu(a,339),Wu(b,242)));Bsc(this.b,Wu(b,242),500,-3500,500,700);Bsc(this.b,Wu(b,242),500,-3000-tlb()*500,500,-200);Bsc(this.b,Wu(b,242),500,-3000-tlb()*500,500,200);Bsc(this.b,Wu(b,242),500,-3000-tlb()*500,500,1000)};JU(1243,1,{},Qsc);_.Hf=function Rsc(a,b){nxc((Wu(a,339),Wu(b,242)));Bsc(this.b,Wu(b,242),1000,-3000-tlb()*500,350,40)};JU(1244,1,{},Tsc);_.Hf=function Usc(a,b){nxc((Wu(a,339),Wu(b,242)));Bsc(this.b,Wu(b,242),1000,-3000-tlb()*500,350,340)};var Vsc;JU(1245,1,{},$sc);_.Vd=function _sc(){return htc(),Ysc};_.Wd=function atc(){return itc(),Zsc};var Ysc,Zsc;JU(1246,1,{},ctc);_.uc=function dtc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};JU(1247,1,{},ftc);_.uc=function gtc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};JU(1305,731,eMc,kwc);_.Sd=function lwc(){XIb(this,NNb());XIb(this,ONb());XIb(this,PNb());QIb(this,vTc,new qNb((JNb(),yNb),(njb(),njb(),ljb)));QIb(this,wTc,new qNb(yNb,ljb));QIb(this,dSc,new qNb(yNb,ljb));QIb(this,ETc,new qNb(yNb,ljb));QIb(this,sTc,new pNb(BNb));QIb(this,tTc,new pNb(BNb));QIb(this,uTc,new pNb(BNb));QIb(this,FSc,new pNb(BNb));QIb(this,HSc,new pNb(BNb));QIb(this,rTc,new pNb(BNb));QIb(this,GSc,new qNb(vNb,new mkb(1)));QIb(this,FTc,new qNb(vNb,new mkb(0)));QIb(this,xTc,new qNb(vNb,new mkb(1)));QIb(this,jSc,new qNb(uNb,new I3b(15658734)));QIb(this,kSc,new qNb(uNb,new I3b(1118481)));QIb(this,iSc,new qNb(uNb,new I3b(328965)));QIb(this,KSc,new qNb(vNb,new mkb(30)));QIb(this,pSc,new qNb(vNb,new mkb(1)));QIb(this,'uRepeatBase',new qNb(DNb,new P5b(1,1)));QIb(this,yTc,new qNb(DNb,new P5b(1,1)));QIb(this,DTc,new qNb(DNb,new P5b(0,0)))};_.Td=function mwc(a){var b,c;c=new zrb(Mu(GS,MKc,1,[qSc,rSc]));b=new zrb(Mu(GS,MKc,1,[tSc,uSc,vSc]));ZIb(this,fJb(a,Mu(JS,MKc,173,[c,b])))};_.Ud=function nwc(a){var b,c;c=new zrb(Mu(GS,MKc,1,[wSc]));b=new zrb(Mu(GS,MKc,1,[xSc]));$Ib(this,fJb(a,Mu(JS,MKc,173,[c,b])))};var owc;JU(1306,1,{},twc);_.Vd=function uwc(){return Cwc(),rwc};_.Wd=function vwc(){return Dwc(),swc};var rwc,swc;JU(1307,1,{},xwc);_.uc=function ywc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};JU(1308,1,{},Awc);_.uc=function Bwc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};JU(1400,731,eMc,_Gc);_.Sd=function aHc(){QIb(this,fSc,new pNb((JNb(),BNb)));QIb(this,pSc,new qNb(vNb,new mkb(1)))};var bHc;JU(1401,1,{},gHc);_.Vd=function hHc(){return pHc(),eHc};_.Wd=function iHc(){return qHc(),fHc};var eHc,fHc;JU(1402,1,{},kHc);_.uc=function lHc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};JU(1403,1,{},nHc);_.uc=function oHc(){return WSc};JU(1424,731,eMc,vIc);_.Sd=function wIc(){QIb(this,fSc,new pNb((JNb(),BNb)));QIb(this,oTc,new qNb(vNb,new mkb(0.001953125)));QIb(this,CTc,new qNb(vNb,new mkb(0.35)))};var xIc;JU(1425,1,{},CIc);_.Vd=function DIc(){return LIc(),AIc};_.Wd=function EIc(){return MIc(),BIc};var AIc,BIc;JU(1426,1,{},GIc);_.uc=function HIc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};JU(1427,1,{},JIc);_.uc=function KIc(){return WSc};JU(1430,731,eMc,OIc);_.Sd=function PIc(){QIb(this,fSc,new pNb((JNb(),BNb)))};var QIc;JU(1431,1,{},VIc);_.Vd=function WIc(){return cJc(),TIc};_.Wd=function XIc(){return dJc(),UIc};var TIc,UIc;JU(1432,1,{},ZIc);_.uc=function $Ic(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};JU(1433,1,{},aJc);_.uc=function bJc(){return WSc};JU(1436,731,eMc,fJc);_.Sd=function gJc(){QIb(this,qTc,new pNb((JNb(),BNb)));QIb(this,LSc,new qNb(DNb,new P5b(512,512)));QIb(this,zTc,new qNb(DNb,new P5b(1,1)));QIb(this,YOc,new qNb(vNb,new mkb(0.05)))};var hJc;JU(1437,1,{},mJc);_.Vd=function nJc(){return vJc(),kJc};_.Wd=function oJc(){return wJc(),lJc};var kJc,lJc;JU(1438,1,{},qJc);_.uc=function rJc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};JU(1439,1,{},tJc);_.uc=function uJc(){return WSc};JU(1442,731,eMc,yJc);_.Sd=function zJc(){QIb(this,fSc,new pNb((JNb(),BNb)));QIb(this,pTc,new qNb(vNb,new mkb(0.001953125)));QIb(this,CTc,new qNb(vNb,new mkb(0.35)))};var AJc;JU(1443,1,{},FJc);_.Vd=function GJc(){return OJc(),DJc};_.Wd=function HJc(){return PJc(),EJc};var DJc,EJc;JU(1444,1,{},JJc);_.uc=function KJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};JU(1445,1,{},MJc);_.uc=function NJc(){return WSc};var XO=akb(wRc,'TerrainDynamic$DemoScene',1240),TO=akb(wRc,'TerrainDynamic$DemoScene$1',1241),UO=akb(wRc,'TerrainDynamic$DemoScene$2',1242),VO=akb(wRc,'TerrainDynamic$DemoScene$3',1243),WO=akb(wRc,'TerrainDynamic$DemoScene$4',1244),KR=akb(YSc,GTc,1436),IP=akb(mRc,'TerrainShader',1305),mR=akb(YSc,'BleachBypassShader',1400),CR=akb(YSc,'HorizontalTiltShiftShader',1424),OR=akb(YSc,'VerticalTiltShiftShader',1442),$O=akb(wRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1245),YO=akb(wRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1246),ZO=akb(wRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1247),JR=akb(YSc,HTc,1437),HR=akb(YSc,ITc,1438),IR=akb(YSc,JTc,1439),HP=akb(mRc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1306),FP=akb(mRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1307),GP=akb(mRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1308),lR=akb(YSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1401),jR=akb(YSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1402),kR=akb(YSc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1403),BR=akb(YSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1425),zR=akb(YSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1426),AR=akb(YSc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1427),NR=akb(YSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1443),LR=akb(YSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1444),MR=akb(YSc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1445),GR=akb(YSc,'LuminosityShader',1430),FR=akb(YSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1431),DR=akb(YSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1432),ER=akb(YSc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1433);FMc(Ii)(38);