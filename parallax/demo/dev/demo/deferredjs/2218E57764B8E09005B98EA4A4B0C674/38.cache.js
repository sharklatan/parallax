function Juc(){}
function Nuc(){}
function Quc(){}
function QNc(){}
function tNc(){}
function xNc(){}
function ANc(){}
function MNc(){}
function TNc(){}
function Uzc(){}
function Yzc(){}
function _zc(){}
function dOc(){}
function hOc(){}
function kOc(){}
function kPc(){}
function gPc(){}
function nPc(){}
function QZb(a,b){a.b=b}
function L8b(a,b){a.k=b}
function wuc(a){this.a=a}
function zuc(a){this.a=a}
function Cuc(a){this.a=a}
function Fuc(){Fuc=AQc;Euc=new Juc}
function Suc(){Suc=AQc;Huc=new Nuc}
function Tuc(){Tuc=AQc;Iuc=new Quc}
function VNc(){VNc=AQc;KNc=new QNc}
function pNc(){pNc=AQc;oNc=new tNc}
function CNc(){CNc=AQc;rNc=new xNc}
function DNc(){DNc=AQc;sNc=new ANc}
function INc(){INc=AQc;HNc=new MNc}
function WNc(){WNc=AQc;LNc=new TNc}
function _Nc(){_Nc=AQc;$Nc=new dOc}
function mOc(){mOc=AQc;bOc=new hOc}
function nOc(){nOc=AQc;cOc=new kOc}
function pPc(){pPc=AQc;ePc=new kPc}
function cPc(){cPc=AQc;bPc=new gPc}
function qPc(){qPc=AQc;fPc=new nPc}
function Qzc(){Qzc=AQc;Pzc=new Uzc}
function bAc(){bAc=AQc;Szc=new Yzc}
function cAc(){cAc=AQc;Tzc=new _zc}
function tuc(a,b){this.a=a;this.b=b}
function Lzc(){IJb.call(this,(Qzc(),Pzc))}
function mNc(){IJb.call(this,(pNc(),oNc))}
function FNc(){IJb.call(this,(INc(),HNc))}
function YNc(){IJb.call(this,(_Nc(),$Nc))}
function _Oc(){IJb.call(this,(cPc(),bPc))}
function muc(a){a.w+=1;a.w==3&&DQb(a.v,true)}
function nuc(){Kac.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function luc(a,b,c,d){var e,f,g;g=new w3b(b);WNb(Au(TSb(o$b(g).i,ZXc),227),c);f=new q9b;e=new D8b(new IXb(a.u,a.t),g);b7b(e._,-500);sQb(f,e);XHb(a.G.k,f,a.c,d,true)}
function kuc(a,b,c,d,e,f){var g,i;g=new o1b;h1b(g,new k4b(16755285));g.j=true;m1b(g,(g_b(),d_b));i=new N8b(b,g);i.d=c;L8b(i,Iu(600*wlb()));_6b(i._,d,e,f);y4b(i.cb,1.5707963267948966);i.S=true;i.U=true;sQb(a.H,i);Uqb(a.n,i)}
var hZc='enableDiffuse1',iZc='enableDiffuse2',cZc='heightMap',nZc='heightmap',oZc='r',gZc='tDetail',eZc='tDiffuse1',fZc='tDiffuse2',kZc='uRepeatOverlay';PU(1240,1,iSc);_.zb=function iuc(){kac(this.b,new nuc(this.a))};PU(1241,972,{78:1,186:1,339:1},nuc);_.Td=function ouc(a){muc(this)};_.Fd=function puc(a){this.u=a.a.Z;this.t=a.a.Y;WNb(Au(TSb(o$b(this.f.b).i,aZc),227),new pkb(6/this.u));WNb(Au(TSb(o$b(this.D.b).i,bZc),227),new pkb(6/this.t))};_.nb=function quc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;ot((iyb(),hyb),(syb(),ryb),this);this.b=new tRb(40,LHb(this.G.k),2,4000);this.u=this.G.k.Z;this.t=this.G.k.Y;this.c=new gRb(this.u,this.t,-10000,10000);_6b(this.b._,-1200,800,1200);b7b(this.c._,100);this.s=new q9b;sQb(this.s,this.c);this.d=new nxb(this.b,this.G.c);$6b(this.d.v,0);this.d.s=1;this.d.A=1.2;kxb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;ixb(this.d,0.15);o9b(this.H,new e9b(328965,2000,4000));sQb(this.H,new YYb(1118481));this.e=new zZb(16777215,1.15);_6b(this.e._,500,2000,0);sQb(this.H,this.e);this.q=new SZb(16729088,1.5,0);$6b(this.q._,0);sQb(this.H,this.q);this.g=new sPb(256,256);KOb(this.g,(vFb(),qFb));IOb(this.g,(kFb(),iFb));FOb(this.g,(gDb(),eDb));GOb(this.g,false);this.o=new sPb(256,256);KOb(this.o,qFb);IOb(this.o,iFb);FOb(this.o,eDb);GOb(this.o,false);n=new YNc;u=n.i;WNb(Au(u.a[GUc],227),new pkb(0.05));n6b(Au(Au(u.a[DYc],227).d,298),256,256);WNb(Au(u.a[cZc],227),this.g);s=new sPb(2048,2048);KOb(s,qFb);IOb(s,iFb);FOb(s,eDb);s.r=false;ROb(s,(NGb(),MGb));SOb(s,MGb);c=new YOb('./static/textures/terrain/grasslight-big.jpg',new tuc(this,s));ROb(c,MGb);SOb(c,MGb);d=new YOb('./static/textures/terrain/backgrounddetailed6.jpg',this);ROb(d,MGb);SOb(d,MGb);b=new YOb('./static/textures/terrain/grasslight-big-nm.jpg',this);ROb(b,MGb);SOb(b,MGb);t=new Lzc;this.B=t.i;WNb(Au(TSb(this.B,xYc),227),this.o);WNb(Au(TSb(this.B,yYc),227),new pkb(3.5));WNb(Au(TSb(this.B,dZc),227),this.g);WNb(Au(TSb(this.B,eZc),227),c);WNb(Au(TSb(this.B,fZc),227),d);WNb(Au(TSb(this.B,zYc),227),s);WNb(Au(TSb(this.B,gZc),227),b);WNb(Au(TSb(this.B,hZc),227),(qjb(),qjb(),pjb));WNb(Au(TSb(this.B,iZc),227),pjb);WNb(Au(TSb(this.B,XXc),227),pjb);h4b(Au(Au(TSb(this.B,bYc),227).d,294),16777215);h4b(Au(Au(TSb(this.B,cYc),227).d,294),16777215);h4b(Au(Au(TSb(this.B,aYc),227).d,294),1118481);WNb(Au(TSb(this.B,CYc),227),new pkb(30));WNb(Au(TSb(this.B,jZc),227),new pkb(375));n6b(Au(Au(TSb(this.B,kZc),227).d,298),6,6);this.A=new Mtb;ipb(this.A,GYc,new YNb((pOb(),bOb),new pkb(1)));ipb(this.A,lZc,new YNb(jOb,new r6b(1.5,1.5)));ipb(this.A,mZc,new YNb(jOb,new r6b(0,0)));this.k=new Mtb;i=new v3b((Fuc(),Euc));DJb(o$b(i),this.A);i.c=false;i.b=true;ipb(this.k,nZc,i);j=new w3b(n);DJb(o$b(j),u);j.c=false;j.b=true;ipb(this.k,SXc,j);k=new w3b(t);DJb(o$b(k),this.B);k.c=true;k.b=true;ipb(this.k,'terrain',k);o=new IXb(this.u,this.t);p=new v0b;p0b(p,new k4b(0));this.r=new D8b(o,p);b7b(this.r._,-500);sQb(this.s,this.r);g=new JXb(6000,6000,64,64);YRb(g);this.v=new D8b(g,k);_6b(this.v._,0,-125,0);x4b(this.v.cb,-1.5707963267948966);DQb(this.v,false);sQb(this.H,this.v);hIb(this.G.k,this.H.a.c,1);this.G.k.ab=true;this.G.k.bb=true;dIb(this.G.k,false);q=new FKc(this.H,this.b);f=new gKc(0.6);e=new JKc(new PKc);WNb(Au(TSb(o$b(e.b).i,hYc),227),new pkb(0.65));this.f=new JKc(new mNc);this.D=new JKc(new _Oc);WNb(Au(TSb(o$b(this.f.b).i,aZc),227),new pkb(6/this.u));WNb(Au(TSb(o$b(this.D.b).i,bZc),227),new pkb(6/this.t));WNb(Au(TSb(o$b(this.f.b).i,oZc),227),new pkb(0.5));WNb(Au(TSb(o$b(this.D.b).i,oZc),227),new pkb(0.5));this.D.a=true;r=new sPb(this.u,this.t);KOb(s,pFb);IOb(s,iFb);FOb(s,eDb);s.f=false;s.r=false;a=new yKc(this.G.k,r);Uqb(a.c,q);Uqb(a.c,f);Uqb(a.c,e);wKc(a,this.f);wKc(a,this.D);this.n=new crb;new TAc('./static/models/animated/parrot.js',new wuc(this));new TAc(_Yc,new zuc(this));new TAc('./static/models/animated/stork.js',new Cuc(this));this.p=rh()};_.ob=function ruc(a){var b,c,d,e,f;b=(rh()-this.p)*0.001;if(this.v.gb){lxb(this.d);this.j=H4b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;g4b(this.H.a.c,0.1,e,this.j);hIb(this.G.k,this.H.a.c,1);gZb(this.e,0.1+f*1.0499999999999998);QZb(this.q,0.9+f*0.6);WNb(Au(TSb(this.B,yYc),227),new pkb(0.6+f*2.9));if(this.C){this.a=H4b(this.a+-7.5E-4,0,0.05);WNb(Au(dpb(this.A,GYc),227),new pkb(Au(Au(dpb(this.A,GYc),227).d,150).a+b*this.a));j6b(Au(Au(dpb(this.A,mZc),227).d,298),b*0.05);o6b(Au(Au(TSb(this.B,pZc),227).d,298),4*Au(Au(dpb(this.A,mZc),227).d,298).c);bUb(this.r,Au(dpb(this.k,nZc),283));XHb(this.G.k,this.s,this.c,this.g,true);bUb(this.r,Au(dpb(this.k,SXc),283));XHb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=Au(Xqb(this.n,c),306);M8b(d,Iu(1000*b));j6b(d._,d.d*b);d._.c>2000&&o6b(d._,-1500-wlb()*500)}XHb(this.G.k,this.H,this.b,null,false)}this.p=rh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;PU(1242,1,{},tuc);_.Td=function uuc(a){muc(this.a);luc(this.a,new FNc,a,this.b)};PU(1243,1,{},wuc);_.yf=function xuc(a,b){OAc((Au(a,340),Au(b,243)));kuc(this.a,Au(b,243),500,-3500,500,700);kuc(this.a,Au(b,243),500,-3000-wlb()*500,500,-200);kuc(this.a,Au(b,243),500,-3000-wlb()*500,500,200);kuc(this.a,Au(b,243),500,-3000-wlb()*500,500,1000)};PU(1244,1,{},zuc);_.yf=function Auc(a,b){OAc((Au(a,340),Au(b,243)));kuc(this.a,Au(b,243),1000,-3000-wlb()*500,350,40)};PU(1245,1,{},Cuc);_.yf=function Duc(a,b){OAc((Au(a,340),Au(b,243)));kuc(this.a,Au(b,243),1000,-3000-wlb()*500,350,340)};var Euc;PU(1246,1,{},Juc);_.Nd=function Kuc(){return Suc(),Huc};_.Od=function Luc(){return Tuc(),Iuc};var Huc,Iuc;PU(1247,1,{},Nuc);_.mc=function Ouc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};PU(1248,1,{},Quc);_.mc=function Ruc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};PU(1355,730,XRc,Lzc);_.Kd=function Mzc(){DJb(this,tOb());DJb(this,uOb());DJb(this,vOb());wJb(this,hZc,new YNb((pOb(),eOb),(qjb(),qjb(),ojb)));wJb(this,iZc,new YNb(eOb,ojb));wJb(this,XXc,new YNb(eOb,ojb));wJb(this,qZc,new YNb(eOb,ojb));wJb(this,eZc,new XNb(hOb));wJb(this,fZc,new XNb(hOb));wJb(this,gZc,new XNb(hOb));wJb(this,xYc,new XNb(hOb));wJb(this,zYc,new XNb(hOb));wJb(this,dZc,new XNb(hOb));wJb(this,yYc,new YNb(bOb,new pkb(1)));wJb(this,rZc,new YNb(bOb,new pkb(0)));wJb(this,jZc,new YNb(bOb,new pkb(1)));wJb(this,bYc,new YNb(aOb,new k4b(15658734)));wJb(this,cYc,new YNb(aOb,new k4b(1118481)));wJb(this,aYc,new YNb(aOb,new k4b(328965)));wJb(this,CYc,new YNb(bOb,new pkb(30)));wJb(this,hYc,new YNb(bOb,new pkb(1)));wJb(this,'uRepeatBase',new YNb(jOb,new r6b(1,1)));wJb(this,kZc,new YNb(jOb,new r6b(1,1)));wJb(this,pZc,new YNb(jOb,new r6b(0,0)))};_.Ld=function Nzc(a){var b,c;c=new Arb(qu(KS,FQc,1,[iYc,jYc]));b=new Arb(qu(KS,FQc,1,[lYc,mYc,nYc]));FJb(this,NJb(a,qu(NS,FQc,173,[c,b])))};_.Md=function Ozc(a){var b,c;c=new Arb(qu(KS,FQc,1,[oYc]));b=new Arb(qu(KS,FQc,1,[pYc]));GJb(this,NJb(a,qu(NS,FQc,173,[c,b])))};var Pzc;PU(1356,1,{},Uzc);_.Nd=function Vzc(){return bAc(),Szc};_.Od=function Wzc(){return cAc(),Tzc};var Szc,Tzc;PU(1357,1,{},Yzc);_.mc=function Zzc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};PU(1358,1,{},_zc);_.mc=function aAc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};PU(1496,730,XRc,mNc);_.Kd=function nNc(){wJb(this,ZXc,new XNb((pOb(),hOb)));wJb(this,aZc,new YNb(bOb,new pkb(0.001953125)));wJb(this,oZc,new YNb(bOb,new pkb(0.35)))};var oNc;PU(1497,1,{},tNc);_.Nd=function uNc(){return CNc(),rNc};_.Od=function vNc(){return DNc(),sNc};var rNc,sNc;PU(1498,1,{},xNc);_.mc=function yNc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};PU(1499,1,{},ANc);_.mc=function BNc(){return UYc};PU(1502,730,XRc,FNc);_.Kd=function GNc(){wJb(this,ZXc,new XNb((pOb(),hOb)))};var HNc;PU(1503,1,{},MNc);_.Nd=function NNc(){return VNc(),KNc};_.Od=function ONc(){return WNc(),LNc};var KNc,LNc;PU(1504,1,{},QNc);_.mc=function RNc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};PU(1505,1,{},TNc);_.mc=function UNc(){return UYc};PU(1508,730,XRc,YNc);_.Kd=function ZNc(){wJb(this,cZc,new XNb((pOb(),hOb)));wJb(this,DYc,new YNb(jOb,new r6b(512,512)));wJb(this,lZc,new YNb(jOb,new r6b(1,1)));wJb(this,GUc,new YNb(bOb,new pkb(0.05)))};var $Nc;PU(1509,1,{},dOc);_.Nd=function eOc(){return mOc(),bOc};_.Od=function fOc(){return nOc(),cOc};var bOc,cOc;PU(1510,1,{},hOc);_.mc=function iOc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};PU(1511,1,{},kOc);_.mc=function lOc(){return UYc};PU(1526,730,XRc,_Oc);_.Kd=function aPc(){wJb(this,ZXc,new XNb((pOb(),hOb)));wJb(this,bZc,new YNb(bOb,new pkb(0.001953125)));wJb(this,oZc,new YNb(bOb,new pkb(0.35)))};var bPc;PU(1527,1,{},gPc);_.Nd=function hPc(){return pPc(),ePc};_.Od=function iPc(){return qPc(),fPc};var ePc,fPc;PU(1528,1,{},kPc);_.mc=function lPc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};PU(1529,1,{},nPc);_.mc=function oPc(){return UYc};var zO=dkb(nXc,'TerrainDynamic$DemoScene',1241),vO=dkb(nXc,'TerrainDynamic$DemoScene$1',1242),wO=dkb(nXc,'TerrainDynamic$DemoScene$2',1243),xO=dkb(nXc,'TerrainDynamic$DemoScene$3',1244),yO=dkb(nXc,'TerrainDynamic$DemoScene$4',1245),CR=dkb(sZc,tZc,1508),kP=dkb(dXc,'TerrainShader',1355),uR=dkb(sZc,'HorizontalTiltShiftShader',1496),OR=dkb(sZc,'VerticalTiltShiftShader',1526),CO=dkb(nXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1246),AO=dkb(nXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1247),BO=dkb(nXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1248),BR=dkb(sZc,uZc,1509),zR=dkb(sZc,vZc,1510),AR=dkb(sZc,wZc,1511),jP=dkb(dXc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1356),hP=dkb(dXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1357),iP=dkb(dXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1358),tR=dkb(sZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1497),rR=dkb(sZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1498),sR=dkb(sZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1499),NR=dkb(sZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1527),LR=dkb(sZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1528),MR=dkb(sZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1529),yR=dkb(sZc,'LuminosityShader',1502),xR=dkb(sZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1503),vR=dkb(sZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1504),wR=dkb(sZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1505);wSc(xi)(38);