function yLb(){}
function CLb(){}
function FLb(){}
function uLb(){uLb=AQc;tLb=new yLb}
function HLb(){HLb=AQc;wLb=new CLb}
function ILb(){ILb=AQc;xLb=new FLb}
function rLb(){IJb.call(this,(uLb(),tLb))}
function vmc(){Kac.call(this);this.c=0;this.d=0}
PU(754,730,XRc,rLb);_.Kd=function sLb(){wJb(this,'mRefractionRatio',new YNb((pOb(),bOb),new pkb(1.02)));wJb(this,'mFresnelBias',new YNb(bOb,new pkb(0.1)));wJb(this,'mFresnelPower',new YNb(bOb,new pkb(2)));wJb(this,'mFresnelScale',new YNb(bOb,new pkb(1)));wJb(this,sYc,new XNb(hOb))};var tLb;PU(755,1,{},yLb);_.Nd=function zLb(){return HLb(),wLb};_.Od=function ALb(){return ILb(),xLb};var wLb,xLb;PU(756,1,{},CLb);_.mc=function DLb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};PU(757,1,{},FLb);_.mc=function GLb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};PU(1137,1,iSc);_.zb=function tmc(){kac(this.b,new vmc(this.a))};PU(1138,972,{328:1},vmc);_.nb=function wmc(){var a,b,c,d,e,f,g,i,j;this.a=new tRb(60,LHb(this.G.k),1,100000);b7b(this.a._,3200);this.b=new tRb(60,LHb(this.G.k),1,100000);this.e=new q9b;a=new QXb(100,32,16);j=new ePb('./static/textures/cube/park2/*.jpg');FOb(j,(gDb(),eDb));g=new rLb;WNb(Au(TSb(g.i,sYc),227),j);c=new w3b(g);this.f=new crb;for(b=0;b<500;b++){e=new D8b(a,c);o6b(e._,wlb()*10000-5000);p6b(e._,wlb()*10000-5000);b7b(e._,wlb()*10000-5000);$6b(e.eb,wlb()*3+1);sQb(this.H,e);Uqb(this.f,e)}this.H.W=false;i=new iKb;WNb(Au(TSb(i.i,sYc),227),j);f=new w3b(i);z$b(f,(l0b(),i0b));d=new D8b(new _Wb(100000,100000,100000),f);sQb(this.e,d);dIb(this.G.k,false)};_.ob=function xmc(a){var b,c,d,e;e=1.0E-4*a;j6b(this.a._,(this.c-this.a._.c)*0.05);k6b(this.a._,(-this.d-this.a._.d)*0.05);RQb(this.a,this.H._);r4b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=Au(Xqb(this.f,b),305);o6b(d._,5000*Math.cos(e+b));p6b(d._,5000*Math.sin(e+b*1.1))}EHb(this.G.k,true);XHb(this.G.k,this.e,this.b,null,false);XHb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var IM=dkb(kXc,'MaterialsCubemapFresnel$DemoScene',1138),jG=dkb(tYc,'FresnelShader',754),iG=dkb(tYc,'FresnelShader_Resources_default_InlineClientBundleGenerator',755),gG=dkb(tYc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',756),hG=dkb(tYc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',757);wSc(xi)(21);