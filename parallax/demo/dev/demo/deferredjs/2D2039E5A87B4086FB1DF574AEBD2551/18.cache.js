function muc(){}
function quc(){}
function tuc(){}
function Jyc(){}
function Nyc(){}
function Qyc(){}
function Ikc(a){this.b=a}
function iuc(){iuc=pNc;huc=new muc}
function vuc(){vuc=pNc;kuc=new quc}
function wuc(){wuc=pNc;luc=new tuc}
function Fyc(){Fyc=pNc;Eyc=new Jyc}
function Syc(){Syc=pNc;Hyc=new Nyc}
function Tyc(){Tyc=pNc;Iyc=new Qyc}
function Ayc(){bJb.call(this,(Fyc(),Eyc))}
function fuc(){bJb.call(this,(iuc(),huc))}
function Ekc(){hac.call(this);this.e=0;this.f=0}
function Dkc(a,b){var c,d,e,f,g,i;d=new qOb(KUc);d.n=4;M5b(d.C,0.998,0.998);M5b(d.B,0.001,0.001);kOb(d,(hGb(),gGb));lOb(d,gGb);$Nb(d,(aDb(),$Cb));e=new qOb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');M5b(e.C,0.998,0.998);M5b(e.B,0.001,0.001);kOb(e,gGb);lOb(e,gGb);$Nb(e,$Cb);c=new qOb('./static/models/obj/leeperrysmith/Map-COL.jpg');M5b(c.C,0.998,0.998);M5b(c.B,0.001,0.001);kOb(c,gGb);lOb(c,gGb);$Nb(c,$Cb);g=new Ayc;i=g.j;pNb(Xu(i.b[MUc],225),(pjb(),pjb(),ojb));pNb(Xu(i.b[NUc],225),ojb);pNb(Xu(i.b[OUc],225),a.c.f);pNb(Xu(i.b[PUc],225),c);pNb(Xu(i.b[QUc],225),d);pNb(Xu(i.b[RUc],225),e);G3b(Xu(Xu(i.b[SUc],225).e,293),10526880);G3b(Xu(Xu(i.b[TUc],225).e,293),10526880);G3b(Xu(Xu(i.b[UUc],225).e,293),10526880);pNb(Xu(i.b[VUc],225),new okb(0.145));pNb(Xu(i.b[WUc],225),new okb(0.75));pNb(Xu(i.b[XUc],225),new okb(16));m7b(Xu(Xu(i.b[YUc],225).e,301),0.001,0.001,0.998,0.998);f=new V2b(g);f.d=true;a.d=new a8b(b,f);O5b(a.d.ab,-50);x6b(a.d.fb,100);SPb(a.d,true);a.d.V=true;NPb(a.I,a.d)}
var MUc='enableBump',OUc='tBeckmann',VUc='uRoughness',WUc='uSpecularBrightness';KU(1121,1,aPc);_.Db=function Bkc(){J9b(this.c,new Ekc(this.b))};KU(1122,974,{323:1},Ekc);_.ob=function Fkc(){var a,b,c,d,e,f,g;this.b=new QQb(27,eHb(this.H.n),1,10000);A6b(this.b.ab,1200);NPb(this.I,new vYb(5592405));d=new pZb(16777215,1.5,1000);y6b(d.ab,0,0,600);NPb(this.I,d);f=new xZb(1);y6b(f.ab,0.05,0.05,1);NPb(this.I,f);f.ab.vf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new YYb(16777215,0.85);y6b(a.ab,1,-0.5,1);F3b(a.M,0.6,1,0.85);NPb(this.I,a);a.ab.vf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new YYb(16777215,0.85);y6b(b.ab,1,-0.5,-1);NPb(this.I,b);new HJc(new fuc);c=new HJc(new uKc);c.b=true;g=new NOb(512,512);dOb(g,(REb(),LEb));bOb(g,(GEb(),EEb));$Nb(g,(aDb(),$Cb));g.g=false;this.c=new xJc(this.H.n,g);new bAc(LUc,new Ikc(this));CHb(this.H.n,new J3b(5001561),1);e=new vGb(this.H.n,this.I);e.i=false;yHb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function Gkc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){P3b(this.d.db,0.05*(b-this.d.db.e));O3b(this.d.db,0.05*(c-this.d.db.d))}ZGb(this.H.n,true);qHb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;KU(1123,1,{},Ikc);_.If=function Jkc(a,b){Dkc(this.b,Xu(b,242))};KU(1251,732,POc,fuc);_.Sd=function guc(){};var huc;KU(1252,1,{},muc);_.Vd=function nuc(){return vuc(),kuc};_.Wd=function ouc(){return wuc(),luc};var kuc,luc;KU(1253,1,{},quc);_.uc=function ruc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};KU(1254,1,{},tuc);_.uc=function uuc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};KU(1348,732,POc,Ayc);_.Sd=function Byc(){YIb(this,ONb());YIb(this,PNb());YIb(this,QNb());RIb(this,MUc,new rNb((KNb(),zNb),Wkb(0)));RIb(this,NUc,new rNb(zNb,Wkb(0)));RIb(this,PUc,new qNb(CNb));RIb(this,OUc,new qNb(CNb));RIb(this,TUc,new rNb(vNb,new J3b(15658734)));RIb(this,UUc,new rNb(vNb,new J3b(1118481)));RIb(this,SUc,new rNb(vNb,new J3b(328965)));RIb(this,ZUc,new rNb(wNb,new okb(1)));RIb(this,VUc,new rNb(wNb,new okb(0.15)));RIb(this,WUc,new rNb(wNb,new okb(0.75)));RIb(this,QUc,new qNb(CNb));RIb(this,XUc,new rNb(wNb,new okb(1)));RIb(this,RUc,new qNb(CNb));RIb(this,YUc,new rNb(INb,new q7b(0,0,1,1)));RIb(this,'uWrapRGB',new rNb(GNb,new E6b(0.75,0.375,0.1875)))};_.Td=function Cyc(a){var b,c;c=new Arb(Nu(HS,vNc,1,[$Uc,_Uc,aVc]));b=new Arb(Nu(HS,vNc,1,[bVc,cVc,dVc]));$Ib(this,gJb(a,Nu(KS,vNc,173,[c,b])))};_.Ud=function Dyc(a){var b,c;c=new Arb(Nu(HS,vNc,1,[eVc]));b=new Arb(Nu(HS,vNc,1,[fVc]));_Ib(this,gJb(a,Nu(KS,vNc,173,[c,b])))};var Eyc;KU(1349,1,{},Jyc);_.Vd=function Kyc(){return Syc(),Hyc};_.Wd=function Lyc(){return Tyc(),Iyc};var Hyc,Iyc;KU(1350,1,{},Nyc);_.uc=function Oyc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};KU(1351,1,{},Qyc);_.uc=function Ryc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var RM=ckb(bUc,'MaterialsBumpmapSkin$DemoScene',1122),QM=ckb(bUc,'MaterialsBumpmapSkin$DemoScene$1',1123),eP=ckb(WTc,'BeckmannShader',1251),dP=ckb(WTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1252),bP=ckb(WTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1253),cP=ckb(WTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1254),FP=ckb(WTc,'SkinSimpleShader',1348),EP=ckb(WTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1349),CP=ckb(WTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1350),DP=ckb(WTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1351);oPc(Ii)(18);