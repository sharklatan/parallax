function Apc(){}
function Epc(){}
function Hpc(){}
function Psc(){}
function Tsc(){}
function Wsc(){}
function Jhc(a){this.a=a}
function Jpc(){Jpc=aFc;ypc=new Epc}
function wpc(){wpc=aFc;vpc=new Apc}
function Kpc(){Kpc=aFc;zpc=new Hpc}
function Lsc(){Lsc=aFc;Ksc=new Psc}
function Ysc(){Ysc=aFc;Nsc=new Tsc}
function Zsc(){Zsc=aFc;Osc=new Wsc}
function Gsc(){YGb.call(this,(Lsc(),Ksc))}
function tpc(){YGb.call(this,(wpc(),vpc))}
function Fhc(){q7b.call(this);this.d=0;this.e=0}
function Ehc(a,b){var c,d,e,f,g,i;d=new SLb(qMc);d.k=4;Y2b(d.B,0.998,0.998);Y2b(d.A,0.001,0.001);MLb(d,(dEb(),cEb));NLb(d,cEb);ALb(d,(YAb(),WAb));e=new SLb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');Y2b(e.B,0.998,0.998);Y2b(e.A,0.001,0.001);MLb(e,cEb);NLb(e,cEb);ALb(e,WAb);c=new SLb('./static/models/obj/leeperrysmith/Map-COL.jpg');Y2b(c.B,0.998,0.998);Y2b(c.A,0.001,0.001);MLb(c,cEb);NLb(c,cEb);ALb(c,WAb);g=new Gsc;i=g.i;RKb(Au(i.a[tMc],225),(rhb(),rhb(),qhb));RKb(Au(i.a[uMc],225),qhb);RKb(Au(i.a[vMc],225),a.b.e);RKb(Au(i.a[wMc],225),c);RKb(Au(i.a[xMc],225),d);RKb(Au(i.a[yMc],225),e);Q0b(Au(Au(i.a[zMc],225).d,292),10526880);Q0b(Au(Au(i.a[AMc],225).d,292),10526880);Q0b(Au(Au(i.a[BMc],225).d,292),10526880);RKb(Au(i.a[CMc],225),new qib(0.145));RKb(Au(i.a[DMc],225),new qib(0.75));RKb(Au(i.a[EMc],225),new qib(16));x4b(Au(Au(i.a[FMc],225).d,300),0.001,0.001,0.998,0.998);f=new c0b(g);f.c=true;a.c=new l5b(b,f);$2b(a.c._,-50);I3b(a.c.eb,100);sNb(a.c,true);a.c.U=true;nNb(a.F,a.c)}
var tMc='enableBump',vMc='tBeckmann',CMc='uRoughness',DMc='uSpecularBrightness';YS(1101,1,JGc);_.zb=function Chc(){S6b(this.b,new Fhc(this.a))};YS(1102,957,{320:1},Fhc);_.nb=function Ghc(){var b,c,d,e,f,g,i,j;this.a=new oOb(27,_Eb(this.D.k),1,10000);L3b(this.a._,1200);nNb(this.F,new PVb(5592405));f=new IWb(16777215,1.5,1000);J3b(f._,0,0,600);nNb(this.F,f);i=new QWb(1);J3b(i._,0.05,0.05,1);nNb(this.F,i);i._.lf(700);i.S=true;i.t=true;i.I=2048;i.G=2048;i.A=200;i.w=1500;i.d=40;i.u=-0.005;i.D=0.15;b=new qWb(16777215,0.85);J3b(b._,1,-0.5,1);P0b(b.L,0.6,1,0.85);nNb(this.F,b);b._.lf(500);b.S=true;b.I=2048;b.G=2048;b.A=200;b.w=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.u=-0.005;b.D=0.15;c=new qWb(16777215,0.85);J3b(c._,1,-0.5,-1);nNb(this.F,c);new _Cc(new tpc);d=new _Cc(new vDc);d.a=true;j=new nMb(512,512);FLb(j,(NCb(),HCb));DLb(j,(CCb(),ACb));ALb(j,(YAb(),WAb));j.f=false;this.b=new RCc(this.D.k,j);e=new Otc;try{Atc(e,rMc,new Jhc(this))}catch(a){a=bS(a);if(Du(a,81)){bNb();eV(aNb,(Lsb(),Jsb),sMc)}else throw aS(a)}xFb(this.D.k,new T0b(5001561),1);g=new rEb(this.D.k,this.F);g.g=false;tFb(this.D.k,false);this.D.k.ab=true;this.D.k.bb=true};_.ob=function Hhc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){Z0b(this.c.cb,0.05*(b-this.c.cb.d));Y0b(this.c.cb,0.05*(c-this.c.cb.c))}VEb(this.D.k);lFb(this.D.k,this.F,this.a,null,false)};_.d=0;_.e=0;YS(1103,1,{},Jhc);_.yf=function Khc(a){Ehc(this.a,Au(a,241))};YS(1208,722,wGc,tpc);_.Jd=function upc(){};var vpc;YS(1209,1,{},Apc);_.Md=function Bpc(){return Jpc(),ypc};_.Nd=function Cpc(){return Kpc(),zpc};var ypc,zpc;YS(1210,1,{},Epc);_.ac=function Fpc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};YS(1211,1,{},Hpc);_.ac=function Ipc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};YS(1284,722,wGc,Gsc);_.Jd=function Hsc(){TGb(this,oLb());TGb(this,pLb());TGb(this,qLb());MGb(this,tMc,new TKb((kLb(),_Kb),Yib(0)));MGb(this,uMc,new TKb(_Kb,Yib(0)));MGb(this,wMc,new SKb(cLb));MGb(this,vMc,new SKb(cLb));MGb(this,AMc,new TKb(XKb,new T0b(15658734)));MGb(this,BMc,new TKb(XKb,new T0b(1118481)));MGb(this,zMc,new TKb(XKb,new T0b(328965)));MGb(this,GMc,new TKb(YKb,new qib(1)));MGb(this,CMc,new TKb(YKb,new qib(0.15)));MGb(this,DMc,new TKb(YKb,new qib(0.75)));MGb(this,xMc,new SKb(cLb));MGb(this,EMc,new TKb(YKb,new qib(1)));MGb(this,yMc,new SKb(cLb));MGb(this,FMc,new TKb(iLb,new B4b(0,0,1,1)));MGb(this,'uWrapRGB',new TKb(gLb,new P3b(0.75,0.375,0.1875)))};_.Kd=function Isc(a){var b,c;c=new Bpb(qu(TQ,fFc,1,[HMc,IMc,JMc]));b=new Bpb(qu(TQ,fFc,1,[KMc,LMc,MMc]));VGb(this,bHb(a,qu(WQ,fFc,173,[c,b])))};_.Ld=function Jsc(a){var b,c;c=new Bpb(qu(TQ,fFc,1,[NMc]));b=new Bpb(qu(TQ,fFc,1,[OMc]));WGb(this,bHb(a,qu(WQ,fFc,173,[c,b])))};var Ksc;YS(1285,1,{},Psc);_.Md=function Qsc(){return Ysc(),Nsc};_.Nd=function Rsc(){return Zsc(),Osc};var Nsc,Osc;YS(1286,1,{},Tsc);_.ac=function Usc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};YS(1287,1,{},Wsc);_.ac=function Xsc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var cM=eib(ILc,'MaterialsBumpmapSkin$DemoScene',1102),bM=eib(ILc,'MaterialsBumpmapSkin$DemoScene$1',1103),ZN=eib(BLc,'BeckmannShader',1208),YN=eib(BLc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1209),WN=eib(BLc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1210),XN=eib(BLc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1211),mO=eib(BLc,'SkinSimpleShader',1284),lO=eib(BLc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1285),jO=eib(BLc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1286),kO=eib(BLc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1287);WGc(xi)(18);