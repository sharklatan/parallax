function tIb(){}
function xIb(){}
function AIb(){}
function pIb(){pIb=aFc;oIb=new tIb}
function CIb(){CIb=aFc;rIb=new xIb}
function DIb(){DIb=aFc;sIb=new AIb}
function mIb(){YGb.call(this,(pIb(),oIb))}
function $ic(){q7b.call(this);this.c=0;this.d=0}
YS(740,722,wGc,mIb);_.Jd=function nIb(){MGb(this,'mRefractionRatio',new TKb((kLb(),YKb),new qib(1.02)));MGb(this,'mFresnelBias',new TKb(YKb,new qib(0.1)));MGb(this,'mFresnelPower',new TKb(YKb,new qib(2)));MGb(this,'mFresnelScale',new TKb(YKb,new qib(1)));MGb(this,SMc,new SKb(cLb))};var oIb;YS(741,1,{},tIb);_.Md=function uIb(){return CIb(),rIb};_.Nd=function vIb(){return DIb(),sIb};var rIb,sIb;YS(742,1,{},xIb);_.ac=function yIb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};YS(743,1,{},AIb);_.ac=function BIb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};YS(1121,1,JGc);_.zb=function Yic(){S6b(this.b,new $ic(this.a))};YS(1122,957,{324:1},$ic);_.nb=function _ic(){var a,b,c,d,e,f,g,i,j;this.a=new oOb(60,_Eb(this.D.k),1,100000);L3b(this.a._,3200);this.b=new oOb(60,_Eb(this.D.k),1,100000);this.e=new Y5b;a=new HUb(100,32,16);j=new _Lb('./static/textures/cube/park2/*.jpg');ALb(j,(YAb(),WAb));g=new mIb;RKb(Au(MPb(g.i,SMc),225),j);c=new c0b(g);this.f=new dpb;for(b=0;b<500;b++){e=new l5b(a,c);Z2b(e._,xjb()*10000-5000);$2b(e._,xjb()*10000-5000);L3b(e._,xjb()*10000-5000);I3b(e.eb,xjb()*3+1);nNb(this.F,e);Vob(this.f,e)}this.F.W=false;i=new yHb;RKb(Au(MPb(i.i,SMc),225),j);f=new c0b(i);qXb(f,(dZb(),aZb));d=new l5b(new STb(100000,100000,100000),f);nNb(this.e,d);tFb(this.D.k,false)};_.ob=function ajc(a){var b,c,d,e;e=1.0E-4*a;U2b(this.a._,(this.c-this.a._.c)*0.05);V2b(this.a._,(-this.d-this.a._.d)*0.05);MNb(this.a,this.F._);$0b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=Au(Yob(this.f,b),303);Z2b(d._,5000*Math.cos(e+b));$2b(d._,5000*Math.sin(e+b*1.1))}VEb(this.D.k);lFb(this.D.k,this.e,this.b,null,false);lFb(this.D.k,this.F,this.a,null,false)};_.c=0;_.d=0;var xM=eib(ILc,'MaterialsCubemapFresnel$DemoScene',1122),aG=eib(TMc,'FresnelShader',740),_F=eib(TMc,'FresnelShader_Resources_default_InlineClientBundleGenerator',741),ZF=eib(TMc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',742),$F=eib(TMc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',743);WGc(xi)(21);