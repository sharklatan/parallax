function aJb(){}
function eJb(){}
function hJb(){}
function jJb(){jJb=eHc;$Ib=new eJb}
function kJb(){kJb=eHc;_Ib=new hJb}
function YIb(){YIb=eHc;XIb=new aJb}
function VIb(){FHb.call(this,(YIb(),XIb))}
function Pjc(){c8b.call(this);this.d=0;this.e=0}
rT(743,725,DIc,VIb);_.Md=function WIb(){tHb(this,'mRefractionRatio',new ALb((TLb(),FLb),new Wib(1.02)));tHb(this,'mFresnelBias',new ALb(FLb,new Wib(0.1)));tHb(this,'mFresnelPower',new ALb(FLb,new Wib(2)));tHb(this,'mFresnelScale',new ALb(FLb,new Wib(1)));tHb(this,VOc,new zLb(LLb))};var XIb;rT(744,1,{},aJb);_.Pd=function bJb(){return jJb(),$Ib};_.Qd=function cJb(){return kJb(),_Ib};var $Ib,_Ib;rT(745,1,{},eJb);_.pc=function fJb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};rT(746,1,{},hJb);_.pc=function iJb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};rT(1126,1,QIc);_.Db=function Njc(){E7b(this.c,new Pjc(this.b))};rT(1127,961,{327:1},Pjc);_.ob=function Qjc(){var a,b,c,d,e,f,g,i,j;this.b=new WOb(60,IFb(this.F.n),1,100000);w4b(this.b.ab,3200);this.c=new WOb(60,IFb(this.F.n),1,100000);this.f=new K6b;a=new nVb(100,32,16);j=new IMb('./static/textures/cube/park2/*.jpg');hMb(j,(EBb(),CBb));g=new VIb;yLb(Fu(sQb(g.j,VOc),225),j);c=new S0b(g);this.g=new Jpb;for(b=0;b<500;b++){d=new Y5b(a,c);K3b(d.ab,bkb()*10000-5000);L3b(d.ab,bkb()*10000-5000);w4b(d.ab,bkb()*10000-5000);t4b(d.fb,bkb()*3+1);WNb(this.G,d);zpb(this.g,d)}this.G.X=false;i=new fIb;yLb(Fu(sQb(i.j,VOc),225),j);f=new S0b(i);XXb(f,(IZb(),FZb));e=new Y5b(new yUb(100000,100000,100000),f);WNb(this.f,e);aGb(this.F.n,false)};_.pb=function Rjc(a){var b,c,d,e;e=1.0E-4*a;F3b(this.b.ab,(this.d-this.b.ab.d)*0.05);G3b(this.b.ab,(-this.e-this.b.ab.e)*0.05);sOb(this.b,this.G.ab);N1b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Fu(Cpb(this.g,b),304);K3b(d.ab,5000*Math.cos(e+b));L3b(d.ab,5000*Math.sin(e+b*1.1))}CFb(this.F.n);UFb(this.F.n,this.f,this.c,null,false);UFb(this.F.n,this.G,this.b,null,false)};_.d=0;_.e=0;var JM=Kib(KNc,'MaterialsCubemapFresnel$DemoScene',1127),kG=Kib(WOc,'FresnelShader',743),jG=Kib(WOc,'FresnelShader_Resources_default_InlineClientBundleGenerator',744),hG=Kib(WOc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',745),iG=Kib(WOc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',746);bJc(Hi)(22);