function orc(){}
function trc(){}
function wrc(){}
function Huc(){}
function Luc(){}
function Ouc(){}
function yic(a){this.b=a}
function yrc(){yrc=eHc;mrc=new trc}
function krc(){krc=eHc;jrc=new orc}
function zrc(){zrc=eHc;nrc=new wrc}
function Duc(){Duc=eHc;Cuc=new Huc}
function Quc(){Quc=eHc;Fuc=new Luc}
function Ruc(){Ruc=eHc;Guc=new Ouc}
function yuc(){FHb.call(this,(Duc(),Cuc))}
function hrc(){FHb.call(this,(krc(),jrc))}
function uic(){c8b.call(this);this.e=0;this.f=0}
function tic(a,b){var c,d,e,f,g,i;d=new zMb(sOc);d.n=4;J3b(d.C,0.998,0.998);J3b(d.B,0.001,0.001);tMb(d,(LEb(),KEb));uMb(d,KEb);hMb(d,(EBb(),CBb));e=new zMb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');J3b(e.C,0.998,0.998);J3b(e.B,0.001,0.001);tMb(e,KEb);uMb(e,KEb);hMb(e,CBb);c=new zMb('./static/models/obj/leeperrysmith/Map-COL.jpg');J3b(c.C,0.998,0.998);J3b(c.B,0.001,0.001);tMb(c,KEb);uMb(c,KEb);hMb(c,CBb);g=new yuc;i=g.j;yLb(Fu(i.b[uOc],225),(Xhb(),Xhb(),Whb));yLb(Fu(i.b[vOc],225),Whb);yLb(Fu(i.b[wOc],225),a.c.f);yLb(Fu(i.b[xOc],225),c);yLb(Fu(i.b[yOc],225),d);yLb(Fu(i.b[zOc],225),e);D1b(Fu(Fu(i.b[AOc],225).e,293),10526880);D1b(Fu(Fu(i.b[BOc],225).e,293),10526880);D1b(Fu(Fu(i.b[COc],225).e,293),10526880);yLb(Fu(i.b[DOc],225),new Wib(0.145));yLb(Fu(i.b[EOc],225),new Wib(0.75));yLb(Fu(i.b[FOc],225),new Wib(16));i5b(Fu(Fu(i.b[GOc],225).e,301),0.001,0.001,0.998,0.998);f=new S0b(g);f.d=true;a.d=new Y5b(b,f);L3b(a.d.ab,-50);t4b(a.d.fb,100);_Nb(a.d,true);a.d.V=true;WNb(a.G,a.d)}
var uOc='enableBump',wOc='tBeckmann',DOc='uRoughness',EOc='uSpecularBrightness';rT(1106,1,QIc);_.Db=function ric(){E7b(this.c,new uic(this.b))};rT(1107,961,{323:1},uic);_.ob=function vic(){var a,b,c,d,e,f,g;this.b=new WOb(27,IFb(this.F.n),1,10000);w4b(this.b.ab,1200);WNb(this.G,new vWb(5592405));d=new oXb(16777215,1.5,1000);u4b(d.ab,0,0,600);WNb(this.G,d);f=new wXb(1);u4b(f.ab,0.05,0.05,1);WNb(this.G,f);f.ab.nf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new YWb(16777215,0.85);u4b(a.ab,1,-0.5,1);C1b(a.M,0.6,1,0.85);WNb(this.G,a);a.ab.nf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new YWb(16777215,0.85);u4b(b.ab,1,-0.5,-1);WNb(this.G,b);new jFc(new hrc);c=new jFc(new FFc);c.b=true;g=new WMb(512,512);mMb(g,(tDb(),nDb));kMb(g,(iDb(),gDb));hMb(g,(EBb(),CBb));g.g=false;this.c=new _Ec(this.F.n,g);new Gvc(tOc,new yic(this));eGb(this.F.n,new G1b(5001561),1);e=new ZEb(this.F.n,this.G);e.i=false;aGb(this.F.n,false);this.F.n.bb=true;this.F.n.cb=true};_.pb=function wic(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){M1b(this.d.db,0.05*(b-this.d.db.e));L1b(this.d.db,0.05*(c-this.d.db.d))}CFb(this.F.n);UFb(this.F.n,this.G,this.b,null,false)};_.e=0;_.f=0;rT(1108,1,{},yic);_.Af=function zic(a,b){tic(this.b,Fu(b,241))};rT(1227,725,DIc,hrc);_.Md=function irc(){};var jrc;rT(1228,1,{},orc);_.Pd=function prc(){return yrc(),mrc};_.Qd=function qrc(){return zrc(),nrc};var mrc,nrc;rT(1229,1,{},trc);_.pc=function urc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};rT(1230,1,{},wrc);_.pc=function xrc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};rT(1305,725,DIc,yuc);_.Md=function zuc(){AHb(this,XLb());AHb(this,YLb());AHb(this,ZLb());tHb(this,uOc,new ALb((TLb(),ILb),Cjb(0)));tHb(this,vOc,new ALb(ILb,Cjb(0)));tHb(this,xOc,new zLb(LLb));tHb(this,wOc,new zLb(LLb));tHb(this,BOc,new ALb(ELb,new G1b(15658734)));tHb(this,COc,new ALb(ELb,new G1b(1118481)));tHb(this,AOc,new ALb(ELb,new G1b(328965)));tHb(this,HOc,new ALb(FLb,new Wib(1)));tHb(this,DOc,new ALb(FLb,new Wib(0.15)));tHb(this,EOc,new ALb(FLb,new Wib(0.75)));tHb(this,yOc,new zLb(LLb));tHb(this,FOc,new ALb(FLb,new Wib(1)));tHb(this,zOc,new zLb(LLb));tHb(this,GOc,new ALb(RLb,new m5b(0,0,1,1)));tHb(this,'uWrapRGB',new ALb(PLb,new A4b(0.75,0.375,0.1875)))};_.Nd=function Auc(a){var b,c;c=new fqb(vu(oR,kHc,1,[IOc,JOc,KOc]));b=new fqb(vu(oR,kHc,1,[LOc,MOc,NOc]));CHb(this,KHb(a,vu(rR,kHc,173,[c,b])))};_.Od=function Buc(a){var b,c;c=new fqb(vu(oR,kHc,1,[OOc]));b=new fqb(vu(oR,kHc,1,[POc]));DHb(this,KHb(a,vu(rR,kHc,173,[c,b])))};var Cuc;rT(1306,1,{},Huc);_.Pd=function Iuc(){return Quc(),Fuc};_.Qd=function Juc(){return Ruc(),Guc};var Fuc,Guc;rT(1307,1,{},Luc);_.pc=function Muc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};rT(1308,1,{},Ouc);_.pc=function Puc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var oM=Kib(KNc,'MaterialsBumpmapSkin$DemoScene',1107),nM=Kib(KNc,'MaterialsBumpmapSkin$DemoScene$1',1108),vO=Kib(DNc,'BeckmannShader',1227),uO=Kib(DNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1228),sO=Kib(DNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1229),tO=Kib(DNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1230),KO=Kib(DNc,'SkinSimpleShader',1305),JO=Kib(DNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1306),HO=Kib(DNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1307),IO=Kib(DNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1308);bJc(Hi)(18);