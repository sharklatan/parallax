function Usc(){}
function Ysc(){}
function _sc(){}
function Bvc(){}
function Fvc(){}
function Ivc(){}
function Njc(a){this.a=a}
function btc(){btc=hKc;Ssc=new Ysc}
function ctc(){ctc=hKc;Tsc=new _sc}
function Qsc(){Qsc=hKc;Psc=new Usc}
function xvc(){xvc=hKc;wvc=new Bvc}
function Kvc(){Kvc=hKc;zvc=new Fvc}
function Lvc(){Lvc=hKc;Avc=new Ivc}
function svc(){CIb.call(this,(xvc(),wvc))}
function Nsc(){CIb.call(this,(Qsc(),Psc))}
function Jjc(){J9b.call(this);this.d=0;this.e=0}
function Ijc(a,b){var c,d,e,f,g,i;d=new RNb(rRc);d.k=4;l5b(d.B,0.998,0.998);l5b(d.A,0.001,0.001);LNb(d,(IFb(),HFb));MNb(d,HFb);zNb(d,(BCb(),zCb));e=new RNb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');l5b(e.B,0.998,0.998);l5b(e.A,0.001,0.001);LNb(e,HFb);MNb(e,HFb);zNb(e,zCb);c=new RNb('./static/models/obj/leeperrysmith/Map-COL.jpg');l5b(c.B,0.998,0.998);l5b(c.A,0.001,0.001);LNb(c,HFb);MNb(c,HFb);zNb(c,zCb);g=new svc;i=g.i;QMb(su(i.a[tRc],225),(Qib(),Qib(),Pib));QMb(su(i.a[uRc],225),Pib);QMb(su(i.a[vRc],225),a.b.e);QMb(su(i.a[wRc],225),c);QMb(su(i.a[xRc],225),d);QMb(su(i.a[yRc],225),e);f3b(su(su(i.a[zRc],225).d,293),10526880);f3b(su(su(i.a[ARc],225).d,293),10526880);f3b(su(su(i.a[BRc],225).d,293),10526880);QMb(su(i.a[CRc],225),new Pjb(0.145));QMb(su(i.a[DRc],225),new Pjb(0.75));QMb(su(i.a[ERc],225),new Pjb(16));N6b(su(su(i.a[FRc],225).d,301),0.001,0.001,0.998,0.998);f=new u2b(g);f.c=true;a.c=new B7b(b,f);n5b(a.c._,-50);Y5b(a.c.eb,100);rPb(a.c,true);a.c.U=true;mPb(a.H,a.c)}
var tRc='enableBump',vRc='tBeckmann',CRc='uRoughness',DRc='uSpecularBrightness';bU(1121,1,SLc);_.zb=function Gjc(){j9b(this.b,new Jjc(this.a))};bU(1122,974,{323:1},Jjc);_.nb=function Kjc(){var a,b,c,d,e,f,g;this.a=new pQb(27,FGb(this.G.k),1,10000);_5b(this.a._,1200);mPb(this.H,new WXb(5592405));d=new QYb(16777215,1.5,1000);Z5b(d._,0,0,600);mPb(this.H,d);f=new YYb(1);Z5b(f._,0.05,0.05,1);mPb(this.H,f);f._.of(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new xYb(16777215,0.85);Z5b(a._,1,-0.5,1);e3b(a.L,0.6,1,0.85);mPb(this.H,a);a._.of(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new xYb(16777215,0.85);Z5b(b._,1,-0.5,-1);mPb(this.H,b);new zGc(new Nsc);c=new zGc(new mHc);c.a=true;g=new mOb(512,512);ENb(g,(qEb(),kEb));CNb(g,(fEb(),dEb));zNb(g,(BCb(),zCb));g.f=false;this.b=new pGc(this.G.k,g);new Vwc(sRc,new Njc(this));bHb(this.G.k,new i3b(5001561),1);e=new WFb(this.G.k,this.H);e.g=false;ZGb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function Ljc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){o3b(this.c.cb,0.05*(b-this.c.cb.d));n3b(this.c.cb,0.05*(c-this.c.cb.c))}yGb(this.G.k,true);RGb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;bU(1123,1,{},Njc);_.Af=function Ojc(a,b){Ijc(this.a,su(b,242))};bU(1251,732,FLc,Nsc);_.Ld=function Osc(){};var Psc;bU(1252,1,{},Usc);_.Od=function Vsc(){return btc(),Ssc};_.Pd=function Wsc(){return ctc(),Tsc};var Ssc,Tsc;bU(1253,1,{},Ysc);_.nc=function Zsc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};bU(1254,1,{},_sc);_.nc=function atc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};bU(1300,732,FLc,svc);_.Ld=function tvc(){xIb(this,nNb());xIb(this,oNb());xIb(this,pNb());qIb(this,tRc,new SMb((jNb(),$Mb),vkb(0)));qIb(this,uRc,new SMb($Mb,vkb(0)));qIb(this,wRc,new RMb(bNb));qIb(this,vRc,new RMb(bNb));qIb(this,ARc,new SMb(WMb,new i3b(15658734)));qIb(this,BRc,new SMb(WMb,new i3b(1118481)));qIb(this,zRc,new SMb(WMb,new i3b(328965)));qIb(this,GRc,new SMb(XMb,new Pjb(1)));qIb(this,CRc,new SMb(XMb,new Pjb(0.15)));qIb(this,DRc,new SMb(XMb,new Pjb(0.75)));qIb(this,xRc,new RMb(bNb));qIb(this,ERc,new SMb(XMb,new Pjb(1)));qIb(this,yRc,new RMb(bNb));qIb(this,FRc,new SMb(hNb,new R6b(0,0,1,1)));qIb(this,'uWrapRGB',new SMb(fNb,new d6b(0.75,0.375,0.1875)))};_.Md=function uvc(a){var b,c;c=new _qb(iu($R,mKc,1,[HRc,IRc,JRc]));b=new _qb(iu($R,mKc,1,[KRc,LRc,MRc]));zIb(this,HIb(a,iu(bS,mKc,173,[c,b])))};_.Nd=function vvc(a){var b,c;c=new _qb(iu($R,mKc,1,[NRc]));b=new _qb(iu($R,mKc,1,[ORc]));AIb(this,HIb(a,iu(bS,mKc,173,[c,b])))};var wvc;bU(1301,1,{},Bvc);_.Od=function Cvc(){return Kvc(),zvc};_.Pd=function Dvc(){return Lvc(),Avc};var zvc,Avc;bU(1302,1,{},Fvc);_.nc=function Gvc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};bU(1303,1,{},Ivc);_.nc=function Jvc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var hM=Djb(KQc,'MaterialsBumpmapSkin$DemoScene',1122),gM=Djb(KQc,'MaterialsBumpmapSkin$DemoScene$1',1123),xO=Djb(DQc,'BeckmannShader',1251),wO=Djb(DQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1252),uO=Djb(DQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1253),vO=Djb(DQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1254),YO=Djb(DQc,'SkinSimpleShader',1300),XO=Djb(DQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1301),VO=Djb(DQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1302),WO=Djb(DQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1303);eMc(xi)(18);