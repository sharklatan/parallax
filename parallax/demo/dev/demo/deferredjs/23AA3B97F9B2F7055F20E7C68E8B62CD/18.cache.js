function $uc(){}
function cvc(){}
function fvc(){}
function xzc(){}
function Bzc(){}
function Ezc(){}
function clc(a){this.a=a}
function tzc(){tzc=yQc;szc=new xzc}
function Gzc(){Gzc=yQc;vzc=new Bzc}
function Hzc(){Hzc=yQc;wzc=new Ezc}
function Wuc(){Wuc=yQc;Vuc=new $uc}
function hvc(){hvc=yQc;Yuc=new cvc}
function ivc(){ivc=yQc;Zuc=new fvc}
function Tuc(){DJb.call(this,(Wuc(),Vuc))}
function ozc(){DJb.call(this,(tzc(),szc))}
function $kc(){Fac.call(this);this.d=0;this.e=0}
function Zkc(a,b){var c,d,e,f,g,i;d=new SOb(HXc);d.k=4;i6b(d.B,0.998,0.998);i6b(d.A,0.001,0.001);MOb(d,(IGb(),HGb));NOb(d,HGb);AOb(d,(bDb(),_Cb));e=new SOb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');i6b(e.B,0.998,0.998);i6b(e.A,0.001,0.001);MOb(e,HGb);NOb(e,HGb);AOb(e,_Cb);c=new SOb(JXc);i6b(c.B,0.998,0.998);i6b(c.A,0.001,0.001);MOb(c,HGb);NOb(c,HGb);AOb(c,_Cb);g=new ozc;i=g.i;RNb(pu(i.a[KXc],227),(ljb(),ljb(),kjb));RNb(pu(i.a[LXc],227),kjb);RNb(pu(i.a[MXc],227),a.b.f);RNb(pu(i.a[NXc],227),c);RNb(pu(i.a[OXc],227),d);RNb(pu(i.a[PXc],227),e);c4b(pu(pu(i.a[QXc],227).d,294),10526880);c4b(pu(pu(i.a[RXc],227).d,294),10526880);c4b(pu(pu(i.a[SXc],227).d,294),10526880);RNb(pu(i.a[TXc],227),new kkb(0.145));RNb(pu(i.a[UXc],227),new kkb(0.75));RNb(pu(i.a[VXc],227),new kkb(16));K7b(pu(pu(i.a[WXc],227).d,302),0.001,0.001,0.998,0.998);f=new r3b(g);f.c=true;a.c=new y8b(b,f);k6b(a.c._,-50);V6b(a.c.eb,100);sQb(a.c,true);a.c.U=true;nQb(a.H,a.c)}
var KXc='enableBump',MXc='tBeckmann',TXc='uRoughness',UXc='uSpecularBrightness';GU(1119,1,hSc);_.zb=function Xkc(){fac(this.b,new $kc(this.a))};GU(1120,973,{324:1},$kc);_.nb=function _kc(){var a,b,c,d,e,f,g;this.a=new oRb(27,GHb(this.G.k),1,10000);Y6b(this.a._,1200);nQb(this.H,new TYb(5592405));d=new NZb(16777215,1.5,1000);W6b(d._,0,0,600);nQb(this.H,d);f=new VZb(1);W6b(f._,0.05,0.05,1);nQb(this.H,f);f._.mf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new uZb(16777215,0.85);W6b(a._,1,-0.5,1);b4b(a.L,0.6,1,0.85);nQb(this.H,a);a._.mf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new uZb(16777215,0.85);W6b(b._,1,-0.5,-1);nQb(this.H,b);new HKc(new Tuc);c=new HKc(new QLc);c.a=true;g=new nPb(512,512);FOb(g,(qFb(),kFb));DOb(g,(fFb(),dFb));AOb(g,(bDb(),_Cb));g.f=false;this.b=new wKc(this.G.k,g);new RAc(IXc,new clc(this));cIb(this.G.k,new f4b(5001561),1);e=new XGb(this.G.k,this.H);e.g=false;$Hb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function alc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){l4b(this.c.cb,0.05*(b-this.c.cb.d));k4b(this.c.cb,0.05*(c-this.c.cb.c))}zHb(this.G.k,true);SHb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;GU(1121,1,{},clc);_.zf=function dlc(a,b){Zkc(this.a,pu(b,243))};GU(1253,731,WRc,Tuc);_.Ld=function Uuc(){};var Vuc;GU(1254,1,{},$uc);_.Od=function _uc(){return hvc(),Yuc};_.Pd=function avc(){return ivc(),Zuc};var Yuc,Zuc;GU(1255,1,{},cvc);_.nc=function dvc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};GU(1256,1,{},fvc);_.nc=function gvc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};GU(1351,731,WRc,ozc);_.Ld=function pzc(){yJb(this,oOb());yJb(this,pOb());yJb(this,qOb());rJb(this,KXc,new TNb((kOb(),_Nb),Skb(0)));rJb(this,LXc,new TNb(_Nb,Skb(0)));rJb(this,NXc,new SNb(cOb));rJb(this,MXc,new SNb(cOb));rJb(this,RXc,new TNb(XNb,new f4b(15658734)));rJb(this,SXc,new TNb(XNb,new f4b(1118481)));rJb(this,QXc,new TNb(XNb,new f4b(328965)));rJb(this,XXc,new TNb(YNb,new kkb(1)));rJb(this,TXc,new TNb(YNb,new kkb(0.15)));rJb(this,UXc,new TNb(YNb,new kkb(0.75)));rJb(this,OXc,new SNb(cOb));rJb(this,VXc,new TNb(YNb,new kkb(1)));rJb(this,PXc,new SNb(cOb));rJb(this,WXc,new TNb(iOb,new O7b(0,0,1,1)));rJb(this,'uWrapRGB',new TNb(gOb,new a7b(0.75,0.375,0.1875)))};_.Md=function qzc(a){var b,c;c=new vrb(fu(BS,DQc,1,[YXc,ZXc,$Xc]));b=new vrb(fu(BS,DQc,1,[_Xc,aYc,bYc]));AJb(this,IJb(a,fu(ES,DQc,173,[c,b])))};_.Nd=function rzc(a){var b,c;c=new vrb(fu(BS,DQc,1,[cYc]));b=new vrb(fu(BS,DQc,1,[dYc]));BJb(this,IJb(a,fu(ES,DQc,173,[c,b])))};var szc;GU(1352,1,{},xzc);_.Od=function yzc(){return Gzc(),vzc};_.Pd=function zzc(){return Hzc(),wzc};var vzc,wzc;GU(1353,1,{},Bzc);_.nc=function Czc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};GU(1354,1,{},Ezc);_.nc=function Fzc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var eM=$jb($Wc,'MaterialsBumpmapSkin$DemoScene',1120),dM=$jb($Wc,'MaterialsBumpmapSkin$DemoScene$1',1121),yO=$jb(TWc,'BeckmannShader',1253),xO=$jb(TWc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1254),vO=$jb(TWc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1255),wO=$jb(TWc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1256),ZO=$jb(TWc,'SkinSimpleShader',1351),YO=$jb(TWc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1352),WO=$jb(TWc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1353),XO=$jb(TWc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1354);vSc(xi)(18);