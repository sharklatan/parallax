function fLb(){}
function jLb(){}
function mLb(){}
function Ixc(){}
function Mxc(){}
function Pxc(){}
function _xc(){}
function dyc(){}
function gyc(){}
function syc(){}
function wyc(){}
function zyc(){}
function p9b(a,b){a.c=b}
function bLb(){bLb=AQc;aLb=new fLb}
function oLb(){oLb=AQc;dLb=new jLb}
function pLb(){pLb=AQc;eLb=new mLb}
function Exc(){Exc=AQc;Dxc=new Ixc}
function Rxc(){Rxc=AQc;Gxc=new Mxc}
function Sxc(){Sxc=AQc;Hxc=new Pxc}
function Xxc(){Xxc=AQc;Wxc=new _xc}
function iyc(){iyc=AQc;Zxc=new dyc}
function jyc(){jyc=AQc;$xc=new gyc}
function oyc(){oyc=AQc;nyc=new syc}
function Byc(){Byc=AQc;qyc=new wyc}
function Cyc(){Cyc=AQc;ryc=new zyc}
function mtc(a,b){this.a=a;this.b=b}
function FHb(a,b){qIb(a,b);EHb(a,false)}
function YKb(){IJb.call(this,(bLb(),aLb))}
function Bxc(){IJb.call(this,(Exc(),Dxc))}
function Uxc(){IJb.call(this,(Xxc(),Wxc))}
function lyc(){IJb.call(this,(oyc(),nyc))}
function $0b(){C$b.call(this);this.a=false;this.b=1}
function itc(){Kac.call(this);this.t=new f7b(0,1000,-1000);this.r=new e7b}
function Y6b(a,b){var c;c=new o5b;m5b(c,b.p,b5b(c,b.X));return Q6b(a,c)}
var IZc='bgColor',KZc='fAspect',HZc='fGodRayIntensity',LZc='fStepSize',yZc='mFar',xZc='mNear',NZc='tColors',OZc='tGodRays',MZc='tInput',JZc='vSunPositionScreenSpace',PZc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';PU(748,730,XRc,YKb);_.Kd=function ZKb(){wJb(this,xZc,new YNb((pOb(),bOb),new pkb(1)));wJb(this,yZc,new YNb(bOb,new pkb(2000)));wJb(this,hYc,new YNb(bOb,new pkb(1)))};_.Ld=function $Kb(a){var b,c;c=new Arb(qu(KS,FQc,1,[zZc]));b=new Arb(qu(KS,FQc,1,[AZc]));FJb(this,NJb(a,qu(NS,FQc,173,[c,b])))};_.Md=function _Kb(a){var b,c;c=new Arb(qu(KS,FQc,1,[BZc,CZc]));b=new Arb(qu(KS,FQc,1,[DZc,EZc,FZc]));GJb(this,NJb(a,qu(NS,FQc,173,[c,b])))};var aLb;PU(749,1,{},fLb);_.Nd=function gLb(){return oLb(),dLb};_.Od=function hLb(){return pLb(),eLb};var dLb,eLb;PU(750,1,{},jLb);_.mc=function kLb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};PU(751,1,{},mLb);_.mc=function nLb(){return GZc};PU(920,913,{280:1,283:1},$0b);_.Me=function _0b(){var a;return a=new $0b,k$b(this,a),a.a=this.a,a.b=this.b,a};_.Ne=function a1b(){return new YKb};_.Je=function b1b(){return this.b};_.Ke=function c1b(){return this.a};_.Oe=function d1b(a,b){var c;p$b(this,b);c=o$b(this).i;if(a.cZ==ZG){WNb(Au(c.a[xZc],227),new pkb(Au(a,237).d));WNb(Au(c.a[yZc],227),new pkb(Au(a,237).b))}WNb(Au(c.a[hYc],227),new pkb(this.Z))};_.a=false;_.b=0;PU(1227,1,iSc);_.zb=function gtc(){kac(this.b,new itc(this.a))};PU(1228,972,{337:1},itc);_.nb=function jtc(){var a,b,c,d;this.a=new tRb(70,LHb(this.G.k),1,3000);b7b(this.a._,200);this.b=new $0b;c=new v0b;p0b(c,new k4b(0));t0b(c,(d0b(),a0b));new TAc('./static/models/obj/tree/tree.js',new mtc(this,c));a=new QXb(1,20,10);this.s=new D8b(a,c);$6b(this.s.eb,20);sQb(this.H,this.s);tIb(this.G.k,false);dIb(this.G.k,false);gIb(this.G.k,1297,1);this.j=new q9b;this.i=new gRb(this.G.k.Z,this.G.k.Y,-10000,10000);b7b(this.i._,100);sQb(this.j,this.i);this.n=new sPb(this.G.k.Z,this.G.k.Y);KOb(this.n,(vFb(),pFb));IOb(this.n,(kFb(),iFb));FOb(this.n,(gDb(),fDb));this.o=new sPb(this.G.k.Z,this.G.k.Y);KOb(this.o,pFb);IOb(this.o,iFb);FOb(this.o,fDb);d=~~(this.G.k.Z/4);b=~~(this.G.k.Y/4);this.p=new sPb(d,b);KOb(this.p,pFb);IOb(this.p,iFb);FOb(this.p,fDb);this.q=new sPb(d,b);KOb(this.q,pFb);IOb(this.q,iFb);FOb(this.q,fDb);this.e=new w3b(new Uxc);this.c=new w3b(new Bxc);WNb(Au(TSb(o$b(this.c).i,HZc),227),new pkb(0.75));this.d=new w3b(new lyc);h4b(Au(Au(TSb(o$b(this.d).i,IZc),227).d,294),1297);h4b(Au(Au(TSb(o$b(this.d).i,PYc),227).d,294),16772608);this.k=new D8b(new FXb(this.G.k.Z,this.G.k.Y),this.e);b7b(this.k._,-9900);sQb(this.j,this.k)};_.ob=function ktc(a){var b,c,d,e,f,g;f=a/4000;o6b(this.s._,200*plb(f));b7b(this.s._,200*ylb(f)-100);j6b(this.a._,(this.f-this.a._.c)*0.036);k6b(this.a._,(-this.g-this.a._.d)*0.036);RQb(this.a,this.H._);Y6b(this.r.hf(this.t),this.a);o6b(this.r,(this.r.c+1)/2);p6b(this.r,(this.r.d+1)/2);n6b(Au(Au(TSb(o$b(this.e).i,JZc),227).d,298),this.r.c,this.r.d);n6b(Au(Au(TSb(o$b(this.d).i,JZc),227).d,298),this.r.c,this.r.d);FHb(this.G.k,this.n);g=this.G.k.Z;b=this.G.k.Y;d=0.74*b;e=0.74*b;o6b(this.r,this.r.c*g);p6b(this.r,this.r.d*b);rIb(this.G.k,Iu(this.r.c-e/2),Iu(this.r.d-d/2),Iu(e),Iu(d));KHb(this.G.k,true);WNb(Au(TSb(o$b(this.d).i,KZc),227),new pkb(g/b));p9b(this.j,this.d);XHb(this.G.k,this.j,this.i,this.n,false);KHb(this.G.k,false);p9b(this.H,null);XHb(this.G.k,this.H,this.a,this.n,false);p9b(this.H,this.b);XHb(this.G.k,this.H,this.a,this.o,true);c=vlb(6,-1);WNb(Au(TSb(o$b(this.e).i,LZc),227),new pkb(c));WNb(Au(TSb(o$b(this.e).i,MZc),227),this.o);p9b(this.j,this.e);XHb(this.G.k,this.j,this.i,this.q,false);c=vlb(6,-2);WNb(Au(TSb(o$b(this.e).i,LZc),227),new pkb(c));WNb(Au(TSb(o$b(this.e).i,MZc),227),this.q);XHb(this.G.k,this.j,this.i,this.p,false);c=vlb(6,-3);WNb(Au(TSb(o$b(this.e).i,LZc),227),new pkb(c));WNb(Au(TSb(o$b(this.e).i,MZc),227),this.p);XHb(this.G.k,this.j,this.i,this.q,false);WNb(Au(TSb(o$b(this.c).i,NZc),227),this.n);WNb(Au(TSb(o$b(this.c).i,OZc),227),this.q);p9b(this.j,this.c);XHb(this.G.k,this.j,this.i,null,false);p9b(this.j,null)};_.f=0;_.g=0;PU(1229,1,{},mtc);_.yf=function ntc(a,b){var c;c=new D8b(b,this.b);_6b(c._,0,-150,-150);$6b(c.eb,400);c.W=false;Y4b(c.V,c._,c.ab,c.eb);c.Y=true;sQb(this.a.H,c)};PU(1318,730,XRc,Bxc);_.Kd=function Cxc(){wJb(this,NZc,new XNb((pOb(),hOb)));wJb(this,OZc,new XNb(hOb));wJb(this,HZc,new YNb(bOb,new pkb(0.69)));wJb(this,JZc,new YNb(jOb,new r6b(0.5,0.5)))};var Dxc;PU(1319,1,{},Ixc);_.Nd=function Jxc(){return Rxc(),Gxc};_.Od=function Kxc(){return Sxc(),Hxc};var Gxc,Hxc;PU(1320,1,{},Mxc);_.mc=function Nxc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};PU(1321,1,{},Pxc);_.mc=function Qxc(){return PZc};PU(1324,730,XRc,Uxc);_.Kd=function Vxc(){wJb(this,MZc,new XNb((pOb(),hOb)));wJb(this,LZc,new YNb(bOb,new pkb(1)));wJb(this,JZc,new YNb(jOb,new r6b(0.5,0.5)))};var Wxc;PU(1325,1,{},_xc);_.Nd=function ayc(){return iyc(),Zxc};_.Od=function byc(){return jyc(),$xc};var Zxc,$xc;PU(1326,1,{},dyc);_.mc=function eyc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};PU(1327,1,{},gyc);_.mc=function hyc(){return PZc};PU(1330,730,XRc,lyc);_.Kd=function myc(){wJb(this,JZc,new YNb((pOb(),jOb),new r6b(0.5,0.5)));wJb(this,KZc,new YNb(bOb,new pkb(1)));wJb(this,PYc,new YNb(aOb,new k4b(16772608)));wJb(this,IZc,new YNb(aOb,new k4b(0)))};var nyc;PU(1331,1,{},syc);_.Nd=function tyc(){return Byc(),qyc};_.Od=function uyc(){return Cyc(),ryc};var qyc,ryc;PU(1332,1,{},wyc);_.mc=function xyc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};PU(1333,1,{},zyc);_.mc=function Ayc(){return PZc};var jO=dkb(nXc,'PostprocessingGodrays$DemoScene',1228),iO=dkb(nXc,'PostprocessingGodrays$DemoScene$1',1229),VI=dkb(QZc,'MeshDepthMaterial',920),RO=dkb(dXc,'GodRaysGenerateShader',1324),NO=dkb(dXc,'GodRaysCombineShader',1318),VO=dkb(dXc,'GodraysFakeSunShader',1330),fG=dkb(tYc,'DepthShader',748),QO=dkb(dXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1325),OO=dkb(dXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1326),PO=dkb(dXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1327),MO=dkb(dXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1319),KO=dkb(dXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1320),LO=dkb(dXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1321),UO=dkb(dXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1331),SO=dkb(dXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1332),TO=dkb(dXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1333),eG=dkb(tYc,'DepthShader_Resources_default_InlineClientBundleGenerator',749),cG=dkb(tYc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',750),dG=dkb(tYc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',751);wSc(xi)(40);