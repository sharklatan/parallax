function Uuc(){}
function Yuc(){}
function _uc(){}
function _Nc(){}
function ENc(){}
function INc(){}
function LNc(){}
function XNc(){}
function dAc(){}
function hAc(){}
function kAc(){}
function cOc(){}
function oOc(){}
function sOc(){}
function vOc(){}
function vPc(){}
function rPc(){}
function yPc(){}
function _Zb(a,b){a.c=b}
function W8b(a,b){a.n=b}
function Huc(a){this.b=a}
function Kuc(a){this.b=a}
function Nuc(a){this.b=a}
function Quc(){Quc=LQc;Puc=new Uuc}
function bvc(){bvc=LQc;Suc=new Yuc}
function cvc(){cvc=LQc;Tuc=new _uc}
function eOc(){eOc=LQc;VNc=new _Nc}
function fOc(){fOc=LQc;WNc=new cOc}
function kOc(){kOc=LQc;jOc=new oOc}
function xOc(){xOc=LQc;mOc=new sOc}
function yOc(){yOc=LQc;nOc=new vOc}
function APc(){APc=LQc;pPc=new vPc}
function nPc(){nPc=LQc;mPc=new rPc}
function BPc(){BPc=LQc;qPc=new yPc}
function _zc(){_zc=LQc;$zc=new dAc}
function mAc(){mAc=LQc;bAc=new hAc}
function nAc(){nAc=LQc;cAc=new kAc}
function ANc(){ANc=LQc;zNc=new ENc}
function NNc(){NNc=LQc;CNc=new INc}
function ONc(){ONc=LQc;DNc=new LNc}
function TNc(){TNc=LQc;SNc=new XNc}
function xNc(){TJb.call(this,(ANc(),zNc))}
function QNc(){TJb.call(this,(TNc(),SNc))}
function Wzc(){TJb.call(this,(_zc(),$zc))}
function hOc(){TJb.call(this,(kOc(),jOc))}
function kPc(){TJb.call(this,(nPc(),mPc))}
function Euc(a,b){this.b=a;this.c=b}
function xuc(a){a.A+=1;a.A==3&&OQb(a.w,true)}
function yuc(){Vac.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function wuc(a,b,c,d){var e,f,g;g=new H3b(b);fOb(Fu(cTb(z$b(g).j,eYc),227),c);f=new B9b;e=new O8b(new TXb(a.v,a.u),g);m7b(e.ab,-500);DQb(f,e);gIb(a.H.n,f,a.d,d,true)}
function vuc(a,b,c,d,e,f){var g,i;g=new z1b;s1b(g,new v4b(16755285));g.k=true;x1b(g,(r_b(),o_b));i=new Y8b(b,g);i.e=c;W8b(i,Nu(600*Hlb()));k7b(i.ab,d,e,f);J4b(i.db,1.5707963267948966);i.T=true;i.V=true;DQb(a.I,i);drb(a.o,i)}
var oZc='enableDiffuse1',pZc='enableDiffuse2',jZc='heightMap',uZc='heightmap',vZc='r',nZc='tDetail',lZc='tDiffuse1',mZc='tDiffuse2',rZc='uRepeatOverlay';WU(1237,1,vSc);_.Db=function tuc(){vac(this.c,new yuc(this.b))};WU(1238,969,{78:1,186:1,339:1},yuc);_.Wd=function zuc(a){xuc(this)};_.Id=function Auc(a){this.v=a.b.$;this.u=a.b.Z;fOb(Fu(cTb(z$b(this.g.c).j,hZc),227),new Akb(6/this.v));fOb(Fu(cTb(z$b(this.F.c).j,iZc),227),new Akb(6/this.u))};_.ob=function Buc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;ut((tyb(),syb),(Dyb(),Cyb),this);this.c=new ERb(40,WHb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new rRb(this.v,this.u,-10000,10000);k7b(this.c.ab,-1200,800,1200);m7b(this.d.ab,100);this.t=new B9b;DQb(this.t,this.d);this.e=new yxb(this.c,this.H.d);j7b(this.e.w,0);this.e.t=1;this.e.B=1.2;vxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;txb(this.e,0.15);z9b(this.I,new p9b(328965,2000,4000));DQb(this.I,new hZb(1118481));this.f=new KZb(16777215,1.15);k7b(this.f.ab,500,2000,0);DQb(this.I,this.f);this.r=new b$b(16729088,1.5,0);j7b(this.r.ab,0);DQb(this.I,this.r);this.i=new DPb(256,256);VOb(this.i,(GFb(),BFb));TOb(this.i,(vFb(),tFb));QOb(this.i,(rDb(),pDb));ROb(this.i,false);this.p=new DPb(256,256);VOb(this.p,BFb);TOb(this.p,tFb);QOb(this.p,pDb);ROb(this.p,false);n=new hOc;u=n.j;fOb(Fu(u.b[VUc],227),new Akb(0.05));y6b(Fu(Fu(u.b[KYc],227).e,298),256,256);fOb(Fu(u.b[jZc],227),this.i);s=new DPb(2048,2048);VOb(s,BFb);TOb(s,tFb);QOb(s,pDb);s.s=false;aPb(s,(YGb(),XGb));bPb(s,XGb);c=new hPb('./static/textures/terrain/grasslight-big.jpg',new Euc(this,s));aPb(c,XGb);bPb(c,XGb);d=new hPb('./static/textures/terrain/backgrounddetailed6.jpg',this);aPb(d,XGb);bPb(d,XGb);b=new hPb('./static/textures/terrain/grasslight-big-nm.jpg',this);aPb(b,XGb);bPb(b,XGb);t=new Wzc;this.C=t.j;fOb(Fu(cTb(this.C,EYc),227),this.p);fOb(Fu(cTb(this.C,FYc),227),new Akb(3.5));fOb(Fu(cTb(this.C,kZc),227),this.i);fOb(Fu(cTb(this.C,lZc),227),c);fOb(Fu(cTb(this.C,mZc),227),d);fOb(Fu(cTb(this.C,GYc),227),s);fOb(Fu(cTb(this.C,nZc),227),b);fOb(Fu(cTb(this.C,oZc),227),(Bjb(),Bjb(),Ajb));fOb(Fu(cTb(this.C,pZc),227),Ajb);fOb(Fu(cTb(this.C,cYc),227),Ajb);s4b(Fu(Fu(cTb(this.C,iYc),227).e,294),16777215);s4b(Fu(Fu(cTb(this.C,jYc),227).e,294),16777215);s4b(Fu(Fu(cTb(this.C,hYc),227).e,294),1118481);fOb(Fu(cTb(this.C,JYc),227),new Akb(30));fOb(Fu(cTb(this.C,qZc),227),new Akb(375));y6b(Fu(Fu(cTb(this.C,rZc),227).e,298),6,6);this.B=new Xtb;tpb(this.B,NYc,new hOb((AOb(),mOb),new Akb(1)));tpb(this.B,sZc,new hOb(uOb,new C6b(1.5,1.5)));tpb(this.B,tZc,new hOb(uOb,new C6b(0,0)));this.n=new Xtb;i=new G3b((Quc(),Puc));OJb(z$b(i),this.B);i.d=false;i.c=true;tpb(this.n,uZc,i);j=new H3b(n);OJb(z$b(j),u);j.d=false;j.c=true;tpb(this.n,ZXc,j);k=new H3b(t);OJb(z$b(k),this.C);k.d=true;k.c=true;tpb(this.n,'terrain',k);o=new TXb(this.v,this.u);p=new G0b;A0b(p,new v4b(0));this.s=new O8b(o,p);m7b(this.s.ab,-500);DQb(this.t,this.s);g=new UXb(6000,6000,64,64);hSb(g);this.w=new O8b(g,k);k7b(this.w.ab,0,-125,0);I4b(this.w.db,-1.5707963267948966);OQb(this.w,false);DQb(this.I,this.w);sIb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;oIb(this.H.n,false);q=new QKc(this.I,this.c);f=new rKc(0.6);e=new UKc(new $Kc);fOb(Fu(cTb(z$b(e.c).j,oYc),227),new Akb(0.65));this.g=new UKc(new xNc);this.F=new UKc(new kPc);fOb(Fu(cTb(z$b(this.g.c).j,hZc),227),new Akb(6/this.v));fOb(Fu(cTb(z$b(this.F.c).j,iZc),227),new Akb(6/this.u));fOb(Fu(cTb(z$b(this.g.c).j,vZc),227),new Akb(0.5));fOb(Fu(cTb(z$b(this.F.c).j,vZc),227),new Akb(0.5));this.F.b=true;r=new DPb(this.v,this.u);VOb(s,AFb);TOb(s,tFb);QOb(s,pDb);s.g=false;s.s=false;a=new JKc(this.H.n,r);drb(a.d,q);drb(a.d,f);drb(a.d,e);HKc(a,this.g);HKc(a,this.F);this.o=new nrb;new cBc('./static/models/animated/parrot.js',new Huc(this));new cBc(gZc,new Kuc(this));new cBc('./static/models/animated/stork.js',new Nuc(this));this.q=Bh()};_.pb=function Cuc(a){var b,c,d,e,f;b=(Bh()-this.q)*0.001;if(this.w.hb){wxb(this.e);this.k=S4b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;r4b(this.I.b.d,0.1,e,this.k);sIb(this.H.n,this.I.b.d,1);rZb(this.f,0.1+f*1.0499999999999998);_Zb(this.r,0.9+f*0.6);fOb(Fu(cTb(this.C,FYc),227),new Akb(0.6+f*2.9));if(this.D){this.b=S4b(this.b+-7.5E-4,0,0.05);fOb(Fu(opb(this.B,NYc),227),new Akb(Fu(Fu(opb(this.B,NYc),227).e,150).b+b*this.b));u6b(Fu(Fu(opb(this.B,tZc),227).e,298),b*0.05);z6b(Fu(Fu(cTb(this.C,wZc),227).e,298),4*Fu(Fu(opb(this.B,tZc),227).e,298).d);mUb(this.s,Fu(opb(this.n,uZc),283));gIb(this.H.n,this.t,this.d,this.i,true);mUb(this.s,Fu(opb(this.n,ZXc),283));gIb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Fu(grb(this.o,c),306);X8b(d,Nu(1000*b));u6b(d.ab,d.e*b);d.ab.d>2000&&z6b(d.ab,-1500-Hlb()*500)}gIb(this.H.n,this.I,this.c,null,false)}this.q=Bh()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;WU(1239,1,{},Euc);_.Wd=function Fuc(a){xuc(this.b);wuc(this.b,new QNc,a,this.c)};WU(1240,1,{},Huc);_.Bf=function Iuc(a,b){ZAc((Fu(a,340),Fu(b,243)));vuc(this.b,Fu(b,243),500,-3500,500,700);vuc(this.b,Fu(b,243),500,-3000-Hlb()*500,500,-200);vuc(this.b,Fu(b,243),500,-3000-Hlb()*500,500,200);vuc(this.b,Fu(b,243),500,-3000-Hlb()*500,500,1000)};WU(1241,1,{},Kuc);_.Bf=function Luc(a,b){ZAc((Fu(a,340),Fu(b,243)));vuc(this.b,Fu(b,243),1000,-3000-Hlb()*500,350,40)};WU(1242,1,{},Nuc);_.Bf=function Ouc(a,b){ZAc((Fu(a,340),Fu(b,243)));vuc(this.b,Fu(b,243),1000,-3000-Hlb()*500,350,340)};var Puc;WU(1243,1,{},Uuc);_.Qd=function Vuc(){return bvc(),Suc};_.Rd=function Wuc(){return cvc(),Tuc};var Suc,Tuc;WU(1244,1,{},Yuc);_.pc=function Zuc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};WU(1245,1,{},_uc);_.pc=function avc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};WU(1352,727,iSc,Wzc);_.Nd=function Xzc(){OJb(this,EOb());OJb(this,FOb());OJb(this,GOb());HJb(this,oZc,new hOb((AOb(),pOb),(Bjb(),Bjb(),zjb)));HJb(this,pZc,new hOb(pOb,zjb));HJb(this,cYc,new hOb(pOb,zjb));HJb(this,xZc,new hOb(pOb,zjb));HJb(this,lZc,new gOb(sOb));HJb(this,mZc,new gOb(sOb));HJb(this,nZc,new gOb(sOb));HJb(this,EYc,new gOb(sOb));HJb(this,GYc,new gOb(sOb));HJb(this,kZc,new gOb(sOb));HJb(this,FYc,new hOb(mOb,new Akb(1)));HJb(this,yZc,new hOb(mOb,new Akb(0)));HJb(this,qZc,new hOb(mOb,new Akb(1)));HJb(this,iYc,new hOb(lOb,new v4b(15658734)));HJb(this,jYc,new hOb(lOb,new v4b(1118481)));HJb(this,hYc,new hOb(lOb,new v4b(328965)));HJb(this,JYc,new hOb(mOb,new Akb(30)));HJb(this,oYc,new hOb(mOb,new Akb(1)));HJb(this,'uRepeatBase',new hOb(uOb,new C6b(1,1)));HJb(this,rZc,new hOb(uOb,new C6b(1,1)));HJb(this,wZc,new hOb(uOb,new C6b(0,0)))};_.Od=function Yzc(a){var b,c;c=new Lrb(vu(RS,RQc,1,[pYc,qYc]));b=new Lrb(vu(RS,RQc,1,[sYc,tYc,uYc]));QJb(this,YJb(a,vu(US,RQc,173,[c,b])))};_.Pd=function Zzc(a){var b,c;c=new Lrb(vu(RS,RQc,1,[vYc]));b=new Lrb(vu(RS,RQc,1,[wYc]));RJb(this,YJb(a,vu(US,RQc,173,[c,b])))};var $zc;WU(1353,1,{},dAc);_.Qd=function eAc(){return mAc(),bAc};_.Rd=function fAc(){return nAc(),cAc};var bAc,cAc;WU(1354,1,{},hAc);_.pc=function iAc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};WU(1355,1,{},kAc);_.pc=function lAc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};WU(1493,727,iSc,xNc);_.Nd=function yNc(){HJb(this,eYc,new gOb((AOb(),sOb)));HJb(this,hZc,new hOb(mOb,new Akb(0.001953125)));HJb(this,vZc,new hOb(mOb,new Akb(0.35)))};var zNc;WU(1494,1,{},ENc);_.Qd=function FNc(){return NNc(),CNc};_.Rd=function GNc(){return ONc(),DNc};var CNc,DNc;WU(1495,1,{},INc);_.pc=function JNc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};WU(1496,1,{},LNc);_.pc=function MNc(){return _Yc};WU(1499,727,iSc,QNc);_.Nd=function RNc(){HJb(this,eYc,new gOb((AOb(),sOb)))};var SNc;WU(1500,1,{},XNc);_.Qd=function YNc(){return eOc(),VNc};_.Rd=function ZNc(){return fOc(),WNc};var VNc,WNc;WU(1501,1,{},_Nc);_.pc=function aOc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};WU(1502,1,{},cOc);_.pc=function dOc(){return _Yc};WU(1505,727,iSc,hOc);_.Nd=function iOc(){HJb(this,jZc,new gOb((AOb(),sOb)));HJb(this,KYc,new hOb(uOb,new C6b(512,512)));HJb(this,sZc,new hOb(uOb,new C6b(1,1)));HJb(this,VUc,new hOb(mOb,new Akb(0.05)))};var jOc;WU(1506,1,{},oOc);_.Qd=function pOc(){return xOc(),mOc};_.Rd=function qOc(){return yOc(),nOc};var mOc,nOc;WU(1507,1,{},sOc);_.pc=function tOc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};WU(1508,1,{},vOc);_.pc=function wOc(){return _Yc};WU(1523,727,iSc,kPc);_.Nd=function lPc(){HJb(this,eYc,new gOb((AOb(),sOb)));HJb(this,iZc,new hOb(mOb,new Akb(0.001953125)));HJb(this,vZc,new hOb(mOb,new Akb(0.35)))};var mPc;WU(1524,1,{},rPc);_.Qd=function sPc(){return APc(),pPc};_.Rd=function tPc(){return BPc(),qPc};var pPc,qPc;WU(1525,1,{},vPc);_.pc=function wPc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};WU(1526,1,{},yPc);_.pc=function zPc(){return _Yc};var GO=okb(uXc,'TerrainDynamic$DemoScene',1238),CO=okb(uXc,'TerrainDynamic$DemoScene$1',1239),DO=okb(uXc,'TerrainDynamic$DemoScene$2',1240),EO=okb(uXc,'TerrainDynamic$DemoScene$3',1241),FO=okb(uXc,'TerrainDynamic$DemoScene$4',1242),JR=okb(zZc,AZc,1505),rP=okb(kXc,'TerrainShader',1352),BR=okb(zZc,'HorizontalTiltShiftShader',1493),VR=okb(zZc,'VerticalTiltShiftShader',1523),JO=okb(uXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1243),HO=okb(uXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1244),IO=okb(uXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1245),IR=okb(zZc,BZc,1506),GR=okb(zZc,CZc,1507),HR=okb(zZc,DZc,1508),qP=okb(kXc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1353),oP=okb(kXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1354),pP=okb(kXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1355),AR=okb(zZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1494),yR=okb(zZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1495),zR=okb(zZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1496),UR=okb(zZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1524),SR=okb(zZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1525),TR=okb(zZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1526),FR=okb(zZc,'LuminosityShader',1499),ER=okb(zZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1500),CR=okb(zZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1501),DR=okb(zZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1502);JSc(Hi)(38);