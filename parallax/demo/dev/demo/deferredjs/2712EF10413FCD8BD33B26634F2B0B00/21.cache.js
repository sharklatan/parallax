function uKb(){}
function yKb(){}
function BKb(){}
function qKb(){qKb=DMc;pKb=new uKb}
function DKb(){DKb=DMc;sKb=new yKb}
function EKb(){EKb=DMc;tKb=new BKb}
function nKb(){EIb.call(this,(qKb(),pKb))}
function llc(){A9b.call(this);this.d=0;this.e=0}
mU(749,725,aOc,nKb);_.Nd=function oKb(){sIb(this,'mRefractionRatio',new UMb((lNb(),ZMb),new Sjb(1.02)));sIb(this,'mFresnelBias',new UMb(ZMb,new Sjb(0.1)));sIb(this,'mFresnelPower',new UMb(ZMb,new Sjb(2)));sIb(this,'mFresnelScale',new UMb(ZMb,new Sjb(1)));sIb(this,qUc,new TMb(dNb))};var pKb;mU(750,1,{},uKb);_.Qd=function vKb(){return DKb(),sKb};_.Rd=function wKb(){return EKb(),tKb};var sKb,tKb;mU(751,1,{},yKb);_.pc=function zKb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};mU(752,1,{},BKb);_.pc=function CKb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};mU(1132,1,nOc);_.Db=function jlc(){a9b(this.c,new llc(this.b))};mU(1133,967,{326:1},llc);_.ob=function mlc(){var a,b,c,d,e,f,g,i,j;this.b=new oQb(60,HGb(this.H.n),1,100000);U5b(this.b.ab,3200);this.c=new oQb(60,HGb(this.H.n),1,100000);this.f=new g8b;a=new HWb(100,32,16);j=new aOb('./static/textures/cube/park2/*.jpg');BNb(j,(DCb(),BCb));g=new nKb;SMb(Fu(MRb(g.j,qUc),225),j);c=new n2b(g);this.g=new Fqb;for(b=0;b<500;b++){d=new u7b(a,c);f5b(d.ab,Zkb()*10000-5000);g5b(d.ab,Zkb()*10000-5000);U5b(d.ab,Zkb()*10000-5000);R5b(d.fb,Zkb()*3+1);oPb(this.I,d);vqb(this.g,d)}this.I.X=false;i=new eJb;SMb(Fu(MRb(i.j,qUc),225),j);f=new n2b(i);qZb(f,(c_b(),_$b));e=new u7b(new SVb(100000,100000,100000),f);oPb(this.f,e);_Gb(this.H.n,false)};_.pb=function nlc(a){var b,c,d,e;e=1.0E-4*a;a5b(this.b.ab,(this.d-this.b.ab.d)*0.05);b5b(this.b.ab,(-this.e-this.b.ab.e)*0.05);MPb(this.b,this.I.ab);i3b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Fu(yqb(this.g,b),303);f5b(d.ab,5000*Math.cos(e+b));g5b(d.ab,5000*Math.sin(e+b*1.1))}AGb(this.H.n,true);TGb(this.H.n,this.f,this.c,null,false);TGb(this.H.n,this.I,this.b,null,false)};_.d=0;_.e=0;var NM=Gjb(iTc,'MaterialsCubemapFresnel$DemoScene',1133),oG=Gjb(rUc,'FresnelShader',749),nG=Gjb(rUc,'FresnelShader_Resources_default_InlineClientBundleGenerator',750),lG=Gjb(rUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',751),mG=Gjb(rUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',752);BOc(Hi)(21);