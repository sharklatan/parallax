function Atc(){}
function Etc(){}
function Htc(){}
function Xxc(){}
function _xc(){}
function cyc(){}
function Wjc(a){this.b=a}
function wtc(){wtc=DMc;vtc=new Atc}
function Jtc(){Jtc=DMc;ytc=new Etc}
function Ktc(){Ktc=DMc;ztc=new Htc}
function Txc(){Txc=DMc;Sxc=new Xxc}
function eyc(){eyc=DMc;Vxc=new _xc}
function fyc(){fyc=DMc;Wxc=new cyc}
function Oxc(){EIb.call(this,(Txc(),Sxc))}
function ttc(){EIb.call(this,(wtc(),vtc))}
function Sjc(){A9b.call(this);this.e=0;this.f=0}
function Rjc(a,b){var c,d,e,f,g,i;d=new TNb(STc);d.n=4;e5b(d.C,0.998,0.998);e5b(d.B,0.001,0.001);NNb(d,(KFb(),JFb));ONb(d,JFb);BNb(d,(DCb(),BCb));e=new TNb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');e5b(e.C,0.998,0.998);e5b(e.B,0.001,0.001);NNb(e,JFb);ONb(e,JFb);BNb(e,BCb);c=new TNb('./static/models/obj/leeperrysmith/Map-COL.jpg');e5b(c.C,0.998,0.998);e5b(c.B,0.001,0.001);NNb(c,JFb);ONb(c,JFb);BNb(c,BCb);g=new Oxc;i=g.j;SMb(Fu(i.b[UTc],225),(Tib(),Tib(),Sib));SMb(Fu(i.b[VTc],225),Sib);SMb(Fu(i.b[WTc],225),a.c.f);SMb(Fu(i.b[XTc],225),c);SMb(Fu(i.b[YTc],225),d);SMb(Fu(i.b[ZTc],225),e);$2b(Fu(Fu(i.b[$Tc],225).e,292),10526880);$2b(Fu(Fu(i.b[_Tc],225).e,292),10526880);$2b(Fu(Fu(i.b[aUc],225).e,292),10526880);SMb(Fu(i.b[bUc],225),new Sjb(0.145));SMb(Fu(i.b[cUc],225),new Sjb(0.75));SMb(Fu(i.b[dUc],225),new Sjb(16));G6b(Fu(Fu(i.b[eUc],225).e,300),0.001,0.001,0.998,0.998);f=new n2b(g);f.d=true;a.d=new u7b(b,f);g5b(a.d.ab,-50);R5b(a.d.fb,100);tPb(a.d,true);a.d.V=true;oPb(a.I,a.d)}
var UTc='enableBump',WTc='tBeckmann',bUc='uRoughness',cUc='uSpecularBrightness';mU(1112,1,nOc);_.Db=function Pjc(){a9b(this.c,new Sjc(this.b))};mU(1113,967,{322:1},Sjc);_.ob=function Tjc(){var a,b,c,d,e,f,g;this.b=new oQb(27,HGb(this.H.n),1,10000);U5b(this.b.ab,1200);oPb(this.I,new PXb(5592405));d=new JYb(16777215,1.5,1000);S5b(d.ab,0,0,600);oPb(this.I,d);f=new RYb(1);S5b(f.ab,0.05,0.05,1);oPb(this.I,f);f.ab.of(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new qYb(16777215,0.85);S5b(a.ab,1,-0.5,1);Z2b(a.M,0.6,1,0.85);oPb(this.I,a);a.ab.of(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new qYb(16777215,0.85);S5b(b.ab,1,-0.5,-1);oPb(this.I,b);new VIc(new ttc);c=new VIc(new IJc);c.b=true;g=new oOb(512,512);GNb(g,(sEb(),mEb));ENb(g,(hEb(),fEb));BNb(g,(DCb(),BCb));g.g=false;this.c=new LIc(this.H.n,g);new pzc(TTc,new Wjc(this));dHb(this.H.n,new b3b(5001561),1);e=new YFb(this.H.n,this.I);e.i=false;_Gb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function Ujc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){h3b(this.d.db,0.05*(b-this.d.db.e));g3b(this.d.db,0.05*(c-this.d.db.d))}AGb(this.H.n,true);TGb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;mU(1114,1,{},Wjc);_.Bf=function Xjc(a,b){Rjc(this.b,Fu(b,241))};mU(1242,725,aOc,ttc);_.Nd=function utc(){};var vtc;mU(1243,1,{},Atc);_.Qd=function Btc(){return Jtc(),ytc};_.Rd=function Ctc(){return Ktc(),ztc};var ytc,ztc;mU(1244,1,{},Etc);_.pc=function Ftc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};mU(1245,1,{},Htc);_.pc=function Itc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};mU(1339,725,aOc,Oxc);_.Nd=function Pxc(){zIb(this,pNb());zIb(this,qNb());zIb(this,rNb());sIb(this,UTc,new UMb((lNb(),aNb),ykb(0)));sIb(this,VTc,new UMb(aNb,ykb(0)));sIb(this,XTc,new TMb(dNb));sIb(this,WTc,new TMb(dNb));sIb(this,_Tc,new UMb(YMb,new b3b(15658734)));sIb(this,aUc,new UMb(YMb,new b3b(1118481)));sIb(this,$Tc,new UMb(YMb,new b3b(328965)));sIb(this,fUc,new UMb(ZMb,new Sjb(1)));sIb(this,bUc,new UMb(ZMb,new Sjb(0.15)));sIb(this,cUc,new UMb(ZMb,new Sjb(0.75)));sIb(this,YTc,new TMb(dNb));sIb(this,dUc,new UMb(ZMb,new Sjb(1)));sIb(this,ZTc,new TMb(dNb));sIb(this,eUc,new UMb(jNb,new K6b(0,0,1,1)));sIb(this,'uWrapRGB',new UMb(hNb,new Y5b(0.75,0.375,0.1875)))};_.Od=function Qxc(a){var b,c;c=new brb(vu(jS,JMc,1,[gUc,hUc,iUc]));b=new brb(vu(jS,JMc,1,[jUc,kUc,lUc]));BIb(this,JIb(a,vu(mS,JMc,173,[c,b])))};_.Pd=function Rxc(a){var b,c;c=new brb(vu(jS,JMc,1,[mUc]));b=new brb(vu(jS,JMc,1,[nUc]));CIb(this,JIb(a,vu(mS,JMc,173,[c,b])))};var Sxc;mU(1340,1,{},Xxc);_.Qd=function Yxc(){return eyc(),Vxc};_.Rd=function Zxc(){return fyc(),Wxc};var Vxc,Wxc;mU(1341,1,{},_xc);_.pc=function ayc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};mU(1342,1,{},cyc);_.pc=function dyc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var sM=Gjb(iTc,'MaterialsBumpmapSkin$DemoScene',1113),rM=Gjb(iTc,'MaterialsBumpmapSkin$DemoScene$1',1114),IO=Gjb(bTc,'BeckmannShader',1242),HO=Gjb(bTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1243),FO=Gjb(bTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1244),GO=Gjb(bTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1245),hP=Gjb(bTc,'SkinSimpleShader',1339),gP=Gjb(bTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1340),eP=Gjb(bTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1341),fP=Gjb(bTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1342);BOc(Hi)(18);