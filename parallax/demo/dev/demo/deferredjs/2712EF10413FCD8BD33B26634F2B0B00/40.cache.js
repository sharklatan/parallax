function bKb(){}
function fKb(){}
function iKb(){}
function iwc(){}
function ewc(){}
function lwc(){}
function xwc(){}
function Bwc(){}
function Ewc(){}
function Qwc(){}
function Uwc(){}
function Xwc(){}
function awc(){awc=DMc;_vc=new ewc}
function nwc(){nwc=DMc;cwc=new iwc}
function owc(){owc=DMc;dwc=new lwc}
function twc(){twc=DMc;swc=new xwc}
function Gwc(){Gwc=DMc;vwc=new Bwc}
function Hwc(){Hwc=DMc;wwc=new Ewc}
function Mwc(){Mwc=DMc;Lwc=new Qwc}
function Zwc(){Zwc=DMc;Owc=new Uwc}
function $wc(){$wc=DMc;Pwc=new Xwc}
function ZJb(){ZJb=DMc;YJb=new bKb}
function kKb(){kKb=DMc;_Jb=new fKb}
function lKb(){lKb=DMc;aKb=new iKb}
function csc(a,b){this.b=a;this.c=b}
function BGb(a,b){mHb(a,b);AGb(a,false)}
function UJb(){EIb.call(this,(ZJb(),YJb))}
function Zvc(){EIb.call(this,(awc(),_vc))}
function qwc(){EIb.call(this,(twc(),swc))}
function Jwc(){EIb.call(this,(Mwc(),Lwc))}
function R_b(){tZb.call(this);this.b=false;this.c=1}
function $rc(){A9b.call(this);this.u=new Y5b(0,1000,-1000);this.s=new X5b}
function P5b(a,b){var c;c=new f4b;d4b(c,b.q,U3b(c,b.Y));return H5b(a,c)}
var MVc='bgColor',OVc='fAspect',LVc='fGodRayIntensity',PVc='fStepSize',CVc='mFar',BVc='mNear',RVc='tColors',SVc='tGodRays',QVc='tInput',NVc='vSunPositionScreenSpace',TVc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';mU(743,725,aOc,UJb);_.Nd=function VJb(){sIb(this,BVc,new UMb((lNb(),ZMb),new Sjb(1)));sIb(this,CVc,new UMb(ZMb,new Sjb(2000)));sIb(this,fUc,new UMb(ZMb,new Sjb(1)))};_.Od=function WJb(a){var b,c;c=new brb(vu(jS,JMc,1,[DVc]));b=new brb(vu(jS,JMc,1,[EVc]));BIb(this,JIb(a,vu(mS,JMc,173,[c,b])))};_.Pd=function XJb(a){var b,c;c=new brb(vu(jS,JMc,1,[FVc,GVc]));b=new brb(vu(jS,JMc,1,[HVc,IVc,JVc]));CIb(this,JIb(a,vu(mS,JMc,173,[c,b])))};var YJb;mU(744,1,{},bKb);_.Qd=function cKb(){return kKb(),_Jb};_.Rd=function dKb(){return lKb(),aKb};var _Jb,aKb;mU(745,1,{},fKb);_.pc=function gKb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};mU(746,1,{},iKb);_.pc=function jKb(){return KVc};mU(915,908,{278:1,281:1},R_b);_.Pe=function S_b(){var a;return a=new R_b,bZb(this,a),a.b=this.b,a.c=this.c,a};_.Qe=function T_b(){return new UJb};_.Me=function U_b(){return this.c};_.Ne=function V_b(){return this.b};_.Re=function W_b(a,b){var c;gZb(this,b);c=fZb(this).j;if(a.cZ==cH){SMb(Fu(c.b[BVc],225),new Sjb(Fu(a,235).e));SMb(Fu(c.b[CVc],225),new Sjb(Fu(a,235).c))}SMb(Fu(c.b[fUc],225),new Sjb(this.$))};_.b=false;_.c=0;mU(1222,1,nOc);_.Db=function Yrc(){a9b(this.c,new $rc(this.b))};mU(1223,967,{335:1},$rc);_.ob=function _rc(){var a,b,c,d;this.b=new oQb(70,HGb(this.H.n),1,3000);U5b(this.b.ab,200);this.c=new R_b;c=new m_b;g_b(c,new b3b(0));k_b(c,(W$b(),T$b));new pzc('./static/models/obj/tree/tree.js',new csc(this,c));a=new HWb(1,20,10);this.t=new u7b(a,c);R5b(this.t.fb,20);oPb(this.I,this.t);pHb(this.H.n,false);_Gb(this.H.n,false);cHb(this.H.n,1297,1);this.k=new g8b;this.j=new bQb(this.H.n.$,this.H.n.Z,-10000,10000);U5b(this.j.ab,100);oPb(this.k,this.j);this.o=new oOb(this.H.n.$,this.H.n.Z);GNb(this.o,(sEb(),mEb));ENb(this.o,(hEb(),fEb));BNb(this.o,(DCb(),CCb));this.p=new oOb(this.H.n.$,this.H.n.Z);GNb(this.p,mEb);ENb(this.p,fEb);BNb(this.p,CCb);d=~~(this.H.n.$/4);b=~~(this.H.n.Z/4);this.q=new oOb(d,b);GNb(this.q,mEb);ENb(this.q,fEb);BNb(this.q,CCb);this.r=new oOb(d,b);GNb(this.r,mEb);ENb(this.r,fEb);BNb(this.r,CCb);this.f=new n2b(new qwc);this.d=new n2b(new Zvc);SMb(Fu(MRb(fZb(this.d).j,LVc),225),new Sjb(0.75));this.e=new n2b(new Jwc);$2b(Fu(Fu(MRb(fZb(this.e).j,MVc),225).e,292),1297);$2b(Fu(Fu(MRb(fZb(this.e).j,VUc),225).e,292),16772608);this.n=new u7b(new wWb(this.H.n.$,this.H.n.Z),this.f);U5b(this.n.ab,-9900);oPb(this.k,this.n)};_.pb=function asc(a){var b,c,d,e,f,g;f=a/4000;f5b(this.t.ab,200*Skb(f));U5b(this.t.ab,200*_kb(f)-100);a5b(this.b.ab,(this.g-this.b.ab.d)*0.036);b5b(this.b.ab,(-this.i-this.b.ab.e)*0.036);MPb(this.b,this.I.ab);P5b(this.s.lf(this.u),this.b);f5b(this.s,(this.s.d+1)/2);g5b(this.s,(this.s.e+1)/2);e5b(Fu(Fu(MRb(fZb(this.f).j,NVc),225).e,296),this.s.d,this.s.e);e5b(Fu(Fu(MRb(fZb(this.e).j,NVc),225).e,296),this.s.d,this.s.e);BGb(this.H.n,this.o);g=this.H.n.$;b=this.H.n.Z;d=0.74*b;e=0.74*b;f5b(this.s,this.s.d*g);g5b(this.s,this.s.e*b);nHb(this.H.n,Nu(this.s.d-e/2),Nu(this.s.e-d/2),Nu(e),Nu(d));GGb(this.H.n,true);SMb(Fu(MRb(fZb(this.e).j,OVc),225),new Sjb(g/b));this.k.d=this.e;TGb(this.H.n,this.k,this.j,this.o,false);GGb(this.H.n,false);this.I.d=null;TGb(this.H.n,this.I,this.b,this.o,false);this.I.d=this.c;TGb(this.H.n,this.I,this.b,this.p,true);c=Ykb(6,-1);SMb(Fu(MRb(fZb(this.f).j,PVc),225),new Sjb(c));SMb(Fu(MRb(fZb(this.f).j,QVc),225),this.p);this.k.d=this.f;TGb(this.H.n,this.k,this.j,this.r,false);c=Ykb(6,-2);SMb(Fu(MRb(fZb(this.f).j,PVc),225),new Sjb(c));SMb(Fu(MRb(fZb(this.f).j,QVc),225),this.r);TGb(this.H.n,this.k,this.j,this.q,false);c=Ykb(6,-3);SMb(Fu(MRb(fZb(this.f).j,PVc),225),new Sjb(c));SMb(Fu(MRb(fZb(this.f).j,QVc),225),this.q);TGb(this.H.n,this.k,this.j,this.r,false);SMb(Fu(MRb(fZb(this.d).j,RVc),225),this.o);SMb(Fu(MRb(fZb(this.d).j,SVc),225),this.r);this.k.d=this.d;TGb(this.H.n,this.k,this.j,null,false);this.k.d=null};_.g=0;_.i=0;mU(1224,1,{},csc);_.Bf=function dsc(a,b){var c;c=new u7b(b,this.c);S5b(c.ab,0,-150,-150);R5b(c.fb,400);c.X=false;P3b(c.W,c.ab,c.bb,c.fb);c.Z=true;oPb(this.b.I,c)};mU(1308,725,aOc,Zvc);_.Nd=function $vc(){sIb(this,RVc,new TMb((lNb(),dNb)));sIb(this,SVc,new TMb(dNb));sIb(this,LVc,new UMb(ZMb,new Sjb(0.69)));sIb(this,NVc,new UMb(fNb,new i5b(0.5,0.5)))};var _vc;mU(1309,1,{},ewc);_.Qd=function fwc(){return nwc(),cwc};_.Rd=function gwc(){return owc(),dwc};var cwc,dwc;mU(1310,1,{},iwc);_.pc=function jwc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};mU(1311,1,{},lwc);_.pc=function mwc(){return TVc};mU(1314,725,aOc,qwc);_.Nd=function rwc(){sIb(this,QVc,new TMb((lNb(),dNb)));sIb(this,PVc,new UMb(ZMb,new Sjb(1)));sIb(this,NVc,new UMb(fNb,new i5b(0.5,0.5)))};var swc;mU(1315,1,{},xwc);_.Qd=function ywc(){return Gwc(),vwc};_.Rd=function zwc(){return Hwc(),wwc};var vwc,wwc;mU(1316,1,{},Bwc);_.pc=function Cwc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};mU(1317,1,{},Ewc);_.pc=function Fwc(){return TVc};mU(1320,725,aOc,Jwc);_.Nd=function Kwc(){sIb(this,NVc,new UMb((lNb(),fNb),new i5b(0.5,0.5)));sIb(this,OVc,new UMb(ZMb,new Sjb(1)));sIb(this,VUc,new UMb(YMb,new b3b(16772608)));sIb(this,MVc,new UMb(YMb,new b3b(0)))};var Lwc;mU(1321,1,{},Qwc);_.Qd=function Rwc(){return Zwc(),Owc};_.Rd=function Swc(){return $wc(),Pwc};var Owc,Pwc;mU(1322,1,{},Uwc);_.pc=function Vwc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};mU(1323,1,{},Xwc);_.pc=function Ywc(){return TVc};var oO=Gjb(lTc,'PostprocessingGodrays$DemoScene',1223),nO=Gjb(lTc,'PostprocessingGodrays$DemoScene$1',1224),$I=Gjb(UVc,'MeshDepthMaterial',915),SO=Gjb(bTc,'GodRaysGenerateShader',1314),OO=Gjb(bTc,'GodRaysCombineShader',1308),WO=Gjb(bTc,'GodraysFakeSunShader',1320),kG=Gjb(rUc,'DepthShader',743),RO=Gjb(bTc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1315),PO=Gjb(bTc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1316),QO=Gjb(bTc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1317),NO=Gjb(bTc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1309),LO=Gjb(bTc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1310),MO=Gjb(bTc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1311),VO=Gjb(bTc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1321),TO=Gjb(bTc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1322),UO=Gjb(bTc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1323),jG=Gjb(rUc,'DepthShader_Resources_default_InlineClientBundleGenerator',744),hG=Gjb(rUc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',745),iG=Gjb(rUc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',746);BOc(Hi)(40);