function nvc(){}
function rvc(){}
function uvc(){}
function mIc(){}
function qIc(){}
function tIc(){}
function Gmc(){jac.call(this)}
function gvc(){cJb.call(this,(jvc(),ivc))}
function fIc(){cJb.call(this,(iIc(),hIc))}
function iIc(){iIc=JKc;hIc=new mIc}
function vIc(){vIc=JKc;kIc=new qIc}
function wIc(){wIc=JKc;lIc=new tIc}
function wvc(){wvc=JKc;lvc=new rvc}
function jvc(){jvc=JKc;ivc=new nvc}
function xvc(){xvc=JKc;mvc=new uvc}
function MGc(){this.c=new W2b(new fIc);qNb(Xu(rSb(OZb(this.c).j,USc),225),(pjb(),pjb(),njb));qNb(Xu(rSb(OZb(this.c).j,VSc),225),new okb(0.35));qNb(Xu(rSb(OZb(this.c).j,WSc),225),new okb(0.95));qNb(Xu(rSb(OZb(this.c).j,XSc),225),Wkb(2048));this.f=true;this.g=true}
var USc='grayscale',VSc='nIntensity',XSc='sCount',WSc='sIntensity',OSc='texture1',PSc='texture2';KU(1158,1,uMc);_.Db=function Emc(){L9b(this.c,new Gmc(this.b))};KU(1159,974,rMc,Gmc);_.Nd=function Hmc(a){O5b(Xu(Xu(rSb(this.e,NSc),225).e,297),a.b.$);P5b(Xu(Xu(rSb(this.e,NSc),225).e,297),a.b.Z)};_.ob=function Imc(){var a,b,c,d,e,f,g;Mt((jyb(),iyb),(tyb(),syb),this);this.b=new RQb(35,fHb(this.H.n),1,3000);B6b(this.b.ab,4);d=new W2b(new gvc);this.e=OZb(d).j;f=new rOb('./static/textures/lava/cloud.png');lOb(f,(iGb(),hGb));mOb(f,hGb);qNb(Xu(rSb(this.e,OSc),225),f);g=new rOb(BSc);lOb(g,hGb);mOb(g,hGb);qNb(Xu(rSb(this.e,PSc),225),g);this.c=new b8b(new wXb(0.65,0.3,30,30),d);X3b(this.c.db,0.3);OPb(this.I,this.c);a=new QGc(this.H.n);e=new YGc(this.I,this.b);b=new JGc(1.25);c=new MGc;c.b=true;Vqb(a.c,e);Vqb(a.c,b);Vqb(a.c,c);zHb(this.H.n,false);this.d=Ch()};_.pb=function Jmc(a){var b;b=(Ch()-this.d)*0.001*5;qNb(Xu(rSb(this.e,QSc),225),new okb(Xu(Xu(rSb(this.e,QSc),225).e,150).b+0.2*b));P3b(this.c.db,0.05*b);Q3b(this.c.db,0.0125*b);$Gb(this.H.n,true);this.d=Ch();rHb(this.H.n,this.I,this.b,null,false)};_.d=0;KU(1287,732,hMc,gvc);_.Sd=function hvc(){SIb(this,RSc,new sNb((LNb(),xNb),new okb(0.45)));SIb(this,SSc,new sNb(HNb,new F6b(0,0,0)));SIb(this,QSc,new sNb(xNb,new okb(1)));SIb(this,NSc,new sNb(FNb,new Q5b));SIb(this,TSc,new sNb(FNb,new R5b(3,1)));SIb(this,OSc,new rNb(DNb));SIb(this,PSc,new rNb(DNb))};var ivc;KU(1288,1,{},nvc);_.Vd=function ovc(){return wvc(),lvc};_.Wd=function pvc(){return xvc(),mvc};var lvc,mvc;KU(1289,1,{},rvc);_.uc=function svc(){return 'uniform float time;\nuniform vec2 resolution;\n\nuniform float fogDensity;\nuniform vec3 fogColor;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\n\nvarying vec2 vUv;\n\nvoid main( void ) {\n\n\tvec2 position = -1.0 + 2.0 * vUv;\n\n\tvec4 noise = texture2D( texture1, vUv );\n\tvec2 T1 = vUv + vec2( 1.5, -1.5 ) * time  *0.02;\n\tvec2 T2 = vUv + vec2( -0.5, 2.0 ) * time * 0.01;\n\n\tT1.x += noise.x * 2.0;\n\tT1.y += noise.y * 2.0;\n\tT2.x -= noise.y * 0.2;\n\tT2.y += noise.z * 0.2;\n\n\tfloat p = texture2D( texture1, T1 * 2.0 ).a;\n\n\tvec4 color = texture2D( texture2, T2 * 2.0 );\n\tvec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );\n\n\tif( temp.r > 1.0 ){ temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }\n\tif( temp.g > 1.0 ){ temp.rb += temp.g - 1.0; }\n\tif( temp.b > 1.0 ){ temp.rg += temp.b - 1.0; }\n\n\tgl_FragColor = temp;\n\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\tconst float LOG2 = 1.442695;\n\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n}\n'};KU(1290,1,{},uvc);_.uc=function vvc(){return 'uniform vec2 uvScale;\nvarying vec2 vUv;\n\nvoid main()\n{\n\n\tvUv = uvScale * uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n}'};KU(1396,1395,HMc,MGc);_.Xg=function NGc(a,b,c){qNb(Xu(rSb(OZb(this.c).j,hSc),225),a.e);qNb(Xu(rSb(OZb(this.c).j,QSc),225),new okb(Xu(Xu(rSb(OZb(this.c).j,QSc),225).e,150).b+b));BTb(a.d,this.c);this.b?rHb(a.v,a.w,a.b,null,false):rHb(a.v,a.w,a.b,a.i,false)};_.b=false;KU(1419,732,hMc,fIc);_.Sd=function gIc(){SIb(this,hSc,new rNb((LNb(),DNb)));SIb(this,QSc,new sNb(xNb,new okb(0)));SIb(this,VSc,new sNb(xNb,new okb(0.5)));SIb(this,WSc,new sNb(xNb,new okb(0.05)));SIb(this,XSc,new sNb(ANb,Wkb(4096)));SIb(this,USc,new sNb(ANb,(pjb(),pjb(),ojb)))};var hIc;KU(1420,1,{},mIc);_.Vd=function nIc(){return vIc(),kIc};_.Wd=function oIc(){return wIc(),lIc};var kIc,lIc;KU(1421,1,{},qIc);_.uc=function rIc(){return '// control parameter\r\nuniform float time;\r\n\r\nuniform bool grayscale;\r\n\r\n// noise effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float nIntensity;\r\n\r\n// scanlines effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float sIntensity;\r\n\r\n// scanlines effect count value (0 = no effect, 4096 = full effect)\r\nuniform float sCount;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\t// sample the source\r\n\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\r\n\r\n\t// make some noise\r\n\tfloat x = vUv.x * vUv.y * time *  1000.0;\r\n\tx = mod( x, 13.0 ) * mod( x, 123.0 );\r\n\tfloat dx = mod( x, 0.01 );\r\n\r\n\t// add noise\r\n\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\r\n\r\n\t// get us a sine and cosine\r\n\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\r\n\r\n\t// add scanlines\r\n\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\r\n\r\n\t// interpolate between source and result by intensity\r\n\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\r\n\r\n\t// convert to grayscale if desired\r\n\tif( grayscale ) {\r\n\r\n\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\r\n\r\n\t}\r\n\r\n\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\r\n\r\n}\r\n'};KU(1422,1,{},tIc);_.uc=function uIc(){return YSc};var wN=ckb(vRc,'MaterialsShaderLava$DemoScene',1159),eR=ckb(ZSc,'FilmPass',1396),wP=ckb(oRc,'LavaShader',1287),zR=ckb($Sc,'FilmShader',1419),vP=ckb(oRc,'LavaShader_Resources_default_InlineClientBundleGenerator',1288),tP=ckb(oRc,'LavaShader_Resources_default_InlineClientBundleGenerator$1',1289),uP=ckb(oRc,'LavaShader_Resources_default_InlineClientBundleGenerator$2',1290),yR=ckb($Sc,'FilmShader_Resources_default_InlineClientBundleGenerator',1420),wR=ckb($Sc,'FilmShader_Resources_default_InlineClientBundleGenerator$1',1421),xR=ckb($Sc,'FilmShader_Resources_default_InlineClientBundleGenerator$2',1422);IMc(Ii)(30);