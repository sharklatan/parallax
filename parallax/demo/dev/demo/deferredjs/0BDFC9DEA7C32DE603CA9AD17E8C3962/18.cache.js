function Ctc(){}
function Gtc(){}
function Jtc(){}
function Zxc(){}
function byc(){}
function eyc(){}
function Yjc(a){this.a=a}
function ytc(){ytc=FMc;xtc=new Ctc}
function Ltc(){Ltc=FMc;Atc=new Gtc}
function Mtc(){Mtc=FMc;Btc=new Jtc}
function Vxc(){Vxc=FMc;Uxc=new Zxc}
function gyc(){gyc=FMc;Xxc=new byc}
function hyc(){hyc=FMc;Yxc=new eyc}
function Qxc(){rIb.call(this,(Vxc(),Uxc))}
function vtc(){rIb.call(this,(ytc(),xtc))}
function Ujc(){x9b.call(this);this.d=0;this.e=0}
function Tjc(a,b){var c,d,e,f,g,i;d=new GNb(NTc);d.k=4;a5b(d.B,0.998,0.998);a5b(d.A,0.001,0.001);ANb(d,(xFb(),wFb));BNb(d,wFb);oNb(d,(qCb(),oCb));e=new GNb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');a5b(e.B,0.998,0.998);a5b(e.A,0.001,0.001);ANb(e,wFb);BNb(e,wFb);oNb(e,oCb);c=new GNb('./static/models/obj/leeperrysmith/Map-COL.jpg');a5b(c.B,0.998,0.998);a5b(c.A,0.001,0.001);ANb(c,wFb);BNb(c,wFb);oNb(c,oCb);g=new Qxc;i=g.i;FMb(qu(i.a[PTc],225),(Gib(),Gib(),Fib));FMb(qu(i.a[QTc],225),Fib);FMb(qu(i.a[RTc],225),a.b.e);FMb(qu(i.a[STc],225),c);FMb(qu(i.a[TTc],225),d);FMb(qu(i.a[UTc],225),e);W2b(qu(qu(i.a[VTc],225).d,293),10526880);W2b(qu(qu(i.a[WTc],225).d,293),10526880);W2b(qu(qu(i.a[XTc],225).d,293),10526880);FMb(qu(i.a[YTc],225),new Fjb(0.145));FMb(qu(i.a[ZTc],225),new Fjb(0.75));FMb(qu(i.a[$Tc],225),new Fjb(16));C6b(qu(qu(i.a[_Tc],225).d,301),0.001,0.001,0.998,0.998);f=new j2b(g);f.c=true;a.c=new q7b(b,f);c5b(a.c._,-50);N5b(a.c.eb,100);gPb(a.c,true);a.c.U=true;bPb(a.H,a.c)}
var PTc='enableBump',RTc='tBeckmann',YTc='uRoughness',ZTc='uSpecularBrightness';ZT(1119,1,oOc);_.zb=function Rjc(){Z8b(this.b,new Ujc(this.a))};ZT(1120,972,{323:1},Ujc);_.nb=function Vjc(){var a,b,c,d,e,f,g;this.a=new eQb(27,uGb(this.G.k),1,10000);Q5b(this.a._,1200);bPb(this.H,new LXb(5592405));d=new FYb(16777215,1.5,1000);O5b(d._,0,0,600);bPb(this.H,d);f=new NYb(1);O5b(f._,0.05,0.05,1);bPb(this.H,f);f._.of(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new mYb(16777215,0.85);O5b(a._,1,-0.5,1);V2b(a.L,0.6,1,0.85);bPb(this.H,a);a._.of(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new mYb(16777215,0.85);O5b(b._,1,-0.5,-1);bPb(this.H,b);new XIc(new vtc);c=new XIc(new KJc);c.a=true;g=new bOb(512,512);tNb(g,(fEb(),_Db));rNb(g,(WDb(),UDb));oNb(g,(qCb(),oCb));g.f=false;this.b=new NIc(this.G.k,g);new rzc(OTc,new Yjc(this));SGb(this.G.k,new Z2b(5001561),1);e=new LFb(this.G.k,this.H);e.g=false;OGb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function Wjc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){d3b(this.c.cb,0.05*(b-this.c.cb.d));c3b(this.c.cb,0.05*(c-this.c.cb.c))}nGb(this.G.k,true);GGb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;ZT(1121,1,{},Yjc);_.Bf=function Zjc(a,b){Tjc(this.a,qu(b,242))};ZT(1249,730,bOc,vtc);_.Ld=function wtc(){};var xtc;ZT(1250,1,{},Ctc);_.Od=function Dtc(){return Ltc(),Atc};_.Pd=function Etc(){return Mtc(),Btc};var Atc,Btc;ZT(1251,1,{},Gtc);_.nc=function Htc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};ZT(1252,1,{},Jtc);_.nc=function Ktc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};ZT(1346,730,bOc,Qxc);_.Ld=function Rxc(){mIb(this,cNb());mIb(this,dNb());mIb(this,eNb());fIb(this,PTc,new HMb(($Mb(),PMb),lkb(0)));fIb(this,QTc,new HMb(PMb,lkb(0)));fIb(this,STc,new GMb(SMb));fIb(this,RTc,new GMb(SMb));fIb(this,WTc,new HMb(LMb,new Z2b(15658734)));fIb(this,XTc,new HMb(LMb,new Z2b(1118481)));fIb(this,VTc,new HMb(LMb,new Z2b(328965)));fIb(this,aUc,new HMb(MMb,new Fjb(1)));fIb(this,YTc,new HMb(MMb,new Fjb(0.15)));fIb(this,ZTc,new HMb(MMb,new Fjb(0.75)));fIb(this,TTc,new GMb(SMb));fIb(this,$Tc,new HMb(MMb,new Fjb(1)));fIb(this,UTc,new GMb(SMb));fIb(this,_Tc,new HMb(YMb,new G6b(0,0,1,1)));fIb(this,'uWrapRGB',new HMb(WMb,new U5b(0.75,0.375,0.1875)))};_.Md=function Sxc(a){var b,c;c=new Qqb(gu(WR,KMc,1,[bUc,cUc,dUc]));b=new Qqb(gu(WR,KMc,1,[eUc,fUc,gUc]));oIb(this,wIb(a,gu(ZR,KMc,173,[c,b])))};_.Nd=function Txc(a){var b,c;c=new Qqb(gu(WR,KMc,1,[hUc]));b=new Qqb(gu(WR,KMc,1,[iUc]));pIb(this,wIb(a,gu(ZR,KMc,173,[c,b])))};var Uxc;ZT(1347,1,{},Zxc);_.Od=function $xc(){return gyc(),Xxc};_.Pd=function _xc(){return hyc(),Yxc};var Xxc,Yxc;ZT(1348,1,{},byc);_.nc=function cyc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};ZT(1349,1,{},eyc);_.nc=function fyc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var dM=tjb(eTc,'MaterialsBumpmapSkin$DemoScene',1120),cM=tjb(eTc,'MaterialsBumpmapSkin$DemoScene$1',1121),tO=tjb(ZSc,'BeckmannShader',1249),sO=tjb(ZSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1250),qO=tjb(ZSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1251),rO=tjb(ZSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1252),UO=tjb(ZSc,'SkinSimpleShader',1346),TO=tjb(ZSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1347),RO=tjb(ZSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1348),SO=tjb(ZSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1349);COc(xi)(18);