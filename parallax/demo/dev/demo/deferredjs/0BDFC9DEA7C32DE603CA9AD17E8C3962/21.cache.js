function hKb(){}
function lKb(){}
function oKb(){}
function dKb(){dKb=FMc;cKb=new hKb}
function qKb(){qKb=FMc;fKb=new lKb}
function rKb(){rKb=FMc;gKb=new oKb}
function aKb(){rIb.call(this,(dKb(),cKb))}
function nlc(){x9b.call(this);this.c=0;this.d=0}
ZT(754,730,bOc,aKb);_.Ld=function bKb(){fIb(this,'mRefractionRatio',new HMb(($Mb(),MMb),new Fjb(1.02)));fIb(this,'mFresnelBias',new HMb(MMb,new Fjb(0.1)));fIb(this,'mFresnelPower',new HMb(MMb,new Fjb(2)));fIb(this,'mFresnelScale',new HMb(MMb,new Fjb(1)));fIb(this,lUc,new GMb(SMb))};var cKb;ZT(755,1,{},hKb);_.Od=function iKb(){return qKb(),fKb};_.Pd=function jKb(){return rKb(),gKb};var fKb,gKb;ZT(756,1,{},lKb);_.nc=function mKb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};ZT(757,1,{},oKb);_.nc=function pKb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};ZT(1139,1,oOc);_.zb=function llc(){Z8b(this.b,new nlc(this.a))};ZT(1140,972,{327:1},nlc);_.nb=function olc(){var a,b,c,d,e,f,g,i,j;this.a=new eQb(60,uGb(this.G.k),1,100000);Q5b(this.a._,3200);this.b=new eQb(60,uGb(this.G.k),1,100000);this.e=new d8b;a=new DWb(100,32,16);j=new PNb('./static/textures/cube/park2/*.jpg');oNb(j,(qCb(),oCb));g=new aKb;FMb(qu(GRb(g.i,lUc),225),j);c=new j2b(g);this.f=new sqb;for(b=0;b<500;b++){d=new q7b(a,c);b5b(d._,Mkb()*10000-5000);c5b(d._,Mkb()*10000-5000);Q5b(d._,Mkb()*10000-5000);N5b(d.eb,Mkb()*3+1);bPb(this.H,d);iqb(this.f,d)}this.H.W=false;i=new TIb;FMb(qu(GRb(i.i,lUc),225),j);f=new j2b(i);mZb(f,($$b(),X$b));e=new q7b(new OVb(100000,100000,100000),f);bPb(this.e,e);OGb(this.G.k,false)};_.ob=function plc(a){var b,c,d,e;e=1.0E-4*a;Y4b(this.a._,(this.c-this.a._.c)*0.05);Z4b(this.a._,(-this.d-this.a._.d)*0.05);APb(this.a,this.H._);e3b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=qu(lqb(this.f,b),304);b5b(d._,5000*Math.cos(e+b));c5b(d._,5000*Math.sin(e+b*1.1))}nGb(this.G.k,true);GGb(this.G.k,this.e,this.b,null,false);GGb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var yM=tjb(eTc,'MaterialsCubemapFresnel$DemoScene',1140),$F=tjb(mUc,'FresnelShader',754),ZF=tjb(mUc,'FresnelShader_Resources_default_InlineClientBundleGenerator',755),XF=tjb(mUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',756),YF=tjb(mUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',757);COc(xi)(21);