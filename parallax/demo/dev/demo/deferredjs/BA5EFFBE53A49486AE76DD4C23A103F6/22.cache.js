function vJb(){}
function zJb(){}
function CJb(){}
function rJb(){rJb=zHc;qJb=new vJb}
function EJb(){EJb=zHc;tJb=new zJb}
function FJb(){FJb=zHc;uJb=new CJb}
function oJb(){$Hb.call(this,(rJb(),qJb))}
function ikc(){x8b.call(this);this.d=0;this.e=0}
OT(749,731,YIc,oJb);_.Qd=function pJb(){OHb(this,'mRefractionRatio',new VLb((mMb(),$Lb),new ojb(1.02)));OHb(this,'mFresnelBias',new VLb($Lb,new ojb(0.1)));OHb(this,'mFresnelPower',new VLb($Lb,new ojb(2)));OHb(this,'mFresnelScale',new VLb($Lb,new ojb(1)));OHb(this,tPc,new ULb(eMb))};var qJb;OT(750,1,{},vJb);_.Td=function wJb(){return EJb(),tJb};_.Ud=function xJb(){return FJb(),uJb};var tJb,uJb;OT(751,1,{},zJb);_.tc=function AJb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};OT(752,1,{},CJb);_.tc=function DJb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};OT(1132,1,jJc);_.Db=function gkc(){Z7b(this.c,new ikc(this.b))};OT(1133,967,{327:1},ikc);_.ob=function jkc(){var a,b,c,d,e,f,g,i,j;this.b=new pPb(60,bGb(this.F.n),1,100000);R4b(this.b.ab,3200);this.c=new pPb(60,bGb(this.F.n),1,100000);this.f=new d7b;a=new IVb(100,32,16);j=new bNb('./static/textures/cube/park2/*.jpg');CMb(j,(ZBb(),XBb));g=new oJb;TLb(Xu(NQb(g.j,tPc),225),j);c=new l1b(g);this.g=new cqb;for(b=0;b<500;b++){e=new r6b(a,c);d4b(e.ab,vkb()*10000-5000);e4b(e.ab,vkb()*10000-5000);R4b(e.ab,vkb()*10000-5000);O4b(e.fb,vkb()*3+1);pOb(this.G,e);Upb(this.g,e)}this.G.X=false;i=new AIb;TLb(Xu(NQb(i.j,tPc),225),j);f=new l1b(i);qYb(f,(b$b(),$Zb));d=new r6b(new TUb(100000,100000,100000),f);pOb(this.f,d);vGb(this.F.n,false)};_.pb=function kkc(a){var b,c,d,e;e=1.0E-4*a;$3b(this.b.ab,(this.d-this.b.ab.d)*0.05);_3b(this.b.ab,(-this.e-this.b.ab.e)*0.05);NOb(this.b,this.G.ab);g2b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Xu(Xpb(this.g,b),304);d4b(d.ab,5000*Math.cos(e+b));e4b(d.ab,5000*Math.sin(e+b*1.1))}XFb(this.F.n);nGb(this.F.n,this.f,this.c,null,false);nGb(this.F.n,this.G,this.b,null,false)};_.d=0;_.e=0;var eN=cjb(iOc,'MaterialsCubemapFresnel$DemoScene',1133),HG=cjb(uPc,'FresnelShader',749),GG=cjb(uPc,'FresnelShader_Resources_default_InlineClientBundleGenerator',750),EG=cjb(uPc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',751),FG=cjb(uPc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',752);wJc(Ii)(22);