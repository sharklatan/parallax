function NKb(){}
function RKb(){}
function UKb(){}
function Uvc(){}
function evc(){}
function ivc(){}
function lvc(){}
function xvc(){}
function Bvc(){}
function Evc(){}
function Qvc(){}
function Xvc(){}
function w9b(a,b){a.d=b}
function JKb(){JKb=DLc;IKb=new NKb}
function WKb(){WKb=DLc;LKb=new RKb}
function XKb(){XKb=DLc;MKb=new UKb}
function Zvc(){Zvc=DLc;Ovc=new Uvc}
function nvc(){nvc=DLc;cvc=new ivc}
function ovc(){ovc=DLc;dvc=new lvc}
function tvc(){tvc=DLc;svc=new xvc}
function Gvc(){Gvc=DLc;vvc=new Bvc}
function Hvc(){Hvc=DLc;wvc=new Evc}
function Mvc(){Mvc=DLc;Lvc=new Qvc}
function $vc(){$vc=DLc;Pvc=new Xvc}
function avc(){avc=DLc;_uc=new evc}
function Usc(a,b){this.b=a;this.c=b}
function lHb(a,b){YHb(a,b);kHb(a,false)}
function EKb(){oJb.call(this,(JKb(),IKb))}
function Zuc(){oJb.call(this,(avc(),_uc))}
function qvc(){oJb.call(this,(tvc(),svc))}
function Jvc(){oJb.call(this,(Mvc(),Lvc))}
function s1b(){W$b.call(this);this.b=false;this.c=1}
function Qsc(){Sac.call(this);this.u=new A7b(0,1000,-1000);this.s=new z7b}
function r7b(a,b){var c;c=new J5b;H5b(c,b.q,w5b(c,b.Y));return j7b(a,c)}
var UUc='bgColor',WUc='fAspect',TUc='fGodRayIntensity',XUc='fStepSize',KUc='mFar',JUc='mNear',ZUc='tColors',$Uc='tGodRays',YUc='tInput',VUc='vSunPositionScreenSpace',_Uc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';UU(750,732,bNc,EKb);_.Sd=function FKb(){cJb(this,JUc,new ENb((XNb(),JNb),new xkb(1)));cJb(this,KUc,new ENb(JNb,new xkb(2000)));cJb(this,oTc,new ENb(JNb,new xkb(1)))};_.Td=function GKb(a){var b,c;c=new Lrb(Mu(QS,JLc,1,[LUc]));b=new Lrb(Mu(QS,JLc,1,[MUc]));lJb(this,tJb(a,Mu(TS,JLc,173,[c,b])))};_.Ud=function HKb(a){var b,c;c=new Lrb(Mu(QS,JLc,1,[NUc,OUc]));b=new Lrb(Mu(QS,JLc,1,[PUc,QUc,RUc]));mJb(this,tJb(a,Mu(TS,JLc,173,[c,b])))};var IKb;UU(751,1,{},NKb);_.Vd=function OKb(){return WKb(),LKb};_.Wd=function PKb(){return XKb(),MKb};var LKb,MKb;UU(752,1,{},RKb);_.uc=function SKb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};UU(753,1,{},UKb);_.uc=function VKb(){return SUc};UU(817,814,{78:1,186:1,235:1,236:1,249:1});_.ee=function RQb(){return this.c};_.fe=function SQb(){return this.e};UU(818,814,{78:1,186:1,235:1,237:1,249:1});_.ee=function dRb(){return this.c};_.fe=function eRb(){return this.i};UU(929,922,{279:1,282:1},s1b);_.Ye=function t1b(){var a;return a=new s1b,E$b(this,a),a.b=this.b,a.c=this.c,a};_.Ze=function u1b(){return new EKb};_.Ve=function v1b(){return this.c};_.We=function w1b(){return this.b};_.$e=function x1b(a,b){var c;J$b(this,b);c=I$b(this).j;if(Zu(a,235)){CNb(Wu(c.b[JUc],225),new xkb(Wu(a,235).fe()));CNb(Wu(c.b[KUc],225),new xkb(Wu(a,235).ee()))}CNb(Wu(c.b[oTc],225),new xkb(this.$))};_.b=false;_.c=0;UU(1241,1,pNc);_.Db=function Osc(){sac(this.c,new Qsc(this.b))};UU(1242,980,{336:1},Qsc);_.ob=function Rsc(){var a,b,c,d;this.b=new bRb(70,rHb(this.H.n),1,3000);w7b(this.b.ab,200);this.c=new s1b;c=new P0b;J0b(c,new F4b(0));N0b(c,(x0b(),u0b));new pyc('./static/models/obj/tree/tree.js',new Usc(this,c));a=new DXb(1,20,10);this.t=new $Yb(a,c);t7b(this.t.fb,20);$Pb(this.I,this.t);_Hb(this.H.n,false);LHb(this.H.n,false);OHb(this.H.n,1297,1);this.k=new x9b;this.j=new OQb(this.H.n.$,this.H.n.Z,-10000,10000);w7b(this.j.ab,100);$Pb(this.k,this.j);this.o=new $Ob(this.H.n.$,this.H.n.Z);qOb(this.o,(cFb(),YEb));oOb(this.o,(TEb(),REb));lOb(this.o,(nDb(),mDb));this.p=new $Ob(this.H.n.$,this.H.n.Z);qOb(this.p,YEb);oOb(this.p,REb);lOb(this.p,mDb);d=~~(this.H.n.$/4);b=~~(this.H.n.Z/4);this.q=new $Ob(d,b);qOb(this.q,YEb);oOb(this.q,REb);lOb(this.q,mDb);this.r=new $Ob(d,b);qOb(this.r,YEb);oOb(this.r,REb);lOb(this.r,mDb);this.f=new Q3b(new qvc);this.d=new Q3b(new Zuc);CNb(Wu(GSb(I$b(this.d).j,TUc),225),new xkb(0.75));this.e=new Q3b(new Jvc);C4b(Wu(Wu(GSb(I$b(this.e).j,UUc),225).e,293),1297);C4b(Wu(Wu(GSb(I$b(this.e).j,bUc),225).e,293),16772608);this.n=new $Yb(new sXb(this.H.n.$,this.H.n.Z),this.f);w7b(this.n.ab,-9900);$Pb(this.k,this.n)};_.pb=function Ssc(a){var b,c,d,e,f,g;f=a/4000;J6b(this.t.ab,200*xlb(f));w7b(this.t.ab,200*Glb(f)-100);E6b(this.b.ab,(this.g-this.b.ab.d)*0.036);F6b(this.b.ab,(-this.i-this.b.ab.e)*0.036);xQb(this.b,this.I.ab);r7b(this.s.uf(this.u),this.b);J6b(this.s,(this.s.d+1)/2);K6b(this.s,(this.s.e+1)/2);I6b(Wu(Wu(GSb(I$b(this.f).j,VUc),225).e,297),this.s.d,this.s.e);I6b(Wu(Wu(GSb(I$b(this.e).j,VUc),225).e,297),this.s.d,this.s.e);lHb(this.H.n,this.o);g=this.H.n.$;b=this.H.n.Z;d=0.74*b;e=0.74*b;J6b(this.s,this.s.d*g);K6b(this.s,this.s.e*b);ZHb(this.H.n,cv(this.s.d-e/2),cv(this.s.e-d/2),cv(e),cv(d));qHb(this.H.n,true);CNb(Wu(GSb(I$b(this.e).j,WUc),225),new xkb(g/b));w9b(this.k,this.e);DHb(this.H.n,this.k,this.j,this.o,false);qHb(this.H.n,false);w9b(this.I,null);DHb(this.H.n,this.I,this.b,this.o,false);w9b(this.I,this.c);DHb(this.H.n,this.I,this.b,this.p,true);c=Dlb(6,-1);CNb(Wu(GSb(I$b(this.f).j,XUc),225),new xkb(c));CNb(Wu(GSb(I$b(this.f).j,YUc),225),this.p);w9b(this.k,this.f);DHb(this.H.n,this.k,this.j,this.r,false);c=Dlb(6,-2);CNb(Wu(GSb(I$b(this.f).j,XUc),225),new xkb(c));CNb(Wu(GSb(I$b(this.f).j,YUc),225),this.r);DHb(this.H.n,this.k,this.j,this.q,false);c=Dlb(6,-3);CNb(Wu(GSb(I$b(this.f).j,XUc),225),new xkb(c));CNb(Wu(GSb(I$b(this.f).j,YUc),225),this.q);DHb(this.H.n,this.k,this.j,this.r,false);CNb(Wu(GSb(I$b(this.d).j,ZUc),225),this.o);CNb(Wu(GSb(I$b(this.d).j,$Uc),225),this.r);w9b(this.k,this.d);DHb(this.H.n,this.k,this.j,null,false);w9b(this.k,null)};_.g=0;_.i=0;UU(1243,1,{},Usc);_.If=function Vsc(a,b){var c;c=new $Yb(b,this.c);u7b(c.ab,0,-150,-150);t7b(c.fb,400);c.X=false;r5b(c.W,c.ab,c.bb,c.fb);c.Z=true;$Pb(this.b.I,c)};UU(1279,732,bNc,Zuc);_.Sd=function $uc(){cJb(this,ZUc,new DNb((XNb(),PNb)));cJb(this,$Uc,new DNb(PNb));cJb(this,TUc,new ENb(JNb,new xkb(0.69)));cJb(this,VUc,new ENb(RNb,new M6b(0.5,0.5)))};var _uc;UU(1280,1,{},evc);_.Vd=function fvc(){return nvc(),cvc};_.Wd=function gvc(){return ovc(),dvc};var cvc,dvc;UU(1281,1,{},ivc);_.uc=function jvc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};UU(1282,1,{},lvc);_.uc=function mvc(){return _Uc};UU(1285,732,bNc,qvc);_.Sd=function rvc(){cJb(this,YUc,new DNb((XNb(),PNb)));cJb(this,XUc,new ENb(JNb,new xkb(1)));cJb(this,VUc,new ENb(RNb,new M6b(0.5,0.5)))};var svc;UU(1286,1,{},xvc);_.Vd=function yvc(){return Gvc(),vvc};_.Wd=function zvc(){return Hvc(),wvc};var vvc,wvc;UU(1287,1,{},Bvc);_.uc=function Cvc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};UU(1288,1,{},Evc);_.uc=function Fvc(){return _Uc};UU(1291,732,bNc,Jvc);_.Sd=function Kvc(){cJb(this,VUc,new ENb((XNb(),RNb),new M6b(0.5,0.5)));cJb(this,WUc,new ENb(JNb,new xkb(1)));cJb(this,bUc,new ENb(INb,new F4b(16772608)));cJb(this,UUc,new ENb(INb,new F4b(0)))};var Lvc;UU(1292,1,{},Qvc);_.Vd=function Rvc(){return Zvc(),Ovc};_.Wd=function Svc(){return $vc(),Pvc};var Ovc,Pvc;UU(1293,1,{},Uvc);_.uc=function Vvc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};UU(1294,1,{},Xvc);_.uc=function Yvc(){return _Uc};var VO=lkb(vSc,'PostprocessingGodrays$DemoScene',1242),UO=lkb(vSc,'PostprocessingGodrays$DemoScene$1',1243),AJ=lkb(aVc,'MeshDepthMaterial',929),xP=lkb(lSc,'GodRaysGenerateShader',1285),tP=lkb(lSc,'GodRaysCombineShader',1279),BP=lkb(lSc,'GodraysFakeSunShader',1291),GG=lkb(ATc,'DepthShader',750),wP=lkb(lSc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1286),uP=lkb(lSc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1287),vP=lkb(lSc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1288),sP=lkb(lSc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1280),qP=lkb(lSc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1281),rP=lkb(lSc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1282),AP=lkb(lSc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1292),yP=lkb(lSc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1293),zP=lkb(lSc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1294),FG=lkb(ATc,'DepthShader_Resources_default_InlineClientBundleGenerator',751),DG=lkb(ATc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',752),EG=lkb(ATc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',753);DNc(Ii)(40);