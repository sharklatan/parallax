function Xtc(){}
function _tc(){}
function cuc(){}
function qxc(){}
function uxc(){}
function xxc(){}
function dIc(){}
function hIc(){}
function kIc(){}
function zJc(){}
function DJc(){}
function GJc(){}
function SJc(){}
function WJc(){}
function ZJc(){}
function jKc(){}
function nKc(){}
function qKc(){}
function CKc(){}
function GKc(){}
function JKc(){}
function i$b(a,b){a.c=b}
function S8b(a,b){a.n=b}
function JHc(a,b){crb(a.c,b)}
function Ktc(a){this.b=a}
function Ntc(a){this.b=a}
function Qtc(a){this.b=a}
function Ttc(){Ttc=DLc;Stc=new Xtc}
function euc(){euc=DLc;Vtc=new _tc}
function fuc(){fuc=DLc;Wtc=new cuc}
function mxc(){mxc=DLc;lxc=new qxc}
function zxc(){zxc=DLc;oxc=new uxc}
function Axc(){Axc=DLc;pxc=new xxc}
function _Hc(){_Hc=DLc;$Hc=new dIc}
function _Jc(){_Jc=DLc;QJc=new WJc}
function vJc(){vJc=DLc;uJc=new zJc}
function IJc(){IJc=DLc;xJc=new DJc}
function JJc(){JJc=DLc;yJc=new GJc}
function OJc(){OJc=DLc;NJc=new SJc}
function aKc(){aKc=DLc;RJc=new ZJc}
function fKc(){fKc=DLc;eKc=new jKc}
function sKc(){sKc=DLc;hKc=new nKc}
function tKc(){tKc=DLc;iKc=new qKc}
function yKc(){yKc=DLc;xKc=new CKc}
function LKc(){LKc=DLc;AKc=new GKc}
function MKc(){MKc=DLc;BKc=new JKc}
function mIc(){mIc=DLc;bIc=new hIc}
function nIc(){nIc=DLc;cIc=new kIc}
function Htc(a,b){this.b=a;this.c=b}
function hxc(){oJb.call(this,(mxc(),lxc))}
function YHc(){oJb.call(this,(_Hc(),$Hc))}
function sJc(){oJb.call(this,(vJc(),uJc))}
function LJc(){oJb.call(this,(OJc(),NJc))}
function cKc(){oJb.call(this,(fKc(),eKc))}
function vKc(){oJb.call(this,(yKc(),xKc))}
function Atc(a){a.A+=1;a.A==3&&jQb(a.w,true)}
function Btc(){Sac.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function ztc(a,b,c,d){var e,f,g;g=new Q3b(b);CNb(Wu(GSb(I$b(g).j,eTc),225),c);f=new x9b;e=new $Yb(new vXb(a.v,a.u),g);w7b(e.ab,-500);$Pb(f,e);DHb(a.H.n,f,a.d,d,true)}
function ytc(a,b,c,d,e,f){var g,i;g=new I1b;B1b(g,new F4b(16755285));g.k=true;G1b(g,(A_b(),x_b));i=new U8b(b,g);i.e=c;S8b(i,cv(600*Elb()));u7b(i.ab,d,e,f);T4b(i.db,1.5707963267948966);i.T=true;i.V=true;$Pb(a.I,i);crb(a.o,i)}
var uUc='enableDiffuse1',vUc='enableDiffuse2',nUc='h',pUc='heightMap',AUc='heightmap',zUc='offset',BUc='r',tUc='tDetail',rUc='tDiffuse1',sUc='tDiffuse2',xUc='uRepeatOverlay',oUc='v';UU(1250,1,pNc);_.Db=function wtc(){sac(this.c,new Btc(this.b))};UU(1251,980,{78:1,186:1,338:1},Btc);_._d=function Ctc(a){Atc(this)};_.Nd=function Dtc(a){this.v=a.b.$;this.u=a.b.Z;CNb(Wu(GSb(I$b(this.g.c).j,nUc),225),new xkb(6/this.v));CNb(Wu(GSb(I$b(this.F.c).j,oUc),225),new xkb(6/this.u))};_.ob=function Etc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Lt((tyb(),syb),(Dyb(),Cyb),this);this.c=new bRb(40,rHb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new OQb(this.v,this.u,-10000,10000);u7b(this.c.ab,-1200,800,1200);w7b(this.d.ab,100);this.t=new x9b;$Pb(this.t,this.d);this.e=new yxb(this.c,this.H.d);t7b(this.e.w,0);this.e.t=1;this.e.B=1.2;vxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;txb(this.e,0.15);v9b(this.I,new l9b(328965,2000,4000));$Pb(this.I,new qZb(1118481));this.f=new TZb(16777215,1.15);u7b(this.f.ab,500,2000,0);$Pb(this.I,this.f);this.r=new k$b(16729088,1.5,0);t7b(this.r.ab,0);$Pb(this.I,this.r);this.i=new $Ob(256,256);qOb(this.i,(cFb(),ZEb));oOb(this.i,(TEb(),REb));lOb(this.i,(nDb(),lDb));mOb(this.i,false);this.p=new $Ob(256,256);qOb(this.p,ZEb);oOb(this.p,REb);lOb(this.p,lDb);mOb(this.p,false);n=new cKc;u=n.j;CNb(Wu(u.b[WPc],225),new xkb(0.05));I6b(Wu(Wu(u.b[KTc],225).e,297),256,256);CNb(Wu(u.b[pUc],225),this.i);s=new $Ob(2048,2048);qOb(s,ZEb);oOb(s,REb);lOb(s,lDb);s.s=false;xOb(s,(uGb(),tGb));yOb(s,tGb);c=new EOb('./static/textures/terrain/grasslight-big.jpg',new Htc(this,s));xOb(c,tGb);yOb(c,tGb);d=new EOb('./static/textures/terrain/backgrounddetailed6.jpg',this);xOb(d,tGb);yOb(d,tGb);b=new EOb('./static/textures/terrain/grasslight-big-nm.jpg',this);xOb(b,tGb);yOb(b,tGb);t=new hxc;this.C=t.j;CNb(Wu(GSb(this.C,ETc),225),this.p);CNb(Wu(GSb(this.C,FTc),225),new xkb(3.5));CNb(Wu(GSb(this.C,qUc),225),this.i);CNb(Wu(GSb(this.C,rUc),225),c);CNb(Wu(GSb(this.C,sUc),225),d);CNb(Wu(GSb(this.C,GTc),225),s);CNb(Wu(GSb(this.C,tUc),225),b);CNb(Wu(GSb(this.C,uUc),225),(yjb(),yjb(),xjb));CNb(Wu(GSb(this.C,vUc),225),xjb);CNb(Wu(GSb(this.C,cTc),225),xjb);C4b(Wu(Wu(GSb(this.C,iTc),225).e,293),16777215);C4b(Wu(Wu(GSb(this.C,jTc),225).e,293),16777215);C4b(Wu(Wu(GSb(this.C,hTc),225).e,293),1118481);CNb(Wu(GSb(this.C,JTc),225),new xkb(30));CNb(Wu(GSb(this.C,wUc),225),new xkb(375));I6b(Wu(Wu(GSb(this.C,xUc),225).e,297),6,6);this.B=new Xtb;spb(this.B,NTc,new ENb((XNb(),JNb),new xkb(1)));spb(this.B,yUc,new ENb(RNb,new M6b(1.5,1.5)));spb(this.B,zUc,new ENb(RNb,new M6b(0,0)));this.n=new Xtb;i=new P3b((Ttc(),Stc));jJb(I$b(i),this.B);i.d=false;i.c=true;spb(this.n,AUc,i);j=new Q3b(n);jJb(I$b(j),u);j.d=false;j.c=true;spb(this.n,$Sc,j);k=new Q3b(t);jJb(I$b(k),this.C);k.d=true;k.c=true;spb(this.n,'terrain',k);o=new vXb(this.v,this.u);p=new P0b;J0b(p,new F4b(0));this.s=new $Yb(o,p);w7b(this.s.ab,-500);$Pb(this.t,this.s);g=new wXb(6000,6000,64,64);KRb(g);this.w=new $Yb(g,k);u7b(this.w.ab,0,-125,0);S4b(this.w.db,-1.5707963267948966);jQb(this.w,false);$Pb(this.I,this.w);PHb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;LHb(this.H.n,false);q=new SHc(this.I,this.c);f=new DHc(0.6);e=new VHc(new YHc);CNb(Wu(GSb(I$b(e.c).j,oTc),225),new xkb(0.65));this.g=new VHc(new sJc);this.F=new VHc(new vKc);CNb(Wu(GSb(I$b(this.g.c).j,nUc),225),new xkb(6/this.v));CNb(Wu(GSb(I$b(this.F.c).j,oUc),225),new xkb(6/this.u));CNb(Wu(GSb(I$b(this.g.c).j,BUc),225),new xkb(0.5));CNb(Wu(GSb(I$b(this.F.c).j,BUc),225),new xkb(0.5));this.F.b=true;r=new $Ob(this.v,this.u);qOb(s,YEb);oOb(s,REb);lOb(s,lDb);s.g=false;s.s=false;a=new LHc(this.H.n,r);crb(a.c,q);crb(a.c,f);crb(a.c,e);JHc(a,this.g);JHc(a,this.F);this.o=new mrb;new pyc('./static/models/animated/parrot.js',new Ktc(this));new pyc(mUc,new Ntc(this));new pyc('./static/models/animated/stork.js',new Qtc(this));this.q=Ch()};_.pb=function Ftc(a){var b,c,d,e,f;b=(Ch()-this.q)*0.001;if(this.w.hb){wxb(this.e);this.k=a5b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;B4b(this.I.b.d,0.1,e,this.k);PHb(this.H.n,this.I.b.d,1);AZb(this.f,0.1+f*1.0499999999999998);i$b(this.r,0.9+f*0.6);CNb(Wu(GSb(this.C,FTc),225),new xkb(0.6+f*2.9));if(this.D){this.b=a5b(this.b+-7.5E-4,0,0.05);CNb(Wu(npb(this.B,NTc),225),new xkb(Wu(Wu(npb(this.B,NTc),225).e,150).b+b*this.b));E6b(Wu(Wu(npb(this.B,zUc),225).e,297),b*0.05);J6b(Wu(Wu(GSb(this.C,CUc),225).e,297),4*Wu(Wu(npb(this.B,zUc),225).e,297).d);QTb(this.s,Wu(npb(this.n,AUc),282));DHb(this.H.n,this.t,this.d,this.i,true);QTb(this.s,Wu(npb(this.n,$Sc),282));DHb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Wu(frb(this.o,c),305);T8b(d,cv(1000*b));E6b(d.ab,d.e*b);d.ab.d>2000&&J6b(d.ab,-1500-Elb()*500)}DHb(this.H.n,this.I,this.c,null,false)}this.q=Ch()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;UU(1252,1,{},Htc);_._d=function Itc(a){Atc(this.b);ztc(this.b,new LJc,a,this.c)};UU(1253,1,{},Ktc);_.If=function Ltc(a,b){kyc((Wu(a,339),Wu(b,242)));ytc(this.b,Wu(b,242),500,-3500,500,700);ytc(this.b,Wu(b,242),500,-3000-Elb()*500,500,-200);ytc(this.b,Wu(b,242),500,-3000-Elb()*500,500,200);ytc(this.b,Wu(b,242),500,-3000-Elb()*500,500,1000)};UU(1254,1,{},Ntc);_.If=function Otc(a,b){kyc((Wu(a,339),Wu(b,242)));ytc(this.b,Wu(b,242),1000,-3000-Elb()*500,350,40)};UU(1255,1,{},Qtc);_.If=function Rtc(a,b){kyc((Wu(a,339),Wu(b,242)));ytc(this.b,Wu(b,242),1000,-3000-Elb()*500,350,340)};var Stc;UU(1256,1,{},Xtc);_.Vd=function Ytc(){return euc(),Vtc};_.Wd=function Ztc(){return fuc(),Wtc};var Vtc,Wtc;UU(1257,1,{},_tc);_.uc=function auc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};UU(1258,1,{},cuc);_.uc=function duc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};UU(1316,732,bNc,hxc);_.Sd=function ixc(){jJb(this,_Nb());jJb(this,aOb());jJb(this,bOb());cJb(this,uUc,new ENb((XNb(),MNb),(yjb(),yjb(),wjb)));cJb(this,vUc,new ENb(MNb,wjb));cJb(this,cTc,new ENb(MNb,wjb));cJb(this,DUc,new ENb(MNb,wjb));cJb(this,rUc,new DNb(PNb));cJb(this,sUc,new DNb(PNb));cJb(this,tUc,new DNb(PNb));cJb(this,ETc,new DNb(PNb));cJb(this,GTc,new DNb(PNb));cJb(this,qUc,new DNb(PNb));cJb(this,FTc,new ENb(JNb,new xkb(1)));cJb(this,EUc,new ENb(JNb,new xkb(0)));cJb(this,wUc,new ENb(JNb,new xkb(1)));cJb(this,iTc,new ENb(INb,new F4b(15658734)));cJb(this,jTc,new ENb(INb,new F4b(1118481)));cJb(this,hTc,new ENb(INb,new F4b(328965)));cJb(this,JTc,new ENb(JNb,new xkb(30)));cJb(this,oTc,new ENb(JNb,new xkb(1)));cJb(this,'uRepeatBase',new ENb(RNb,new M6b(1,1)));cJb(this,xUc,new ENb(RNb,new M6b(1,1)));cJb(this,CUc,new ENb(RNb,new M6b(0,0)))};_.Td=function jxc(a){var b,c;c=new Lrb(Mu(QS,JLc,1,[pTc,qTc]));b=new Lrb(Mu(QS,JLc,1,[sTc,tTc,uTc]));lJb(this,tJb(a,Mu(TS,JLc,173,[c,b])))};_.Ud=function kxc(a){var b,c;c=new Lrb(Mu(QS,JLc,1,[vTc]));b=new Lrb(Mu(QS,JLc,1,[wTc]));mJb(this,tJb(a,Mu(TS,JLc,173,[c,b])))};var lxc;UU(1317,1,{},qxc);_.Vd=function rxc(){return zxc(),oxc};_.Wd=function sxc(){return Axc(),pxc};var oxc,pxc;UU(1318,1,{},uxc);_.uc=function vxc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};UU(1319,1,{},xxc);_.uc=function yxc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};UU(1411,732,bNc,YHc);_.Sd=function ZHc(){cJb(this,eTc,new DNb((XNb(),PNb)));cJb(this,oTc,new ENb(JNb,new xkb(1)))};var $Hc;UU(1412,1,{},dIc);_.Vd=function eIc(){return mIc(),bIc};_.Wd=function fIc(){return nIc(),cIc};var bIc,cIc;UU(1413,1,{},hIc);_.uc=function iIc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};UU(1414,1,{},kIc);_.uc=function lIc(){return VTc};UU(1435,732,bNc,sJc);_.Sd=function tJc(){cJb(this,eTc,new DNb((XNb(),PNb)));cJb(this,nUc,new ENb(JNb,new xkb(0.001953125)));cJb(this,BUc,new ENb(JNb,new xkb(0.35)))};var uJc;UU(1436,1,{},zJc);_.Vd=function AJc(){return IJc(),xJc};_.Wd=function BJc(){return JJc(),yJc};var xJc,yJc;UU(1437,1,{},DJc);_.uc=function EJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};UU(1438,1,{},GJc);_.uc=function HJc(){return VTc};UU(1441,732,bNc,LJc);_.Sd=function MJc(){cJb(this,eTc,new DNb((XNb(),PNb)))};var NJc;UU(1442,1,{},SJc);_.Vd=function TJc(){return _Jc(),QJc};_.Wd=function UJc(){return aKc(),RJc};var QJc,RJc;UU(1443,1,{},WJc);_.uc=function XJc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};UU(1444,1,{},ZJc);_.uc=function $Jc(){return VTc};UU(1447,732,bNc,cKc);_.Sd=function dKc(){cJb(this,pUc,new DNb((XNb(),PNb)));cJb(this,KTc,new ENb(RNb,new M6b(512,512)));cJb(this,yUc,new ENb(RNb,new M6b(1,1)));cJb(this,WPc,new ENb(JNb,new xkb(0.05)))};var eKc;UU(1448,1,{},jKc);_.Vd=function kKc(){return sKc(),hKc};_.Wd=function lKc(){return tKc(),iKc};var hKc,iKc;UU(1449,1,{},nKc);_.uc=function oKc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};UU(1450,1,{},qKc);_.uc=function rKc(){return VTc};UU(1453,732,bNc,vKc);_.Sd=function wKc(){cJb(this,eTc,new DNb((XNb(),PNb)));cJb(this,oUc,new ENb(JNb,new xkb(0.001953125)));cJb(this,BUc,new ENb(JNb,new xkb(0.35)))};var xKc;UU(1454,1,{},CKc);_.Vd=function DKc(){return LKc(),AKc};_.Wd=function EKc(){return MKc(),BKc};var AKc,BKc;UU(1455,1,{},GKc);_.uc=function HKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};UU(1456,1,{},JKc);_.uc=function KKc(){return VTc};var fP=lkb(vSc,'TerrainDynamic$DemoScene',1251),bP=lkb(vSc,'TerrainDynamic$DemoScene$1',1252),cP=lkb(vSc,'TerrainDynamic$DemoScene$2',1253),dP=lkb(vSc,'TerrainDynamic$DemoScene$3',1254),eP=lkb(vSc,'TerrainDynamic$DemoScene$4',1255),UR=lkb(XTc,FUc,1447),SP=lkb(lSc,'TerrainShader',1316),wR=lkb(XTc,'BleachBypassShader',1411),MR=lkb(XTc,'HorizontalTiltShiftShader',1435),YR=lkb(XTc,'VerticalTiltShiftShader',1453),iP=lkb(vSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1256),gP=lkb(vSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1257),hP=lkb(vSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1258),TR=lkb(XTc,GUc,1448),RR=lkb(XTc,HUc,1449),SR=lkb(XTc,IUc,1450),RP=lkb(lSc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1317),PP=lkb(lSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1318),QP=lkb(lSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1319),vR=lkb(XTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1412),tR=lkb(XTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1413),uR=lkb(XTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1414),LR=lkb(XTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1436),JR=lkb(XTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1437),KR=lkb(XTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1438),XR=lkb(XTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1454),VR=lkb(XTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1455),WR=lkb(XTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1456),QR=lkb(XTc,'LuminosityShader',1441),PR=lkb(XTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1442),NR=lkb(XTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1443),OR=lkb(XTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1444);DNc(Ii)(38);