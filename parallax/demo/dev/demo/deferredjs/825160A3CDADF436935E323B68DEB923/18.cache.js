function ouc(){}
function suc(){}
function vuc(){}
function Xwc(){}
function _wc(){}
function cxc(){}
function Vkc(a){this.b=a}
function kuc(){kuc=DLc;juc=new ouc}
function xuc(){xuc=DLc;muc=new suc}
function yuc(){yuc=DLc;nuc=new vuc}
function Twc(){Twc=DLc;Swc=new Xwc}
function exc(){exc=DLc;Vwc=new _wc}
function fxc(){fxc=DLc;Wwc=new cxc}
function Owc(){oJb.call(this,(Twc(),Swc))}
function huc(){oJb.call(this,(kuc(),juc))}
function Rkc(){Sac.call(this);this.e=0;this.f=0}
function Qkc(a,b){var c,d,e,f,g,i;d=new DOb(_Sc);d.n=4;I6b(d.C,0.998,0.998);I6b(d.B,0.001,0.001);xOb(d,(uGb(),tGb));yOb(d,tGb);lOb(d,(nDb(),lDb));e=new DOb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');I6b(e.C,0.998,0.998);I6b(e.B,0.001,0.001);xOb(e,tGb);yOb(e,tGb);lOb(e,lDb);c=new DOb('./static/models/obj/leeperrysmith/Map-COL.jpg');I6b(c.C,0.998,0.998);I6b(c.B,0.001,0.001);xOb(c,tGb);yOb(c,tGb);lOb(c,lDb);g=new Owc;i=g.j;CNb(Wu(i.b[bTc],225),(yjb(),yjb(),xjb));CNb(Wu(i.b[cTc],225),xjb);CNb(Wu(i.b[dTc],225),a.c.f);CNb(Wu(i.b[eTc],225),c);CNb(Wu(i.b[fTc],225),d);CNb(Wu(i.b[gTc],225),e);C4b(Wu(Wu(i.b[hTc],225).e,293),10526880);C4b(Wu(Wu(i.b[iTc],225).e,293),10526880);C4b(Wu(Wu(i.b[jTc],225).e,293),10526880);CNb(Wu(i.b[kTc],225),new xkb(0.145));CNb(Wu(i.b[lTc],225),new xkb(0.75));CNb(Wu(i.b[mTc],225),new xkb(16));i8b(Wu(Wu(i.b[nTc],225).e,301),0.001,0.001,0.998,0.998);f=new Q3b(g);f.d=true;a.d=new $Yb(b,f);K6b(a.d.ab,-50);t7b(a.d.fb,100);dQb(a.d,true);a.d.V=true;$Pb(a.I,a.d)}
var bTc='enableBump',dTc='tBeckmann',kTc='uRoughness',lTc='uSpecularBrightness';UU(1127,1,pNc);_.Db=function Okc(){sac(this.c,new Rkc(this.b))};UU(1128,980,{323:1},Rkc);_.ob=function Skc(){var a,b,c,d,e,f,g;this.b=new bRb(27,rHb(this.H.n),1,10000);w7b(this.b.ab,1200);$Pb(this.I,new qZb(5592405));d=new k$b(16777215,1.5,1000);u7b(d.ab,0,0,600);$Pb(this.I,d);f=new s$b(1);u7b(f.ab,0.05,0.05,1);$Pb(this.I,f);f.ab.xf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new TZb(16777215,0.85);u7b(a.ab,1,-0.5,1);B4b(a.M,0.6,1,0.85);$Pb(this.I,a);a.ab.xf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new TZb(16777215,0.85);u7b(b.ab,1,-0.5,-1);$Pb(this.I,b);new VHc(new huc);c=new VHc(new IIc);c.b=true;g=new $Ob(512,512);qOb(g,(cFb(),YEb));oOb(g,(TEb(),REb));lOb(g,(nDb(),lDb));g.g=false;this.c=new LHc(this.H.n,g);new pyc(aTc,new Vkc(this));PHb(this.H.n,new F4b(5001561),1);e=new IGb(this.H.n,this.I);e.i=false;LHb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function Tkc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){L4b(this.d.db,0.05*(b-this.d.db.e));K4b(this.d.db,0.05*(c-this.d.db.d))}kHb(this.H.n,true);DHb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;UU(1129,1,{},Vkc);_.If=function Wkc(a,b){Qkc(this.b,Wu(b,242))};UU(1261,732,bNc,huc);_.Sd=function iuc(){};var juc;UU(1262,1,{},ouc);_.Vd=function puc(){return xuc(),muc};_.Wd=function quc(){return yuc(),nuc};var muc,nuc;UU(1263,1,{},suc);_.uc=function tuc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};UU(1264,1,{},vuc);_.uc=function wuc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};UU(1310,732,bNc,Owc);_.Sd=function Pwc(){jJb(this,_Nb());jJb(this,aOb());jJb(this,bOb());cJb(this,bTc,new ENb((XNb(),MNb),dlb(0)));cJb(this,cTc,new ENb(MNb,dlb(0)));cJb(this,eTc,new DNb(PNb));cJb(this,dTc,new DNb(PNb));cJb(this,iTc,new ENb(INb,new F4b(15658734)));cJb(this,jTc,new ENb(INb,new F4b(1118481)));cJb(this,hTc,new ENb(INb,new F4b(328965)));cJb(this,oTc,new ENb(JNb,new xkb(1)));cJb(this,kTc,new ENb(JNb,new xkb(0.15)));cJb(this,lTc,new ENb(JNb,new xkb(0.75)));cJb(this,fTc,new DNb(PNb));cJb(this,mTc,new ENb(JNb,new xkb(1)));cJb(this,gTc,new DNb(PNb));cJb(this,nTc,new ENb(VNb,new m8b(0,0,1,1)));cJb(this,'uWrapRGB',new ENb(TNb,new A7b(0.75,0.375,0.1875)))};_.Td=function Qwc(a){var b,c;c=new Lrb(Mu(QS,JLc,1,[pTc,qTc,rTc]));b=new Lrb(Mu(QS,JLc,1,[sTc,tTc,uTc]));lJb(this,tJb(a,Mu(TS,JLc,173,[c,b])))};_.Ud=function Rwc(a){var b,c;c=new Lrb(Mu(QS,JLc,1,[vTc]));b=new Lrb(Mu(QS,JLc,1,[wTc]));mJb(this,tJb(a,Mu(TS,JLc,173,[c,b])))};var Swc;UU(1311,1,{},Xwc);_.Vd=function Ywc(){return exc(),Vwc};_.Wd=function Zwc(){return fxc(),Wwc};var Vwc,Wwc;UU(1312,1,{},_wc);_.uc=function axc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};UU(1313,1,{},cxc);_.uc=function dxc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var WM=lkb(sSc,'MaterialsBumpmapSkin$DemoScene',1128),VM=lkb(sSc,'MaterialsBumpmapSkin$DemoScene$1',1129),nP=lkb(lSc,'BeckmannShader',1261),mP=lkb(lSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1262),kP=lkb(lSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1263),lP=lkb(lSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1264),OP=lkb(lSc,'SkinSimpleShader',1310),NP=lkb(lSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1311),LP=lkb(lSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1312),MP=lkb(lSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1313);DNc(Ii)(18);