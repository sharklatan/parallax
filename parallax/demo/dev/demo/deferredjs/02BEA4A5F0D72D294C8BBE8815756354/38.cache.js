function Yuc(){}
function avc(){}
function dvc(){}
function dOc(){}
function gOc(){}
function sOc(){}
function wOc(){}
function zOc(){}
function zPc(){}
function vPc(){}
function CPc(){}
function hAc(){}
function lAc(){}
function oAc(){}
function INc(){}
function MNc(){}
function PNc(){}
function _Nc(){}
function a$b(a,b){a.c=b}
function X8b(a,b){a.n=b}
function Luc(a){this.b=a}
function Ouc(a){this.b=a}
function Ruc(a){this.b=a}
function Uuc(){Uuc=PQc;Tuc=new Yuc}
function fvc(){fvc=PQc;Wuc=new avc}
function gvc(){gvc=PQc;Xuc=new dvc}
function iOc(){iOc=PQc;ZNc=new dOc}
function jOc(){jOc=PQc;$Nc=new gOc}
function oOc(){oOc=PQc;nOc=new sOc}
function BOc(){BOc=PQc;qOc=new wOc}
function COc(){COc=PQc;rOc=new zOc}
function EPc(){EPc=PQc;tPc=new zPc}
function rPc(){rPc=PQc;qPc=new vPc}
function FPc(){FPc=PQc;uPc=new CPc}
function dAc(){dAc=PQc;cAc=new hAc}
function qAc(){qAc=PQc;fAc=new lAc}
function rAc(){rAc=PQc;gAc=new oAc}
function ENc(){ENc=PQc;DNc=new INc}
function RNc(){RNc=PQc;GNc=new MNc}
function SNc(){SNc=PQc;HNc=new PNc}
function XNc(){XNc=PQc;WNc=new _Nc}
function Iuc(a,b){this.b=a;this.c=b}
function $zc(){UJb.call(this,(dAc(),cAc))}
function BNc(){UJb.call(this,(ENc(),DNc))}
function UNc(){UJb.call(this,(XNc(),WNc))}
function lOc(){UJb.call(this,(oOc(),nOc))}
function oPc(){UJb.call(this,(rPc(),qPc))}
function Buc(a){a.A+=1;a.A==3&&PQb(a.w,true)}
function Cuc(){Wac.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function Auc(a,b,c,d){var e,f,g;g=new I3b(b);gOb(Eu(dTb(A$b(g).j,jYc),227),c);f=new C9b;e=new P8b(new UXb(a.v,a.u),g);n7b(e.ab,-500);EQb(f,e);hIb(a.H.n,f,a.d,d,true)}
function zuc(a,b,c,d,e,f){var g,i;g=new A1b;t1b(g,new w4b(16755285));g.k=true;y1b(g,(s_b(),p_b));i=new Z8b(b,g);i.e=c;X8b(i,Mu(600*Ilb()));l7b(i.ab,d,e,f);K4b(i.db,1.5707963267948966);i.T=true;i.V=true;EQb(a.I,i);erb(a.o,i)}
var tZc='enableDiffuse1',uZc='enableDiffuse2',oZc='heightMap',zZc='heightmap',AZc='r',sZc='tDetail',qZc='tDiffuse1',rZc='tDiffuse2',wZc='uRepeatOverlay';WU(1238,1,ASc);_.Db=function xuc(){wac(this.c,new Cuc(this.b))};WU(1239,969,{78:1,186:1,339:1},Cuc);_.Xd=function Duc(a){Buc(this)};_.Jd=function Euc(a){this.v=a.b.$;this.u=a.b.Z;gOb(Eu(dTb(A$b(this.g.c).j,mZc),227),new Bkb(6/this.v));gOb(Eu(dTb(A$b(this.F.c).j,nZc),227),new Bkb(6/this.u))};_.ob=function Fuc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;tt((uyb(),tyb),(Eyb(),Dyb),this);this.c=new FRb(40,XHb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new sRb(this.v,this.u,-10000,10000);l7b(this.c.ab,-1200,800,1200);n7b(this.d.ab,100);this.t=new C9b;EQb(this.t,this.d);this.e=new zxb(this.c,this.H.d);k7b(this.e.w,0);this.e.t=1;this.e.B=1.2;wxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;uxb(this.e,0.15);A9b(this.I,new q9b(328965,2000,4000));EQb(this.I,new iZb(1118481));this.f=new LZb(16777215,1.15);l7b(this.f.ab,500,2000,0);EQb(this.I,this.f);this.r=new c$b(16729088,1.5,0);k7b(this.r.ab,0);EQb(this.I,this.r);this.i=new EPb(256,256);WOb(this.i,(HFb(),CFb));UOb(this.i,(wFb(),uFb));ROb(this.i,(sDb(),qDb));SOb(this.i,false);this.p=new EPb(256,256);WOb(this.p,CFb);UOb(this.p,uFb);ROb(this.p,qDb);SOb(this.p,false);n=new lOc;u=n.j;gOb(Eu(u.b[$Uc],227),new Bkb(0.05));z6b(Eu(Eu(u.b[PYc],227).e,298),256,256);gOb(Eu(u.b[oZc],227),this.i);s=new EPb(2048,2048);WOb(s,CFb);UOb(s,uFb);ROb(s,qDb);s.s=false;bPb(s,(ZGb(),YGb));cPb(s,YGb);c=new iPb('./static/textures/terrain/grasslight-big.jpg',new Iuc(this,s));bPb(c,YGb);cPb(c,YGb);d=new iPb('./static/textures/terrain/backgrounddetailed6.jpg',this);bPb(d,YGb);cPb(d,YGb);b=new iPb('./static/textures/terrain/grasslight-big-nm.jpg',this);bPb(b,YGb);cPb(b,YGb);t=new $zc;this.C=t.j;gOb(Eu(dTb(this.C,JYc),227),this.p);gOb(Eu(dTb(this.C,KYc),227),new Bkb(3.5));gOb(Eu(dTb(this.C,pZc),227),this.i);gOb(Eu(dTb(this.C,qZc),227),c);gOb(Eu(dTb(this.C,rZc),227),d);gOb(Eu(dTb(this.C,LYc),227),s);gOb(Eu(dTb(this.C,sZc),227),b);gOb(Eu(dTb(this.C,tZc),227),(Cjb(),Cjb(),Bjb));gOb(Eu(dTb(this.C,uZc),227),Bjb);gOb(Eu(dTb(this.C,hYc),227),Bjb);t4b(Eu(Eu(dTb(this.C,nYc),227).e,294),16777215);t4b(Eu(Eu(dTb(this.C,oYc),227).e,294),16777215);t4b(Eu(Eu(dTb(this.C,mYc),227).e,294),1118481);gOb(Eu(dTb(this.C,OYc),227),new Bkb(30));gOb(Eu(dTb(this.C,vZc),227),new Bkb(375));z6b(Eu(Eu(dTb(this.C,wZc),227).e,298),6,6);this.B=new Ytb;upb(this.B,SYc,new iOb((BOb(),nOb),new Bkb(1)));upb(this.B,xZc,new iOb(vOb,new D6b(1.5,1.5)));upb(this.B,yZc,new iOb(vOb,new D6b(0,0)));this.n=new Ytb;i=new H3b((Uuc(),Tuc));PJb(A$b(i),this.B);i.d=false;i.c=true;upb(this.n,zZc,i);j=new I3b(n);PJb(A$b(j),u);j.d=false;j.c=true;upb(this.n,cYc,j);k=new I3b(t);PJb(A$b(k),this.C);k.d=true;k.c=true;upb(this.n,'terrain',k);o=new UXb(this.v,this.u);p=new H0b;B0b(p,new w4b(0));this.s=new P8b(o,p);n7b(this.s.ab,-500);EQb(this.t,this.s);g=new VXb(6000,6000,64,64);iSb(g);this.w=new P8b(g,k);l7b(this.w.ab,0,-125,0);J4b(this.w.db,-1.5707963267948966);PQb(this.w,false);EQb(this.I,this.w);tIb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;pIb(this.H.n,false);q=new UKc(this.I,this.c);f=new vKc(0.6);e=new YKc(new cLc);gOb(Eu(dTb(A$b(e.c).j,tYc),227),new Bkb(0.65));this.g=new YKc(new BNc);this.F=new YKc(new oPc);gOb(Eu(dTb(A$b(this.g.c).j,mZc),227),new Bkb(6/this.v));gOb(Eu(dTb(A$b(this.F.c).j,nZc),227),new Bkb(6/this.u));gOb(Eu(dTb(A$b(this.g.c).j,AZc),227),new Bkb(0.5));gOb(Eu(dTb(A$b(this.F.c).j,AZc),227),new Bkb(0.5));this.F.b=true;r=new EPb(this.v,this.u);WOb(s,BFb);UOb(s,uFb);ROb(s,qDb);s.g=false;s.s=false;a=new NKc(this.H.n,r);erb(a.d,q);erb(a.d,f);erb(a.d,e);LKc(a,this.g);LKc(a,this.F);this.o=new orb;new gBc('./static/models/animated/parrot.js',new Luc(this));new gBc(lZc,new Ouc(this));new gBc('./static/models/animated/stork.js',new Ruc(this));this.q=Bh()};_.pb=function Guc(a){var b,c,d,e,f;b=(Bh()-this.q)*0.001;if(this.w.hb){xxb(this.e);this.k=T4b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;s4b(this.I.b.d,0.1,e,this.k);tIb(this.H.n,this.I.b.d,1);sZb(this.f,0.1+f*1.0499999999999998);a$b(this.r,0.9+f*0.6);gOb(Eu(dTb(this.C,KYc),227),new Bkb(0.6+f*2.9));if(this.D){this.b=T4b(this.b+-7.5E-4,0,0.05);gOb(Eu(ppb(this.B,SYc),227),new Bkb(Eu(Eu(ppb(this.B,SYc),227).e,150).b+b*this.b));v6b(Eu(Eu(ppb(this.B,yZc),227).e,298),b*0.05);A6b(Eu(Eu(dTb(this.C,BZc),227).e,298),4*Eu(Eu(ppb(this.B,yZc),227).e,298).d);nUb(this.s,Eu(ppb(this.n,zZc),283));hIb(this.H.n,this.t,this.d,this.i,true);nUb(this.s,Eu(ppb(this.n,cYc),283));hIb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Eu(hrb(this.o,c),306);Y8b(d,Mu(1000*b));v6b(d.ab,d.e*b);d.ab.d>2000&&A6b(d.ab,-1500-Ilb()*500)}hIb(this.H.n,this.I,this.c,null,false)}this.q=Bh()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;WU(1240,1,{},Iuc);_.Xd=function Juc(a){Buc(this.b);Auc(this.b,new UNc,a,this.c)};WU(1241,1,{},Luc);_.Cf=function Muc(a,b){bBc((Eu(a,340),Eu(b,243)));zuc(this.b,Eu(b,243),500,-3500,500,700);zuc(this.b,Eu(b,243),500,-3000-Ilb()*500,500,-200);zuc(this.b,Eu(b,243),500,-3000-Ilb()*500,500,200);zuc(this.b,Eu(b,243),500,-3000-Ilb()*500,500,1000)};WU(1242,1,{},Ouc);_.Cf=function Puc(a,b){bBc((Eu(a,340),Eu(b,243)));zuc(this.b,Eu(b,243),1000,-3000-Ilb()*500,350,40)};WU(1243,1,{},Ruc);_.Cf=function Suc(a,b){bBc((Eu(a,340),Eu(b,243)));zuc(this.b,Eu(b,243),1000,-3000-Ilb()*500,350,340)};var Tuc;WU(1244,1,{},Yuc);_.Rd=function Zuc(){return fvc(),Wuc};_.Sd=function $uc(){return gvc(),Xuc};var Wuc,Xuc;WU(1245,1,{},avc);_.qc=function bvc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};WU(1246,1,{},dvc);_.qc=function evc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};WU(1353,727,nSc,$zc);_.Od=function _zc(){PJb(this,FOb());PJb(this,GOb());PJb(this,HOb());IJb(this,tZc,new iOb((BOb(),qOb),(Cjb(),Cjb(),Ajb)));IJb(this,uZc,new iOb(qOb,Ajb));IJb(this,hYc,new iOb(qOb,Ajb));IJb(this,CZc,new iOb(qOb,Ajb));IJb(this,qZc,new hOb(tOb));IJb(this,rZc,new hOb(tOb));IJb(this,sZc,new hOb(tOb));IJb(this,JYc,new hOb(tOb));IJb(this,LYc,new hOb(tOb));IJb(this,pZc,new hOb(tOb));IJb(this,KYc,new iOb(nOb,new Bkb(1)));IJb(this,DZc,new iOb(nOb,new Bkb(0)));IJb(this,vZc,new iOb(nOb,new Bkb(1)));IJb(this,nYc,new iOb(mOb,new w4b(15658734)));IJb(this,oYc,new iOb(mOb,new w4b(1118481)));IJb(this,mYc,new iOb(mOb,new w4b(328965)));IJb(this,OYc,new iOb(nOb,new Bkb(30)));IJb(this,tYc,new iOb(nOb,new Bkb(1)));IJb(this,'uRepeatBase',new iOb(vOb,new D6b(1,1)));IJb(this,wZc,new iOb(vOb,new D6b(1,1)));IJb(this,BZc,new iOb(vOb,new D6b(0,0)))};_.Pd=function aAc(a){var b,c;c=new Mrb(uu(RS,VQc,1,[uYc,vYc]));b=new Mrb(uu(RS,VQc,1,[xYc,yYc,zYc]));RJb(this,ZJb(a,uu(US,VQc,173,[c,b])))};_.Qd=function bAc(a){var b,c;c=new Mrb(uu(RS,VQc,1,[AYc]));b=new Mrb(uu(RS,VQc,1,[BYc]));SJb(this,ZJb(a,uu(US,VQc,173,[c,b])))};var cAc;WU(1354,1,{},hAc);_.Rd=function iAc(){return qAc(),fAc};_.Sd=function jAc(){return rAc(),gAc};var fAc,gAc;WU(1355,1,{},lAc);_.qc=function mAc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};WU(1356,1,{},oAc);_.qc=function pAc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};WU(1494,727,nSc,BNc);_.Od=function CNc(){IJb(this,jYc,new hOb((BOb(),tOb)));IJb(this,mZc,new iOb(nOb,new Bkb(0.001953125)));IJb(this,AZc,new iOb(nOb,new Bkb(0.35)))};var DNc;WU(1495,1,{},INc);_.Rd=function JNc(){return RNc(),GNc};_.Sd=function KNc(){return SNc(),HNc};var GNc,HNc;WU(1496,1,{},MNc);_.qc=function NNc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};WU(1497,1,{},PNc);_.qc=function QNc(){return eZc};WU(1500,727,nSc,UNc);_.Od=function VNc(){IJb(this,jYc,new hOb((BOb(),tOb)))};var WNc;WU(1501,1,{},_Nc);_.Rd=function aOc(){return iOc(),ZNc};_.Sd=function bOc(){return jOc(),$Nc};var ZNc,$Nc;WU(1502,1,{},dOc);_.qc=function eOc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};WU(1503,1,{},gOc);_.qc=function hOc(){return eZc};WU(1506,727,nSc,lOc);_.Od=function mOc(){IJb(this,oZc,new hOb((BOb(),tOb)));IJb(this,PYc,new iOb(vOb,new D6b(512,512)));IJb(this,xZc,new iOb(vOb,new D6b(1,1)));IJb(this,$Uc,new iOb(nOb,new Bkb(0.05)))};var nOc;WU(1507,1,{},sOc);_.Rd=function tOc(){return BOc(),qOc};_.Sd=function uOc(){return COc(),rOc};var qOc,rOc;WU(1508,1,{},wOc);_.qc=function xOc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};WU(1509,1,{},zOc);_.qc=function AOc(){return eZc};WU(1524,727,nSc,oPc);_.Od=function pPc(){IJb(this,jYc,new hOb((BOb(),tOb)));IJb(this,nZc,new iOb(nOb,new Bkb(0.001953125)));IJb(this,AZc,new iOb(nOb,new Bkb(0.35)))};var qPc;WU(1525,1,{},vPc);_.Rd=function wPc(){return EPc(),tPc};_.Sd=function xPc(){return FPc(),uPc};var tPc,uPc;WU(1526,1,{},zPc);_.qc=function APc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};WU(1527,1,{},CPc);_.qc=function DPc(){return eZc};var GO=pkb(zXc,'TerrainDynamic$DemoScene',1239),CO=pkb(zXc,'TerrainDynamic$DemoScene$1',1240),DO=pkb(zXc,'TerrainDynamic$DemoScene$2',1241),EO=pkb(zXc,'TerrainDynamic$DemoScene$3',1242),FO=pkb(zXc,'TerrainDynamic$DemoScene$4',1243),JR=pkb(EZc,FZc,1506),rP=pkb(pXc,'TerrainShader',1353),BR=pkb(EZc,'HorizontalTiltShiftShader',1494),VR=pkb(EZc,'VerticalTiltShiftShader',1524),JO=pkb(zXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1244),HO=pkb(zXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1245),IO=pkb(zXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1246),IR=pkb(EZc,GZc,1507),GR=pkb(EZc,HZc,1508),HR=pkb(EZc,IZc,1509),qP=pkb(pXc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1354),oP=pkb(pXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1355),pP=pkb(pXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1356),AR=pkb(EZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1495),yR=pkb(EZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1496),zR=pkb(EZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1497),UR=pkb(EZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1525),SR=pkb(EZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1526),TR=pkb(EZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1527),FR=pkb(EZc,'LuminosityShader',1500),ER=pkb(EZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1501),CR=pkb(EZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1502),DR=pkb(EZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1503);OSc(Hi)(38);