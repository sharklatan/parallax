function rLb(){}
function vLb(){}
function yLb(){}
function Xxc(){}
function _xc(){}
function cyc(){}
function oyc(){}
function syc(){}
function vyc(){}
function Hyc(){}
function Lyc(){}
function Oyc(){}
function B9b(a,b){a.d=b}
function BLb(){BLb=PQc;qLb=new yLb}
function nLb(){nLb=PQc;mLb=new rLb}
function ALb(){ALb=PQc;pLb=new vLb}
function yyc(){yyc=PQc;nyc=new vyc}
function kyc(){kyc=PQc;jyc=new oyc}
function xyc(){xyc=PQc;myc=new syc}
function Dyc(){Dyc=PQc;Cyc=new Hyc}
function Qyc(){Qyc=PQc;Fyc=new Lyc}
function Ryc(){Ryc=PQc;Gyc=new Oyc}
function fyc(){fyc=PQc;Wxc=new cyc}
function eyc(){eyc=PQc;Vxc=new _xc}
function Txc(){Txc=PQc;Sxc=new Xxc}
function Btc(a,b){this.b=a;this.c=b}
function RHb(a,b){CIb(a,b);QHb(a,false)}
function iLb(){UJb.call(this,(nLb(),mLb))}
function Qxc(){UJb.call(this,(Txc(),Sxc))}
function hyc(){UJb.call(this,(kyc(),jyc))}
function Ayc(){UJb.call(this,(Dyc(),Cyc))}
function k1b(){O$b.call(this);this.b=false;this.c=1}
function xtc(){Wac.call(this);this.u=new r7b(0,1000,-1000);this.s=new q7b}
function i7b(a,b){var c;c=new A5b;y5b(c,b.q,n5b(c,b.Y));return a7b(a,c)}
var UZc='bgColor',WZc='fAspect',TZc='fGodRayIntensity',XZc='fStepSize',KZc='mFar',JZc='mNear',ZZc='tColors',$Zc='tGodRays',YZc='tInput',VZc='vSunPositionScreenSpace',_Zc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';WU(745,727,nSc,iLb);_.Od=function jLb(){IJb(this,JZc,new iOb((BOb(),nOb),new Bkb(1)));IJb(this,KZc,new iOb(nOb,new Bkb(2000)));IJb(this,tYc,new iOb(nOb,new Bkb(1)))};_.Pd=function kLb(a){var b,c;c=new Mrb(uu(RS,VQc,1,[LZc]));b=new Mrb(uu(RS,VQc,1,[MZc]));RJb(this,ZJb(a,uu(US,VQc,173,[c,b])))};_.Qd=function lLb(a){var b,c;c=new Mrb(uu(RS,VQc,1,[NZc,OZc]));b=new Mrb(uu(RS,VQc,1,[PZc,QZc,RZc]));SJb(this,ZJb(a,uu(US,VQc,173,[c,b])))};var mLb;WU(746,1,{},rLb);_.Rd=function sLb(){return ALb(),pLb};_.Sd=function tLb(){return BLb(),qLb};var pLb,qLb;WU(747,1,{},vLb);_.qc=function wLb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};WU(748,1,{},yLb);_.qc=function zLb(){return SZc};WU(917,910,{280:1,283:1},k1b);_.Qe=function l1b(){var a;return a=new k1b,w$b(this,a),a.b=this.b,a.c=this.c,a};_.Re=function m1b(){return new iLb};_.Ne=function n1b(){return this.c};_.Oe=function o1b(){return this.b};_.Se=function p1b(a,b){var c;B$b(this,b);c=A$b(this).j;if(a.cZ==dH){gOb(Eu(c.b[JZc],227),new Bkb(Eu(a,237).e));gOb(Eu(c.b[KZc],227),new Bkb(Eu(a,237).c))}gOb(Eu(c.b[tYc],227),new Bkb(this.$))};_.b=false;_.c=0;WU(1225,1,ASc);_.Db=function vtc(){wac(this.c,new xtc(this.b))};WU(1226,969,{337:1},xtc);_.ob=function ytc(){var a,b,c,d;this.b=new FRb(70,XHb(this.H.n),1,3000);n7b(this.b.ab,200);this.c=new k1b;c=new H0b;B0b(c,new w4b(0));F0b(c,(p0b(),m0b));new gBc('./static/models/obj/tree/tree.js',new Btc(this,c));a=new aYb(1,20,10);this.t=new P8b(a,c);k7b(this.t.fb,20);EQb(this.I,this.t);FIb(this.H.n,false);pIb(this.H.n,false);sIb(this.H.n,1297,1);this.k=new C9b;this.j=new sRb(this.H.n.$,this.H.n.Z,-10000,10000);n7b(this.j.ab,100);EQb(this.k,this.j);this.o=new EPb(this.H.n.$,this.H.n.Z);WOb(this.o,(HFb(),BFb));UOb(this.o,(wFb(),uFb));ROb(this.o,(sDb(),rDb));this.p=new EPb(this.H.n.$,this.H.n.Z);WOb(this.p,BFb);UOb(this.p,uFb);ROb(this.p,rDb);d=~~(this.H.n.$/4);b=~~(this.H.n.Z/4);this.q=new EPb(d,b);WOb(this.q,BFb);UOb(this.q,uFb);ROb(this.q,rDb);this.r=new EPb(d,b);WOb(this.r,BFb);UOb(this.r,uFb);ROb(this.r,rDb);this.f=new I3b(new hyc);this.d=new I3b(new Qxc);gOb(Eu(dTb(A$b(this.d).j,TZc),227),new Bkb(0.75));this.e=new I3b(new Ayc);t4b(Eu(Eu(dTb(A$b(this.e).j,UZc),227).e,294),1297);t4b(Eu(Eu(dTb(A$b(this.e).j,_Yc),227).e,294),16772608);this.n=new P8b(new RXb(this.H.n.$,this.H.n.Z),this.f);n7b(this.n.ab,-9900);EQb(this.k,this.n)};_.pb=function ztc(a){var b,c,d,e,f,g;f=a/4000;A6b(this.t.ab,200*Blb(f));n7b(this.t.ab,200*Klb(f)-100);v6b(this.b.ab,(this.g-this.b.ab.d)*0.036);w6b(this.b.ab,(-this.i-this.b.ab.e)*0.036);bRb(this.b,this.I.ab);i7b(this.s.mf(this.u),this.b);A6b(this.s,(this.s.d+1)/2);B6b(this.s,(this.s.e+1)/2);z6b(Eu(Eu(dTb(A$b(this.f).j,VZc),227).e,298),this.s.d,this.s.e);z6b(Eu(Eu(dTb(A$b(this.e).j,VZc),227).e,298),this.s.d,this.s.e);RHb(this.H.n,this.o);g=this.H.n.$;b=this.H.n.Z;d=0.74*b;e=0.74*b;A6b(this.s,this.s.d*g);B6b(this.s,this.s.e*b);DIb(this.H.n,Mu(this.s.d-e/2),Mu(this.s.e-d/2),Mu(e),Mu(d));WHb(this.H.n,true);gOb(Eu(dTb(A$b(this.e).j,WZc),227),new Bkb(g/b));B9b(this.k,this.e);hIb(this.H.n,this.k,this.j,this.o,false);WHb(this.H.n,false);B9b(this.I,null);hIb(this.H.n,this.I,this.b,this.o,false);B9b(this.I,this.c);hIb(this.H.n,this.I,this.b,this.p,true);c=Hlb(6,-1);gOb(Eu(dTb(A$b(this.f).j,XZc),227),new Bkb(c));gOb(Eu(dTb(A$b(this.f).j,YZc),227),this.p);B9b(this.k,this.f);hIb(this.H.n,this.k,this.j,this.r,false);c=Hlb(6,-2);gOb(Eu(dTb(A$b(this.f).j,XZc),227),new Bkb(c));gOb(Eu(dTb(A$b(this.f).j,YZc),227),this.r);hIb(this.H.n,this.k,this.j,this.q,false);c=Hlb(6,-3);gOb(Eu(dTb(A$b(this.f).j,XZc),227),new Bkb(c));gOb(Eu(dTb(A$b(this.f).j,YZc),227),this.q);hIb(this.H.n,this.k,this.j,this.r,false);gOb(Eu(dTb(A$b(this.d).j,ZZc),227),this.o);gOb(Eu(dTb(A$b(this.d).j,$Zc),227),this.r);B9b(this.k,this.d);hIb(this.H.n,this.k,this.j,null,false);B9b(this.k,null)};_.g=0;_.i=0;WU(1227,1,{},Btc);_.Cf=function Ctc(a,b){var c;c=new P8b(b,this.c);l7b(c.ab,0,-150,-150);k7b(c.fb,400);c.X=false;i5b(c.W,c.ab,c.bb,c.fb);c.Z=true;EQb(this.b.I,c)};WU(1316,727,nSc,Qxc);_.Od=function Rxc(){IJb(this,ZZc,new hOb((BOb(),tOb)));IJb(this,$Zc,new hOb(tOb));IJb(this,TZc,new iOb(nOb,new Bkb(0.69)));IJb(this,VZc,new iOb(vOb,new D6b(0.5,0.5)))};var Sxc;WU(1317,1,{},Xxc);_.Rd=function Yxc(){return eyc(),Vxc};_.Sd=function Zxc(){return fyc(),Wxc};var Vxc,Wxc;WU(1318,1,{},_xc);_.qc=function ayc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};WU(1319,1,{},cyc);_.qc=function dyc(){return _Zc};WU(1322,727,nSc,hyc);_.Od=function iyc(){IJb(this,YZc,new hOb((BOb(),tOb)));IJb(this,XZc,new iOb(nOb,new Bkb(1)));IJb(this,VZc,new iOb(vOb,new D6b(0.5,0.5)))};var jyc;WU(1323,1,{},oyc);_.Rd=function pyc(){return xyc(),myc};_.Sd=function qyc(){return yyc(),nyc};var myc,nyc;WU(1324,1,{},syc);_.qc=function tyc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};WU(1325,1,{},vyc);_.qc=function wyc(){return _Zc};WU(1328,727,nSc,Ayc);_.Od=function Byc(){IJb(this,VZc,new iOb((BOb(),vOb),new D6b(0.5,0.5)));IJb(this,WZc,new iOb(nOb,new Bkb(1)));IJb(this,_Yc,new iOb(mOb,new w4b(16772608)));IJb(this,UZc,new iOb(mOb,new w4b(0)))};var Cyc;WU(1329,1,{},Hyc);_.Rd=function Iyc(){return Qyc(),Fyc};_.Sd=function Jyc(){return Ryc(),Gyc};var Fyc,Gyc;WU(1330,1,{},Lyc);_.qc=function Myc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};WU(1331,1,{},Oyc);_.qc=function Pyc(){return _Zc};var qO=pkb(zXc,'PostprocessingGodrays$DemoScene',1226),pO=pkb(zXc,'PostprocessingGodrays$DemoScene$1',1227),_I=pkb(a$c,'MeshDepthMaterial',917),YO=pkb(pXc,'GodRaysGenerateShader',1322),UO=pkb(pXc,'GodRaysCombineShader',1316),aP=pkb(pXc,'GodraysFakeSunShader',1328),lG=pkb(FYc,'DepthShader',745),XO=pkb(pXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1323),VO=pkb(pXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1324),WO=pkb(pXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1325),TO=pkb(pXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1317),RO=pkb(pXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1318),SO=pkb(pXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1319),_O=pkb(pXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1329),ZO=pkb(pXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1330),$O=pkb(pXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1331),kG=pkb(FYc,'DepthShader_Resources_default_InlineClientBundleGenerator',746),iG=pkb(FYc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',747),jG=pkb(FYc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',748);OSc(Hi)(40);