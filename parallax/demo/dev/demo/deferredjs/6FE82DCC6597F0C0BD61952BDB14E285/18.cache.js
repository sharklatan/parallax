function wpc(){}
function Apc(){}
function Dpc(){}
function Lsc(){}
function Psc(){}
function Ssc(){}
function Fhc(a){this.a=a}
function Fpc(){Fpc=YEc;upc=new Apc}
function spc(){spc=YEc;rpc=new wpc}
function Gpc(){Gpc=YEc;vpc=new Dpc}
function Hsc(){Hsc=YEc;Gsc=new Lsc}
function Usc(){Usc=YEc;Jsc=new Psc}
function Vsc(){Vsc=YEc;Ksc=new Ssc}
function Csc(){UGb.call(this,(Hsc(),Gsc))}
function ppc(){UGb.call(this,(spc(),rpc))}
function Bhc(){m7b.call(this);this.d=0;this.e=0}
function Ahc(a,b){var c,d,e,f,g,i;d=new OLb(dMc);d.k=4;U2b(d.B,0.998,0.998);U2b(d.A,0.001,0.001);ILb(d,(_Db(),$Db));JLb(d,$Db);wLb(d,(UAb(),SAb));e=new OLb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');U2b(e.B,0.998,0.998);U2b(e.A,0.001,0.001);ILb(e,$Db);JLb(e,$Db);wLb(e,SAb);c=new OLb('./static/models/obj/leeperrysmith/Map-COL.jpg');U2b(c.B,0.998,0.998);U2b(c.A,0.001,0.001);ILb(c,$Db);JLb(c,$Db);wLb(c,SAb);g=new Csc;i=g.i;NKb(su(i.a[gMc],225),(nhb(),nhb(),mhb));NKb(su(i.a[hMc],225),mhb);NKb(su(i.a[iMc],225),a.b.e);NKb(su(i.a[jMc],225),c);NKb(su(i.a[kMc],225),d);NKb(su(i.a[lMc],225),e);M0b(su(su(i.a[mMc],225).d,292),10526880);M0b(su(su(i.a[nMc],225).d,292),10526880);M0b(su(su(i.a[oMc],225).d,292),10526880);NKb(su(i.a[pMc],225),new mib(0.145));NKb(su(i.a[qMc],225),new mib(0.75));NKb(su(i.a[rMc],225),new mib(16));t4b(su(su(i.a[sMc],225).d,300),0.001,0.001,0.998,0.998);f=new $_b(g);f.c=true;a.c=new h5b(b,f);W2b(a.c._,-50);E3b(a.c.eb,100);oNb(a.c,true);a.c.U=true;jNb(a.F,a.c)}
var gMc='enableBump',iMc='tBeckmann',pMc='uRoughness',qMc='uSpecularBrightness';RS(1104,1,FGc);_.zb=function yhc(){O6b(this.b,new Bhc(this.a))};RS(1105,960,{320:1},Bhc);_.nb=function Chc(){var b,c,d,e,f,g,i,j;this.a=new kOb(27,XEb(this.D.k),1,10000);H3b(this.a._,1200);jNb(this.F,new LVb(5592405));f=new EWb(16777215,1.5,1000);F3b(f._,0,0,600);jNb(this.F,f);i=new MWb(1);F3b(i._,0.05,0.05,1);jNb(this.F,i);i._.lf(700);i.S=true;i.t=true;i.I=2048;i.G=2048;i.A=200;i.w=1500;i.d=40;i.u=-0.005;i.D=0.15;b=new mWb(16777215,0.85);F3b(b._,1,-0.5,1);L0b(b.L,0.6,1,0.85);jNb(this.F,b);b._.lf(500);b.S=true;b.I=2048;b.G=2048;b.A=200;b.w=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.u=-0.005;b.D=0.15;c=new mWb(16777215,0.85);F3b(c._,1,-0.5,-1);jNb(this.F,c);new XCc(new ppc);d=new XCc(new rDc);d.a=true;j=new jMb(512,512);BLb(j,(JCb(),DCb));zLb(j,(yCb(),wCb));wLb(j,(UAb(),SAb));j.f=false;this.b=new NCc(this.D.k,j);e=new Ktc;try{wtc(e,eMc,new Fhc(this))}catch(a){a=WR(a);if(vu(a,81)){ZMb();ZU(YMb,(Hsb(),Fsb),fMc)}else throw VR(a)}tFb(this.D.k,new P0b(5001561),1);g=new nEb(this.D.k,this.F);g.g=false;pFb(this.D.k,false);this.D.k.ab=true;this.D.k.bb=true};_.ob=function Dhc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){V0b(this.c.cb,0.05*(b-this.c.cb.d));U0b(this.c.cb,0.05*(c-this.c.cb.c))}REb(this.D.k);hFb(this.D.k,this.F,this.a,null,false)};_.d=0;_.e=0;RS(1106,1,{},Fhc);_.yf=function Ghc(a){Ahc(this.a,su(a,241))};RS(1211,725,sGc,ppc);_.Jd=function qpc(){};var rpc;RS(1212,1,{},wpc);_.Md=function xpc(){return Fpc(),upc};_.Nd=function ypc(){return Gpc(),vpc};var upc,vpc;RS(1213,1,{},Apc);_.ac=function Bpc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};RS(1214,1,{},Dpc);_.ac=function Epc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};RS(1287,725,sGc,Csc);_.Jd=function Dsc(){PGb(this,kLb());PGb(this,lLb());PGb(this,mLb());IGb(this,gMc,new PKb((gLb(),XKb),Uib(0)));IGb(this,hMc,new PKb(XKb,Uib(0)));IGb(this,jMc,new OKb($Kb));IGb(this,iMc,new OKb($Kb));IGb(this,nMc,new PKb(TKb,new P0b(15658734)));IGb(this,oMc,new PKb(TKb,new P0b(1118481)));IGb(this,mMc,new PKb(TKb,new P0b(328965)));IGb(this,tMc,new PKb(UKb,new mib(1)));IGb(this,pMc,new PKb(UKb,new mib(0.15)));IGb(this,qMc,new PKb(UKb,new mib(0.75)));IGb(this,kMc,new OKb($Kb));IGb(this,rMc,new PKb(UKb,new mib(1)));IGb(this,lMc,new OKb($Kb));IGb(this,sMc,new PKb(eLb,new x4b(0,0,1,1)));IGb(this,'uWrapRGB',new PKb(cLb,new L3b(0.75,0.375,0.1875)))};_.Kd=function Esc(a){var b,c;c=new xpb(iu(MQ,bFc,1,[uMc,vMc,wMc]));b=new xpb(iu(MQ,bFc,1,[xMc,yMc,zMc]));RGb(this,ZGb(a,iu(PQ,bFc,173,[c,b])))};_.Ld=function Fsc(a){var b,c;c=new xpb(iu(MQ,bFc,1,[AMc]));b=new xpb(iu(MQ,bFc,1,[BMc]));SGb(this,ZGb(a,iu(PQ,bFc,173,[c,b])))};var Gsc;RS(1288,1,{},Lsc);_.Md=function Msc(){return Usc(),Jsc};_.Nd=function Nsc(){return Vsc(),Ksc};var Jsc,Ksc;RS(1289,1,{},Psc);_.ac=function Qsc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};RS(1290,1,{},Ssc);_.ac=function Tsc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var XL=aib(vLc,'MaterialsBumpmapSkin$DemoScene',1105),WL=aib(vLc,'MaterialsBumpmapSkin$DemoScene$1',1106),SN=aib(oLc,'BeckmannShader',1211),RN=aib(oLc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1212),PN=aib(oLc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1213),QN=aib(oLc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1214),fO=aib(oLc,'SkinSimpleShader',1287),eO=aib(oLc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1288),cO=aib(oLc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1289),dO=aib(oLc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1290);SGc(xi)(18);