function jLb(){}
function nLb(){}
function qLb(){}
function Mxc(){}
function Qxc(){}
function Txc(){}
function dyc(){}
function hyc(){}
function kyc(){}
function wyc(){}
function Ayc(){}
function Dyc(){}
function t9b(a,b){a.c=b}
function tLb(){tLb=EQc;iLb=new qLb}
function fLb(){fLb=EQc;eLb=new jLb}
function sLb(){sLb=EQc;hLb=new nLb}
function syc(){syc=EQc;ryc=new wyc}
function myc(){myc=EQc;byc=new hyc}
function nyc(){nyc=EQc;cyc=new kyc}
function Fyc(){Fyc=EQc;uyc=new Ayc}
function Gyc(){Gyc=EQc;vyc=new Dyc}
function _xc(){_xc=EQc;$xc=new dyc}
function Ixc(){Ixc=EQc;Hxc=new Mxc}
function Vxc(){Vxc=EQc;Kxc=new Qxc}
function Wxc(){Wxc=EQc;Lxc=new Txc}
function qtc(a,b){this.a=a;this.b=b}
function JHb(a,b){uIb(a,b);IHb(a,false)}
function aLb(){MJb.call(this,(fLb(),eLb))}
function Fxc(){MJb.call(this,(Ixc(),Hxc))}
function Yxc(){MJb.call(this,(_xc(),$xc))}
function pyc(){MJb.call(this,(syc(),ryc))}
function c1b(){G$b.call(this);this.a=false;this.b=1}
function mtc(){Oac.call(this);this.t=new j7b(0,1000,-1000);this.r=new i7b}
function a7b(a,b){var c;c=new s5b;q5b(c,b.p,f5b(c,b.X));return U6b(a,c)}
var DZc='bgColor',FZc='fAspect',CZc='fGodRayIntensity',GZc='fStepSize',tZc='mFar',sZc='mNear',IZc='tColors',JZc='tGodRays',HZc='tInput',EZc='vSunPositionScreenSpace',KZc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';KU(751,733,_Rc,aLb);_.Kd=function bLb(){AJb(this,sZc,new aOb((tOb(),fOb),new tkb(1)));AJb(this,tZc,new aOb(fOb,new tkb(2000)));AJb(this,cYc,new aOb(fOb,new tkb(1)))};_.Ld=function cLb(a){var b,c;c=new Erb(iu(FS,JQc,1,[uZc]));b=new Erb(iu(FS,JQc,1,[vZc]));JJb(this,RJb(a,iu(IS,JQc,173,[c,b])))};_.Md=function dLb(a){var b,c;c=new Erb(iu(FS,JQc,1,[wZc,xZc]));b=new Erb(iu(FS,JQc,1,[yZc,zZc,AZc]));KJb(this,RJb(a,iu(IS,JQc,173,[c,b])))};var eLb;KU(752,1,{},jLb);_.Nd=function kLb(){return sLb(),hLb};_.Od=function lLb(){return tLb(),iLb};var hLb,iLb;KU(753,1,{},nLb);_.mc=function oLb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};KU(754,1,{},qLb);_.mc=function rLb(){return BZc};KU(923,916,{280:1,283:1},c1b);_.Me=function d1b(){var a;return a=new c1b,o$b(this,a),a.a=this.a,a.b=this.b,a};_.Ne=function e1b(){return new aLb};_.Je=function f1b(){return this.b};_.Ke=function g1b(){return this.a};_.Oe=function h1b(a,b){var c;t$b(this,b);c=s$b(this).i;if(a.cZ==UG){$Nb(su(c.a[sZc],227),new tkb(su(a,237).d));$Nb(su(c.a[tZc],227),new tkb(su(a,237).b))}$Nb(su(c.a[cYc],227),new tkb(this.Z))};_.a=false;_.b=0;KU(1230,1,mSc);_.zb=function ktc(){oac(this.b,new mtc(this.a))};KU(1231,975,{337:1},mtc);_.nb=function ntc(){var a,b,c,d;this.a=new xRb(70,PHb(this.G.k),1,3000);f7b(this.a._,200);this.b=new c1b;c=new z0b;t0b(c,new o4b(0));x0b(c,(h0b(),e0b));new XAc('./static/models/obj/tree/tree.js',new qtc(this,c));a=new UXb(1,20,10);this.s=new H8b(a,c);c7b(this.s.eb,20);wQb(this.H,this.s);xIb(this.G.k,false);hIb(this.G.k,false);kIb(this.G.k,1297,1);this.j=new u9b;this.i=new kRb(this.G.k.Z,this.G.k.Y,-10000,10000);f7b(this.i._,100);wQb(this.j,this.i);this.n=new wPb(this.G.k.Z,this.G.k.Y);OOb(this.n,(zFb(),tFb));MOb(this.n,(oFb(),mFb));JOb(this.n,(kDb(),jDb));this.o=new wPb(this.G.k.Z,this.G.k.Y);OOb(this.o,tFb);MOb(this.o,mFb);JOb(this.o,jDb);d=~~(this.G.k.Z/4);b=~~(this.G.k.Y/4);this.p=new wPb(d,b);OOb(this.p,tFb);MOb(this.p,mFb);JOb(this.p,jDb);this.q=new wPb(d,b);OOb(this.q,tFb);MOb(this.q,mFb);JOb(this.q,jDb);this.e=new A3b(new Yxc);this.c=new A3b(new Fxc);$Nb(su(XSb(s$b(this.c).i,CZc),227),new tkb(0.75));this.d=new A3b(new pyc);l4b(su(su(XSb(s$b(this.d).i,DZc),227).d,294),1297);l4b(su(su(XSb(s$b(this.d).i,KYc),227).d,294),16772608);this.k=new H8b(new JXb(this.G.k.Z,this.G.k.Y),this.e);f7b(this.k._,-9900);wQb(this.j,this.k)};_.ob=function otc(a){var b,c,d,e,f,g;f=a/4000;s6b(this.s._,200*tlb(f));f7b(this.s._,200*Clb(f)-100);n6b(this.a._,(this.f-this.a._.c)*0.036);o6b(this.a._,(-this.g-this.a._.d)*0.036);VQb(this.a,this.H._);a7b(this.r.hf(this.t),this.a);s6b(this.r,(this.r.c+1)/2);t6b(this.r,(this.r.d+1)/2);r6b(su(su(XSb(s$b(this.e).i,EZc),227).d,298),this.r.c,this.r.d);r6b(su(su(XSb(s$b(this.d).i,EZc),227).d,298),this.r.c,this.r.d);JHb(this.G.k,this.n);g=this.G.k.Z;b=this.G.k.Y;d=0.74*b;e=0.74*b;s6b(this.r,this.r.c*g);t6b(this.r,this.r.d*b);vIb(this.G.k,Au(this.r.c-e/2),Au(this.r.d-d/2),Au(e),Au(d));OHb(this.G.k,true);$Nb(su(XSb(s$b(this.d).i,FZc),227),new tkb(g/b));t9b(this.j,this.d);_Hb(this.G.k,this.j,this.i,this.n,false);OHb(this.G.k,false);t9b(this.H,null);_Hb(this.G.k,this.H,this.a,this.n,false);t9b(this.H,this.b);_Hb(this.G.k,this.H,this.a,this.o,true);c=zlb(6,-1);$Nb(su(XSb(s$b(this.e).i,GZc),227),new tkb(c));$Nb(su(XSb(s$b(this.e).i,HZc),227),this.o);t9b(this.j,this.e);_Hb(this.G.k,this.j,this.i,this.q,false);c=zlb(6,-2);$Nb(su(XSb(s$b(this.e).i,GZc),227),new tkb(c));$Nb(su(XSb(s$b(this.e).i,HZc),227),this.q);_Hb(this.G.k,this.j,this.i,this.p,false);c=zlb(6,-3);$Nb(su(XSb(s$b(this.e).i,GZc),227),new tkb(c));$Nb(su(XSb(s$b(this.e).i,HZc),227),this.p);_Hb(this.G.k,this.j,this.i,this.q,false);$Nb(su(XSb(s$b(this.c).i,IZc),227),this.n);$Nb(su(XSb(s$b(this.c).i,JZc),227),this.q);t9b(this.j,this.c);_Hb(this.G.k,this.j,this.i,null,false);t9b(this.j,null)};_.f=0;_.g=0;KU(1232,1,{},qtc);_.yf=function rtc(a,b){var c;c=new H8b(b,this.b);d7b(c._,0,-150,-150);c7b(c.eb,400);c.W=false;a5b(c.V,c._,c.ab,c.eb);c.Y=true;wQb(this.a.H,c)};KU(1321,733,_Rc,Fxc);_.Kd=function Gxc(){AJb(this,IZc,new _Nb((tOb(),lOb)));AJb(this,JZc,new _Nb(lOb));AJb(this,CZc,new aOb(fOb,new tkb(0.69)));AJb(this,EZc,new aOb(nOb,new v6b(0.5,0.5)))};var Hxc;KU(1322,1,{},Mxc);_.Nd=function Nxc(){return Vxc(),Kxc};_.Od=function Oxc(){return Wxc(),Lxc};var Kxc,Lxc;KU(1323,1,{},Qxc);_.mc=function Rxc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};KU(1324,1,{},Txc);_.mc=function Uxc(){return KZc};KU(1327,733,_Rc,Yxc);_.Kd=function Zxc(){AJb(this,HZc,new _Nb((tOb(),lOb)));AJb(this,GZc,new aOb(fOb,new tkb(1)));AJb(this,EZc,new aOb(nOb,new v6b(0.5,0.5)))};var $xc;KU(1328,1,{},dyc);_.Nd=function eyc(){return myc(),byc};_.Od=function fyc(){return nyc(),cyc};var byc,cyc;KU(1329,1,{},hyc);_.mc=function iyc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};KU(1330,1,{},kyc);_.mc=function lyc(){return KZc};KU(1333,733,_Rc,pyc);_.Kd=function qyc(){AJb(this,EZc,new aOb((tOb(),nOb),new v6b(0.5,0.5)));AJb(this,FZc,new aOb(fOb,new tkb(1)));AJb(this,KYc,new aOb(eOb,new o4b(16772608)));AJb(this,DZc,new aOb(eOb,new o4b(0)))};var ryc;KU(1334,1,{},wyc);_.Nd=function xyc(){return Fyc(),uyc};_.Od=function yyc(){return Gyc(),vyc};var uyc,vyc;KU(1335,1,{},Ayc);_.mc=function Byc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};KU(1336,1,{},Dyc);_.mc=function Eyc(){return KZc};var eO=hkb(iXc,'PostprocessingGodrays$DemoScene',1231),dO=hkb(iXc,'PostprocessingGodrays$DemoScene$1',1232),QI=hkb(LZc,'MeshDepthMaterial',923),MO=hkb($Wc,'GodRaysGenerateShader',1327),IO=hkb($Wc,'GodRaysCombineShader',1321),QO=hkb($Wc,'GodraysFakeSunShader',1333),aG=hkb(oYc,'DepthShader',751),LO=hkb($Wc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1328),JO=hkb($Wc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1329),KO=hkb($Wc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1330),HO=hkb($Wc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1322),FO=hkb($Wc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1323),GO=hkb($Wc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1324),PO=hkb($Wc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1334),NO=hkb($Wc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1335),OO=hkb($Wc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1336),_F=hkb(oYc,'DepthShader_Resources_default_InlineClientBundleGenerator',752),ZF=hkb(oYc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',753),$F=hkb(oYc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',754);ASc(xi)(40);