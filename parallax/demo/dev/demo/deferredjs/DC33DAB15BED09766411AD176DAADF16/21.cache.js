function CLb(){}
function GLb(){}
function JLb(){}
function yLb(){yLb=EQc;xLb=new CLb}
function LLb(){LLb=EQc;ALb=new GLb}
function MLb(){MLb=EQc;BLb=new JLb}
function vLb(){MJb.call(this,(yLb(),xLb))}
function zmc(){Oac.call(this);this.c=0;this.d=0}
KU(757,733,_Rc,vLb);_.Kd=function wLb(){AJb(this,'mRefractionRatio',new aOb((tOb(),fOb),new tkb(1.02)));AJb(this,'mFresnelBias',new aOb(fOb,new tkb(0.1)));AJb(this,'mFresnelPower',new aOb(fOb,new tkb(2)));AJb(this,'mFresnelScale',new aOb(fOb,new tkb(1)));AJb(this,nYc,new _Nb(lOb))};var xLb;KU(758,1,{},CLb);_.Nd=function DLb(){return LLb(),ALb};_.Od=function ELb(){return MLb(),BLb};var ALb,BLb;KU(759,1,{},GLb);_.mc=function HLb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};KU(760,1,{},JLb);_.mc=function KLb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};KU(1140,1,mSc);_.zb=function xmc(){oac(this.b,new zmc(this.a))};KU(1141,975,{328:1},zmc);_.nb=function Amc(){var a,b,c,d,e,f,g,i,j;this.a=new xRb(60,PHb(this.G.k),1,100000);f7b(this.a._,3200);this.b=new xRb(60,PHb(this.G.k),1,100000);this.e=new u9b;a=new UXb(100,32,16);j=new iPb('./static/textures/cube/park2/*.jpg');JOb(j,(kDb(),iDb));g=new vLb;$Nb(su(XSb(g.i,nYc),227),j);c=new A3b(g);this.f=new grb;for(b=0;b<500;b++){e=new H8b(a,c);s6b(e._,Alb()*10000-5000);t6b(e._,Alb()*10000-5000);f7b(e._,Alb()*10000-5000);c7b(e.eb,Alb()*3+1);wQb(this.H,e);Yqb(this.f,e)}this.H.W=false;i=new mKb;$Nb(su(XSb(i.i,nYc),227),j);f=new A3b(i);D$b(f,(p0b(),m0b));d=new H8b(new dXb(100000,100000,100000),f);wQb(this.e,d);hIb(this.G.k,false)};_.ob=function Bmc(a){var b,c,d,e;e=1.0E-4*a;n6b(this.a._,(this.c-this.a._.c)*0.05);o6b(this.a._,(-this.d-this.a._.d)*0.05);VQb(this.a,this.H._);v4b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=su(_qb(this.f,b),305);s6b(d._,5000*Math.cos(e+b));t6b(d._,5000*Math.sin(e+b*1.1))}IHb(this.G.k,true);_Hb(this.G.k,this.e,this.b,null,false);_Hb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var DM=hkb(fXc,'MaterialsCubemapFresnel$DemoScene',1141),eG=hkb(oYc,'FresnelShader',757),dG=hkb(oYc,'FresnelShader_Resources_default_InlineClientBundleGenerator',758),bG=hkb(oYc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',759),cG=hkb(oYc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',760);ASc(xi)(21);