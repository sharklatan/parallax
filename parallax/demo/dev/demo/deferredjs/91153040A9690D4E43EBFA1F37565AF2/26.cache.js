function ssb(){}
function Bsb(){}
function ysb(){}
function Gsb(){}
function Fsb(){}
function Ksb(){}
function Jsb(){}
function M4b(){}
function N4b(){MSb.call(this)}
function tsb(){xqb.call(this,(xsb(),wsb))}
function xsb(){xsb=rhc;wsb=new Bsb}
function Nsb(){Nsb=rhc;zsb=new Gsb}
function Osb(){Osb=rhc;Asb=new Ksb}
_=tsb.prototype=ssb.prototype=new jqb;_.gC=function usb(){return lA};_.qd=function vsb(){mqb(this,'mRefractionRatio',new vvb((Pvb(),Bvb),new C3(1.02)));mqb(this,'mFresnelBias',new vvb(Bvb,new C3(0.1)));mqb(this,'mFresnelPower',new vvb(Bvb,new C3(2)));mqb(this,'mFresnelScale',new vvb(Bvb,new C3(1)));mqb(this,Ulc,new uvb(Hvb))};_.cM={131:1};var wsb;_=Bsb.prototype=ysb.prototype=new Kb;_.gC=function Csb(){return kA};_.td=function Dsb(){return Nsb(),zsb};_.ud=function Esb(){return Osb(),Asb};var zsb=null,Asb=null;_=Gsb.prototype=Fsb.prototype=new Kb;_.gC=function Hsb(){return iA};_.Vb=function Isb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};_=Ksb.prototype=Jsb.prototype=new Kb;_.gC=function Lsb(){return jA};_.Vb=function Msb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};_=H4b.prototype;_.qb=function L4b(){ISb(this.c,new N4b(this.b))};_=N4b.prototype=M4b.prototype=new LSb;_.gC=function O4b(){return TF};_.md=function P4b(){odb(this,new Fyb(60,geb(this.B.E),1,100000));this.b=new Fyb(60,geb(this.B.E),1,100000)};_.qc=function Q4b(){!!this.A&&ZA==ZA&&Byb(this.A,geb(this.B.E));Byb(this.b,geb(this.B.E))};_.hb=function R4b(){var a,b,c,d,e,f,g,i;this.A.X.c=3200;Lxb(this.C,this.A);this.e=new sRb;Lxb(this.e,this.b);a=new mJb(100,32,16);i=(LRb(),ORb('./static/textures/cube/park2/*.jpg',(Swb(),Rwb)));_vb(i,(pnb(),nnb));f=new tsb;tvb(is(f.j.b[Ulc],133),i);c=new aQb(f);this.f=new c9;for(b=0;b<500;++b){d=new LQb(a,c);GDb(d.X,Math.random()*10000-5000);HDb(d.X,Math.random()*10000-5000);kEb(d.X,Math.random()*10000-5000);iEb(d.ab,Math.random()*3+1);Lxb(this.C,d);U8(this.f,d)}this.C.S=false;g=new drb;tvb(is(g.j.b[Ulc],133),i);e=new aQb(g);QLb(e,(GNb(),DNb));d=new LQb(new wIb(100000,100000,100000),e);Lxb(this.e,d);this.B.J=false};_.ld=function S4b(){};_.ib=function T4b(a){var b,c,d,e;e=1.0E-4*a;ADb(this.A.X,(this.c-this.A.X.d)*0.05);BDb(this.A.X,(-this.d-this.A.X.e)*0.05);jyb(this.A,this.C.X);this.b.$.de(this.A.$);for(b=0,c=this.f.c;b<c;++b){d=is(Y8(this.f,b),202);GDb(d.X,5000*Math.cos(e+b));HDb(d.X,5000*Math.sin(e+b*1.1))}Vob(this.B);fpb(this.B,this.e,this.b,null,false)};_.cM={227:1};_.b=null;_.c=0;_.d=0;_.e=null;_.f=null;var lA=q3(Rlc,'FresnelShader'),kA=q3(Rlc,'FresnelShader_Resources_default_InlineClientBundleGenerator'),iA=q3(Rlc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1'),jA=q3(Rlc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2'),TF=q3(Pkc,'MaterialsCubemapFresnel$DemoScene');thc(Vd)(26);