function _sc(){}
function dtc(){}
function gtc(){}
function Ivc(){}
function Mvc(){}
function Pvc(){}
function Ujc(a){this.b=a}
function itc(){itc=oKc;Zsc=new dtc}
function jtc(){jtc=oKc;$sc=new gtc}
function Xsc(){Xsc=oKc;Wsc=new _sc}
function Evc(){Evc=oKc;Dvc=new Ivc}
function Rvc(){Rvc=oKc;Gvc=new Mvc}
function Svc(){Svc=oKc;Hvc=new Pvc}
function zvc(){JIb.call(this,(Evc(),Dvc))}
function Usc(){JIb.call(this,(Xsc(),Wsc))}
function Qjc(){Q9b.call(this);this.e=0;this.f=0}
function Pjc(a,b){var c,d,e,f,g,i;d=new YNb(ERc);d.n=4;s5b(d.C,0.998,0.998);s5b(d.B,0.001,0.001);SNb(d,(PFb(),OFb));TNb(d,OFb);GNb(d,(ICb(),GCb));e=new YNb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');s5b(e.C,0.998,0.998);s5b(e.B,0.001,0.001);SNb(e,OFb);TNb(e,OFb);GNb(e,GCb);c=new YNb('./static/models/obj/leeperrysmith/Map-COL.jpg');s5b(c.C,0.998,0.998);s5b(c.B,0.001,0.001);SNb(c,OFb);TNb(c,OFb);GNb(c,GCb);g=new zvc;i=g.j;XMb(Fu(i.b[GRc],225),(Xib(),Xib(),Wib));XMb(Fu(i.b[HRc],225),Wib);XMb(Fu(i.b[IRc],225),a.c.f);XMb(Fu(i.b[JRc],225),c);XMb(Fu(i.b[KRc],225),d);XMb(Fu(i.b[LRc],225),e);m3b(Fu(Fu(i.b[MRc],225).e,293),10526880);m3b(Fu(Fu(i.b[NRc],225).e,293),10526880);m3b(Fu(Fu(i.b[ORc],225).e,293),10526880);XMb(Fu(i.b[PRc],225),new Wjb(0.145));XMb(Fu(i.b[QRc],225),new Wjb(0.75));XMb(Fu(i.b[RRc],225),new Wjb(16));U6b(Fu(Fu(i.b[SRc],225).e,301),0.001,0.001,0.998,0.998);f=new B2b(g);f.d=true;a.d=new I7b(b,f);u5b(a.d.ab,-50);d6b(a.d.fb,100);yPb(a.d,true);a.d.V=true;tPb(a.I,a.d)}
var GRc='enableBump',IRc='tBeckmann',PRc='uRoughness',QRc='uSpecularBrightness';nU(1115,1,_Lc);_.Db=function Njc(){q9b(this.c,new Qjc(this.b))};nU(1116,968,{323:1},Qjc);_.ob=function Rjc(){var a,b,c,d,e,f,g;this.b=new wQb(27,MGb(this.H.n),1,10000);g6b(this.b.ab,1200);tPb(this.I,new bYb(5592405));d=new XYb(16777215,1.5,1000);e6b(d.ab,0,0,600);tPb(this.I,d);f=new dZb(1);e6b(f.ab,0.05,0.05,1);tPb(this.I,f);f.ab.rf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new EYb(16777215,0.85);e6b(a.ab,1,-0.5,1);l3b(a.M,0.6,1,0.85);tPb(this.I,a);a.ab.rf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new EYb(16777215,0.85);e6b(b.ab,1,-0.5,-1);tPb(this.I,b);new GGc(new Usc);c=new GGc(new tHc);c.b=true;g=new tOb(512,512);LNb(g,(xEb(),rEb));JNb(g,(mEb(),kEb));GNb(g,(ICb(),GCb));g.g=false;this.c=new wGc(this.H.n,g);new axc(FRc,new Ujc(this));iHb(this.H.n,new p3b(5001561),1);e=new bGb(this.H.n,this.I);e.i=false;eHb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function Sjc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){v3b(this.d.db,0.05*(b-this.d.db.e));u3b(this.d.db,0.05*(c-this.d.db.d))}FGb(this.H.n,true);YGb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;nU(1117,1,{},Ujc);_.Df=function Vjc(a,b){Pjc(this.b,Fu(b,242))};nU(1245,726,OLc,Usc);_.Od=function Vsc(){};var Wsc;nU(1246,1,{},_sc);_.Rd=function atc(){return itc(),Zsc};_.Sd=function btc(){return jtc(),$sc};var Zsc,$sc;nU(1247,1,{},dtc);_.qc=function etc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};nU(1248,1,{},gtc);_.qc=function htc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};nU(1294,726,OLc,zvc);_.Od=function Avc(){EIb(this,uNb());EIb(this,vNb());EIb(this,wNb());xIb(this,GRc,new ZMb((qNb(),fNb),Ckb(0)));xIb(this,HRc,new ZMb(fNb,Ckb(0)));xIb(this,JRc,new YMb(iNb));xIb(this,IRc,new YMb(iNb));xIb(this,NRc,new ZMb(bNb,new p3b(15658734)));xIb(this,ORc,new ZMb(bNb,new p3b(1118481)));xIb(this,MRc,new ZMb(bNb,new p3b(328965)));xIb(this,TRc,new ZMb(cNb,new Wjb(1)));xIb(this,PRc,new ZMb(cNb,new Wjb(0.15)));xIb(this,QRc,new ZMb(cNb,new Wjb(0.75)));xIb(this,KRc,new YMb(iNb));xIb(this,RRc,new ZMb(cNb,new Wjb(1)));xIb(this,LRc,new YMb(iNb));xIb(this,SRc,new ZMb(oNb,new Y6b(0,0,1,1)));xIb(this,'uWrapRGB',new ZMb(mNb,new k6b(0.75,0.375,0.1875)))};_.Pd=function Bvc(a){var b,c;c=new grb(vu(kS,uKc,1,[URc,VRc,WRc]));b=new grb(vu(kS,uKc,1,[XRc,YRc,ZRc]));GIb(this,OIb(a,vu(nS,uKc,173,[c,b])))};_.Qd=function Cvc(a){var b,c;c=new grb(vu(kS,uKc,1,[$Rc]));b=new grb(vu(kS,uKc,1,[_Rc]));HIb(this,OIb(a,vu(nS,uKc,173,[c,b])))};var Dvc;nU(1295,1,{},Ivc);_.Rd=function Jvc(){return Rvc(),Gvc};_.Sd=function Kvc(){return Svc(),Hvc};var Gvc,Hvc;nU(1296,1,{},Mvc);_.qc=function Nvc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};nU(1297,1,{},Pvc);_.qc=function Qvc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var uM=Kjb(XQc,'MaterialsBumpmapSkin$DemoScene',1116),sM=Kjb(XQc,'MaterialsBumpmapSkin$DemoScene$1',1117),JO=Kjb(QQc,'BeckmannShader',1245),IO=Kjb(QQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1246),GO=Kjb(QQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1247),HO=Kjb(QQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1248),iP=Kjb(QQc,'SkinSimpleShader',1294),hP=Kjb(QQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1295),fP=Kjb(QQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1296),gP=Kjb(QQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1297);nMc(Hi)(18);