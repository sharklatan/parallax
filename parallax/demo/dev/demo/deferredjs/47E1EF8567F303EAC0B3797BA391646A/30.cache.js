function Guc(){}
function Kuc(){}
function Nuc(){}
function FHc(){}
function JHc(){}
function MHc(){}
function Zlc(){D9b.call(this)}
function zuc(){wIb.call(this,(Cuc(),Buc))}
function yHc(){wIb.call(this,(BHc(),AHc))}
function BHc(){BHc=aKc;AHc=new FHc}
function OHc(){OHc=aKc;DHc=new JHc}
function PHc(){PHc=aKc;EHc=new MHc}
function Puc(){Puc=aKc;Euc=new Kuc}
function Cuc(){Cuc=aKc;Buc=new Guc}
function Quc(){Quc=aKc;Fuc=new Nuc}
function dGc(){this.b=new o2b(new yHc);KMb(zu(LRb(gZb(this.b).i,lSc),225),(Kib(),Kib(),Iib));KMb(zu(LRb(gZb(this.b).i,mSc),225),new Jjb(0.35));KMb(zu(LRb(gZb(this.b).i,nSc),225),new Jjb(0.95));KMb(zu(LRb(gZb(this.b).i,oSc),225),pkb(2048));this.e=true;this.f=true}
var lSc='grayscale',mSc='nIntensity',oSc='sCount',nSc='sIntensity',fSc='texture1',gSc='texture2';fU(1154,1,LLc);_.zb=function Xlc(){d9b(this.b,new Zlc(this.a))};fU(1155,970,ILc,Zlc);_.Gd=function $lc(a){g5b(zu(zu(LRb(this.d,eSc),225).d,297),a.a.Z);h5b(zu(zu(LRb(this.d,eSc),225).d,297),a.a.Y)};_.nb=function _lc(){var a,b,c,d,e,f,g;nt((Dxb(),Cxb),(Nxb(),Mxb),this);this.a=new jQb(35,zGb(this.G.k),1,3000);V5b(this.a._,4);d=new o2b(new zuc);this.d=gZb(d).i;f=new LNb('./static/textures/lava/cloud.png');FNb(f,(CFb(),BFb));GNb(f,BFb);KMb(zu(LRb(this.d,fSc),225),f);g=new LNb(URc);FNb(g,BFb);GNb(g,BFb);KMb(zu(LRb(this.d,gSc),225),g);this.b=new v7b(new QWb(0.65,0.3,30,30),d);p3b(this.b.cb,0.3);gPb(this.H,this.b);a=new hGc(this.G.k);e=new pGc(this.H,this.a);b=new aGc(1.25);c=new dGc;c.a=true;nqb(a.b,e);nqb(a.b,b);nqb(a.b,c);TGb(this.G.k,false);this.c=rh()};_.ob=function amc(a){var b;b=(rh()-this.c)*0.001*5;KMb(zu(LRb(this.d,hSc),225),new Jjb(zu(zu(LRb(this.d,hSc),225).d,150).a+0.2*b));h3b(this.b.cb,0.05*b);i3b(this.b.cb,0.0125*b);sGb(this.G.k,true);this.c=rh();LGb(this.G.k,this.H,this.a,null,false)};_.c=0;fU(1283,728,yLc,zuc);_.Ld=function Auc(){kIb(this,iSc,new MMb((dNb(),RMb),new Jjb(0.45)));kIb(this,jSc,new MMb(_Mb,new Z5b(0,0,0)));kIb(this,hSc,new MMb(RMb,new Jjb(1)));kIb(this,eSc,new MMb(ZMb,new i5b));kIb(this,kSc,new MMb(ZMb,new j5b(3,1)));kIb(this,fSc,new LMb(XMb));kIb(this,gSc,new LMb(XMb))};var Buc;fU(1284,1,{},Guc);_.Od=function Huc(){return Puc(),Euc};_.Pd=function Iuc(){return Quc(),Fuc};var Euc,Fuc;fU(1285,1,{},Kuc);_.nc=function Luc(){return 'uniform float time;\nuniform vec2 resolution;\n\nuniform float fogDensity;\nuniform vec3 fogColor;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\n\nvarying vec2 vUv;\n\nvoid main( void ) {\n\n\tvec2 position = -1.0 + 2.0 * vUv;\n\n\tvec4 noise = texture2D( texture1, vUv );\n\tvec2 T1 = vUv + vec2( 1.5, -1.5 ) * time  *0.02;\n\tvec2 T2 = vUv + vec2( -0.5, 2.0 ) * time * 0.01;\n\n\tT1.x += noise.x * 2.0;\n\tT1.y += noise.y * 2.0;\n\tT2.x -= noise.y * 0.2;\n\tT2.y += noise.z * 0.2;\n\n\tfloat p = texture2D( texture1, T1 * 2.0 ).a;\n\n\tvec4 color = texture2D( texture2, T2 * 2.0 );\n\tvec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );\n\n\tif( temp.r > 1.0 ){ temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }\n\tif( temp.g > 1.0 ){ temp.rb += temp.g - 1.0; }\n\tif( temp.b > 1.0 ){ temp.rg += temp.b - 1.0; }\n\n\tgl_FragColor = temp;\n\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\tconst float LOG2 = 1.442695;\n\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n}\n'};fU(1286,1,{},Nuc);_.nc=function Ouc(){return 'uniform vec2 uvScale;\nvarying vec2 vUv;\n\nvoid main()\n{\n\n\tvUv = uvScale * uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n}'};fU(1392,1391,YLc,dGc);_.Qg=function eGc(a,b,c){KMb(zu(LRb(gZb(this.b).i,ARc),225),a.d);KMb(zu(LRb(gZb(this.b).i,hSc),225),new Jjb(zu(zu(LRb(gZb(this.b).i,hSc),225).d,150).a+b));VSb(a.c,this.b);this.a?LGb(a.u,a.v,a.a,null,false):LGb(a.u,a.v,a.a,a.g,false)};_.a=false;fU(1415,728,yLc,yHc);_.Ld=function zHc(){kIb(this,ARc,new LMb((dNb(),XMb)));kIb(this,hSc,new MMb(RMb,new Jjb(0)));kIb(this,mSc,new MMb(RMb,new Jjb(0.5)));kIb(this,nSc,new MMb(RMb,new Jjb(0.05)));kIb(this,oSc,new MMb(UMb,pkb(4096)));kIb(this,lSc,new MMb(UMb,(Kib(),Kib(),Jib)))};var AHc;fU(1416,1,{},FHc);_.Od=function GHc(){return OHc(),DHc};_.Pd=function HHc(){return PHc(),EHc};var DHc,EHc;fU(1417,1,{},JHc);_.nc=function KHc(){return '// control parameter\r\nuniform float time;\r\n\r\nuniform bool grayscale;\r\n\r\n// noise effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float nIntensity;\r\n\r\n// scanlines effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float sIntensity;\r\n\r\n// scanlines effect count value (0 = no effect, 4096 = full effect)\r\nuniform float sCount;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\t// sample the source\r\n\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\r\n\r\n\t// make some noise\r\n\tfloat x = vUv.x * vUv.y * time *  1000.0;\r\n\tx = mod( x, 13.0 ) * mod( x, 123.0 );\r\n\tfloat dx = mod( x, 0.01 );\r\n\r\n\t// add noise\r\n\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\r\n\r\n\t// get us a sine and cosine\r\n\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\r\n\r\n\t// add scanlines\r\n\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\r\n\r\n\t// interpolate between source and result by intensity\r\n\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\r\n\r\n\t// convert to grayscale if desired\r\n\tif( grayscale ) {\r\n\r\n\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\r\n\r\n\t}\r\n\r\n\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\r\n\r\n}\r\n'};fU(1418,1,{},MHc);_.nc=function NHc(){return pSc};var TM=xjb(OQc,'MaterialsShaderLava$DemoScene',1155),BQ=xjb(qSc,'FilmPass',1392),TO=xjb(HQc,'LavaShader',1283),WQ=xjb(rSc,'FilmShader',1415),SO=xjb(HQc,'LavaShader_Resources_default_InlineClientBundleGenerator',1284),QO=xjb(HQc,'LavaShader_Resources_default_InlineClientBundleGenerator$1',1285),RO=xjb(HQc,'LavaShader_Resources_default_InlineClientBundleGenerator$2',1286),VQ=xjb(rSc,'FilmShader_Resources_default_InlineClientBundleGenerator',1416),TQ=xjb(rSc,'FilmShader_Resources_default_InlineClientBundleGenerator$1',1417),UQ=xjb(rSc,'FilmShader_Resources_default_InlineClientBundleGenerator$2',1418);ZLc(xi)(30);