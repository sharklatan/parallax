function enc(){}
function inc(){}
function lnc(){}
function Wqc(){}
function $qc(){}
function brc(){}
function rzc(){}
function vzc(){}
function yzc(){}
function NAc(){}
function RAc(){}
function UAc(){}
function UBc(){}
function eBc(){}
function iBc(){}
function lBc(){}
function xBc(){}
function BBc(){}
function EBc(){}
function QBc(){}
function XBc(){}
function aUb(a,b){a.s=b}
function HUb(a,b){a.b=b}
function T2b(a,b){a.g=b}
function Xyc(a,b){nob(a.b,b)}
function anc(){anc=XCc;_mc=new enc}
function nnc(){nnc=XCc;cnc=new inc}
function onc(){onc=XCc;dnc=new lnc}
function Sqc(){Sqc=XCc;Rqc=new Wqc}
function drc(){drc=XCc;Uqc=new $qc}
function erc(){erc=XCc;Vqc=new brc}
function nzc(){nzc=XCc;mzc=new rzc}
function Azc(){Azc=XCc;pzc=new vzc}
function Bzc(){Bzc=XCc;qzc=new yzc}
function JAc(){JAc=XCc;IAc=new NAc}
function WAc(){WAc=XCc;LAc=new RAc}
function XAc(){XAc=XCc;MAc=new UAc}
function aBc(){aBc=XCc;_Ac=new eBc}
function nBc(){nBc=XCc;cBc=new iBc}
function oBc(){oBc=XCc;dBc=new lBc}
function tBc(){tBc=XCc;sBc=new xBc}
function GBc(){GBc=XCc;vBc=new BBc}
function HBc(){HBc=XCc;wBc=new EBc}
function MBc(){MBc=XCc;LBc=new QBc}
function ZBc(){ZBc=XCc;OBc=new UBc}
function $Bc(){$Bc=XCc;PBc=new XBc}
function Qmc(a,b){this.a=a;this.b=b}
function Tmc(a,b){this.a=a;this.b=b}
function Wmc(a,b){this.a=a;this.b=b}
function Zmc(a,b){this.a=a;this.b=b}
function ZAc(){zEb.call(this,(aBc(),_Ac))}
function GAc(){zEb.call(this,(JAc(),IAc))}
function Nqc(){zEb.call(this,(Sqc(),Rqc))}
function kzc(){zEb.call(this,(nzc(),mzc))}
function qBc(){zEb.call(this,(tBc(),sBc))}
function JBc(){zEb.call(this,(MBc(),LBc))}
function Jmc(a){a.w+=1;a.w==3&&iLb(a.v,true)}
function Kmc(){C4b.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Imc(a,b,c,d){var e,f,g;g=new VZb(b);GIb(xu(QNb(iVb(g).i,WJc),168),c);f=new D3b;e=new L2b(new qSb(a.u,a.t),g);n1b(e.ab,-500);_Kb(f,e);iDb(a.G.n,f,a.c,d,true)}
function Hmc(a,b,c,d,e,f){var g,i;g=new fYb;_Xb(g,new F$b(16755285));g.i=true;dYb(g,(bWb(),$Vb));i=new V2b(b,g);i.b=c;T2b(i,Fu(600*Sib()));j1b(i.ab,d,e,f);G0b(i.db,1.5707963267948966);i.Q=true;i.S=true;_Kb(a.H,i);nob(a.n,i);z3b(a.H,a.G.n)}
var sLc='enableDiffuse1',tLc='enableDiffuse2',lLc='h',nLc='heightMap',xLc='heightmap',zLc='r',rLc='tDetail',pLc='tDiffuse1',qLc='tDiffuse2',vLc='uRepeatOverlay',mLc='v';KS(1189,1,vEc);_.Cb=function Fmc(){z4b(this.b,new Kmc(this.a))};KS(1190,937,{43:1,133:1,275:1},Kmc);_.Td=function Lmc(a){Jmc(this)};_.Id=function Mmc(a){this.u=a.a.o;this.t=a.a.n;GIb(xu(QNb(iVb(this.f.b).i,lLc),168),new Lhb(6/this.u));GIb(xu(QNb(iVb(this.D.b).i,mLc),168),new Lhb(6/this.t))};_.qb=function Nmc(){var b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w;kt((wvb(),vvb),(Gvb(),Fvb),this);this.b=new dMb(40,dDb(this.G.n),2,4000);this.u=this.G.n.o;this.t=this.G.n.n;this.c=new ULb(this.u,this.t,-10000,10000);j1b(this.b.ab,-1200,800,1200);n1b(this.c.ab,100);this.s=new D3b;_Kb(this.s,this.c);this.d=new Bub(this.b,this.G.b);i1b(this.d.v,0);this.d.s=1;this.d.A=1.2;yub(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;wub(this.d,0.15);C3b(this.H,new p3b(328965,2000,4000));B$b(this.H.b.c,0.102,0.9,0.825);_Kb(this.H,new TTb(1118481));this.e=new tUb(16777215,1.15);j1b(this.e.ab,500,2000,0);_Kb(this.H,this.e);this.q=new JUb(16729088,1.5,0);i1b(this.q.ab,0);_Kb(this.H,this.q);this.g=new cKb(256,256);tJb(this.g,(lBb(),gBb));rJb(this.g,(aBb(),$Ab));pJb(this.g,(eAb(),cAb));this.o=new cKb(256,256);tJb(this.o,gBb);rJb(this.o,$Ab);pJb(this.o,cAb);p=new qBc;w=p.i;GIb(xu(w.a[SGc],168),new Lhb(0.05));E0b(xu(xu(w.a[JKc],168).d,234),256,256);GIb(xu(w.a[nLc],168),this.g);u=new cKb(2048,2048);tJb(u,gBb);rJb(u,$Ab);pJb(u,cAb);zJb(u,(DCb(),CCb));AJb(u,CCb);d=new GJb('./static/textures/terrain/grasslight-big.jpg',new Qmc(this,u));zJb(d,CCb);AJb(d,CCb);e=new GJb('./static/textures/terrain/backgrounddetailed6.jpg',this);zJb(e,CCb);AJb(e,CCb);c=new GJb('./static/textures/terrain/grasslight-big-nm.jpg',this);zJb(c,CCb);AJb(c,CCb);v=new Nqc;this.B=v.i;GIb(xu(QNb(this.B,DKc),168),this.o);GIb(xu(QNb(this.B,EKc),168),new Lhb(3.5));GIb(xu(QNb(this.B,oLc),168),this.g);GIb(xu(QNb(this.B,pLc),168),d);GIb(xu(QNb(this.B,qLc),168),e);GIb(xu(QNb(this.B,FKc),168),u);GIb(xu(QNb(this.B,rLc),168),c);GIb(xu(QNb(this.B,sLc),168),(Pgb(),Pgb(),Ogb));GIb(xu(QNb(this.B,tLc),168),Ogb);GIb(xu(QNb(this.B,UJc),168),Ogb);C$b(xu(xu(QNb(this.B,$Jc),168).d,230),16777215);C$b(xu(xu(QNb(this.B,_Jc),168).d,230),16777215);C$b(xu(xu(QNb(this.B,ZJc),168).d,230),1118481);GIb(xu(QNb(this.B,IKc),168),new Lhb(30));GIb(xu(QNb(this.B,uLc),168),new Lhb(375));E0b(xu(xu(QNb(this.B,vLc),168).d,234),6,6);this.A=new crb;Dmb(this.A,MKc,new IIb((_Ib(),NIb),new Lhb(1)));Dmb(this.A,wLc,new IIb(VIb,new I0b(1.5,1.5)));Dmb(this.A,pKc,new IIb(VIb,new I0b(0,0)));this.k=new crb;k=new UZb((anc(),_mc));uEb(iVb(k),this.A);k.c=false;k.b=true;Dmb(this.k,xLc,k);n=new VZb(p);uEb(iVb(n),w);n.c=false;n.b=true;Dmb(this.k,yLc,n);o=new VZb(v);uEb(iVb(o),this.B);o.c=true;o.b=true;Dmb(this.k,'terrain',o);q=new qSb(this.u,this.t);r=new pXb;kXb(r,new F$b(0));this.r=new L2b(q,r);n1b(this.r.ab,-500);_Kb(this.s,this.r);i=new rSb(6000,6000,64,64);GMb(i,Pgb());JMb(i);IMb(i);this.v=new L2b(i,o);j1b(this.v.ab,0,-125,0);F0b(this.v.db,-1.5707963267948966);iLb(this.v,false);_Kb(this.H,this.v);pDb(this.G.n,this.H.b.c);this.G.n.T=true;this.G.n.U=true;this.G.n.R=false;s=new ezc(this.H,this.b);g=new Ryc(0.6);f=new hzc(new kzc);GIb(xu(QNb(iVb(f.b).i,tKc),168),new Lhb(0.65));this.f=new hzc(new GAc);this.D=new hzc(new JBc);GIb(xu(QNb(iVb(this.f.b).i,lLc),168),new Lhb(6/this.u));GIb(xu(QNb(iVb(this.D.b).i,mLc),168),new Lhb(6/this.t));GIb(xu(QNb(iVb(this.f.b).i,zLc),168),new Lhb(0.5));GIb(xu(QNb(iVb(this.D.b).i,zLc),168),new Lhb(0.5));this.D.a=true;t=new cKb(this.u,this.t);tJb(u,fBb);rJb(u,$Ab);pJb(u,cAb);u.f=false;b=new Zyc(this.G.n,t);nob(b.b,s);nob(b.b,g);nob(b.b,f);Xyc(b,this.f);Xyc(b,this.D);j=new Src;this.n=new xob;try{Grc(j,'./static/models/animated/parrot.js',new Tmc(this,j));Grc(j,kLc,new Wmc(this,j));Grc(j,'./static/models/animated/stork.js',new Zmc(this,j))}catch(a){a=PR(a);if(Au(a,46)){QKb();SU(PKb,(asb(),$rb),SJc)}else throw OR(a)}z3b(this.H,this.G.n);this.p=nh()};_.rb=function Omc(a){var b,c,d,e,f;b=(nh()-this.p)*0.001;if(this.v.jb){zub(this.d);this.j=N$b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;B$b(this.H.b.c,0.1,e,this.j);pDb(this.G.n,this.H.b.c);aUb(this.e,0.1+f*1.0499999999999998);HUb(this.q,0.9+f*0.6);GIb(xu(QNb(this.B,EKc),168),new Lhb(0.6+f*2.9));if(this.C){this.a=N$b(this.a+-7.5E-4,0,0.05);GIb(xu(ymb(this.A,MKc),168),new Lhb(xu(xu(ymb(this.A,MKc),168).d,98).a+b*this.a));A0b(xu(xu(ymb(this.A,pKc),168).d,234),b*0.05);F0b(xu(xu(QNb(this.B,ALc),168).d,234),4*xu(xu(ymb(this.A,pKc),168).d,234).c);rTb(this.r,xu(ymb(this.k,xLc),218));iDb(this.G.n,this.s,this.c,this.g,true);rTb(this.r,xu(ymb(this.k,yLc),218));iDb(this.G.n,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=xu(qob(this.n,c),243);U2b(d,Fu(1000*b));A0b(d.ab,d.b*b);d.ab.c>2000&&F0b(d.ab,-1500-Sib()*500)}iDb(this.G.n,this.H,this.b,null,false)}this.p=nh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;KS(1191,1,{},Qmc);_.Td=function Rmc(a){Jmc(this.a);Imc(this.a,new ZAc,a,this.b)};KS(1192,1,{},Tmc);_.Ef=function Umc(){var a;a=this.b.a;Lrc(this.b);Hmc(this.a,a,500,-3500,500,700);Hmc(this.a,a,500,-3000-Sib()*500,500,-200);Hmc(this.a,a,500,-3000-Sib()*500,500,200);Hmc(this.a,a,500,-3000-Sib()*500,500,1000)};KS(1193,1,{},Wmc);_.Ef=function Xmc(){var a;a=this.b.a;Lrc(this.b);Hmc(this.a,a,1000,-3000-Sib()*500,350,40)};KS(1194,1,{},Zmc);_.Ef=function $mc(){var a;a=this.b.a;Lrc(this.b);Hmc(this.a,a,1000,-3000-Sib()*500,350,340)};var _mc;KS(1195,1,{},enc);_.Od=function fnc(){return nnc(),cnc};_.Pd=function gnc(){return onc(),dnc};var cnc,dnc;KS(1196,1,{},inc);_.fc=function jnc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};KS(1197,1,{},lnc);_.fc=function mnc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};KS(1277,706,jEc,Nqc);_.Ld=function Oqc(){uEb(this,dJb());uEb(this,eJb());uEb(this,fJb());nEb(this,sLc,new IIb((_Ib(),QIb),(Pgb(),Pgb(),Ngb)));nEb(this,tLc,new IIb(QIb,Ngb));nEb(this,UJc,new IIb(QIb,Ngb));nEb(this,BLc,new IIb(QIb,Ngb));nEb(this,pLc,new HIb(TIb));nEb(this,qLc,new HIb(TIb));nEb(this,rLc,new HIb(TIb));nEb(this,DKc,new HIb(TIb));nEb(this,FKc,new HIb(TIb));nEb(this,oLc,new HIb(TIb));nEb(this,EKc,new IIb(NIb,new Lhb(1)));nEb(this,CLc,new IIb(NIb,new Lhb(0)));nEb(this,uLc,new IIb(NIb,new Lhb(1)));nEb(this,$Jc,new IIb(MIb,new F$b(15658734)));nEb(this,_Jc,new IIb(MIb,new F$b(1118481)));nEb(this,ZJc,new IIb(MIb,new F$b(328965)));nEb(this,IKc,new IIb(NIb,new Lhb(30)));nEb(this,eKc,new IIb(NIb,new Lhb(1)));nEb(this,'uRepeatBase',new IIb(VIb,new I0b(1,1)));nEb(this,vLc,new IIb(VIb,new I0b(1,1)));nEb(this,ALc,new IIb(VIb,new I0b(0,0)))};_.Md=function Pqc(a){var b,c;c=new Xob(nu(IQ,aDc,1,[fKc,gKc]));b=new Xob(nu(IQ,aDc,1,[iKc,jKc,kKc]));wEb(this,EEb(a,nu(LQ,aDc,120,[c,b])))};_.Nd=function Qqc(a){var b,c;c=new Xob(nu(IQ,aDc,1,[lKc]));b=new Xob(nu(IQ,aDc,1,[mKc]));xEb(this,EEb(a,nu(LQ,aDc,120,[c,b])))};var Rqc;KS(1278,1,{},Wqc);_.Od=function Xqc(){return drc(),Uqc};_.Pd=function Yqc(){return erc(),Vqc};var Uqc,Vqc;KS(1279,1,{},$qc);_.fc=function _qc(){return 'uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\n\nuniform bool enableDiffuse1;\nuniform bool enableDiffuse2;\nuniform bool enableSpecular;\n\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nuniform sampler2D tDetail;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tDisplacement;\n\nuniform float uNormalScale;\n\nuniform vec2 uRepeatOverlay;\nuniform vec2 uRepeatBase;\n\nuniform vec2 uOffset;\n\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\nvarying vec3 vViewPosition;\n\n[*]\n\nvoid main() {\n\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\n\n\tvec3 specularTex = vec3( 1.0 );\n\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\n\tvec2 uvBase = uRepeatBase * vUv;\n\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\n\tnormalTex.xy *= uNormalScale;\n\tnormalTex = normalize( normalTex );\n\n\tif( enableDiffuse1 && enableDiffuse2 ) {\n\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\n\n\t\t#ifdef GAMMA_INPUT\n\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\n\n\t\t#endif\n\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\n\n\t } else if( enableDiffuse1 ) {\n\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\n\n\t} else if( enableDiffuse2 ) {\n\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\n\n\t}\n\n\tif( enableSpecular )\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\n\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\n\tvec3 finalNormal = tsb * normalTex;\n\n\tvec3 normal = normalize( finalNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\n\t// point lights\n\n\t#if MAX_POINT_LIGHTS > 0\n\n\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\tvec3 pointSpecular = vec3( 0.0 );\n\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat pointDistance = lDistance;\n\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\n\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n\n\t\t}\n\n\t#endif\n\n\t// directional lights\n\n\t#if MAX_DIR_LIGHTS > 0\n\n\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\tvec3 dirSpecular = vec3( 0.0 );\n\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n\n\t\t\tdirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\n\t\t\tdirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n\n\t\t}\n\n\t#endif\n\n\t// hemisphere lights\n\n\t#if MAX_HEMI_LIGHTS > 0\n\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\n\t\tvec3 hemiSpecular = vec3( 0.0 );\n\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\n\n\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\t\themiDiffuse += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t\t// specular (sky light)\n\n\t\t\tfloat hemiSpecularWeight = 0.0;\n\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\n\n\t\t\t// specular (ground light)\n\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\n\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n\n\t\t\themiSpecular += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\n\n\t\t}\n\n\t#endif\n\n\t// all lights contribution summation\n\n\tvec3 totalDiffuse = vec3( 0.0 );\n\tvec3 totalSpecular = vec3( 0.0 );\n\n\t#if MAX_DIR_LIGHTS > 0\n\n\t\ttotalDiffuse += dirDiffuse;\n\t\ttotalSpecular += dirSpecular;\n\n\t#endif\n\n\t#if MAX_HEMI_LIGHTS > 0\n\n\t\ttotalDiffuse += hemiDiffuse;\n\t\ttotalSpecular += hemiSpecular;\n\n\t#endif\n\n\t#if MAX_POINT_LIGHTS > 0\n\n\t\ttotalDiffuse += pointDiffuse;\n\t\ttotalSpecular += pointSpecular;\n\n\t#endif\n\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n\n[*]\n}'};KS(1280,1,{},brc);_.fc=function crc(){return 'attribute vec4 tangent;\n\nuniform vec2 uRepeatBase;\n\nuniform sampler2D tNormal;\n\n#ifdef VERTEX_TEXTURES\n\n\tuniform sampler2D tDisplacement;\n\tuniform float uDisplacementScale;\n\tuniform float uDisplacementBias;\n\n#endif\n\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nvarying vec3 vViewPosition;\n\n[*]\n\nvoid main() {\n\n\tvNormal = normalize( normalMatrix * normal );\n\n\t// tangent and binormal vectors\n\n\tvTangent = normalize( normalMatrix * tangent.xyz );\n\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\n\tvBinormal = normalize( vBinormal );\n\n\t// texture coordinates\n\n\tvUv = uv;\n\n\tvec2 uvBase = uv * uRepeatBase;\n\n\t// displacement mapping\n\n\t#ifdef VERTEX_TEXTURES\n\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\n\t\tvec3 displacedPosition = normal * df + position;\n\n\t\tvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n\n\t#else\n\n\t\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\tvViewPosition = -mvPosition.xyz;\n\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\n\tvNormal = normalMatrix * normalTex;\n\n\t[*]\n\n}\n'};KS(1344,706,jEc,kzc);_.Ld=function lzc(){nEb(this,WJc,new HIb((_Ib(),TIb)));nEb(this,tKc,new IIb(NIb,new Lhb(1)))};var mzc;KS(1345,1,{},rzc);_.Od=function szc(){return Azc(),pzc};_.Pd=function tzc(){return Bzc(),qzc};var pzc,qzc;KS(1346,1,{},vzc);_.fc=function wzc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};KS(1347,1,{},yzc);_.fc=function zzc(){return UKc};KS(1368,706,jEc,GAc);_.Ld=function HAc(){nEb(this,WJc,new HIb((_Ib(),TIb)));nEb(this,lLc,new IIb(NIb,new Lhb(0.001953125)));nEb(this,zLc,new IIb(NIb,new Lhb(0.35)))};var IAc;KS(1369,1,{},NAc);_.Od=function OAc(){return WAc(),LAc};_.Pd=function PAc(){return XAc(),MAc};var LAc,MAc;KS(1370,1,{},RAc);_.fc=function SAc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};KS(1371,1,{},UAc);_.fc=function VAc(){return UKc};KS(1374,706,jEc,ZAc);_.Ld=function $Ac(){nEb(this,WJc,new HIb((_Ib(),TIb)))};var _Ac;KS(1375,1,{},eBc);_.Od=function fBc(){return nBc(),cBc};_.Pd=function gBc(){return oBc(),dBc};var cBc,dBc;KS(1376,1,{},iBc);_.fc=function jBc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};KS(1377,1,{},lBc);_.fc=function mBc(){return UKc};KS(1380,706,jEc,qBc);_.Ld=function rBc(){nEb(this,nLc,new HIb((_Ib(),TIb)));nEb(this,JKc,new IIb(VIb,new I0b(512,512)));nEb(this,wLc,new IIb(VIb,new I0b(1,1)));nEb(this,SGc,new IIb(NIb,new Lhb(0.05)))};var sBc;KS(1381,1,{},xBc);_.Od=function yBc(){return GBc(),vBc};_.Pd=function zBc(){return HBc(),wBc};var vBc,wBc;KS(1382,1,{},BBc);_.fc=function CBc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};KS(1383,1,{},EBc);_.fc=function FBc(){return UKc};KS(1386,706,jEc,JBc);_.Ld=function KBc(){nEb(this,WJc,new HIb((_Ib(),TIb)));nEb(this,mLc,new IIb(NIb,new Lhb(0.001953125)));nEb(this,zLc,new IIb(NIb,new Lhb(0.35)))};var LBc;KS(1387,1,{},QBc);_.Od=function RBc(){return ZBc(),OBc};_.Pd=function SBc(){return $Bc(),PBc};var OBc,PBc;KS(1388,1,{},UBc);_.fc=function VBc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};KS(1389,1,{},XBc);_.fc=function YBc(){return UKc};var HN=zhb(sJc,'TerrainDynamic$DemoScene',1190),DN=zhb(sJc,'TerrainDynamic$DemoScene$1',1191),EN=zhb(sJc,'TerrainDynamic$DemoScene$2',1192),FN=zhb(sJc,'TerrainDynamic$DemoScene$3',1193),GN=zhb(sJc,'TerrainDynamic$DemoScene$4',1194),OP=zhb(WKc,DLc,1380),gO=zhb(iJc,'TerrainShader',1277),qP=zhb(WKc,'BleachBypassShader',1344),GP=zhb(WKc,'HorizontalTiltShiftShader',1368),SP=zhb(WKc,'VerticalTiltShiftShader',1386),KN=zhb(sJc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1195),IN=zhb(sJc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1196),JN=zhb(sJc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1197),NP=zhb(WKc,ELc,1381),LP=zhb(WKc,FLc,1382),MP=zhb(WKc,GLc,1383),fO=zhb(iJc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1278),dO=zhb(iJc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1279),eO=zhb(iJc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1280),pP=zhb(WKc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1345),nP=zhb(WKc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1346),oP=zhb(WKc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1347),FP=zhb(WKc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1369),DP=zhb(WKc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1370),EP=zhb(WKc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1371),RP=zhb(WKc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1387),PP=zhb(WKc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1388),QP=zhb(WKc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1389),KP=zhb(WKc,'LuminosityShader',1374),JP=zhb(WKc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1375),HP=zhb(WKc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1376),IP=zhb(WKc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1377);IEc(ti)(41);