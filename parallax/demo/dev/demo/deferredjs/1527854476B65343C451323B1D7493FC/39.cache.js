function atc(){}
function etc(){}
function htc(){}
function gxc(){}
function kxc(){}
function nxc(){}
function VHc(){}
function ZHc(){}
function aIc(){}
function pJc(){}
function tJc(){}
function wJc(){}
function IJc(){}
function MJc(){}
function PJc(){}
function _Jc(){}
function dKc(){}
function gKc(){}
function sKc(){}
function wKc(){}
function zKc(){}
function sYb(a,b){a.c=b}
function l7b(a,b){a.n=b}
function zHc(a,b){Cqb(a.c,b)}
function Psc(a){this.b=a}
function Ssc(a){this.b=a}
function Vsc(a){this.b=a}
function Ysc(){Ysc=tLc;Xsc=new atc}
function jtc(){jtc=tLc;$sc=new etc}
function ktc(){ktc=tLc;_sc=new htc}
function cxc(){cxc=tLc;bxc=new gxc}
function pxc(){pxc=tLc;exc=new kxc}
function qxc(){qxc=tLc;fxc=new nxc}
function RHc(){RHc=tLc;QHc=new VHc}
function cIc(){cIc=tLc;THc=new ZHc}
function dIc(){dIc=tLc;UHc=new aIc}
function lJc(){lJc=tLc;kJc=new pJc}
function yJc(){yJc=tLc;nJc=new tJc}
function zJc(){zJc=tLc;oJc=new wJc}
function EJc(){EJc=tLc;DJc=new IJc}
function RJc(){RJc=tLc;GJc=new MJc}
function SJc(){SJc=tLc;HJc=new PJc}
function XJc(){XJc=tLc;WJc=new _Jc}
function iKc(){iKc=tLc;ZJc=new dKc}
function jKc(){jKc=tLc;$Jc=new gKc}
function oKc(){oKc=tLc;nKc=new sKc}
function BKc(){BKc=tLc;qKc=new wKc}
function CKc(){CKc=tLc;rKc=new zKc}
function Msc(a,b){this.b=a;this.c=b}
function Zwc(){KIb.call(this,(cxc(),bxc))}
function OHc(){KIb.call(this,(RHc(),QHc))}
function iJc(){KIb.call(this,(lJc(),kJc))}
function BJc(){KIb.call(this,(EJc(),DJc))}
function UJc(){KIb.call(this,(XJc(),WJc))}
function lKc(){KIb.call(this,(oKc(),nKc))}
function Fsc(a){a.A+=1;a.A==3&&jPb(a.w,true)}
function Gsc(){k9b.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function Esc(a,b,c,d){var e,f,g;g=new Z1b(b);DMb(Xu(xRb(SYb(g).j,SSc),225),c);f=new S7b;e=new d7b(new kWb(a.v,a.u),g);D5b(e.ab,-500);_Ob(f,e);ZGb(a.H.n,f,a.d,d,true)}
function Dsc(a,b,c,d,e,f){var g,i;g=new R_b;K_b(g,new N2b(16755285));g.k=true;P_b(g,(KZb(),HZb));i=new n7b(b,g);i.e=c;l7b(i,dv(600*dlb()));B5b(i.ab,d,e,f);_2b(i.db,1.5707963267948966);i.T=true;i.V=true;_Ob(a.I,i);Cqb(a.o,i)}
var kUc='enableDiffuse1',lUc='enableDiffuse2',dUc='h',fUc='heightMap',pUc='heightmap',qUc='r',jUc='tDetail',hUc='tDiffuse1',iUc='tDiffuse2',nUc='uRepeatOverlay',eUc='v';vU(1235,1,dNc);_.Db=function Bsc(){M8b(this.c,new Gsc(this.b))};vU(1236,967,{78:1,186:1,337:1},Gsc);_.$d=function Hsc(a){Fsc(this)};_.Md=function Isc(a){this.v=a.b.$;this.u=a.b.Z;DMb(Xu(xRb(SYb(this.g.c).j,dUc),225),new Yjb(6/this.v));DMb(Xu(xRb(SYb(this.F.c).j,eUc),225),new Yjb(6/this.u))};_.ob=function Jsc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Mt((Rxb(),Qxb),(_xb(),$xb),this);this.c=new _Pb(40,NGb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new OPb(this.v,this.u,-10000,10000);B5b(this.c.ab,-1200,800,1200);D5b(this.d.ab,100);this.t=new S7b;_Ob(this.t,this.d);this.e=new Wwb(this.c,this.H.d);A5b(this.e.w,0);this.e.t=1;this.e.B=1.2;Twb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;Rwb(this.e,0.15);R7b(this.I,new H7b(328965,2000,4000));_Ob(this.I,new AXb(1118481));this.f=new bYb(16777215,1.15);B5b(this.f.ab,500,2000,0);_Ob(this.I,this.f);this.r=new uYb(16729088,1.5,0);A5b(this.r.ab,0);_Ob(this.I,this.r);this.i=new _Nb(256,256);rNb(this.i,(yEb(),tEb));pNb(this.i,(nEb(),lEb));mNb(this.i,(JCb(),HCb));nNb(this.i,false);this.p=new _Nb(256,256);rNb(this.p,tEb);pNb(this.p,lEb);mNb(this.p,HCb);nNb(this.p,false);n=new UJc;u=n.j;DMb(Xu(u.b[KPc],225),new Yjb(0.05));Q4b(Xu(Xu(u.b[BTc],225).e,297),256,256);DMb(Xu(u.b[fUc],225),this.i);s=new _Nb(2048,2048);rNb(s,tEb);pNb(s,lEb);mNb(s,HCb);s.s=false;yNb(s,(QFb(),PFb));zNb(s,PFb);c=new FNb('./static/textures/terrain/grasslight-big.jpg',new Msc(this,s));yNb(c,PFb);zNb(c,PFb);d=new FNb('./static/textures/terrain/backgrounddetailed6.jpg',this);yNb(d,PFb);zNb(d,PFb);b=new FNb('./static/textures/terrain/grasslight-big-nm.jpg',this);yNb(b,PFb);zNb(b,PFb);t=new Zwc;this.C=t.j;DMb(Xu(xRb(this.C,vTc),225),this.p);DMb(Xu(xRb(this.C,wTc),225),new Yjb(3.5));DMb(Xu(xRb(this.C,gUc),225),this.i);DMb(Xu(xRb(this.C,hUc),225),c);DMb(Xu(xRb(this.C,iUc),225),d);DMb(Xu(xRb(this.C,xTc),225),s);DMb(Xu(xRb(this.C,jUc),225),b);DMb(Xu(xRb(this.C,kUc),225),(Zib(),Zib(),Yib));DMb(Xu(xRb(this.C,lUc),225),Yib);DMb(Xu(xRb(this.C,QSc),225),Yib);K2b(Xu(Xu(xRb(this.C,WSc),225).e,293),16777215);K2b(Xu(Xu(xRb(this.C,XSc),225).e,293),16777215);K2b(Xu(Xu(xRb(this.C,VSc),225).e,293),1118481);DMb(Xu(xRb(this.C,ATc),225),new Yjb(30));DMb(Xu(xRb(this.C,mUc),225),new Yjb(375));Q4b(Xu(Xu(xRb(this.C,nUc),225).e,297),6,6);this.B=new utb;Sob(this.B,ETc,new FMb((YMb(),KMb),new Yjb(1)));Sob(this.B,oUc,new FMb(SMb,new U4b(1.5,1.5)));Sob(this.B,lTc,new FMb(SMb,new U4b(0,0)));this.n=new utb;i=new Y1b((Ysc(),Xsc));FIb(SYb(i),this.B);i.d=false;i.c=true;Sob(this.n,pUc,i);j=new Z1b(n);FIb(SYb(j),u);j.d=false;j.c=true;Sob(this.n,LSc,j);k=new Z1b(t);FIb(SYb(k),this.C);k.d=true;k.c=true;Sob(this.n,'terrain',k);o=new kWb(this.v,this.u);p=new Z$b;T$b(p,new N2b(0));this.s=new d7b(o,p);D5b(this.s.ab,-500);_Ob(this.t,this.s);g=new lWb(6000,6000,64,64);CQb(g);this.w=new d7b(g,k);B5b(this.w.ab,0,-125,0);$2b(this.w.db,-1.5707963267948966);jPb(this.w,false);_Ob(this.I,this.w);jHb(this.H.n,this.I.c.d,1);this.H.n.bb=true;this.H.n.cb=true;fHb(this.H.n,false);q=new IHc(this.I,this.c);f=new tHc(0.6);e=new LHc(new OHc);DMb(Xu(xRb(SYb(e.c).j,aTc),225),new Yjb(0.65));this.g=new LHc(new iJc);this.F=new LHc(new lKc);DMb(Xu(xRb(SYb(this.g.c).j,dUc),225),new Yjb(6/this.v));DMb(Xu(xRb(SYb(this.F.c).j,eUc),225),new Yjb(6/this.u));DMb(Xu(xRb(SYb(this.g.c).j,qUc),225),new Yjb(0.5));DMb(Xu(xRb(SYb(this.F.c).j,qUc),225),new Yjb(0.5));this.F.b=true;r=new _Nb(this.v,this.u);rNb(s,sEb);pNb(s,lEb);mNb(s,HCb);s.g=false;s.s=false;a=new BHc(this.H.n,r);Cqb(a.c,q);Cqb(a.c,f);Cqb(a.c,e);zHc(a,this.g);zHc(a,this.F);this.o=new Mqb;new fyc('./static/models/animated/parrot.js',new Psc(this));new fyc(cUc,new Ssc(this));new fyc('./static/models/animated/stork.js',new Vsc(this));this.q=Ch()};_.pb=function Ksc(a){var b,c,d,e,f;b=(Ch()-this.q)*0.001;if(this.w.hb){Uwb(this.e);this.k=i3b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;J2b(this.I.c.d,0.1,e,this.k);jHb(this.H.n,this.I.c.d,1);KXb(this.f,0.1+f*1.0499999999999998);sYb(this.r,0.9+f*0.6);DMb(Xu(xRb(this.C,wTc),225),new Yjb(0.6+f*2.9));if(this.D){this.b=i3b(this.b+-7.5E-4,0,0.05);DMb(Xu(Nob(this.B,ETc),225),new Yjb(Xu(Xu(Nob(this.B,ETc),225).e,150).b+b*this.b));M4b(Xu(Xu(Nob(this.B,lTc),225).e,297),b*0.05);R4b(Xu(Xu(xRb(this.C,rUc),225).e,297),4*Xu(Xu(Nob(this.B,lTc),225).e,297).d);FSb(this.s,Xu(Nob(this.n,pUc),281));ZGb(this.H.n,this.t,this.d,this.i,true);FSb(this.s,Xu(Nob(this.n,LSc),281));ZGb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Xu(Fqb(this.o,c),305);m7b(d,dv(1000*b));M4b(d.ab,d.e*b);d.ab.d>2000&&R4b(d.ab,-1500-dlb()*500)}ZGb(this.H.n,this.I,this.c,null,false)}this.q=Ch()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;vU(1237,1,{},Msc);_.$d=function Nsc(a){Fsc(this.b);Esc(this.b,new BJc,a,this.c)};vU(1238,1,{},Psc);_.Ff=function Qsc(a,b){ayc((Xu(a,338),Xu(b,241)));Dsc(this.b,Xu(b,241),500,-3500,500,700);Dsc(this.b,Xu(b,241),500,-3000-dlb()*500,500,-200);Dsc(this.b,Xu(b,241),500,-3000-dlb()*500,500,200);Dsc(this.b,Xu(b,241),500,-3000-dlb()*500,500,1000)};vU(1239,1,{},Ssc);_.Ff=function Tsc(a,b){ayc((Xu(a,338),Xu(b,241)));Dsc(this.b,Xu(b,241),1000,-3000-dlb()*500,350,40)};vU(1240,1,{},Vsc);_.Ff=function Wsc(a,b){ayc((Xu(a,338),Xu(b,241)));Dsc(this.b,Xu(b,241),1000,-3000-dlb()*500,350,340)};var Xsc;vU(1241,1,{},atc);_.Ud=function btc(){return jtc(),$sc};_.Vd=function ctc(){return ktc(),_sc};var $sc,_sc;vU(1242,1,{},etc);_.tc=function ftc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};vU(1243,1,{},htc);_.tc=function itc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};vU(1331,731,SMc,Zwc);_.Rd=function $wc(){FIb(this,aNb());FIb(this,bNb());FIb(this,cNb());yIb(this,kUc,new FMb((YMb(),NMb),(Zib(),Zib(),Xib)));yIb(this,lUc,new FMb(NMb,Xib));yIb(this,QSc,new FMb(NMb,Xib));yIb(this,sUc,new FMb(NMb,Xib));yIb(this,hUc,new EMb(QMb));yIb(this,iUc,new EMb(QMb));yIb(this,jUc,new EMb(QMb));yIb(this,vTc,new EMb(QMb));yIb(this,xTc,new EMb(QMb));yIb(this,gUc,new EMb(QMb));yIb(this,wTc,new FMb(KMb,new Yjb(1)));yIb(this,tUc,new FMb(KMb,new Yjb(0)));yIb(this,mUc,new FMb(KMb,new Yjb(1)));yIb(this,WSc,new FMb(JMb,new N2b(15658734)));yIb(this,XSc,new FMb(JMb,new N2b(1118481)));yIb(this,VSc,new FMb(JMb,new N2b(328965)));yIb(this,ATc,new FMb(KMb,new Yjb(30)));yIb(this,aTc,new FMb(KMb,new Yjb(1)));yIb(this,'uRepeatBase',new FMb(SMb,new U4b(1,1)));yIb(this,nUc,new FMb(SMb,new U4b(1,1)));yIb(this,rUc,new FMb(SMb,new U4b(0,0)))};_.Sd=function _wc(a){var b,c;c=new irb(Nu(sS,zLc,1,[bTc,cTc]));b=new irb(Nu(sS,zLc,1,[eTc,fTc,gTc]));HIb(this,PIb(a,Nu(vS,zLc,173,[c,b])))};_.Td=function axc(a){var b,c;c=new irb(Nu(sS,zLc,1,[hTc]));b=new irb(Nu(sS,zLc,1,[iTc]));IIb(this,PIb(a,Nu(vS,zLc,173,[c,b])))};var bxc;vU(1332,1,{},gxc);_.Ud=function hxc(){return pxc(),exc};_.Vd=function ixc(){return qxc(),fxc};var exc,fxc;vU(1333,1,{},kxc);_.tc=function lxc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};vU(1334,1,{},nxc);_.tc=function oxc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};vU(1426,731,SMc,OHc);_.Rd=function PHc(){yIb(this,SSc,new EMb((YMb(),QMb)));yIb(this,aTc,new FMb(KMb,new Yjb(1)))};var QHc;vU(1427,1,{},VHc);_.Ud=function WHc(){return cIc(),THc};_.Vd=function XHc(){return dIc(),UHc};var THc,UHc;vU(1428,1,{},ZHc);_.tc=function $Hc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};vU(1429,1,{},aIc);_.tc=function bIc(){return MTc};vU(1450,731,SMc,iJc);_.Rd=function jJc(){yIb(this,SSc,new EMb((YMb(),QMb)));yIb(this,dUc,new FMb(KMb,new Yjb(0.001953125)));yIb(this,qUc,new FMb(KMb,new Yjb(0.35)))};var kJc;vU(1451,1,{},pJc);_.Ud=function qJc(){return yJc(),nJc};_.Vd=function rJc(){return zJc(),oJc};var nJc,oJc;vU(1452,1,{},tJc);_.tc=function uJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};vU(1453,1,{},wJc);_.tc=function xJc(){return MTc};vU(1456,731,SMc,BJc);_.Rd=function CJc(){yIb(this,SSc,new EMb((YMb(),QMb)))};var DJc;vU(1457,1,{},IJc);_.Ud=function JJc(){return RJc(),GJc};_.Vd=function KJc(){return SJc(),HJc};var GJc,HJc;vU(1458,1,{},MJc);_.tc=function NJc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};vU(1459,1,{},PJc);_.tc=function QJc(){return MTc};vU(1462,731,SMc,UJc);_.Rd=function VJc(){yIb(this,fUc,new EMb((YMb(),QMb)));yIb(this,BTc,new FMb(SMb,new U4b(512,512)));yIb(this,oUc,new FMb(SMb,new U4b(1,1)));yIb(this,KPc,new FMb(KMb,new Yjb(0.05)))};var WJc;vU(1463,1,{},_Jc);_.Ud=function aKc(){return iKc(),ZJc};_.Vd=function bKc(){return jKc(),$Jc};var ZJc,$Jc;vU(1464,1,{},dKc);_.tc=function eKc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};vU(1465,1,{},gKc);_.tc=function hKc(){return MTc};vU(1468,731,SMc,lKc);_.Rd=function mKc(){yIb(this,SSc,new EMb((YMb(),QMb)));yIb(this,eUc,new FMb(KMb,new Yjb(0.001953125)));yIb(this,qUc,new FMb(KMb,new Yjb(0.35)))};var nKc;vU(1469,1,{},sKc);_.Ud=function tKc(){return BKc(),qKc};_.Vd=function uKc(){return CKc(),rKc};var qKc,rKc;vU(1470,1,{},wKc);_.tc=function xKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};vU(1471,1,{},zKc);_.tc=function AKc(){return MTc};var VO=Mjb(gSc,'TerrainDynamic$DemoScene',1236),RO=Mjb(gSc,'TerrainDynamic$DemoScene$1',1237),SO=Mjb(gSc,'TerrainDynamic$DemoScene$2',1238),TO=Mjb(gSc,'TerrainDynamic$DemoScene$3',1239),UO=Mjb(gSc,'TerrainDynamic$DemoScene$4',1240),wR=Mjb(OTc,uUc,1462),uP=Mjb(YRc,'TerrainShader',1331),$Q=Mjb(OTc,'BleachBypassShader',1426),oR=Mjb(OTc,'HorizontalTiltShiftShader',1450),AR=Mjb(OTc,'VerticalTiltShiftShader',1468),YO=Mjb(gSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1241),WO=Mjb(gSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1242),XO=Mjb(gSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1243),vR=Mjb(OTc,vUc,1463),tR=Mjb(OTc,wUc,1464),uR=Mjb(OTc,xUc,1465),tP=Mjb(YRc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1332),rP=Mjb(YRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1333),sP=Mjb(YRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1334),ZQ=Mjb(OTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1427),XQ=Mjb(OTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1428),YQ=Mjb(OTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1429),nR=Mjb(OTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1451),lR=Mjb(OTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1452),mR=Mjb(OTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1453),zR=Mjb(OTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1469),xR=Mjb(OTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1470),yR=Mjb(OTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1471),sR=Mjb(OTc,'LuminosityShader',1456),rR=Mjb(OTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1457),pR=Mjb(OTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1458),qR=Mjb(OTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1459);rNc(Ii)(39);