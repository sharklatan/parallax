function ttc(){}
function xtc(){}
function Atc(){}
function Nwc(){}
function Rwc(){}
function Uwc(){}
function Gjc(a){this.b=a}
function Dtc(){Dtc=tLc;stc=new Atc}
function ptc(){ptc=tLc;otc=new ttc}
function Ctc(){Ctc=tLc;rtc=new xtc}
function Jwc(){Jwc=tLc;Iwc=new Nwc}
function Wwc(){Wwc=tLc;Lwc=new Rwc}
function Xwc(){Xwc=tLc;Mwc=new Uwc}
function Ewc(){KIb.call(this,(Jwc(),Iwc))}
function mtc(){KIb.call(this,(ptc(),otc))}
function Cjc(){k9b.call(this);this.e=0;this.f=0}
function Bjc(a,b){var c,d,e,f,g,i;d=new ENb(NSc);d.n=4;Q4b(d.C,0.998,0.998);Q4b(d.B,0.001,0.001);yNb(d,(QFb(),PFb));zNb(d,PFb);mNb(d,(JCb(),HCb));e=new ENb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');Q4b(e.C,0.998,0.998);Q4b(e.B,0.001,0.001);yNb(e,PFb);zNb(e,PFb);mNb(e,HCb);c=new ENb('./static/models/obj/leeperrysmith/Map-COL.jpg');Q4b(c.C,0.998,0.998);Q4b(c.B,0.001,0.001);yNb(c,PFb);zNb(c,PFb);mNb(c,HCb);g=new Ewc;i=g.j;DMb(Xu(i.b[PSc],225),(Zib(),Zib(),Yib));DMb(Xu(i.b[QSc],225),Yib);DMb(Xu(i.b[RSc],225),a.c.f);DMb(Xu(i.b[SSc],225),c);DMb(Xu(i.b[TSc],225),d);DMb(Xu(i.b[USc],225),e);K2b(Xu(Xu(i.b[VSc],225).e,293),10526880);K2b(Xu(Xu(i.b[WSc],225).e,293),10526880);K2b(Xu(Xu(i.b[XSc],225).e,293),10526880);DMb(Xu(i.b[YSc],225),new Yjb(0.145));DMb(Xu(i.b[ZSc],225),new Yjb(0.75));DMb(Xu(i.b[$Sc],225),new Yjb(16));p6b(Xu(Xu(i.b[_Sc],225).e,301),0.001,0.001,0.998,0.998);f=new Z1b(g);f.d=true;a.d=new d7b(b,f);S4b(a.d.ab,-50);A5b(a.d.fb,100);ePb(a.d,true);a.d.V=true;_Ob(a.I,a.d)}
var PSc='enableBump',RSc='tBeckmann',YSc='uRoughness',ZSc='uSpecularBrightness';vU(1112,1,dNc);_.Db=function zjc(){M8b(this.c,new Cjc(this.b))};vU(1113,967,{323:1},Cjc);_.ob=function Djc(){var a,b,c,d,e,f,g;this.b=new _Pb(27,NGb(this.H.n),1,10000);D5b(this.b.ab,1200);_Ob(this.I,new AXb(5592405));d=new uYb(16777215,1.5,1000);B5b(d.ab,0,0,600);_Ob(this.I,d);f=new CYb(1);B5b(f.ab,0.05,0.05,1);_Ob(this.I,f);f.ab.sf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new bYb(16777215,0.85);B5b(a.ab,1,-0.5,1);J2b(a.M,0.6,1,0.85);_Ob(this.I,a);a.ab.sf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new bYb(16777215,0.85);B5b(b.ab,1,-0.5,-1);_Ob(this.I,b);new LHc(new mtc);c=new LHc(new yIc);c.b=true;g=new _Nb(512,512);rNb(g,(yEb(),sEb));pNb(g,(nEb(),lEb));mNb(g,(JCb(),HCb));g.g=false;this.c=new BHc(this.H.n,g);new fyc(OSc,new Gjc(this));jHb(this.H.n,new N2b(5001561),1);e=new cGb(this.H.n,this.I);e.i=false;fHb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function Ejc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){T2b(this.d.db,0.05*(b-this.d.db.e));S2b(this.d.db,0.05*(c-this.d.db.d))}HGb(this.H.n);ZGb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;vU(1114,1,{},Gjc);_.Ff=function Hjc(a,b){Bjc(this.b,Xu(b,241))};vU(1246,731,SMc,mtc);_.Rd=function ntc(){};var otc;vU(1247,1,{},ttc);_.Ud=function utc(){return Ctc(),rtc};_.Vd=function vtc(){return Dtc(),stc};var rtc,stc;vU(1248,1,{},xtc);_.tc=function ytc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};vU(1249,1,{},Atc);_.tc=function Btc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};vU(1325,731,SMc,Ewc);_.Rd=function Fwc(){FIb(this,aNb());FIb(this,bNb());FIb(this,cNb());yIb(this,PSc,new FMb((YMb(),NMb),Ekb(0)));yIb(this,QSc,new FMb(NMb,Ekb(0)));yIb(this,SSc,new EMb(QMb));yIb(this,RSc,new EMb(QMb));yIb(this,WSc,new FMb(JMb,new N2b(15658734)));yIb(this,XSc,new FMb(JMb,new N2b(1118481)));yIb(this,VSc,new FMb(JMb,new N2b(328965)));yIb(this,aTc,new FMb(KMb,new Yjb(1)));yIb(this,YSc,new FMb(KMb,new Yjb(0.15)));yIb(this,ZSc,new FMb(KMb,new Yjb(0.75)));yIb(this,TSc,new EMb(QMb));yIb(this,$Sc,new FMb(KMb,new Yjb(1)));yIb(this,USc,new EMb(QMb));yIb(this,_Sc,new FMb(WMb,new t6b(0,0,1,1)));yIb(this,'uWrapRGB',new FMb(UMb,new H5b(0.75,0.375,0.1875)))};_.Sd=function Gwc(a){var b,c;c=new irb(Nu(sS,zLc,1,[bTc,cTc,dTc]));b=new irb(Nu(sS,zLc,1,[eTc,fTc,gTc]));HIb(this,PIb(a,Nu(vS,zLc,173,[c,b])))};_.Td=function Hwc(a){var b,c;c=new irb(Nu(sS,zLc,1,[hTc]));b=new irb(Nu(sS,zLc,1,[iTc]));IIb(this,PIb(a,Nu(vS,zLc,173,[c,b])))};var Iwc;vU(1326,1,{},Nwc);_.Ud=function Owc(){return Wwc(),Lwc};_.Vd=function Pwc(){return Xwc(),Mwc};var Lwc,Mwc;vU(1327,1,{},Rwc);_.tc=function Swc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};vU(1328,1,{},Uwc);_.tc=function Vwc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var MM=Mjb(dSc,'MaterialsBumpmapSkin$DemoScene',1113),LM=Mjb(dSc,'MaterialsBumpmapSkin$DemoScene$1',1114),bP=Mjb(YRc,'BeckmannShader',1246),aP=Mjb(YRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1247),$O=Mjb(YRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1248),_O=Mjb(YRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1249),qP=Mjb(YRc,'SkinSimpleShader',1325),pP=Mjb(YRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1326),nP=Mjb(YRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1327),oP=Mjb(YRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1328);rNc(Ii)(18);