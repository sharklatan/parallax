function RIb(){}
function VIb(){}
function YIb(){}
function NIb(){NIb=yFc;MIb=new RIb}
function $Ib(){$Ib=yFc;PIb=new VIb}
function _Ib(){_Ib=yFc;QIb=new YIb}
function KIb(){uHb.call(this,(NIb(),MIb))}
function wjc(){O7b.call(this);this.d=0;this.e=0}
yT(743,725,WGc,KIb);_.Qd=function LIb(){iHb(this,'mRefractionRatio',new pLb((ILb(),uLb),new Nib(1.02)));iHb(this,'mFresnelBias',new pLb(uLb,new Nib(0.1)));iHb(this,'mFresnelPower',new pLb(uLb,new Nib(2)));iHb(this,'mFresnelScale',new pLb(uLb,new Nib(1)));iHb(this,pNc,new oLb(ALb))};var MIb;yT(744,1,{},RIb);_.Td=function SIb(){return $Ib(),PIb};_.Ud=function TIb(){return _Ib(),QIb};var PIb,QIb;yT(745,1,{},VIb);_.hc=function WIb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};yT(746,1,{},YIb);_.hc=function ZIb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};yT(1124,1,hHc);_.Db=function ujc(){o7b(this.c,new wjc(this.b))};yT(1125,960,{324:1},wjc);_.ob=function xjc(){var a,b,c,d,e,f,g,i,j;this.b=new MOb(60,xFb(this.F.n),1,100000);h4b(this.b.ab,3200);this.c=new MOb(60,xFb(this.F.n),1,100000);this.f=new u6b;a=new dVb(100,32,16);j=new xMb('./static/textures/cube/park2/*.jpg');YLb(j,(uBb(),sBb));g=new KIb;nLb(Xu(iQb(g.j,pNc),225),j);c=new A0b(g);this.g=new Bpb;for(b=0;b<500;b++){e=new J5b(a,c);v3b(e.ab,Ujb()*10000-5000);w3b(e.ab,Ujb()*10000-5000);h4b(e.ab,Ujb()*10000-5000);e4b(e.fb,Ujb()*3+1);LNb(this.G,e);rpb(this.g,e)}this.G.X=false;i=new WHb;nLb(Xu(iQb(i.j,pNc),225),j);f=new A0b(i);OXb(f,(BZb(),yZb));d=new J5b(new oUb(100000,100000,100000),f);LNb(this.f,d);RFb(this.F.n,false)};_.pb=function yjc(a){var b,c,d,e;e=1.0E-4*a;q3b(this.b.ab,(this.d-this.b.ab.d)*0.05);r3b(this.b.ab,(-this.e-this.b.ab.e)*0.05);iOb(this.b,this.G.ab);w1b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Xu(upb(this.g,b),303);v3b(d.ab,5000*Math.cos(e+b));w3b(d.ab,5000*Math.sin(e+b*1.1))}rFb(this.F.n);JFb(this.F.n,this.f,this.c,null,false);JFb(this.F.n,this.G,this.b,null,false)};_.d=0;_.e=0;var ZM=Bib(fMc,'MaterialsCubemapFresnel$DemoScene',1125),CG=Bib(qNc,'FresnelShader',743),BG=Bib(qNc,'FresnelShader_Resources_default_InlineClientBundleGenerator',744),zG=Bib(qNc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',745),AG=Bib(qNc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',746);uHc(Ii)(21);