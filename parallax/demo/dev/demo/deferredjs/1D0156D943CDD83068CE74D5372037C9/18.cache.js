function Ypc(){}
function aqc(){}
function dqc(){}
function ltc(){}
function ptc(){}
function stc(){}
function fic(a){this.b=a}
function fqc(){fqc=yFc;Wpc=new aqc}
function gqc(){gqc=yFc;Xpc=new dqc}
function Upc(){Upc=yFc;Tpc=new Ypc}
function htc(){htc=yFc;gtc=new ltc}
function utc(){utc=yFc;jtc=new ptc}
function vtc(){vtc=yFc;ktc=new stc}
function ctc(){uHb.call(this,(htc(),gtc))}
function Rpc(){uHb.call(this,(Upc(),Tpc))}
function bic(){O7b.call(this);this.e=0;this.f=0}
function aic(a,b){var c,d,e,f,g,i;d=new oMb(PMc);d.n=4;u3b(d.C,0.998,0.998);u3b(d.B,0.001,0.001);iMb(d,(BEb(),AEb));jMb(d,AEb);YLb(d,(uBb(),sBb));e=new oMb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');u3b(e.C,0.998,0.998);u3b(e.B,0.001,0.001);iMb(e,AEb);jMb(e,AEb);YLb(e,sBb);c=new oMb('./static/models/obj/leeperrysmith/Map-COL.jpg');u3b(c.C,0.998,0.998);u3b(c.B,0.001,0.001);iMb(c,AEb);jMb(c,AEb);YLb(c,sBb);g=new ctc;i=g.j;nLb(Xu(i.b[SMc],225),(Ohb(),Ohb(),Nhb));nLb(Xu(i.b[TMc],225),Nhb);nLb(Xu(i.b[UMc],225),a.c.f);nLb(Xu(i.b[VMc],225),c);nLb(Xu(i.b[WMc],225),d);nLb(Xu(i.b[XMc],225),e);m1b(Xu(Xu(i.b[YMc],225).e,292),10526880);m1b(Xu(Xu(i.b[ZMc],225).e,292),10526880);m1b(Xu(Xu(i.b[$Mc],225).e,292),10526880);nLb(Xu(i.b[_Mc],225),new Nib(0.145));nLb(Xu(i.b[aNc],225),new Nib(0.75));nLb(Xu(i.b[bNc],225),new Nib(16));V4b(Xu(Xu(i.b[cNc],225).e,300),0.001,0.001,0.998,0.998);f=new A0b(g);f.d=true;a.d=new J5b(b,f);w3b(a.d.ab,-50);e4b(a.d.fb,100);QNb(a.d,true);a.d.V=true;LNb(a.G,a.d)}
var SMc='enableBump',UMc='tBeckmann',_Mc='uRoughness',aNc='uSpecularBrightness';yT(1104,1,hHc);_.Db=function $hc(){o7b(this.c,new bic(this.b))};yT(1105,960,{320:1},bic);_.ob=function cic(){var b,c,d,e,f,g,i,j;this.b=new MOb(27,xFb(this.F.n),1,10000);h4b(this.b.ab,1200);LNb(this.G,new lWb(5592405));f=new eXb(16777215,1.5,1000);f4b(f.ab,0,0,600);LNb(this.G,f);i=new mXb(1);f4b(i.ab,0.05,0.05,1);LNb(this.G,i);i.ab.sf(700);i.T=true;i.u=true;i.J=2048;i.H=2048;i.B=200;i.A=1500;i.e=40;i.v=-0.005;i.F=0.15;b=new OWb(16777215,0.85);f4b(b.ab,1,-0.5,1);l1b(b.M,0.6,1,0.85);LNb(this.G,b);b.ab.sf(500);b.T=true;b.J=2048;b.H=2048;b.B=200;b.A=1500;b.f=-500;b.g=500;b.i=500;b.e=-500;b.v=-0.005;b.F=0.15;c=new OWb(16777215,0.85);f4b(c.ab,1,-0.5,-1);LNb(this.G,c);new xDc(new Rpc);d=new xDc(new TDc);d.b=true;j=new LMb(512,512);bMb(j,(jDb(),dDb));_Lb(j,($Cb(),YCb));YLb(j,(uBb(),sBb));j.g=false;this.c=new nDc(this.F.n,j);e=new kuc;try{Ytc(e,QMc,new fic(this))}catch(a){a=DS(a);if($u(a,81)){zNb();BV(yNb,(htb(),ftb),RMc)}else throw CS(a)}VFb(this.F.n,new p1b(5001561),1);g=new PEb(this.F.n,this.G);g.i=false;RFb(this.F.n,false);this.F.n.bb=true;this.F.n.cb=true};_.pb=function dic(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){v1b(this.d.db,0.05*(b-this.d.db.e));u1b(this.d.db,0.05*(c-this.d.db.d))}rFb(this.F.n);JFb(this.F.n,this.G,this.b,null,false)};_.e=0;_.f=0;yT(1106,1,{},fic);_.Ff=function gic(a){aic(this.b,Xu(a,241))};yT(1211,725,WGc,Rpc);_.Qd=function Spc(){};var Tpc;yT(1212,1,{},Ypc);_.Td=function Zpc(){return fqc(),Wpc};_.Ud=function $pc(){return gqc(),Xpc};var Wpc,Xpc;yT(1213,1,{},aqc);_.hc=function bqc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};yT(1214,1,{},dqc);_.hc=function eqc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};yT(1287,725,WGc,ctc);_.Qd=function dtc(){pHb(this,MLb());pHb(this,NLb());pHb(this,OLb());iHb(this,SMc,new pLb((ILb(),xLb),tjb(0)));iHb(this,TMc,new pLb(xLb,tjb(0)));iHb(this,VMc,new oLb(ALb));iHb(this,UMc,new oLb(ALb));iHb(this,ZMc,new pLb(tLb,new p1b(15658734)));iHb(this,$Mc,new pLb(tLb,new p1b(1118481)));iHb(this,YMc,new pLb(tLb,new p1b(328965)));iHb(this,dNc,new pLb(uLb,new Nib(1)));iHb(this,_Mc,new pLb(uLb,new Nib(0.15)));iHb(this,aNc,new pLb(uLb,new Nib(0.75)));iHb(this,WMc,new oLb(ALb));iHb(this,bNc,new pLb(uLb,new Nib(1)));iHb(this,XMc,new oLb(ALb));iHb(this,cNc,new pLb(GLb,new Z4b(0,0,1,1)));iHb(this,'uWrapRGB',new pLb(ELb,new l4b(0.75,0.375,0.1875)))};_.Rd=function etc(a){var b,c;c=new Zpb(Nu(tR,EFc,1,[eNc,fNc,gNc]));b=new Zpb(Nu(tR,EFc,1,[hNc,iNc,jNc]));rHb(this,zHb(a,Nu(wR,EFc,173,[c,b])))};_.Sd=function ftc(a){var b,c;c=new Zpb(Nu(tR,EFc,1,[kNc]));b=new Zpb(Nu(tR,EFc,1,[lNc]));sHb(this,zHb(a,Nu(wR,EFc,173,[c,b])))};var gtc;yT(1288,1,{},ltc);_.Td=function mtc(){return utc(),jtc};_.Ud=function ntc(){return vtc(),ktc};var jtc,ktc;yT(1289,1,{},ptc);_.hc=function qtc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};yT(1290,1,{},stc);_.hc=function ttc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var FM=Bib(fMc,'MaterialsBumpmapSkin$DemoScene',1105),EM=Bib(fMc,'MaterialsBumpmapSkin$DemoScene$1',1106),zO=Bib($Lc,'BeckmannShader',1211),yO=Bib($Lc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1212),wO=Bib($Lc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1213),xO=Bib($Lc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1214),OO=Bib($Lc,'SkinSimpleShader',1287),NO=Bib($Lc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1288),LO=Bib($Lc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1289),MO=Bib($Lc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1290);uHc(Ii)(18);