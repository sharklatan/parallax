function Vtc(){}
function Ztc(){}
function auc(){}
function czc(){}
function gzc(){}
function jzc(){}
function RJc(){}
function VJc(){}
function YJc(){}
function lLc(){}
function pLc(){}
function sLc(){}
function ELc(){}
function ILc(){}
function LLc(){}
function XLc(){}
function _Lc(){}
function cMc(){}
function oMc(){}
function sMc(){}
function vMc(){}
function nZb(a,b){a.c=b}
function i8b(a,b){a.n=b}
function vJc(a,b){Uqb(a.c,b)}
function Itc(a){this.b=a}
function Ltc(a){this.b=a}
function Otc(a){this.b=a}
function Rtc(){Rtc=pNc;Qtc=new Vtc}
function cuc(){cuc=pNc;Ttc=new Ztc}
function duc(){duc=pNc;Utc=new auc}
function $yc(){$yc=pNc;Zyc=new czc}
function $Jc(){$Jc=pNc;PJc=new VJc}
function NJc(){NJc=pNc;MJc=new RJc}
function _Jc(){_Jc=pNc;QJc=new YJc}
function lzc(){lzc=pNc;azc=new gzc}
function mzc(){mzc=pNc;bzc=new jzc}
function hLc(){hLc=pNc;gLc=new lLc}
function uLc(){uLc=pNc;jLc=new pLc}
function vLc(){vLc=pNc;kLc=new sLc}
function ALc(){ALc=pNc;zLc=new ELc}
function NLc(){NLc=pNc;CLc=new ILc}
function OLc(){OLc=pNc;DLc=new LLc}
function TLc(){TLc=pNc;SLc=new XLc}
function eMc(){eMc=pNc;VLc=new _Lc}
function fMc(){fMc=pNc;WLc=new cMc}
function kMc(){kMc=pNc;jMc=new oMc}
function xMc(){xMc=pNc;mMc=new sMc}
function yMc(){yMc=pNc;nMc=new vMc}
function Ftc(a,b){this.b=a;this.c=b}
function Vyc(){bJb.call(this,($yc(),Zyc))}
function KJc(){bJb.call(this,(NJc(),MJc))}
function eLc(){bJb.call(this,(hLc(),gLc))}
function xLc(){bJb.call(this,(ALc(),zLc))}
function QLc(){bJb.call(this,(TLc(),SLc))}
function hMc(){bJb.call(this,(kMc(),jMc))}
function ytc(a){a.A+=1;a.A==3&&YPb(a.w,true)}
function ztc(){hac.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function xtc(a,b,c,d){var e,f,g;g=new V2b(b);pNb(Xu(qSb(NZb(g).j,PUc),225),c);f=new P8b;e=new a8b(new fXb(a.v,a.u),g);A6b(e.ab,-500);NPb(f,e);qHb(a.H.n,f,a.d,d,true)}
function wtc(a,b,c,d,e,f){var g,i;g=new N0b;G0b(g,new J3b(16755285));g.k=true;L0b(g,(F$b(),C$b));i=new k8b(b,g);i.e=c;i8b(i,dv(600*vlb()));y6b(i.ab,d,e,f);X3b(i.db,1.5707963267948966);i.T=true;i.V=true;NPb(a.I,i);Uqb(a.o,i)}
var dWc='enableDiffuse1',eWc='enableDiffuse2',YVc='h',$Vc='heightMap',jWc='heightmap',iWc='offset',kWc='r',cWc='tDetail',aWc='tDiffuse1',bWc='tDiffuse2',gWc='uRepeatOverlay',ZVc='v';KU(1240,1,aPc);_.Db=function utc(){J9b(this.c,new ztc(this.b))};KU(1241,974,{78:1,186:1,338:1},ztc);_._d=function Atc(a){ytc(this)};_.Nd=function Btc(a){this.v=a.b.$;this.u=a.b.Z;pNb(Xu(qSb(NZb(this.g.c).j,YVc),225),new okb(6/this.v));pNb(Xu(qSb(NZb(this.F.c).j,ZVc),225),new okb(6/this.u))};_.ob=function Ctc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Mt((iyb(),hyb),(syb(),ryb),this);this.c=new QQb(40,eHb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new BQb(this.v,this.u,-10000,10000);y6b(this.c.ab,-1200,800,1200);A6b(this.d.ab,100);this.t=new P8b;NPb(this.t,this.d);this.e=new nxb(this.c,this.H.d);x6b(this.e.w,0);this.e.t=1;this.e.B=1.2;kxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;ixb(this.e,0.15);N8b(this.I,new D8b(328965,2000,4000));NPb(this.I,new vYb(1118481));this.f=new YYb(16777215,1.15);y6b(this.f.ab,500,2000,0);NPb(this.I,this.f);this.r=new pZb(16729088,1.5,0);x6b(this.r.ab,0);NPb(this.I,this.r);this.i=new NOb(256,256);dOb(this.i,(REb(),MEb));bOb(this.i,(GEb(),EEb));$Nb(this.i,(aDb(),$Cb));_Nb(this.i,false);this.p=new NOb(256,256);dOb(this.p,MEb);bOb(this.p,EEb);$Nb(this.p,$Cb);_Nb(this.p,false);n=new QLc;u=n.j;pNb(Xu(u.b[IRc],225),new okb(0.05));M5b(Xu(Xu(u.b[tVc],225).e,297),256,256);pNb(Xu(u.b[$Vc],225),this.i);s=new NOb(2048,2048);dOb(s,MEb);bOb(s,EEb);$Nb(s,$Cb);s.s=false;kOb(s,(hGb(),gGb));lOb(s,gGb);c=new rOb('./static/textures/terrain/grasslight-big.jpg',new Ftc(this,s));kOb(c,gGb);lOb(c,gGb);d=new rOb('./static/textures/terrain/backgrounddetailed6.jpg',this);kOb(d,gGb);lOb(d,gGb);b=new rOb('./static/textures/terrain/grasslight-big-nm.jpg',this);kOb(b,gGb);lOb(b,gGb);t=new Vyc;this.C=t.j;pNb(Xu(qSb(this.C,nVc),225),this.p);pNb(Xu(qSb(this.C,oVc),225),new okb(3.5));pNb(Xu(qSb(this.C,_Vc),225),this.i);pNb(Xu(qSb(this.C,aWc),225),c);pNb(Xu(qSb(this.C,bWc),225),d);pNb(Xu(qSb(this.C,pVc),225),s);pNb(Xu(qSb(this.C,cWc),225),b);pNb(Xu(qSb(this.C,dWc),225),(pjb(),pjb(),ojb));pNb(Xu(qSb(this.C,eWc),225),ojb);pNb(Xu(qSb(this.C,NUc),225),ojb);G3b(Xu(Xu(qSb(this.C,TUc),225).e,293),16777215);G3b(Xu(Xu(qSb(this.C,UUc),225).e,293),16777215);G3b(Xu(Xu(qSb(this.C,SUc),225).e,293),1118481);pNb(Xu(qSb(this.C,sVc),225),new okb(30));pNb(Xu(qSb(this.C,fWc),225),new okb(375));M5b(Xu(Xu(qSb(this.C,gWc),225).e,297),6,6);this.B=new Mtb;ipb(this.B,wVc,new rNb((KNb(),wNb),new okb(1)));ipb(this.B,hWc,new rNb(ENb,new Q5b(1.5,1.5)));ipb(this.B,iWc,new rNb(ENb,new Q5b(0,0)));this.n=new Mtb;i=new U2b((Rtc(),Qtc));YIb(NZb(i),this.B);i.d=false;i.c=true;ipb(this.n,jWc,i);j=new V2b(n);YIb(NZb(j),u);j.d=false;j.c=true;ipb(this.n,JUc,j);k=new V2b(t);YIb(NZb(k),this.C);k.d=true;k.c=true;ipb(this.n,'terrain',k);o=new fXb(this.v,this.u);p=new U_b;O_b(p,new J3b(0));this.s=new a8b(o,p);A6b(this.s.ab,-500);NPb(this.t,this.s);g=new gXb(6000,6000,64,64);vRb(g);this.w=new a8b(g,k);y6b(this.w.ab,0,-125,0);W3b(this.w.db,-1.5707963267948966);YPb(this.w,false);NPb(this.I,this.w);CHb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;yHb(this.H.n,false);q=new EJc(this.I,this.c);f=new pJc(0.6);e=new HJc(new KJc);pNb(Xu(qSb(NZb(e.c).j,ZUc),225),new okb(0.65));this.g=new HJc(new eLc);this.F=new HJc(new hMc);pNb(Xu(qSb(NZb(this.g.c).j,YVc),225),new okb(6/this.v));pNb(Xu(qSb(NZb(this.F.c).j,ZVc),225),new okb(6/this.u));pNb(Xu(qSb(NZb(this.g.c).j,kWc),225),new okb(0.5));pNb(Xu(qSb(NZb(this.F.c).j,kWc),225),new okb(0.5));this.F.b=true;r=new NOb(this.v,this.u);dOb(s,LEb);bOb(s,EEb);$Nb(s,$Cb);s.g=false;s.s=false;a=new xJc(this.H.n,r);Uqb(a.c,q);Uqb(a.c,f);Uqb(a.c,e);vJc(a,this.g);vJc(a,this.F);this.o=new crb;new bAc('./static/models/animated/parrot.js',new Itc(this));new bAc(XVc,new Ltc(this));new bAc('./static/models/animated/stork.js',new Otc(this));this.q=Ch()};_.pb=function Dtc(a){var b,c,d,e,f;b=(Ch()-this.q)*0.001;if(this.w.hb){lxb(this.e);this.k=e4b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;F3b(this.I.b.d,0.1,e,this.k);CHb(this.H.n,this.I.b.d,1);FYb(this.f,0.1+f*1.0499999999999998);nZb(this.r,0.9+f*0.6);pNb(Xu(qSb(this.C,oVc),225),new okb(0.6+f*2.9));if(this.D){this.b=e4b(this.b+-7.5E-4,0,0.05);pNb(Xu(dpb(this.B,wVc),225),new okb(Xu(Xu(dpb(this.B,wVc),225).e,150).b+b*this.b));I5b(Xu(Xu(dpb(this.B,iWc),225).e,297),b*0.05);N5b(Xu(Xu(qSb(this.C,lWc),225).e,297),4*Xu(Xu(dpb(this.B,iWc),225).e,297).d);ATb(this.s,Xu(dpb(this.n,jWc),282));qHb(this.H.n,this.t,this.d,this.i,true);ATb(this.s,Xu(dpb(this.n,JUc),282));qHb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Xu(Xqb(this.o,c),305);j8b(d,dv(1000*b));I5b(d.ab,d.e*b);d.ab.d>2000&&N5b(d.ab,-1500-vlb()*500)}qHb(this.H.n,this.I,this.c,null,false)}this.q=Ch()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;KU(1242,1,{},Ftc);_._d=function Gtc(a){ytc(this.b);xtc(this.b,new xLc,a,this.c)};KU(1243,1,{},Itc);_.If=function Jtc(a,b){Yzc((Xu(a,339),Xu(b,242)));wtc(this.b,Xu(b,242),500,-3500,500,700);wtc(this.b,Xu(b,242),500,-3000-vlb()*500,500,-200);wtc(this.b,Xu(b,242),500,-3000-vlb()*500,500,200);wtc(this.b,Xu(b,242),500,-3000-vlb()*500,500,1000)};KU(1244,1,{},Ltc);_.If=function Mtc(a,b){Yzc((Xu(a,339),Xu(b,242)));wtc(this.b,Xu(b,242),1000,-3000-vlb()*500,350,40)};KU(1245,1,{},Otc);_.If=function Ptc(a,b){Yzc((Xu(a,339),Xu(b,242)));wtc(this.b,Xu(b,242),1000,-3000-vlb()*500,350,340)};var Qtc;KU(1246,1,{},Vtc);_.Vd=function Wtc(){return cuc(),Ttc};_.Wd=function Xtc(){return duc(),Utc};var Ttc,Utc;KU(1247,1,{},Ztc);_.uc=function $tc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};KU(1248,1,{},auc);_.uc=function buc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};KU(1354,732,POc,Vyc);_.Sd=function Wyc(){YIb(this,ONb());YIb(this,PNb());YIb(this,QNb());RIb(this,dWc,new rNb((KNb(),zNb),(pjb(),pjb(),njb)));RIb(this,eWc,new rNb(zNb,njb));RIb(this,NUc,new rNb(zNb,njb));RIb(this,mWc,new rNb(zNb,njb));RIb(this,aWc,new qNb(CNb));RIb(this,bWc,new qNb(CNb));RIb(this,cWc,new qNb(CNb));RIb(this,nVc,new qNb(CNb));RIb(this,pVc,new qNb(CNb));RIb(this,_Vc,new qNb(CNb));RIb(this,oVc,new rNb(wNb,new okb(1)));RIb(this,nWc,new rNb(wNb,new okb(0)));RIb(this,fWc,new rNb(wNb,new okb(1)));RIb(this,TUc,new rNb(vNb,new J3b(15658734)));RIb(this,UUc,new rNb(vNb,new J3b(1118481)));RIb(this,SUc,new rNb(vNb,new J3b(328965)));RIb(this,sVc,new rNb(wNb,new okb(30)));RIb(this,ZUc,new rNb(wNb,new okb(1)));RIb(this,'uRepeatBase',new rNb(ENb,new Q5b(1,1)));RIb(this,gWc,new rNb(ENb,new Q5b(1,1)));RIb(this,lWc,new rNb(ENb,new Q5b(0,0)))};_.Td=function Xyc(a){var b,c;c=new Arb(Nu(HS,vNc,1,[$Uc,_Uc]));b=new Arb(Nu(HS,vNc,1,[bVc,cVc,dVc]));$Ib(this,gJb(a,Nu(KS,vNc,173,[c,b])))};_.Ud=function Yyc(a){var b,c;c=new Arb(Nu(HS,vNc,1,[eVc]));b=new Arb(Nu(HS,vNc,1,[fVc]));_Ib(this,gJb(a,Nu(KS,vNc,173,[c,b])))};var Zyc;KU(1355,1,{},czc);_.Vd=function dzc(){return lzc(),azc};_.Wd=function ezc(){return mzc(),bzc};var azc,bzc;KU(1356,1,{},gzc);_.uc=function hzc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};KU(1357,1,{},jzc);_.uc=function kzc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};KU(1449,732,POc,KJc);_.Sd=function LJc(){RIb(this,PUc,new qNb((KNb(),CNb)));RIb(this,ZUc,new rNb(wNb,new okb(1)))};var MJc;KU(1450,1,{},RJc);_.Vd=function SJc(){return $Jc(),PJc};_.Wd=function TJc(){return _Jc(),QJc};var PJc,QJc;KU(1451,1,{},VJc);_.uc=function WJc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};KU(1452,1,{},YJc);_.uc=function ZJc(){return EVc};KU(1473,732,POc,eLc);_.Sd=function fLc(){RIb(this,PUc,new qNb((KNb(),CNb)));RIb(this,YVc,new rNb(wNb,new okb(0.001953125)));RIb(this,kWc,new rNb(wNb,new okb(0.35)))};var gLc;KU(1474,1,{},lLc);_.Vd=function mLc(){return uLc(),jLc};_.Wd=function nLc(){return vLc(),kLc};var jLc,kLc;KU(1475,1,{},pLc);_.uc=function qLc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};KU(1476,1,{},sLc);_.uc=function tLc(){return EVc};KU(1479,732,POc,xLc);_.Sd=function yLc(){RIb(this,PUc,new qNb((KNb(),CNb)))};var zLc;KU(1480,1,{},ELc);_.Vd=function FLc(){return NLc(),CLc};_.Wd=function GLc(){return OLc(),DLc};var CLc,DLc;KU(1481,1,{},ILc);_.uc=function JLc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};KU(1482,1,{},LLc);_.uc=function MLc(){return EVc};KU(1485,732,POc,QLc);_.Sd=function RLc(){RIb(this,$Vc,new qNb((KNb(),CNb)));RIb(this,tVc,new rNb(ENb,new Q5b(512,512)));RIb(this,hWc,new rNb(ENb,new Q5b(1,1)));RIb(this,IRc,new rNb(wNb,new okb(0.05)))};var SLc;KU(1486,1,{},XLc);_.Vd=function YLc(){return eMc(),VLc};_.Wd=function ZLc(){return fMc(),WLc};var VLc,WLc;KU(1487,1,{},_Lc);_.uc=function aMc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};KU(1488,1,{},cMc);_.uc=function dMc(){return EVc};KU(1491,732,POc,hMc);_.Sd=function iMc(){RIb(this,PUc,new qNb((KNb(),CNb)));RIb(this,ZVc,new rNb(wNb,new okb(0.001953125)));RIb(this,kWc,new rNb(wNb,new okb(0.35)))};var jMc;KU(1492,1,{},oMc);_.Vd=function pMc(){return xMc(),mMc};_.Wd=function qMc(){return yMc(),nMc};var mMc,nMc;KU(1493,1,{},sMc);_.uc=function tMc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};KU(1494,1,{},vMc);_.uc=function wMc(){return EVc};var YO=ckb(eUc,'TerrainDynamic$DemoScene',1241),UO=ckb(eUc,'TerrainDynamic$DemoScene$1',1242),VO=ckb(eUc,'TerrainDynamic$DemoScene$2',1243),WO=ckb(eUc,'TerrainDynamic$DemoScene$3',1244),XO=ckb(eUc,'TerrainDynamic$DemoScene$4',1245),LR=ckb(GVc,oWc,1485),JP=ckb(WTc,'TerrainShader',1354),nR=ckb(GVc,'BleachBypassShader',1449),DR=ckb(GVc,'HorizontalTiltShiftShader',1473),PR=ckb(GVc,'VerticalTiltShiftShader',1491),_O=ckb(eUc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1246),ZO=ckb(eUc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1247),$O=ckb(eUc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1248),KR=ckb(GVc,pWc,1486),IR=ckb(GVc,qWc,1487),JR=ckb(GVc,rWc,1488),IP=ckb(WTc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1355),GP=ckb(WTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1356),HP=ckb(WTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1357),mR=ckb(GVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1450),kR=ckb(GVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1451),lR=ckb(GVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1452),CR=ckb(GVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1474),AR=ckb(GVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1475),BR=ckb(GVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1476),OR=ckb(GVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1492),MR=ckb(GVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1493),NR=ckb(GVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1494),HR=ckb(GVc,'LuminosityShader',1479),GR=ckb(GVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1480),ER=ckb(GVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1481),FR=ckb(GVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1482);oPc(Ii)(38);