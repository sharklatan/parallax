function TKb(){}
function XKb(){}
function $Kb(){}
function PKb(){PKb=pNc;OKb=new TKb}
function aLb(){aLb=pNc;RKb=new XKb}
function bLb(){bLb=pNc;SKb=new $Kb}
function MKb(){bJb.call(this,(PKb(),OKb))}
function Zlc(){hac.call(this);this.d=0;this.e=0}
KU(756,732,POc,MKb);_.Sd=function NKb(){RIb(this,'mRefractionRatio',new rNb((KNb(),wNb),new okb(1.02)));RIb(this,'mFresnelBias',new rNb(wNb,new okb(0.1)));RIb(this,'mFresnelPower',new rNb(wNb,new okb(2)));RIb(this,'mFresnelScale',new rNb(wNb,new okb(1)));RIb(this,iVc,new qNb(CNb))};var OKb;KU(757,1,{},TKb);_.Vd=function UKb(){return aLb(),RKb};_.Wd=function VKb(){return bLb(),SKb};var RKb,SKb;KU(758,1,{},XKb);_.uc=function YKb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};KU(759,1,{},$Kb);_.uc=function _Kb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};KU(1141,1,aPc);_.Db=function Xlc(){J9b(this.c,new Zlc(this.b))};KU(1142,974,{327:1},Zlc);_.ob=function $lc(){var a,b,c,d,e,f,g,i,j;this.b=new QQb(60,eHb(this.H.n),1,100000);A6b(this.b.ab,3200);this.c=new QQb(60,eHb(this.H.n),1,100000);this.f=new P8b;a=new nXb(100,32,16);j=new zOb('./static/textures/cube/park2/*.jpg');$Nb(j,(aDb(),$Cb));g=new MKb;pNb(Xu(qSb(g.j,iVc),225),j);c=new V2b(g);this.g=new crb;for(b=0;b<500;b++){d=new a8b(a,c);N5b(d.ab,vlb()*10000-5000);O5b(d.ab,vlb()*10000-5000);A6b(d.ab,vlb()*10000-5000);x6b(d.fb,vlb()*3+1);NPb(this.I,d);Uqb(this.g,d)}this.I.X=false;i=new DJb;pNb(Xu(qSb(i.j,iVc),225),j);f=new V2b(i);YZb(f,(K_b(),H_b));e=new a8b(new yWb(100000,100000,100000),f);NPb(this.f,e);yHb(this.H.n,false)};_.pb=function _lc(a){var b,c,d,e;e=1.0E-4*a;I5b(this.b.ab,(this.d-this.b.ab.d)*0.05);J5b(this.b.ab,(-this.e-this.b.ab.e)*0.05);kQb(this.b,this.I.ab);Q3b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Xu(Xqb(this.g,b),304);N5b(d.ab,5000*Math.cos(e+b));O5b(d.ab,5000*Math.sin(e+b*1.1))}ZGb(this.H.n,true);qHb(this.H.n,this.f,this.c,null,false);qHb(this.H.n,this.I,this.b,null,false)};_.d=0;_.e=0;var jN=ckb(bUc,'MaterialsCubemapFresnel$DemoScene',1142),LG=ckb(jVc,'FresnelShader',756),KG=ckb(jVc,'FresnelShader_Resources_default_InlineClientBundleGenerator',757),IG=ckb(jVc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',758),JG=ckb(jVc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',759);oPc(Ii)(21);