function ouc(){}
function suc(){}
function vuc(){}
function vKc(){}
function cKc(){}
function gKc(){}
function jKc(){}
function zKc(){}
function CKc(){}
function OKc(){}
function SKc(){}
function VKc(){}
function Vxc(){}
function Zxc(){}
function ayc(){}
function IIc(){}
function MIc(){}
function PIc(){}
function fLc(){}
function jLc(){}
function mLc(){}
function k$b(a,b){a.b=b}
function i9b(a,b){a.k=b}
function mIc(a,b){Mqb(a.b,b)}
function buc(a){this.a=a}
function euc(a){this.a=a}
function huc(a){this.a=a}
function kuc(){kuc=gMc;juc=new ouc}
function xuc(){xuc=gMc;muc=new suc}
function yuc(){yuc=gMc;nuc=new vuc}
function rKc(){rKc=gMc;qKc=new vKc}
function lKc(){lKc=gMc;aKc=new gKc}
function mKc(){mKc=gMc;bKc=new jKc}
function EKc(){EKc=gMc;tKc=new zKc}
function FKc(){FKc=gMc;uKc=new CKc}
function KKc(){KKc=gMc;JKc=new OKc}
function XKc(){XKc=gMc;MKc=new SKc}
function YKc(){YKc=gMc;NKc=new VKc}
function Rxc(){Rxc=gMc;Qxc=new Vxc}
function cyc(){cyc=gMc;Txc=new Zxc}
function dyc(){dyc=gMc;Uxc=new ayc}
function EIc(){EIc=gMc;DIc=new IIc}
function RIc(){RIc=gMc;GIc=new MIc}
function SIc(){SIc=gMc;HIc=new PIc}
function $Jc(){$Jc=gMc;ZJc=new cKc}
function bLc(){bLc=gMc;aLc=new fLc}
function oLc(){oLc=gMc;dLc=new jLc}
function pLc(){pLc=gMc;eLc=new mLc}
function $tc(a,b){this.a=a;this.b=b}
function $Kc(){nJb.call(this,(bLc(),aLc))}
function oKc(){nJb.call(this,(rKc(),qKc))}
function HKc(){nJb.call(this,(KKc(),JKc))}
function Mxc(){nJb.call(this,(Rxc(),Qxc))}
function BIc(){nJb.call(this,(EIc(),DIc))}
function XJc(){nJb.call(this,($Jc(),ZJc))}
function Ttc(a){a.w+=1;a.w==3&&iQb(a.v,true)}
function Utc(){jbc.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Stc(a,b,c,d){var e,f,g;g=new U3b(b);BNb(yv(GSb(M$b(g).i,JTc),226),c);f=new P9b;e=new $Yb(new uXb(a.u,a.t),g);O7b(e._,-500);ZPb(f,e);EHb(a.G.k,f,a.c,d,true)}
function Rtc(a,b,c,d,e,f){var g,i;g=new M1b;F1b(g,new O4b(16755285));g.j=true;K1b(g,(E_b(),B_b));i=new k9b(b,g);i.d=c;i9b(i,Gv(600*nlb()));M7b(i._,d,e,f);a5b(i.cb,1.5707963267948966);i.S=true;i.U=true;ZPb(a.H,i);Mqb(a.n,i)}
var ZUc='enableDiffuse1',$Uc='enableDiffuse2',SUc='h',UUc='heightMap',dVc='heightmap',cVc='offset',eVc='r',YUc='tDetail',WUc='tDiffuse1',XUc='tDiffuse2',aVc='uRepeatOverlay',TUc='v';zV(1255,1,SNc);_.Mb=function Ptc(){Lac(this.b,new Utc(this.a))};zV(1256,985,{78:1,186:1,343:1},Utc);_.Ud=function Vtc(a){Ttc(this)};_.Gd=function Wtc(a){this.u=a.a.hb;this.t=a.a.gb;BNb(yv(GSb(M$b(this.f.b).i,SUc),226),new gkb(6/this.u));BNb(yv(GSb(M$b(this.D.b).i,TUc),226),new gkb(6/this.t))};_.nb=function Xtc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;mu((byb(),ayb),(lyb(),kyb),this);this.b=new bRb(40,gGb(this.G.k),2,4000);this.u=this.G.k.hb;this.t=this.G.k.gb;this.c=new OQb(this.u,this.t,-10000,10000);M7b(this.b._,-1200,800,1200);O7b(this.c._,100);this.s=new P9b;ZPb(this.s,this.c);this.d=new gxb(this.b,this.G.c);L7b(this.d.v,0);this.d.s=1;this.d.A=1.2;dxb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;bxb(this.d,0.15);N9b(this.H,new D9b(328965,2000,4000));ZPb(this.H,new qZb(1118481));this.e=new UZb(16777215,1.15);M7b(this.e._,500,2000,0);ZPb(this.H,this.e);this.q=new n$b(16729088,1.5,0);L7b(this.q._,0);ZPb(this.H,this.q);this.g=new ZOb(256,256);pOb(this.g,(MEb(),HEb));nOb(this.g,(BEb(),zEb));kOb(this.g,(XCb(),VCb));lOb(this.g,false);this.o=new ZOb(256,256);pOb(this.o,HEb);nOb(this.o,zEb);kOb(this.o,VCb);lOb(this.o,false);n=new HKc;u=n.i;BNb(yv(u.a[tQc],226),new gkb(0.05));Y6b(yv(yv(u.a[nUc],226).d,302),256,256);BNb(yv(u.a[UUc],226),this.g);s=new ZOb(2048,2048);pOb(s,HEb);nOb(s,zEb);kOb(s,VCb);s.r=false;wOb(s,(cGb(),bGb));xOb(s,bGb);c=new DOb('./static/textures/terrain/grasslight-big.jpg',new $tc(this,s));wOb(c,bGb);xOb(c,bGb);d=new DOb('./static/textures/terrain/backgrounddetailed6.jpg',this);wOb(d,bGb);xOb(d,bGb);b=new DOb('./static/textures/terrain/grasslight-big-nm.jpg',this);wOb(b,bGb);xOb(b,bGb);t=new Mxc;this.B=t.i;BNb(yv(GSb(this.B,hUc),226),this.o);BNb(yv(GSb(this.B,iUc),226),new gkb(3.5));BNb(yv(GSb(this.B,VUc),226),this.g);BNb(yv(GSb(this.B,WUc),226),c);BNb(yv(GSb(this.B,XUc),226),d);BNb(yv(GSb(this.B,jUc),226),s);BNb(yv(GSb(this.B,YUc),226),b);BNb(yv(GSb(this.B,ZUc),226),(hjb(),hjb(),gjb));BNb(yv(GSb(this.B,$Uc),226),gjb);BNb(yv(GSb(this.B,HTc),226),gjb);K4b(yv(yv(GSb(this.B,NTc),226).d,298),16777215);K4b(yv(yv(GSb(this.B,OTc),226).d,298),16777215);K4b(yv(yv(GSb(this.B,MTc),226).d,298),1118481);BNb(yv(GSb(this.B,mUc),226),new gkb(30));BNb(yv(GSb(this.B,_Uc),226),new gkb(375));Y6b(yv(yv(GSb(this.B,aVc),226).d,302),6,6);this.A=new Ftb;apb(this.A,qUc,new DNb((WNb(),INb),new gkb(1)));apb(this.A,bVc,new DNb(QNb,new a7b(1.5,1.5)));apb(this.A,cVc,new DNb(QNb,new a7b(0,0)));this.k=new Ftb;i=new T3b((kuc(),juc));iJb(M$b(i),this.A);i.c=false;i.b=true;apb(this.k,dVc,i);j=new U3b(n);iJb(M$b(j),u);j.c=false;j.b=true;apb(this.k,DTc,j);k=new U3b(t);iJb(M$b(k),this.B);k.c=true;k.b=true;apb(this.k,'terrain',k);o=new uXb(this.u,this.t);p=new T0b;N0b(p,new O4b(0));this.r=new $Yb(o,p);O7b(this.r._,-500);ZPb(this.s,this.r);g=new vXb(6000,6000,64,64);KRb(g);this.v=new $Yb(g,k);M7b(this.v._,0,-125,0);_4b(this.v.cb,-1.5707963267948966);iQb(this.v,false);ZPb(this.H,this.v);OHb(this.G.k,this.H.a.c,1);this.G.k.X=true;this.G.k.Y=true;hGb(this.G.k,false);q=new vIc(this.H,this.b);f=new gIc(0.6);e=new yIc(new BIc);BNb(yv(GSb(M$b(e.b).i,TTc),226),new gkb(0.65));this.f=new yIc(new XJc);this.D=new yIc(new $Kc);BNb(yv(GSb(M$b(this.f.b).i,SUc),226),new gkb(6/this.u));BNb(yv(GSb(M$b(this.D.b).i,TUc),226),new gkb(6/this.t));BNb(yv(GSb(M$b(this.f.b).i,eVc),226),new gkb(0.5));BNb(yv(GSb(M$b(this.D.b).i,eVc),226),new gkb(0.5));this.D.a=true;r=new ZOb(this.u,this.t);pOb(s,GEb);nOb(s,zEb);kOb(s,VCb);s.f=false;s.r=false;a=new oIc(this.G.k,r);Mqb(a.b,q);Mqb(a.b,f);Mqb(a.b,e);mIc(a,this.f);mIc(a,this.D);this.n=new Wqb;new Uyc('./static/models/animated/parrot.js',new buc(this));new Uyc(RUc,new euc(this));new Uyc('./static/models/animated/stork.js',new huc(this));this.p=qi()};_.ob=function Ytc(a){var b,c,d,e,f;b=(qi()-this.p)*0.001;if(this.v.gb){exb(this.d);this.j=j5b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;J4b(this.H.a.c,0.1,e,this.j);OHb(this.G.k,this.H.a.c,1);AZb(this.e,0.1+f*1.0499999999999998);k$b(this.q,0.9+f*0.6);BNb(yv(GSb(this.B,iUc),226),new gkb(0.6+f*2.9));if(this.C){this.a=j5b(this.a+-7.5E-4,0,0.05);BNb(yv(Xob(this.A,qUc),226),new gkb(yv(yv(Xob(this.A,qUc),226).d,150).a+b*this.a));U6b(yv(yv(Xob(this.A,cVc),226).d,302),b*0.05);Z6b(yv(yv(GSb(this.B,fVc),226).d,302),4*yv(yv(Xob(this.A,cVc),226).d,302).c);QTb(this.r,yv(Xob(this.k,dVc),287));EHb(this.G.k,this.s,this.c,this.g,true);QTb(this.r,yv(Xob(this.k,DTc),287));EHb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=yv(Pqb(this.n,c),310);j9b(d,Gv(1000*b));U6b(d._,d.d*b);d._.c>2000&&Z6b(d._,-1500-nlb()*500)}EHb(this.G.k,this.H,this.b,null,false)}this.p=qi()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;zV(1257,1,{},$tc);_.Ud=function _tc(a){Ttc(this.a);Stc(this.a,new oKc,a,this.b)};zV(1258,1,{},buc);_.Cf=function cuc(a,b){Pyc((yv(a,345),yv(b,243)));Rtc(this.a,yv(b,243),500,-3500,500,700);Rtc(this.a,yv(b,243),500,-3000-nlb()*500,500,-200);Rtc(this.a,yv(b,243),500,-3000-nlb()*500,500,200);Rtc(this.a,yv(b,243),500,-3000-nlb()*500,500,1000)};zV(1259,1,{},euc);_.Cf=function fuc(a,b){Pyc((yv(a,345),yv(b,243)));Rtc(this.a,yv(b,243),1000,-3000-nlb()*500,350,40)};zV(1260,1,{},huc);_.Cf=function iuc(a,b){Pyc((yv(a,345),yv(b,243)));Rtc(this.a,yv(b,243),1000,-3000-nlb()*500,350,340)};var juc;zV(1261,1,{},ouc);_.Od=function puc(){return xuc(),muc};_.Pd=function quc(){return yuc(),nuc};var muc,nuc;zV(1262,1,{},suc);_.nc=function tuc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};zV(1263,1,{},vuc);_.nc=function wuc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};zV(1324,737,ENc,Mxc);_.Ld=function Nxc(){iJb(this,$Nb());iJb(this,_Nb());iJb(this,aOb());bJb(this,ZUc,new DNb((WNb(),LNb),(hjb(),hjb(),fjb)));bJb(this,$Uc,new DNb(LNb,fjb));bJb(this,HTc,new DNb(LNb,fjb));bJb(this,gVc,new DNb(LNb,fjb));bJb(this,WUc,new CNb(ONb));bJb(this,XUc,new CNb(ONb));bJb(this,YUc,new CNb(ONb));bJb(this,hUc,new CNb(ONb));bJb(this,jUc,new CNb(ONb));bJb(this,VUc,new CNb(ONb));bJb(this,iUc,new DNb(INb,new gkb(1)));bJb(this,hVc,new DNb(INb,new gkb(0)));bJb(this,_Uc,new DNb(INb,new gkb(1)));bJb(this,NTc,new DNb(HNb,new O4b(15658734)));bJb(this,OTc,new DNb(HNb,new O4b(1118481)));bJb(this,MTc,new DNb(HNb,new O4b(328965)));bJb(this,mUc,new DNb(INb,new gkb(30)));bJb(this,TTc,new DNb(INb,new gkb(1)));bJb(this,'uRepeatBase',new DNb(QNb,new a7b(1,1)));bJb(this,aVc,new DNb(QNb,new a7b(1,1)));bJb(this,fVc,new DNb(QNb,new a7b(0,0)))};_.Md=function Oxc(a){var b,c;c=new trb(ov(vT,lMc,1,[UTc,VTc]));b=new trb(ov(vT,lMc,1,[XTc,YTc,ZTc]));kJb(this,sJb(a,ov(yT,lMc,173,[c,b])))};_.Nd=function Pxc(a){var b,c;c=new trb(ov(vT,lMc,1,[$Tc]));b=new trb(ov(vT,lMc,1,[_Tc]));lJb(this,sJb(a,ov(yT,lMc,173,[c,b])))};var Qxc;zV(1325,1,{},Vxc);_.Od=function Wxc(){return cyc(),Txc};_.Pd=function Xxc(){return dyc(),Uxc};var Txc,Uxc;zV(1326,1,{},Zxc);_.nc=function $xc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};zV(1327,1,{},ayc);_.nc=function byc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};zV(1419,737,ENc,BIc);_.Ld=function CIc(){bJb(this,JTc,new CNb((WNb(),ONb)));bJb(this,TTc,new DNb(INb,new gkb(1)))};var DIc;zV(1420,1,{},IIc);_.Od=function JIc(){return RIc(),GIc};_.Pd=function KIc(){return SIc(),HIc};var GIc,HIc;zV(1421,1,{},MIc);_.nc=function NIc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};zV(1422,1,{},PIc);_.nc=function QIc(){return yUc};zV(1443,737,ENc,XJc);_.Ld=function YJc(){bJb(this,JTc,new CNb((WNb(),ONb)));bJb(this,SUc,new DNb(INb,new gkb(0.001953125)));bJb(this,eVc,new DNb(INb,new gkb(0.35)))};var ZJc;zV(1444,1,{},cKc);_.Od=function dKc(){return lKc(),aKc};_.Pd=function eKc(){return mKc(),bKc};var aKc,bKc;zV(1445,1,{},gKc);_.nc=function hKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};zV(1446,1,{},jKc);_.nc=function kKc(){return yUc};zV(1449,737,ENc,oKc);_.Ld=function pKc(){bJb(this,JTc,new CNb((WNb(),ONb)))};var qKc;zV(1450,1,{},vKc);_.Od=function wKc(){return EKc(),tKc};_.Pd=function xKc(){return FKc(),uKc};var tKc,uKc;zV(1451,1,{},zKc);_.nc=function AKc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};zV(1452,1,{},CKc);_.nc=function DKc(){return yUc};zV(1455,737,ENc,HKc);_.Ld=function IKc(){bJb(this,UUc,new CNb((WNb(),ONb)));bJb(this,nUc,new DNb(QNb,new a7b(512,512)));bJb(this,bVc,new DNb(QNb,new a7b(1,1)));bJb(this,tQc,new DNb(INb,new gkb(0.05)))};var JKc;zV(1456,1,{},OKc);_.Od=function PKc(){return XKc(),MKc};_.Pd=function QKc(){return YKc(),NKc};var MKc,NKc;zV(1457,1,{},SKc);_.nc=function TKc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};zV(1458,1,{},VKc);_.nc=function WKc(){return yUc};zV(1461,737,ENc,$Kc);_.Ld=function _Kc(){bJb(this,JTc,new CNb((WNb(),ONb)));bJb(this,TUc,new DNb(INb,new gkb(0.001953125)));bJb(this,eVc,new DNb(INb,new gkb(0.35)))};var aLc;zV(1462,1,{},fLc);_.Od=function gLc(){return oLc(),dLc};_.Pd=function hLc(){return pLc(),eLc};var dLc,eLc;zV(1463,1,{},jLc);_.nc=function kLc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};zV(1464,1,{},mLc);_.nc=function nLc(){return yUc};var JP=Wjb(ZSc,'TerrainDynamic$DemoScene',1256),FP=Wjb(ZSc,'TerrainDynamic$DemoScene$1',1257),GP=Wjb(ZSc,'TerrainDynamic$DemoScene$2',1258),HP=Wjb(ZSc,'TerrainDynamic$DemoScene$3',1259),IP=Wjb(ZSc,'TerrainDynamic$DemoScene$4',1260),zS=Wjb(AUc,iVc,1455),xQ=Wjb(PSc,'TerrainShader',1324),bS=Wjb(AUc,'BleachBypassShader',1419),rS=Wjb(AUc,'HorizontalTiltShiftShader',1443),DS=Wjb(AUc,'VerticalTiltShiftShader',1461),MP=Wjb(ZSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1261),KP=Wjb(ZSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1262),LP=Wjb(ZSc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1263),yS=Wjb(AUc,jVc,1456),wS=Wjb(AUc,kVc,1457),xS=Wjb(AUc,lVc,1458),wQ=Wjb(PSc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1325),uQ=Wjb(PSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1326),vQ=Wjb(PSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1327),aS=Wjb(AUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1420),$R=Wjb(AUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1421),_R=Wjb(AUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1422),qS=Wjb(AUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1444),oS=Wjb(AUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1445),pS=Wjb(AUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1446),CS=Wjb(AUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1462),AS=Wjb(AUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1463),BS=Wjb(AUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1464),vS=Wjb(AUc,'LuminosityShader',1449),uS=Wjb(AUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1450),sS=Wjb(AUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1451),tS=Wjb(AUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1452);eOc(wj)(38);