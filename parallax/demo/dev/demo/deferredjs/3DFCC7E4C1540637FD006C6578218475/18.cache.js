function Ktc(){}
function Otc(){}
function Rtc(){}
function rwc(){}
function vwc(){}
function ywc(){}
function pkc(a){this.a=a}
function Gtc(){Gtc=ZKc;Ftc=new Ktc}
function Ttc(){Ttc=ZKc;Itc=new Otc}
function Utc(){Utc=ZKc;Jtc=new Rtc}
function nwc(){nwc=ZKc;mwc=new rwc}
function Awc(){Awc=ZKc;pwc=new vwc}
function Bwc(){Bwc=ZKc;qwc=new ywc}
function iwc(){KIb.call(this,(nwc(),mwc))}
function Dtc(){KIb.call(this,(Gtc(),Ftc))}
function lkc(){mac.call(this);this.d=0;this.e=0}
function kkc(a,b){var c,d,e,f,g,i;d=new ZNb(uSc);d.k=4;c6b(d.B,0.998,0.998);c6b(d.A,0.001,0.001);TNb(d,(QFb(),PFb));UNb(d,PFb);HNb(d,(JCb(),HCb));e=new ZNb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');c6b(e.B,0.998,0.998);c6b(e.A,0.001,0.001);TNb(e,PFb);UNb(e,PFb);HNb(e,HCb);c=new ZNb('./static/models/obj/leeperrysmith/Map-COL.jpg');c6b(c.B,0.998,0.998);c6b(c.A,0.001,0.001);TNb(c,PFb);UNb(c,PFb);HNb(c,HCb);g=new iwc;i=g.i;YMb(zu(i.a[wSc],225),(Vib(),Vib(),Uib));YMb(zu(i.a[xSc],225),Uib);YMb(zu(i.a[ySc],225),a.b.e);YMb(zu(i.a[zSc],225),c);YMb(zu(i.a[ASc],225),d);YMb(zu(i.a[BSc],225),e);Y3b(zu(zu(i.a[CSc],225).d,293),10526880);Y3b(zu(zu(i.a[DSc],225).d,293),10526880);Y3b(zu(zu(i.a[ESc],225).d,293),10526880);YMb(zu(i.a[FSc],225),new Ujb(0.145));YMb(zu(i.a[GSc],225),new Ujb(0.75));YMb(zu(i.a[HSc],225),new Ujb(16));E7b(zu(zu(i.a[ISc],225).d,301),0.001,0.001,0.998,0.998);f=new k3b(g);f.c=true;a.c=new uYb(b,f);e6b(a.c._,-50);P6b(a.c.eb,100);zPb(a.c,true);a.c.U=true;uPb(a.H,a.c)}
var wSc='enableBump',ySc='tBeckmann',FSc='uRoughness',GSc='uSpecularBrightness';qU(1124,1,JMc);_.zb=function ikc(){O9b(this.b,new lkc(this.a))};qU(1125,977,{323:1},lkc);_.nb=function mkc(){var a,b,c,d,e,f,g;this.a=new xQb(27,NGb(this.G.k),1,10000);S6b(this.a._,1200);uPb(this.H,new MYb(5592405));d=new GZb(16777215,1.5,1000);Q6b(d._,0,0,600);uPb(this.H,d);f=new OZb(1);Q6b(f._,0.05,0.05,1);uPb(this.H,f);f._.qf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new nZb(16777215,0.85);Q6b(a._,1,-0.5,1);X3b(a.L,0.6,1,0.85);uPb(this.H,a);a._.qf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new nZb(16777215,0.85);Q6b(b._,1,-0.5,-1);uPb(this.H,b);new pHc(new Dtc);c=new pHc(new cIc);c.a=true;g=new uOb(512,512);MNb(g,(yEb(),sEb));KNb(g,(nEb(),lEb));HNb(g,(JCb(),HCb));g.f=false;this.b=new fHc(this.G.k,g);new Lxc(vSc,new pkc(this));jHb(this.G.k,new _3b(5001561),1);e=new cGb(this.G.k,this.H);e.g=false;fHb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function nkc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){f4b(this.c.cb,0.05*(b-this.c.cb.d));e4b(this.c.cb,0.05*(c-this.c.cb.c))}GGb(this.G.k,true);ZGb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;qU(1126,1,{},pkc);_.Bf=function qkc(a,b){kkc(this.a,zu(b,242))};qU(1258,729,vMc,Dtc);_.Ld=function Etc(){};var Ftc;qU(1259,1,{},Ktc);_.Od=function Ltc(){return Ttc(),Itc};_.Pd=function Mtc(){return Utc(),Jtc};var Itc,Jtc;qU(1260,1,{},Otc);_.nc=function Ptc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};qU(1261,1,{},Rtc);_.nc=function Stc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};qU(1307,729,vMc,iwc);_.Ld=function jwc(){FIb(this,vNb());FIb(this,wNb());FIb(this,xNb());yIb(this,wSc,new $Mb((rNb(),gNb),Akb(0)));yIb(this,xSc,new $Mb(gNb,Akb(0)));yIb(this,zSc,new ZMb(jNb));yIb(this,ySc,new ZMb(jNb));yIb(this,DSc,new $Mb(cNb,new _3b(15658734)));yIb(this,ESc,new $Mb(cNb,new _3b(1118481)));yIb(this,CSc,new $Mb(cNb,new _3b(328965)));yIb(this,JSc,new $Mb(dNb,new Ujb(1)));yIb(this,FSc,new $Mb(dNb,new Ujb(0.15)));yIb(this,GSc,new $Mb(dNb,new Ujb(0.75)));yIb(this,ASc,new ZMb(jNb));yIb(this,HSc,new $Mb(dNb,new Ujb(1)));yIb(this,BSc,new ZMb(jNb));yIb(this,ISc,new $Mb(pNb,new I7b(0,0,1,1)));yIb(this,'uWrapRGB',new $Mb(nNb,new W6b(0.75,0.375,0.1875)))};_.Md=function kwc(a){var b,c;c=new frb(pu(mS,cLc,1,[KSc,LSc,MSc]));b=new frb(pu(mS,cLc,1,[NSc,OSc,PSc]));HIb(this,PIb(a,pu(pS,cLc,173,[c,b])))};_.Nd=function lwc(a){var b,c;c=new frb(pu(mS,cLc,1,[QSc]));b=new frb(pu(mS,cLc,1,[RSc]));IIb(this,PIb(a,pu(pS,cLc,173,[c,b])))};var mwc;qU(1308,1,{},rwc);_.Od=function swc(){return Awc(),pwc};_.Pd=function twc(){return Bwc(),qwc};var pwc,qwc;qU(1309,1,{},vwc);_.nc=function wwc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};qU(1310,1,{},ywc);_.nc=function zwc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var rM=Ijb(NRc,'MaterialsBumpmapSkin$DemoScene',1125),qM=Ijb(NRc,'MaterialsBumpmapSkin$DemoScene$1',1126),LO=Ijb(GRc,'BeckmannShader',1258),KO=Ijb(GRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1259),IO=Ijb(GRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1260),JO=Ijb(GRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1261),kP=Ijb(GRc,'SkinSimpleShader',1307),jP=Ijb(GRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1308),hP=Ijb(GRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1309),iP=Ijb(GRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1310);XMc(xi)(18);