function rtc(){}
function vtc(){}
function ytc(){}
function Mwc(){}
function Qwc(){}
function Twc(){}
function zHc(){}
function DHc(){}
function GHc(){}
function VIc(){}
function ZIc(){}
function aJc(){}
function mJc(){}
function qJc(){}
function tJc(){}
function FJc(){}
function JJc(){}
function MJc(){}
function YJc(){}
function aKc(){}
function dKc(){}
function EZb(a,b){a.b=b}
function m8b(a,b){a.k=b}
function dHc(a,b){yqb(a.b,b)}
function etc(a){this.a=a}
function htc(a){this.a=a}
function ktc(a){this.a=a}
function ntc(){ntc=ZKc;mtc=new rtc}
function Atc(){Atc=ZKc;ptc=new vtc}
function Btc(){Btc=ZKc;qtc=new ytc}
function Iwc(){Iwc=ZKc;Hwc=new Mwc}
function Vwc(){Vwc=ZKc;Kwc=new Qwc}
function Wwc(){Wwc=ZKc;Lwc=new Twc}
function vHc(){vHc=ZKc;uHc=new zHc}
function IHc(){IHc=ZKc;xHc=new DHc}
function JHc(){JHc=ZKc;yHc=new GHc}
function RIc(){RIc=ZKc;QIc=new VIc}
function cJc(){cJc=ZKc;TIc=new ZIc}
function dJc(){dJc=ZKc;UIc=new aJc}
function iJc(){iJc=ZKc;hJc=new mJc}
function vJc(){vJc=ZKc;kJc=new qJc}
function wJc(){wJc=ZKc;lJc=new tJc}
function BJc(){BJc=ZKc;AJc=new FJc}
function OJc(){OJc=ZKc;DJc=new JJc}
function PJc(){PJc=ZKc;EJc=new MJc}
function UJc(){UJc=ZKc;TJc=new YJc}
function fKc(){fKc=ZKc;WJc=new aKc}
function gKc(){gKc=ZKc;XJc=new dKc}
function btc(a,b){this.a=a;this.b=b}
function Dwc(){KIb.call(this,(Iwc(),Hwc))}
function sHc(){KIb.call(this,(vHc(),uHc))}
function OIc(){KIb.call(this,(RIc(),QIc))}
function fJc(){KIb.call(this,(iJc(),hJc))}
function yJc(){KIb.call(this,(BJc(),AJc))}
function RJc(){KIb.call(this,(UJc(),TJc))}
function Wsc(a){a.w+=1;a.w==3&&FPb(a.v,true)}
function Xsc(){mac.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Vsc(a,b,c,d){var e,f,g;g=new k3b(b);YMb(zu(aSb(c$b(g).i,zSc),225),c);f=new T8b;e=new uYb(new RWb(a.u,a.t),g);S6b(e._,-500);uPb(f,e);ZGb(a.G.k,f,a.c,d,true)}
function Usc(a,b,c,d,e,f){var g,i;g=new c1b;X0b(g,new _3b(16755285));g.j=true;a1b(g,(W$b(),T$b));i=new o8b(b,g);i.d=c;m8b(i,Hu(600*_kb()));Q6b(i._,d,e,f);n4b(i.cb,1.5707963267948966);i.S=true;i.U=true;uPb(a.H,i);yqb(a.n,i)}
var PTc='enableDiffuse1',QTc='enableDiffuse2',ITc='h',KTc='heightMap',VTc='heightmap',UTc='offset',WTc='r',OTc='tDetail',MTc='tDiffuse1',NTc='tDiffuse2',STc='uRepeatOverlay',JTc='v';qU(1247,1,JMc);_.zb=function Ssc(){O9b(this.b,new Xsc(this.a))};qU(1248,977,{78:1,186:1,338:1},Xsc);_.Ud=function Ysc(a){Wsc(this)};_.Gd=function Zsc(a){this.u=a.a.Z;this.t=a.a.Y;YMb(zu(aSb(c$b(this.f.b).i,ITc),225),new Ujb(6/this.u));YMb(zu(aSb(c$b(this.D.b).i,JTc),225),new Ujb(6/this.t))};_.nb=function $sc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;nt((Pxb(),Oxb),(Zxb(),Yxb),this);this.b=new xQb(40,NGb(this.G.k),2,4000);this.u=this.G.k.Z;this.t=this.G.k.Y;this.c=new iQb(this.u,this.t,-10000,10000);Q6b(this.b._,-1200,800,1200);S6b(this.c._,100);this.s=new T8b;uPb(this.s,this.c);this.d=new Uwb(this.b,this.G.c);P6b(this.d.v,0);this.d.s=1;this.d.A=1.2;Rwb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;Pwb(this.d,0.15);R8b(this.H,new H8b(328965,2000,4000));uPb(this.H,new MYb(1118481));this.e=new nZb(16777215,1.15);Q6b(this.e._,500,2000,0);uPb(this.H,this.e);this.q=new GZb(16729088,1.5,0);P6b(this.q._,0);uPb(this.H,this.q);this.g=new uOb(256,256);MNb(this.g,(yEb(),tEb));KNb(this.g,(nEb(),lEb));HNb(this.g,(JCb(),HCb));INb(this.g,false);this.o=new uOb(256,256);MNb(this.o,tEb);KNb(this.o,lEb);HNb(this.o,HCb);INb(this.o,false);n=new yJc;u=n.i;YMb(zu(u.a[fPc],225),new Ujb(0.05));c6b(zu(zu(u.a[dTc],225).d,297),256,256);YMb(zu(u.a[KTc],225),this.g);s=new uOb(2048,2048);MNb(s,tEb);KNb(s,lEb);HNb(s,HCb);s.r=false;TNb(s,(QFb(),PFb));UNb(s,PFb);c=new $Nb('./static/textures/terrain/grasslight-big.jpg',new btc(this,s));TNb(c,PFb);UNb(c,PFb);d=new $Nb('./static/textures/terrain/backgrounddetailed6.jpg',this);TNb(d,PFb);UNb(d,PFb);b=new $Nb('./static/textures/terrain/grasslight-big-nm.jpg',this);TNb(b,PFb);UNb(b,PFb);t=new Dwc;this.B=t.i;YMb(zu(aSb(this.B,ZSc),225),this.o);YMb(zu(aSb(this.B,$Sc),225),new Ujb(3.5));YMb(zu(aSb(this.B,LTc),225),this.g);YMb(zu(aSb(this.B,MTc),225),c);YMb(zu(aSb(this.B,NTc),225),d);YMb(zu(aSb(this.B,_Sc),225),s);YMb(zu(aSb(this.B,OTc),225),b);YMb(zu(aSb(this.B,PTc),225),(Vib(),Vib(),Uib));YMb(zu(aSb(this.B,QTc),225),Uib);YMb(zu(aSb(this.B,xSc),225),Uib);Y3b(zu(zu(aSb(this.B,DSc),225).d,293),16777215);Y3b(zu(zu(aSb(this.B,ESc),225).d,293),16777215);Y3b(zu(zu(aSb(this.B,CSc),225).d,293),1118481);YMb(zu(aSb(this.B,cTc),225),new Ujb(30));YMb(zu(aSb(this.B,RTc),225),new Ujb(375));c6b(zu(zu(aSb(this.B,STc),225).d,297),6,6);this.A=new rtb;Oob(this.A,gTc,new $Mb((rNb(),dNb),new Ujb(1)));Oob(this.A,TTc,new $Mb(lNb,new g6b(1.5,1.5)));Oob(this.A,UTc,new $Mb(lNb,new g6b(0,0)));this.k=new rtb;i=new j3b((ntc(),mtc));FIb(c$b(i),this.A);i.c=false;i.b=true;Oob(this.k,VTc,i);j=new k3b(n);FIb(c$b(j),u);j.c=false;j.b=true;Oob(this.k,tSc,j);k=new k3b(t);FIb(c$b(k),this.B);k.c=true;k.b=true;Oob(this.k,'terrain',k);o=new RWb(this.u,this.t);p=new j0b;d0b(p,new _3b(0));this.r=new uYb(o,p);S6b(this.r._,-500);uPb(this.s,this.r);g=new SWb(6000,6000,64,64);eRb(g);this.v=new uYb(g,k);Q6b(this.v._,0,-125,0);m4b(this.v.cb,-1.5707963267948966);FPb(this.v,false);uPb(this.H,this.v);jHb(this.G.k,this.H.a.c,1);this.G.k.ab=true;this.G.k.bb=true;fHb(this.G.k,false);q=new mHc(this.H,this.b);f=new ZGc(0.6);e=new pHc(new sHc);YMb(zu(aSb(c$b(e.b).i,JSc),225),new Ujb(0.65));this.f=new pHc(new OIc);this.D=new pHc(new RJc);YMb(zu(aSb(c$b(this.f.b).i,ITc),225),new Ujb(6/this.u));YMb(zu(aSb(c$b(this.D.b).i,JTc),225),new Ujb(6/this.t));YMb(zu(aSb(c$b(this.f.b).i,WTc),225),new Ujb(0.5));YMb(zu(aSb(c$b(this.D.b).i,WTc),225),new Ujb(0.5));this.D.a=true;r=new uOb(this.u,this.t);MNb(s,sEb);KNb(s,lEb);HNb(s,HCb);s.f=false;s.r=false;a=new fHc(this.G.k,r);yqb(a.b,q);yqb(a.b,f);yqb(a.b,e);dHc(a,this.f);dHc(a,this.D);this.n=new Iqb;new Lxc('./static/models/animated/parrot.js',new etc(this));new Lxc(HTc,new htc(this));new Lxc('./static/models/animated/stork.js',new ktc(this));this.p=rh()};_.ob=function _sc(a){var b,c,d,e,f;b=(rh()-this.p)*0.001;if(this.v.gb){Swb(this.d);this.j=w4b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;X3b(this.H.a.c,0.1,e,this.j);jHb(this.G.k,this.H.a.c,1);WYb(this.e,0.1+f*1.0499999999999998);EZb(this.q,0.9+f*0.6);YMb(zu(aSb(this.B,$Sc),225),new Ujb(0.6+f*2.9));if(this.C){this.a=w4b(this.a+-7.5E-4,0,0.05);YMb(zu(Job(this.A,gTc),225),new Ujb(zu(zu(Job(this.A,gTc),225).d,150).a+b*this.a));$5b(zu(zu(Job(this.A,UTc),225).d,297),b*0.05);d6b(zu(zu(aSb(this.B,XTc),225).d,297),4*zu(zu(Job(this.A,UTc),225).d,297).c);kTb(this.r,zu(Job(this.k,VTc),282));ZGb(this.G.k,this.s,this.c,this.g,true);kTb(this.r,zu(Job(this.k,tSc),282));ZGb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=zu(Bqb(this.n,c),305);n8b(d,Hu(1000*b));$5b(d._,d.d*b);d._.c>2000&&d6b(d._,-1500-_kb()*500)}ZGb(this.G.k,this.H,this.b,null,false)}this.p=rh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;qU(1249,1,{},btc);_.Ud=function ctc(a){Wsc(this.a);Vsc(this.a,new fJc,a,this.b)};qU(1250,1,{},etc);_.Bf=function ftc(a,b){Gxc((zu(a,339),zu(b,242)));Usc(this.a,zu(b,242),500,-3500,500,700);Usc(this.a,zu(b,242),500,-3000-_kb()*500,500,-200);Usc(this.a,zu(b,242),500,-3000-_kb()*500,500,200);Usc(this.a,zu(b,242),500,-3000-_kb()*500,500,1000)};qU(1251,1,{},htc);_.Bf=function itc(a,b){Gxc((zu(a,339),zu(b,242)));Usc(this.a,zu(b,242),1000,-3000-_kb()*500,350,40)};qU(1252,1,{},ktc);_.Bf=function ltc(a,b){Gxc((zu(a,339),zu(b,242)));Usc(this.a,zu(b,242),1000,-3000-_kb()*500,350,340)};var mtc;qU(1253,1,{},rtc);_.Od=function stc(){return Atc(),ptc};_.Pd=function ttc(){return Btc(),qtc};var ptc,qtc;qU(1254,1,{},vtc);_.nc=function wtc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};qU(1255,1,{},ytc);_.nc=function ztc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};qU(1313,729,vMc,Dwc);_.Ld=function Ewc(){FIb(this,vNb());FIb(this,wNb());FIb(this,xNb());yIb(this,PTc,new $Mb((rNb(),gNb),(Vib(),Vib(),Tib)));yIb(this,QTc,new $Mb(gNb,Tib));yIb(this,xSc,new $Mb(gNb,Tib));yIb(this,YTc,new $Mb(gNb,Tib));yIb(this,MTc,new ZMb(jNb));yIb(this,NTc,new ZMb(jNb));yIb(this,OTc,new ZMb(jNb));yIb(this,ZSc,new ZMb(jNb));yIb(this,_Sc,new ZMb(jNb));yIb(this,LTc,new ZMb(jNb));yIb(this,$Sc,new $Mb(dNb,new Ujb(1)));yIb(this,ZTc,new $Mb(dNb,new Ujb(0)));yIb(this,RTc,new $Mb(dNb,new Ujb(1)));yIb(this,DSc,new $Mb(cNb,new _3b(15658734)));yIb(this,ESc,new $Mb(cNb,new _3b(1118481)));yIb(this,CSc,new $Mb(cNb,new _3b(328965)));yIb(this,cTc,new $Mb(dNb,new Ujb(30)));yIb(this,JSc,new $Mb(dNb,new Ujb(1)));yIb(this,'uRepeatBase',new $Mb(lNb,new g6b(1,1)));yIb(this,STc,new $Mb(lNb,new g6b(1,1)));yIb(this,XTc,new $Mb(lNb,new g6b(0,0)))};_.Md=function Fwc(a){var b,c;c=new frb(pu(mS,cLc,1,[KSc,LSc]));b=new frb(pu(mS,cLc,1,[NSc,OSc,PSc]));HIb(this,PIb(a,pu(pS,cLc,173,[c,b])))};_.Nd=function Gwc(a){var b,c;c=new frb(pu(mS,cLc,1,[QSc]));b=new frb(pu(mS,cLc,1,[RSc]));IIb(this,PIb(a,pu(pS,cLc,173,[c,b])))};var Hwc;qU(1314,1,{},Mwc);_.Od=function Nwc(){return Vwc(),Kwc};_.Pd=function Owc(){return Wwc(),Lwc};var Kwc,Lwc;qU(1315,1,{},Qwc);_.nc=function Rwc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};qU(1316,1,{},Twc);_.nc=function Uwc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};qU(1408,729,vMc,sHc);_.Ld=function tHc(){yIb(this,zSc,new ZMb((rNb(),jNb)));yIb(this,JSc,new $Mb(dNb,new Ujb(1)))};var uHc;qU(1409,1,{},zHc);_.Od=function AHc(){return IHc(),xHc};_.Pd=function BHc(){return JHc(),yHc};var xHc,yHc;qU(1410,1,{},DHc);_.nc=function EHc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};qU(1411,1,{},GHc);_.nc=function HHc(){return oTc};qU(1432,729,vMc,OIc);_.Ld=function PIc(){yIb(this,zSc,new ZMb((rNb(),jNb)));yIb(this,ITc,new $Mb(dNb,new Ujb(0.001953125)));yIb(this,WTc,new $Mb(dNb,new Ujb(0.35)))};var QIc;qU(1433,1,{},VIc);_.Od=function WIc(){return cJc(),TIc};_.Pd=function XIc(){return dJc(),UIc};var TIc,UIc;qU(1434,1,{},ZIc);_.nc=function $Ic(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};qU(1435,1,{},aJc);_.nc=function bJc(){return oTc};qU(1438,729,vMc,fJc);_.Ld=function gJc(){yIb(this,zSc,new ZMb((rNb(),jNb)))};var hJc;qU(1439,1,{},mJc);_.Od=function nJc(){return vJc(),kJc};_.Pd=function oJc(){return wJc(),lJc};var kJc,lJc;qU(1440,1,{},qJc);_.nc=function rJc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};qU(1441,1,{},tJc);_.nc=function uJc(){return oTc};qU(1444,729,vMc,yJc);_.Ld=function zJc(){yIb(this,KTc,new ZMb((rNb(),jNb)));yIb(this,dTc,new $Mb(lNb,new g6b(512,512)));yIb(this,TTc,new $Mb(lNb,new g6b(1,1)));yIb(this,fPc,new $Mb(dNb,new Ujb(0.05)))};var AJc;qU(1445,1,{},FJc);_.Od=function GJc(){return OJc(),DJc};_.Pd=function HJc(){return PJc(),EJc};var DJc,EJc;qU(1446,1,{},JJc);_.nc=function KJc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};qU(1447,1,{},MJc);_.nc=function NJc(){return oTc};qU(1450,729,vMc,RJc);_.Ld=function SJc(){yIb(this,zSc,new ZMb((rNb(),jNb)));yIb(this,JTc,new $Mb(dNb,new Ujb(0.001953125)));yIb(this,WTc,new $Mb(dNb,new Ujb(0.35)))};var TJc;qU(1451,1,{},YJc);_.Od=function ZJc(){return fKc(),WJc};_.Pd=function $Jc(){return gKc(),XJc};var WJc,XJc;qU(1452,1,{},aKc);_.nc=function bKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};qU(1453,1,{},dKc);_.nc=function eKc(){return oTc};var DO=Ijb(QRc,'TerrainDynamic$DemoScene',1248),zO=Ijb(QRc,'TerrainDynamic$DemoScene$1',1249),AO=Ijb(QRc,'TerrainDynamic$DemoScene$2',1250),BO=Ijb(QRc,'TerrainDynamic$DemoScene$3',1251),CO=Ijb(QRc,'TerrainDynamic$DemoScene$4',1252),qR=Ijb(qTc,$Tc,1444),oP=Ijb(GRc,'TerrainShader',1313),UQ=Ijb(qTc,'BleachBypassShader',1408),iR=Ijb(qTc,'HorizontalTiltShiftShader',1432),uR=Ijb(qTc,'VerticalTiltShiftShader',1450),GO=Ijb(QRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1253),EO=Ijb(QRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1254),FO=Ijb(QRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1255),pR=Ijb(qTc,_Tc,1445),nR=Ijb(qTc,aUc,1446),oR=Ijb(qTc,bUc,1447),nP=Ijb(GRc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1314),lP=Ijb(GRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1315),mP=Ijb(GRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1316),TQ=Ijb(qTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1409),RQ=Ijb(qTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1410),SQ=Ijb(qTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1411),hR=Ijb(qTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1433),fR=Ijb(qTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1434),gR=Ijb(qTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1435),tR=Ijb(qTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1451),rR=Ijb(qTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1452),sR=Ijb(qTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1453),mR=Ijb(qTc,'LuminosityShader',1438),lR=Ijb(qTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1439),jR=Ijb(qTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1440),kR=Ijb(qTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1441);XMc(xi)(38);