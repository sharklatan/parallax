function ptc(){}
function ttc(){}
function wtc(){}
function Mxc(){}
function Qxc(){}
function Txc(){}
function Ljc(a){this.a=a}
function ltc(){ltc=sMc;ktc=new ptc}
function ytc(){ytc=sMc;ntc=new ttc}
function ztc(){ztc=sMc;otc=new wtc}
function Ixc(){Ixc=sMc;Hxc=new Mxc}
function Vxc(){Vxc=sMc;Kxc=new Qxc}
function Wxc(){Wxc=sMc;Lxc=new Txc}
function Dxc(){tIb.call(this,(Ixc(),Hxc))}
function itc(){tIb.call(this,(ltc(),ktc))}
function Hjc(){p9b.call(this);this.d=0;this.e=0}
function Gjc(a,b){var c,d,e,f,g,i;d=new INb(LTc);d.k=4;V4b(d.B,0.998,0.998);V4b(d.A,0.001,0.001);CNb(d,(zFb(),yFb));DNb(d,yFb);qNb(d,(sCb(),qCb));e=new INb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');V4b(e.B,0.998,0.998);V4b(e.A,0.001,0.001);CNb(e,yFb);DNb(e,yFb);qNb(e,qCb);c=new INb('./static/models/obj/leeperrysmith/Map-COL.jpg');V4b(c.B,0.998,0.998);V4b(c.A,0.001,0.001);CNb(c,yFb);DNb(c,yFb);qNb(c,qCb);g=new Dxc;i=g.i;HMb(Au(i.a[NTc],225),(Iib(),Iib(),Hib));HMb(Au(i.a[OTc],225),Hib);HMb(Au(i.a[PTc],225),a.b.e);HMb(Au(i.a[QTc],225),c);HMb(Au(i.a[RTc],225),d);HMb(Au(i.a[STc],225),e);P2b(Au(Au(i.a[TTc],225).d,292),10526880);P2b(Au(Au(i.a[UTc],225).d,292),10526880);P2b(Au(Au(i.a[VTc],225).d,292),10526880);HMb(Au(i.a[WTc],225),new Hjb(0.145));HMb(Au(i.a[XTc],225),new Hjb(0.75));HMb(Au(i.a[YTc],225),new Hjb(16));v6b(Au(Au(i.a[ZTc],225).d,300),0.001,0.001,0.998,0.998);f=new c2b(g);f.c=true;a.c=new j7b(b,f);X4b(a.c._,-50);G5b(a.c.eb,100);iPb(a.c,true);a.c.U=true;dPb(a.H,a.c)}
var NTc='enableBump',PTc='tBeckmann',WTc='uRoughness',XTc='uSpecularBrightness';fU(1115,1,aOc);_.zb=function Ejc(){R8b(this.b,new Hjc(this.a))};fU(1116,970,{322:1},Hjc);_.nb=function Ijc(){var a,b,c,d,e,f,g;this.a=new dQb(27,wGb(this.G.k),1,10000);J5b(this.a._,1200);dPb(this.H,new EXb(5592405));d=new yYb(16777215,1.5,1000);H5b(d._,0,0,600);dPb(this.H,d);f=new GYb(1);H5b(f._,0.05,0.05,1);dPb(this.H,f);f._.lf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new fYb(16777215,0.85);H5b(a._,1,-0.5,1);O2b(a.L,0.6,1,0.85);dPb(this.H,a);a._.lf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new fYb(16777215,0.85);H5b(b._,1,-0.5,-1);dPb(this.H,b);new KIc(new itc);c=new KIc(new xJc);c.a=true;g=new dOb(512,512);vNb(g,(hEb(),bEb));tNb(g,(YDb(),WDb));qNb(g,(sCb(),qCb));g.f=false;this.b=new AIc(this.G.k,g);new ezc(MTc,new Ljc(this));UGb(this.G.k,new S2b(5001561),1);e=new NFb(this.G.k,this.H);e.g=false;QGb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function Jjc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){Y2b(this.c.cb,0.05*(b-this.c.cb.d));X2b(this.c.cb,0.05*(c-this.c.cb.c))}pGb(this.G.k,true);IGb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;fU(1117,1,{},Ljc);_.yf=function Mjc(a,b){Gjc(this.a,Au(b,241))};fU(1245,728,PNc,itc);_.Kd=function jtc(){};var ktc;fU(1246,1,{},ptc);_.Nd=function qtc(){return ytc(),ntc};_.Od=function rtc(){return ztc(),otc};var ntc,otc;fU(1247,1,{},ttc);_.mc=function utc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};fU(1248,1,{},wtc);_.mc=function xtc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};fU(1342,728,PNc,Dxc);_.Kd=function Exc(){oIb(this,eNb());oIb(this,fNb());oIb(this,gNb());hIb(this,NTc,new JMb((aNb(),RMb),nkb(0)));hIb(this,OTc,new JMb(RMb,nkb(0)));hIb(this,QTc,new IMb(UMb));hIb(this,PTc,new IMb(UMb));hIb(this,UTc,new JMb(NMb,new S2b(15658734)));hIb(this,VTc,new JMb(NMb,new S2b(1118481)));hIb(this,TTc,new JMb(NMb,new S2b(328965)));hIb(this,$Tc,new JMb(OMb,new Hjb(1)));hIb(this,WTc,new JMb(OMb,new Hjb(0.15)));hIb(this,XTc,new JMb(OMb,new Hjb(0.75)));hIb(this,RTc,new IMb(UMb));hIb(this,YTc,new JMb(OMb,new Hjb(1)));hIb(this,STc,new IMb(UMb));hIb(this,ZTc,new JMb($Mb,new z6b(0,0,1,1)));hIb(this,'uWrapRGB',new JMb(YMb,new N5b(0.75,0.375,0.1875)))};_.Ld=function Fxc(a){var b,c;c=new Sqb(qu(cS,xMc,1,[_Tc,aUc,bUc]));b=new Sqb(qu(cS,xMc,1,[cUc,dUc,eUc]));qIb(this,yIb(a,qu(fS,xMc,173,[c,b])))};_.Md=function Gxc(a){var b,c;c=new Sqb(qu(cS,xMc,1,[fUc]));b=new Sqb(qu(cS,xMc,1,[gUc]));rIb(this,yIb(a,qu(fS,xMc,173,[c,b])))};var Hxc;fU(1343,1,{},Mxc);_.Nd=function Nxc(){return Vxc(),Kxc};_.Od=function Oxc(){return Wxc(),Lxc};var Kxc,Lxc;fU(1344,1,{},Qxc);_.mc=function Rxc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};fU(1345,1,{},Txc);_.mc=function Uxc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var lM=vjb(bTc,'MaterialsBumpmapSkin$DemoScene',1116),kM=vjb(bTc,'MaterialsBumpmapSkin$DemoScene$1',1117),BO=vjb(WSc,'BeckmannShader',1245),AO=vjb(WSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1246),yO=vjb(WSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1247),zO=vjb(WSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1248),aP=vjb(WSc,'SkinSimpleShader',1342),_O=vjb(WSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1343),ZO=vjb(WSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1344),$O=vjb(WSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1345);oOc(xi)(18);