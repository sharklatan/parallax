function dLb(){}
function hLb(){}
function kLb(){}
function kwc(){}
function owc(){}
function rwc(){}
function Dwc(){}
function Hwc(){}
function Kwc(){}
function Tvc(){}
function Xvc(){}
function $vc(){}
function Y9b(a,b){a.d=b}
function _Kb(){_Kb=qMc;$Kb=new dLb}
function mLb(){mLb=qMc;bLb=new hLb}
function nLb(){nLb=qMc;cLb=new kLb}
function gwc(){gwc=qMc;fwc=new kwc}
function twc(){twc=qMc;iwc=new owc}
function uwc(){uwc=qMc;jwc=new rwc}
function zwc(){zwc=qMc;ywc=new Dwc}
function Mwc(){Mwc=qMc;Bwc=new Hwc}
function Nwc(){Nwc=qMc;Cwc=new Kwc}
function awc(){awc=qMc;Rvc=new Xvc}
function bwc(){bwc=qMc;Svc=new $vc}
function Pvc(){Pvc=qMc;Ovc=new Tvc}
function vtc(a,b){this.b=a;this.c=b}
function GHb(a,b){oIb(a,b);FHb(a,false)}
function WKb(){GJb.call(this,(_Kb(),$Kb))}
function Mvc(){GJb.call(this,(Pvc(),Ovc))}
function dwc(){GJb.call(this,(gwc(),fwc))}
function wwc(){GJb.call(this,(zwc(),ywc))}
function P1b(){r_b.call(this);this.b=false;this.c=1}
function rtc(){tbc.call(this);this.u=new a8b(0,1000,-1000);this.s=new _7b}
function T7b(a,b){var c;c=new j6b;h6b(c,b.q,Y5b(c,b.Y));return L7b(a,c)}
var DVc='bgColor',FVc='fAspect',CVc='fGodRayIntensity',GVc='fStepSize',tVc='mFar',sVc='mNear',IVc='tColors',JVc='tGodRays',HVc='tInput',EVc='vSunPositionScreenSpace',KVc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';PV(754,736,QNc,WKb);_.Od=function XKb(){uJb(this,sVc,new WNb((nOb(),_Nb),new zkb(1)));uJb(this,tVc,new WNb(_Nb,new zkb(2000)));uJb(this,ZTc,new WNb(_Nb,new zkb(1)))};_.Pd=function YKb(a){var b,c;c=new Mrb(Bv(LT,wMc,1,[uVc]));b=new Mrb(Bv(LT,wMc,1,[vVc]));DJb(this,LJb(a,Bv(OT,wMc,173,[c,b])))};_.Qd=function ZKb(a){var b,c;c=new Mrb(Bv(LT,wMc,1,[wVc,xVc]));b=new Mrb(Bv(LT,wMc,1,[yVc,zVc,AVc]));EJb(this,LJb(a,Bv(OT,wMc,173,[c,b])))};var $Kb;PV(755,1,{},dLb);_.Rd=function eLb(){return mLb(),bLb};_.Sd=function fLb(){return nLb(),cLb};var bLb,cLb;PV(756,1,{},hLb);_.qc=function iLb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};PV(757,1,{},kLb);_.qc=function lLb(){return BVc};PV(821,818,{78:1,186:1,236:1,237:1,250:1});_.ae=function iRb(){return this.c};_.be=function jRb(){return this.e};PV(822,818,{78:1,186:1,236:1,238:1,250:1});_.ae=function wRb(){return this.c};_.be=function xRb(){return this.i};PV(933,926,{284:1,287:1},P1b);_.Ve=function Q1b(){var a;return a=new P1b,_$b(this,a),a.b=this.b,a.c=this.c,a};_.We=function R1b(){return new WKb};_.Se=function S1b(){return this.c};_.Te=function T1b(){return this.b};_.Xe=function U1b(a,b){var c;e_b(this,b);c=d_b(this).j;if(Ov(a,236)){UNb(Lv(c.b[sVc],226),new zkb(Lv(a,236).be()));UNb(Lv(c.b[tVc],226),new zkb(Lv(a,236).ae()))}UNb(Lv(c.b[ZTc],226),new zkb(this.ab))};_.b=false;_.c=0;PV(1245,1,cOc);_.Qb=function ptc(){Vac(this.c,new rtc(this.b))};PV(1246,984,{341:1},rtc);_.ob=function stc(){var a,b,c,d;this.b=new uRb(70,zGb(this.H.n),1,3000);Y7b(this.b.ab,200);this.c=new P1b;c=new k1b;e1b(c,new f5b(0));i1b(c,(U0b(),R0b));new czc('./static/models/obj/tree/tree.js',new vtc(this,c));a=new VXb(1,20,10);this.t=new rZb(a,c);V7b(this.t.fb,20);qQb(this.I,this.t);rIb(this.H.n,false);AGb(this.H.n,false);BGb(this.H.n,1297,1);this.k=new Z9b;this.j=new fRb(this.H.n.ib,this.H.n.hb,-10000,10000);Y7b(this.j.ab,100);qQb(this.k,this.j);this.o=new qPb(this.H.n.ib,this.H.n.hb);IOb(this.o,(dFb(),ZEb));GOb(this.o,(UEb(),SEb));DOb(this.o,(oDb(),nDb));this.p=new qPb(this.H.n.ib,this.H.n.hb);IOb(this.p,ZEb);GOb(this.p,SEb);DOb(this.p,nDb);d=~~(this.H.n.ib/4);b=~~(this.H.n.hb/4);this.q=new qPb(d,b);IOb(this.q,ZEb);GOb(this.q,SEb);DOb(this.q,nDb);this.r=new qPb(d,b);IOb(this.r,ZEb);GOb(this.r,SEb);DOb(this.r,nDb);this.f=new l4b(new dwc);this.d=new l4b(new Mvc);UNb(Lv(ZSb(d_b(this.d).j,CVc),226),new zkb(0.75));this.e=new l4b(new wwc);b5b(Lv(Lv(ZSb(d_b(this.e).j,DVc),226).e,298),1297);b5b(Lv(Lv(ZSb(d_b(this.e).j,MUc),226).e,298),16772608);this.n=new rZb(new KXb(this.H.n.ib,this.H.n.hb),this.f);Y7b(this.n.ab,-9900);qQb(this.k,this.n)};_.pb=function ttc(a){var b,c,d,e,f,g;f=a/4000;j7b(this.t.ab,200*zlb(f));Y7b(this.t.ab,200*Ilb(f)-100);e7b(this.b.ab,(this.g-this.b.ab.d)*0.036);f7b(this.b.ab,(-this.i-this.b.ab.e)*0.036);QQb(this.b,this.I.ab);T7b(this.s.rf(this.u),this.b);j7b(this.s,(this.s.d+1)/2);k7b(this.s,(this.s.e+1)/2);i7b(Lv(Lv(ZSb(d_b(this.f).j,EVc),226).e,302),this.s.d,this.s.e);i7b(Lv(Lv(ZSb(d_b(this.e).j,EVc),226).e,302),this.s.d,this.s.e);GHb(this.H.n,this.o);g=this.H.n.ib;b=this.H.n.hb;d=0.74*b;e=0.74*b;j7b(this.s,this.s.d*g);k7b(this.s,this.s.e*b);pIb(this.H.n,Tv(this.s.d-e/2),Tv(this.s.e-d/2),Tv(e),Tv(d));LHb(this.H.n,true);UNb(Lv(ZSb(d_b(this.e).j,FVc),226),new zkb(g/b));Y9b(this.k,this.e);XHb(this.H.n,this.k,this.j,this.o,false);LHb(this.H.n,false);Y9b(this.I,null);XHb(this.H.n,this.I,this.b,this.o,false);Y9b(this.I,this.c);XHb(this.H.n,this.I,this.b,this.p,true);c=Flb(6,-1);UNb(Lv(ZSb(d_b(this.f).j,GVc),226),new zkb(c));UNb(Lv(ZSb(d_b(this.f).j,HVc),226),this.p);Y9b(this.k,this.f);XHb(this.H.n,this.k,this.j,this.r,false);c=Flb(6,-2);UNb(Lv(ZSb(d_b(this.f).j,GVc),226),new zkb(c));UNb(Lv(ZSb(d_b(this.f).j,HVc),226),this.r);XHb(this.H.n,this.k,this.j,this.q,false);c=Flb(6,-3);UNb(Lv(ZSb(d_b(this.f).j,GVc),226),new zkb(c));UNb(Lv(ZSb(d_b(this.f).j,HVc),226),this.q);XHb(this.H.n,this.k,this.j,this.r,false);UNb(Lv(ZSb(d_b(this.d).j,IVc),226),this.o);UNb(Lv(ZSb(d_b(this.d).j,JVc),226),this.r);Y9b(this.k,this.d);XHb(this.H.n,this.k,this.j,null,false);Y9b(this.k,null)};_.g=0;_.i=0;PV(1247,1,{},vtc);_.Ff=function wtc(a,b){var c;c=new rZb(b,this.c);W7b(c.ab,0,-150,-150);V7b(c.fb,400);c.X=false;T5b(c.W,c.ab,c.bb,c.fb);c.Z=true;qQb(this.b.I,c)};PV(1286,736,QNc,Mvc);_.Od=function Nvc(){uJb(this,IVc,new VNb((nOb(),fOb)));uJb(this,JVc,new VNb(fOb));uJb(this,CVc,new WNb(_Nb,new zkb(0.69)));uJb(this,EVc,new WNb(hOb,new m7b(0.5,0.5)))};var Ovc;PV(1287,1,{},Tvc);_.Rd=function Uvc(){return awc(),Rvc};_.Sd=function Vvc(){return bwc(),Svc};var Rvc,Svc;PV(1288,1,{},Xvc);_.qc=function Yvc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};PV(1289,1,{},$vc);_.qc=function _vc(){return KVc};PV(1292,736,QNc,dwc);_.Od=function ewc(){uJb(this,HVc,new VNb((nOb(),fOb)));uJb(this,GVc,new WNb(_Nb,new zkb(1)));uJb(this,EVc,new WNb(hOb,new m7b(0.5,0.5)))};var fwc;PV(1293,1,{},kwc);_.Rd=function lwc(){return twc(),iwc};_.Sd=function mwc(){return uwc(),jwc};var iwc,jwc;PV(1294,1,{},owc);_.qc=function pwc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};PV(1295,1,{},rwc);_.qc=function swc(){return KVc};PV(1298,736,QNc,wwc);_.Od=function xwc(){uJb(this,EVc,new WNb((nOb(),hOb),new m7b(0.5,0.5)));uJb(this,FVc,new WNb(_Nb,new zkb(1)));uJb(this,MUc,new WNb($Nb,new f5b(16772608)));uJb(this,DVc,new WNb($Nb,new f5b(0)))};var ywc;PV(1299,1,{},Dwc);_.Rd=function Ewc(){return Mwc(),Bwc};_.Sd=function Fwc(){return Nwc(),Cwc};var Bwc,Cwc;PV(1300,1,{},Hwc);_.qc=function Iwc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};PV(1301,1,{},Kwc);_.qc=function Lwc(){return KVc};var NP=nkb(dTc,'PostprocessingGodrays$DemoScene',1246),MP=nkb(dTc,'PostprocessingGodrays$DemoScene$1',1247),sK=nkb(LVc,'MeshDepthMaterial',933),sQ=nkb(VSc,'GodRaysGenerateShader',1292),oQ=nkb(VSc,'GodRaysCombineShader',1286),wQ=nkb(VSc,'GodraysFakeSunShader',1298),yH=nkb(jUc,'DepthShader',754),rQ=nkb(VSc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1293),pQ=nkb(VSc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1294),qQ=nkb(VSc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1295),nQ=nkb(VSc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1287),lQ=nkb(VSc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1288),mQ=nkb(VSc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1289),vQ=nkb(VSc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1299),tQ=nkb(VSc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1300),uQ=nkb(VSc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1301),xH=nkb(jUc,'DepthShader_Resources_default_InlineClientBundleGenerator',755),vH=nkb(jUc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',756),wH=nkb(jUc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',757);qOc(Oj)(40);