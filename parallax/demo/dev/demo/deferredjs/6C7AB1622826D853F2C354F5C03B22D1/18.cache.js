function Zuc(){}
function bvc(){}
function evc(){}
function Gxc(){}
function Kxc(){}
function Nxc(){}
function slc(a){this.a=a}
function Vuc(){Vuc=mMc;Uuc=new Zuc}
function gvc(){gvc=mMc;Xuc=new bvc}
function hvc(){hvc=mMc;Yuc=new evc}
function Cxc(){Cxc=mMc;Bxc=new Gxc}
function Pxc(){Pxc=mMc;Exc=new Kxc}
function Qxc(){Qxc=mMc;Fxc=new Nxc}
function xxc(){pJb.call(this,(Cxc(),Bxc))}
function Suc(){pJb.call(this,(Vuc(),Uuc))}
function olc(){pbc.call(this);this.d=0;this.e=0}
function nlc(a,b){var c,d,e,f,g,i;d=new EOb(zTc);d.k=4;D7b(d.B,0.998,0.998);D7b(d.A,0.001,0.001);yOb(d,(eGb(),dGb));zOb(d,dGb);mOb(d,(ZCb(),XCb));e=new EOb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');D7b(e.B,0.998,0.998);D7b(e.A,0.001,0.001);yOb(e,dGb);zOb(e,dGb);mOb(e,XCb);c=new EOb('./static/models/obj/leeperrysmith/Map-COL.jpg');D7b(c.B,0.998,0.998);D7b(c.A,0.001,0.001);yOb(c,dGb);zOb(c,dGb);mOb(c,XCb);g=new xxc;i=g.i;DNb(wv(i.a[BTc],226),(jjb(),jjb(),ijb));DNb(wv(i.a[CTc],226),ijb);DNb(wv(i.a[DTc],226),a.b.e);DNb(wv(i.a[ETc],226),c);DNb(wv(i.a[FTc],226),d);DNb(wv(i.a[GTc],226),e);S4b(wv(wv(i.a[HTc],226).d,298),10526880);S4b(wv(wv(i.a[ITc],226).d,298),10526880);S4b(wv(wv(i.a[JTc],226).d,298),10526880);DNb(wv(i.a[KTc],226),new ikb(0.145));DNb(wv(i.a[LTc],226),new ikb(0.75));DNb(wv(i.a[MTc],226),new ikb(16));O8b(wv(wv(i.a[NTc],226).d,305),0.001,0.001,0.998,0.998);f=new _3b(g);f.c=true;a.c=new fZb(b,f);F7b(a.c._,-50);j8b(a.c.eb,100);eQb(a.c,true);a.c.U=true;_Pb(a.H,a.c)}
var BTc='enableBump',DTc='tBeckmann',KTc='uRoughness',LTc='uSpecularBrightness';zV(1135,1,YNc);_.Mb=function llc(){Rac(this.b,new olc(this.a))};zV(1136,988,{327:1},olc);_.nb=function plc(){var a,b,c,d,e,f,g;this.a=new dRb(27,iGb(this.G.k),1,10000);m8b(this.a._,1200);_Pb(this.H,new xZb(5592405));d=new u$b(16777215,1.5,1000);k8b(d._,0,0,600);_Pb(this.H,d);f=new D$b(1);k8b(f._,0.05,0.05,1);_Pb(this.H,f);f._.ef(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new _Zb(16777215,0.85);k8b(a._,1,-0.5,1);R4b(a.L,0.6,1,0.85);_Pb(this.H,a);a._.ef(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new _Zb(16777215,0.85);k8b(b._,1,-0.5,-1);_Pb(this.H,b);new EIc(new Suc);c=new EIc(new rJc);c.a=true;g=new _Ob(512,512);rOb(g,(OEb(),IEb));pOb(g,(DEb(),BEb));mOb(g,(ZCb(),XCb));g.f=false;this.b=new uIc(this.G.k,g);new $yc(ATc,new slc(this));QHb(this.G.k,new W4b(5001561),1);e=new LGb(this.G.k,this.H);e.g=false;jGb(this.G.k,false);this.G.k.X=true;this.G.k.Y=true};_.ob=function qlc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){b5b(this.c.cb,0.05*(b-this.c.cb.d));a5b(this.c.cb,0.05*(c-this.c.cb.c))}oHb(this.G.k,true);GHb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;zV(1137,1,{},slc);_.pf=function tlc(a,b){nlc(this.a,wv(b,243))};zV(1272,740,KNc,Suc);_.Ld=function Tuc(){};var Uuc;zV(1273,1,{},Zuc);_.Od=function $uc(){return gvc(),Xuc};_.Pd=function _uc(){return hvc(),Yuc};var Xuc,Yuc;zV(1274,1,{},bvc);_.nc=function cvc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};zV(1275,1,{},evc);_.nc=function fvc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};zV(1321,740,KNc,xxc);_.Ld=function yxc(){kJb(this,aOb());kJb(this,bOb());kJb(this,cOb());dJb(this,BTc,new FNb((YNb(),NNb),Qkb(0)));dJb(this,CTc,new FNb(NNb,Qkb(0)));dJb(this,ETc,new ENb(QNb));dJb(this,DTc,new ENb(QNb));dJb(this,ITc,new FNb(JNb,new W4b(15658734)));dJb(this,JTc,new FNb(JNb,new W4b(1118481)));dJb(this,HTc,new FNb(JNb,new W4b(328965)));dJb(this,OTc,new FNb(KNb,new ikb(1)));dJb(this,KTc,new FNb(KNb,new ikb(0.15)));dJb(this,LTc,new FNb(KNb,new ikb(0.75)));dJb(this,FTc,new ENb(QNb));dJb(this,MTc,new FNb(KNb,new ikb(1)));dJb(this,GTc,new ENb(QNb));dJb(this,NTc,new FNb(WNb,new R8b(0,0,1,1)));dJb(this,'uWrapRGB',new FNb(UNb,new r8b(0.75,0.375,0.1875)))};_.Md=function zxc(a){var b,c;c=new vrb(mv(vT,rMc,1,[PTc,QTc,RTc]));b=new vrb(mv(vT,rMc,1,[STc,TTc,UTc]));mJb(this,uJb(a,mv(yT,rMc,173,[c,b])))};_.Nd=function Axc(a){var b,c;c=new vrb(mv(vT,rMc,1,[VTc]));b=new vrb(mv(vT,rMc,1,[WTc]));nJb(this,uJb(a,mv(yT,rMc,173,[c,b])))};var Bxc;zV(1322,1,{},Gxc);_.Od=function Hxc(){return Pxc(),Exc};_.Pd=function Ixc(){return Qxc(),Fxc};var Exc,Fxc;zV(1323,1,{},Kxc);_.nc=function Lxc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};zV(1324,1,{},Nxc);_.nc=function Oxc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var yN=Yjb(RSc,'MaterialsBumpmapSkin$DemoScene',1136),xN=Yjb(RSc,'MaterialsBumpmapSkin$DemoScene$1',1137),UP=Yjb(KSc,'BeckmannShader',1272),TP=Yjb(KSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1273),RP=Yjb(KSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1274),SP=Yjb(KSc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1275),tQ=Yjb(KSc,'SkinSimpleShader',1321),sQ=Yjb(KSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1322),qQ=Yjb(KSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1323),rQ=Yjb(KSc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1324);kOc(Ej)(18);