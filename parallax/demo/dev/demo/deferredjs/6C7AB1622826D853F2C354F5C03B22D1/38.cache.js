function uuc(){}
function yuc(){}
function Buc(){}
function BKc(){}
function iKc(){}
function mKc(){}
function pKc(){}
function FKc(){}
function IKc(){}
function UKc(){}
function YKc(){}
function _Kc(){}
function _xc(){}
function dyc(){}
function gyc(){}
function OIc(){}
function SIc(){}
function VIc(){}
function lLc(){}
function pLc(){}
function sLc(){}
function r$b(a,b){a.b=b}
function o9b(a,b){a.k=b}
function sIc(a,b){Oqb(a.b,b)}
function huc(a){this.a=a}
function kuc(a){this.a=a}
function nuc(a){this.a=a}
function Duc(){Duc=mMc;suc=new yuc}
function quc(){quc=mMc;puc=new uuc}
function Euc(){Euc=mMc;tuc=new Buc}
function xKc(){xKc=mMc;wKc=new BKc}
function eKc(){eKc=mMc;dKc=new iKc}
function rKc(){rKc=mMc;gKc=new mKc}
function sKc(){sKc=mMc;hKc=new pKc}
function KKc(){KKc=mMc;zKc=new FKc}
function LKc(){LKc=mMc;AKc=new IKc}
function QKc(){QKc=mMc;PKc=new UKc}
function bLc(){bLc=mMc;SKc=new YKc}
function cLc(){cLc=mMc;TKc=new _Kc}
function hLc(){hLc=mMc;gLc=new lLc}
function uLc(){uLc=mMc;jLc=new pLc}
function vLc(){vLc=mMc;kLc=new sLc}
function Xxc(){Xxc=mMc;Wxc=new _xc}
function XIc(){XIc=mMc;MIc=new SIc}
function KIc(){KIc=mMc;JIc=new OIc}
function YIc(){YIc=mMc;NIc=new VIc}
function iyc(){iyc=mMc;Zxc=new dyc}
function jyc(){jyc=mMc;$xc=new gyc}
function euc(a,b){this.a=a;this.b=b}
function eLc(){pJb.call(this,(hLc(),gLc))}
function Sxc(){pJb.call(this,(Xxc(),Wxc))}
function HIc(){pJb.call(this,(KIc(),JIc))}
function bKc(){pJb.call(this,(eKc(),dKc))}
function uKc(){pJb.call(this,(xKc(),wKc))}
function NKc(){pJb.call(this,(QKc(),PKc))}
function Ztc(a){a.w+=1;a.w==3&&kQb(a.v,true)}
function $tc(){pbc.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Ytc(a,b,c,d){var e,f,g;g=new _3b(b);DNb(wv(HSb(T$b(g).i,ETc),226),c);f=new V9b;e=new fZb(new vXb(a.u,a.t),g);m8b(e._,-500);_Pb(f,e);GHb(a.G.k,f,a.c,d,true)}
function Xtc(a,b,c,d,e,f){var g,i;g=new T1b;M1b(g,new W4b(16755285));g.j=true;R1b(g,(L_b(),I_b));i=new q9b(b,g);i.d=c;o9b(i,Ev(600*plb()));k8b(i._,d,e,f);j5b(i.cb,1.5707963267948966);i.S=true;i.U=true;_Pb(a.H,i);Oqb(a.n,i)}
var UUc='enableDiffuse1',VUc='enableDiffuse2',NUc='h',PUc='heightMap',$Uc='heightmap',ZUc='offset',_Uc='r',TUc='tDetail',RUc='tDiffuse1',SUc='tDiffuse2',XUc='uRepeatOverlay',OUc='v';zV(1258,1,YNc);_.Mb=function Vtc(){Rac(this.b,new $tc(this.a))};zV(1259,988,{78:1,186:1,342:1},$tc);_.Ud=function _tc(a){Ztc(this)};_.Gd=function auc(a){this.u=a.a.hb;this.t=a.a.gb;DNb(wv(HSb(T$b(this.f.b).i,NUc),226),new ikb(6/this.u));DNb(wv(HSb(T$b(this.D.b).i,OUc),226),new ikb(6/this.t))};_.nb=function buc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;lu((dyb(),cyb),(nyb(),myb),this);this.b=new dRb(40,iGb(this.G.k),2,4000);this.u=this.G.k.hb;this.t=this.G.k.gb;this.c=new QQb(this.u,this.t,-10000,10000);k8b(this.b._,-1200,800,1200);m8b(this.c._,100);this.s=new V9b;_Pb(this.s,this.c);this.d=new ixb(this.b,this.G.c);j8b(this.d.v,0);this.d.s=1;this.d.A=1.2;fxb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;dxb(this.d,0.15);T9b(this.H,new J9b(328965,2000,4000));_Pb(this.H,new xZb(1118481));this.e=new _Zb(16777215,1.15);k8b(this.e._,500,2000,0);_Pb(this.H,this.e);this.q=new u$b(16729088,1.5,0);j8b(this.q._,0);_Pb(this.H,this.q);this.g=new _Ob(256,256);rOb(this.g,(OEb(),JEb));pOb(this.g,(DEb(),BEb));mOb(this.g,(ZCb(),XCb));nOb(this.g,false);this.o=new _Ob(256,256);rOb(this.o,JEb);pOb(this.o,BEb);mOb(this.o,XCb);nOb(this.o,false);n=new NKc;u=n.i;DNb(wv(u.a[wQc],226),new ikb(0.05));D7b(wv(wv(u.a[iUc],226).d,301),256,256);DNb(wv(u.a[PUc],226),this.g);s=new _Ob(2048,2048);rOb(s,JEb);pOb(s,BEb);mOb(s,XCb);s.r=false;yOb(s,(eGb(),dGb));zOb(s,dGb);c=new FOb('./static/textures/terrain/grasslight-big.jpg',new euc(this,s));yOb(c,dGb);zOb(c,dGb);d=new FOb('./static/textures/terrain/backgrounddetailed6.jpg',this);yOb(d,dGb);zOb(d,dGb);b=new FOb('./static/textures/terrain/grasslight-big-nm.jpg',this);yOb(b,dGb);zOb(b,dGb);t=new Sxc;this.B=t.i;DNb(wv(HSb(this.B,cUc),226),this.o);DNb(wv(HSb(this.B,dUc),226),new ikb(3.5));DNb(wv(HSb(this.B,QUc),226),this.g);DNb(wv(HSb(this.B,RUc),226),c);DNb(wv(HSb(this.B,SUc),226),d);DNb(wv(HSb(this.B,eUc),226),s);DNb(wv(HSb(this.B,TUc),226),b);DNb(wv(HSb(this.B,UUc),226),(jjb(),jjb(),ijb));DNb(wv(HSb(this.B,VUc),226),ijb);DNb(wv(HSb(this.B,CTc),226),ijb);S4b(wv(wv(HSb(this.B,ITc),226).d,298),16777215);S4b(wv(wv(HSb(this.B,JTc),226).d,298),16777215);S4b(wv(wv(HSb(this.B,HTc),226).d,298),1118481);DNb(wv(HSb(this.B,hUc),226),new ikb(30));DNb(wv(HSb(this.B,WUc),226),new ikb(375));D7b(wv(wv(HSb(this.B,XUc),226).d,301),6,6);this.A=new Htb;cpb(this.A,lUc,new FNb((YNb(),KNb),new ikb(1)));cpb(this.A,YUc,new FNb(SNb,new J7b(1.5,1.5)));cpb(this.A,ZUc,new FNb(SNb,new J7b(0,0)));this.k=new Htb;i=new $3b((quc(),puc));kJb(T$b(i),this.A);i.c=false;i.b=true;cpb(this.k,$Uc,i);j=new _3b(n);kJb(T$b(j),u);j.c=false;j.b=true;cpb(this.k,yTc,j);k=new _3b(t);kJb(T$b(k),this.B);k.c=true;k.b=true;cpb(this.k,'terrain',k);o=new vXb(this.u,this.t);p=new $0b;U0b(p,new W4b(0));this.r=new fZb(o,p);m8b(this.r._,-500);_Pb(this.s,this.r);g=new wXb(6000,6000,64,64);MRb(g);this.v=new fZb(g,k);k8b(this.v._,0,-125,0);i5b(this.v.cb,-1.5707963267948966);kQb(this.v,false);_Pb(this.H,this.v);QHb(this.G.k,this.H.a.c,1);this.G.k.X=true;this.G.k.Y=true;jGb(this.G.k,false);q=new BIc(this.H,this.b);f=new mIc(0.6);e=new EIc(new HIc);DNb(wv(HSb(T$b(e.b).i,OTc),226),new ikb(0.65));this.f=new EIc(new bKc);this.D=new EIc(new eLc);DNb(wv(HSb(T$b(this.f.b).i,NUc),226),new ikb(6/this.u));DNb(wv(HSb(T$b(this.D.b).i,OUc),226),new ikb(6/this.t));DNb(wv(HSb(T$b(this.f.b).i,_Uc),226),new ikb(0.5));DNb(wv(HSb(T$b(this.D.b).i,_Uc),226),new ikb(0.5));this.D.a=true;r=new _Ob(this.u,this.t);rOb(s,IEb);pOb(s,BEb);mOb(s,XCb);s.f=false;s.r=false;a=new uIc(this.G.k,r);Oqb(a.b,q);Oqb(a.b,f);Oqb(a.b,e);sIc(a,this.f);sIc(a,this.D);this.n=new Yqb;new $yc('./static/models/animated/parrot.js',new huc(this));new $yc(MUc,new kuc(this));new $yc('./static/models/animated/stork.js',new nuc(this));this.p=yi()};_.ob=function cuc(a){var b,c,d,e,f;b=(yi()-this.p)*0.001;if(this.v.gb){gxb(this.d);this.j=u5b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;R4b(this.H.a.c,0.1,e,this.j);QHb(this.G.k,this.H.a.c,1);HZb(this.e,0.1+f*1.0499999999999998);r$b(this.q,0.9+f*0.6);DNb(wv(HSb(this.B,dUc),226),new ikb(0.6+f*2.9));if(this.C){this.a=u5b(this.a+-7.5E-4,0,0.05);DNb(wv(Zob(this.A,lUc),226),new ikb(wv(wv(Zob(this.A,lUc),226).d,150).a+b*this.a));y7b(wv(wv(Zob(this.A,ZUc),226).d,301),b*0.05);E7b(wv(wv(HSb(this.B,aVc),226).d,301),4*wv(wv(Zob(this.A,ZUc),226).d,301).c);RTb(this.r,wv(Zob(this.k,$Uc),287));GHb(this.G.k,this.s,this.c,this.g,true);RTb(this.r,wv(Zob(this.k,yTc),287));GHb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=wv(Rqb(this.n,c),309);p9b(d,Ev(1000*b));y7b(d._,d.d*b);d._.c>2000&&E7b(d._,-1500-plb()*500)}GHb(this.G.k,this.H,this.b,null,false)}this.p=yi()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;zV(1260,1,{},euc);_.Ud=function fuc(a){Ztc(this.a);Ytc(this.a,new uKc,a,this.b)};zV(1261,1,{},huc);_.pf=function iuc(a,b){Vyc((wv(a,344),wv(b,243)));Xtc(this.a,wv(b,243),500,-3500,500,700);Xtc(this.a,wv(b,243),500,-3000-plb()*500,500,-200);Xtc(this.a,wv(b,243),500,-3000-plb()*500,500,200);Xtc(this.a,wv(b,243),500,-3000-plb()*500,500,1000)};zV(1262,1,{},kuc);_.pf=function luc(a,b){Vyc((wv(a,344),wv(b,243)));Xtc(this.a,wv(b,243),1000,-3000-plb()*500,350,40)};zV(1263,1,{},nuc);_.pf=function ouc(a,b){Vyc((wv(a,344),wv(b,243)));Xtc(this.a,wv(b,243),1000,-3000-plb()*500,350,340)};var puc;zV(1264,1,{},uuc);_.Od=function vuc(){return Duc(),suc};_.Pd=function wuc(){return Euc(),tuc};var suc,tuc;zV(1265,1,{},yuc);_.nc=function zuc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};zV(1266,1,{},Buc);_.nc=function Cuc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};zV(1327,740,KNc,Sxc);_.Ld=function Txc(){kJb(this,aOb());kJb(this,bOb());kJb(this,cOb());dJb(this,UUc,new FNb((YNb(),NNb),(jjb(),jjb(),hjb)));dJb(this,VUc,new FNb(NNb,hjb));dJb(this,CTc,new FNb(NNb,hjb));dJb(this,bVc,new FNb(NNb,hjb));dJb(this,RUc,new ENb(QNb));dJb(this,SUc,new ENb(QNb));dJb(this,TUc,new ENb(QNb));dJb(this,cUc,new ENb(QNb));dJb(this,eUc,new ENb(QNb));dJb(this,QUc,new ENb(QNb));dJb(this,dUc,new FNb(KNb,new ikb(1)));dJb(this,cVc,new FNb(KNb,new ikb(0)));dJb(this,WUc,new FNb(KNb,new ikb(1)));dJb(this,ITc,new FNb(JNb,new W4b(15658734)));dJb(this,JTc,new FNb(JNb,new W4b(1118481)));dJb(this,HTc,new FNb(JNb,new W4b(328965)));dJb(this,hUc,new FNb(KNb,new ikb(30)));dJb(this,OTc,new FNb(KNb,new ikb(1)));dJb(this,'uRepeatBase',new FNb(SNb,new J7b(1,1)));dJb(this,XUc,new FNb(SNb,new J7b(1,1)));dJb(this,aVc,new FNb(SNb,new J7b(0,0)))};_.Md=function Uxc(a){var b,c;c=new vrb(mv(vT,rMc,1,[PTc,QTc]));b=new vrb(mv(vT,rMc,1,[STc,TTc,UTc]));mJb(this,uJb(a,mv(yT,rMc,173,[c,b])))};_.Nd=function Vxc(a){var b,c;c=new vrb(mv(vT,rMc,1,[VTc]));b=new vrb(mv(vT,rMc,1,[WTc]));nJb(this,uJb(a,mv(yT,rMc,173,[c,b])))};var Wxc;zV(1328,1,{},_xc);_.Od=function ayc(){return iyc(),Zxc};_.Pd=function byc(){return jyc(),$xc};var Zxc,$xc;zV(1329,1,{},dyc);_.nc=function eyc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};zV(1330,1,{},gyc);_.nc=function hyc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};zV(1422,740,KNc,HIc);_.Ld=function IIc(){dJb(this,ETc,new ENb((YNb(),QNb)));dJb(this,OTc,new FNb(KNb,new ikb(1)))};var JIc;zV(1423,1,{},OIc);_.Od=function PIc(){return XIc(),MIc};_.Pd=function QIc(){return YIc(),NIc};var MIc,NIc;zV(1424,1,{},SIc);_.nc=function TIc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};zV(1425,1,{},VIc);_.nc=function WIc(){return tUc};zV(1446,740,KNc,bKc);_.Ld=function cKc(){dJb(this,ETc,new ENb((YNb(),QNb)));dJb(this,NUc,new FNb(KNb,new ikb(0.001953125)));dJb(this,_Uc,new FNb(KNb,new ikb(0.35)))};var dKc;zV(1447,1,{},iKc);_.Od=function jKc(){return rKc(),gKc};_.Pd=function kKc(){return sKc(),hKc};var gKc,hKc;zV(1448,1,{},mKc);_.nc=function nKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};zV(1449,1,{},pKc);_.nc=function qKc(){return tUc};zV(1452,740,KNc,uKc);_.Ld=function vKc(){dJb(this,ETc,new ENb((YNb(),QNb)))};var wKc;zV(1453,1,{},BKc);_.Od=function CKc(){return KKc(),zKc};_.Pd=function DKc(){return LKc(),AKc};var zKc,AKc;zV(1454,1,{},FKc);_.nc=function GKc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};zV(1455,1,{},IKc);_.nc=function JKc(){return tUc};zV(1458,740,KNc,NKc);_.Ld=function OKc(){dJb(this,PUc,new ENb((YNb(),QNb)));dJb(this,iUc,new FNb(SNb,new J7b(512,512)));dJb(this,YUc,new FNb(SNb,new J7b(1,1)));dJb(this,wQc,new FNb(KNb,new ikb(0.05)))};var PKc;zV(1459,1,{},UKc);_.Od=function VKc(){return bLc(),SKc};_.Pd=function WKc(){return cLc(),TKc};var SKc,TKc;zV(1460,1,{},YKc);_.nc=function ZKc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};zV(1461,1,{},_Kc);_.nc=function aLc(){return tUc};zV(1464,740,KNc,eLc);_.Ld=function fLc(){dJb(this,ETc,new ENb((YNb(),QNb)));dJb(this,OUc,new FNb(KNb,new ikb(0.001953125)));dJb(this,_Uc,new FNb(KNb,new ikb(0.35)))};var gLc;zV(1465,1,{},lLc);_.Od=function mLc(){return uLc(),jLc};_.Pd=function nLc(){return vLc(),kLc};var jLc,kLc;zV(1466,1,{},pLc);_.nc=function qLc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};zV(1467,1,{},sLc);_.nc=function tLc(){return tUc};var JP=Yjb(USc,'TerrainDynamic$DemoScene',1259),FP=Yjb(USc,'TerrainDynamic$DemoScene$1',1260),GP=Yjb(USc,'TerrainDynamic$DemoScene$2',1261),HP=Yjb(USc,'TerrainDynamic$DemoScene$3',1262),IP=Yjb(USc,'TerrainDynamic$DemoScene$4',1263),zS=Yjb(vUc,dVc,1458),xQ=Yjb(KSc,'TerrainShader',1327),bS=Yjb(vUc,'BleachBypassShader',1422),rS=Yjb(vUc,'HorizontalTiltShiftShader',1446),DS=Yjb(vUc,'VerticalTiltShiftShader',1464),MP=Yjb(USc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1264),KP=Yjb(USc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1265),LP=Yjb(USc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1266),yS=Yjb(vUc,eVc,1459),wS=Yjb(vUc,fVc,1460),xS=Yjb(vUc,gVc,1461),wQ=Yjb(KSc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1328),uQ=Yjb(KSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1329),vQ=Yjb(KSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1330),aS=Yjb(vUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1423),$R=Yjb(vUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1424),_R=Yjb(vUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1425),qS=Yjb(vUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1447),oS=Yjb(vUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1448),pS=Yjb(vUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1449),CS=Yjb(vUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1465),AS=Yjb(vUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1466),BS=Yjb(vUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1467),vS=Yjb(vUc,'LuminosityShader',1452),uS=Yjb(vUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1453),sS=Yjb(vUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1454),tS=Yjb(vUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1455);kOc(Ej)(38);