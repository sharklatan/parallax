function nKb(){}
function rKb(){}
function uKb(){}
function jKb(){jKb=wMc;iKb=new nKb}
function wKb(){wKb=wMc;lKb=new rKb}
function xKb(){xKb=wMc;mKb=new uKb}
function gKb(){xIb.call(this,(jKb(),iKb))}
function elc(){t9b.call(this);this.c=0;this.d=0}
aU(755,731,TNc,gKb);_.Kd=function hKb(){lIb(this,'mRefractionRatio',new NMb((eNb(),SMb),new Ljb(1.02)));lIb(this,'mFresnelBias',new NMb(SMb,new Ljb(0.1)));lIb(this,'mFresnelPower',new NMb(SMb,new Ljb(2)));lIb(this,'mFresnelScale',new NMb(SMb,new Ljb(1)));lIb(this,eUc,new MMb(YMb))};var iKb;aU(756,1,{},nKb);_.Nd=function oKb(){return wKb(),lKb};_.Od=function pKb(){return xKb(),mKb};var lKb,mKb;aU(757,1,{},rKb);_.mc=function sKb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};aU(758,1,{},uKb);_.mc=function vKb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};aU(1138,1,eOc);_.zb=function clc(){V8b(this.b,new elc(this.a))};aU(1139,973,{326:1},elc);_.nb=function flc(){var a,b,c,d,e,f,g,i,j;this.a=new hQb(60,AGb(this.G.k),1,100000);N5b(this.a._,3200);this.b=new hQb(60,AGb(this.G.k),1,100000);this.e=new _7b;a=new AWb(100,32,16);j=new VNb('./static/textures/cube/park2/*.jpg');uNb(j,(wCb(),uCb));g=new gKb;LMb(su(FRb(g.i,eUc),225),j);c=new g2b(g);this.f=new yqb;for(b=0;b<500;b++){e=new n7b(a,c);$4b(e._,Skb()*10000-5000);_4b(e._,Skb()*10000-5000);N5b(e._,Skb()*10000-5000);K5b(e.eb,Skb()*3+1);hPb(this.H,e);oqb(this.f,e)}this.H.W=false;i=new ZIb;LMb(su(FRb(i.i,eUc),225),j);f=new g2b(i);jZb(f,(X$b(),U$b));d=new n7b(new LVb(100000,100000,100000),f);hPb(this.e,d);UGb(this.G.k,false)};_.ob=function glc(a){var b,c,d,e;e=1.0E-4*a;V4b(this.a._,(this.c-this.a._.c)*0.05);W4b(this.a._,(-this.d-this.a._.d)*0.05);FPb(this.a,this.H._);b3b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=su(rqb(this.f,b),303);$4b(d._,5000*Math.cos(e+b));_4b(d._,5000*Math.sin(e+b*1.1))}tGb(this.G.k,true);MGb(this.G.k,this.e,this.b,null,false);MGb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var BM=zjb(YSc,'MaterialsCubemapFresnel$DemoScene',1139),cG=zjb(fUc,'FresnelShader',755),bG=zjb(fUc,'FresnelShader_Resources_default_InlineClientBundleGenerator',756),_F=zjb(fUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',757),aG=zjb(fUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',758);sOc(xi)(21);