function atc(){}
function etc(){}
function htc(){}
function jyc(){}
function nyc(){}
function qyc(){}
function YIc(){}
function aJc(){}
function dJc(){}
function sKc(){}
function wKc(){}
function zKc(){}
function LKc(){}
function PKc(){}
function SKc(){}
function cLc(){}
function gLc(){}
function jLc(){}
function vLc(){}
function zLc(){}
function CLc(){}
function AYb(a,b){a.b=b}
function v7b(a,b){a.k=b}
function CIc(a,b){oqb(a.b,b)}
function Psc(a){this.a=a}
function Ssc(a){this.a=a}
function Vsc(a){this.a=a}
function Ysc(){Ysc=wMc;Xsc=new atc}
function jtc(){jtc=wMc;$sc=new etc}
function ktc(){ktc=wMc;_sc=new htc}
function fyc(){fyc=wMc;eyc=new jyc}
function syc(){syc=wMc;hyc=new nyc}
function tyc(){tyc=wMc;iyc=new qyc}
function UIc(){UIc=wMc;TIc=new YIc}
function UKc(){UKc=wMc;JKc=new PKc}
function oKc(){oKc=wMc;nKc=new sKc}
function BKc(){BKc=wMc;qKc=new wKc}
function CKc(){CKc=wMc;rKc=new zKc}
function HKc(){HKc=wMc;GKc=new LKc}
function VKc(){VKc=wMc;KKc=new SKc}
function $Kc(){$Kc=wMc;ZKc=new cLc}
function lLc(){lLc=wMc;aLc=new gLc}
function mLc(){mLc=wMc;bLc=new jLc}
function rLc(){rLc=wMc;qLc=new vLc}
function ELc(){ELc=wMc;tLc=new zLc}
function FLc(){FLc=wMc;uLc=new CLc}
function fJc(){fJc=wMc;WIc=new aJc}
function gJc(){gJc=wMc;XIc=new dJc}
function Msc(a,b){this.a=a;this.b=b}
function ayc(){xIb.call(this,(fyc(),eyc))}
function RIc(){xIb.call(this,(UIc(),TIc))}
function lKc(){xIb.call(this,(oKc(),nKc))}
function EKc(){xIb.call(this,(HKc(),GKc))}
function XKc(){xIb.call(this,($Kc(),ZKc))}
function oLc(){xIb.call(this,(rLc(),qLc))}
function Fsc(a){a.w+=1;a.w==3&&rPb(a.v,true)}
function Gsc(){t9b.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Esc(a,b,c,d){var e,f,g;g=new g2b(b);LMb(su(FRb($Yb(g).i,LTc),225),c);f=new _7b;e=new n7b(new sWb(a.u,a.t),g);N5b(e._,-500);hPb(f,e);MGb(a.G.k,f,a.c,d,true)}
function Dsc(a,b,c,d,e,f){var g,i;g=new $_b;T_b(g,new W2b(16755285));g.j=true;Y_b(g,(SZb(),PZb));i=new x7b(b,g);i.d=c;v7b(i,Au(600*Skb()));L5b(i._,d,e,f);i3b(i.cb,1.5707963267948966);i.S=true;i.U=true;hPb(a.H,i);oqb(a.n,i)}
var aVc='enableDiffuse1',bVc='enableDiffuse2',VUc='h',XUc='heightMap',gVc='heightmap',fVc='offset',hVc='r',_Uc='tDetail',ZUc='tDiffuse1',$Uc='tDiffuse2',dVc='uRepeatOverlay',WUc='v';aU(1237,1,eOc);_.zb=function Bsc(){V8b(this.b,new Gsc(this.a))};aU(1238,973,{78:1,186:1,337:1},Gsc);_.Td=function Hsc(a){Fsc(this)};_.Fd=function Isc(a){this.u=a.a.Z;this.t=a.a.Y;LMb(su(FRb($Yb(this.f.b).i,VUc),225),new Ljb(6/this.u));LMb(su(FRb($Yb(this.D.b).i,WUc),225),new Ljb(6/this.t))};_.nb=function Jsc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;gt((Exb(),Dxb),(Oxb(),Nxb),this);this.b=new hQb(40,AGb(this.G.k),2,4000);this.u=this.G.k.Z;this.t=this.G.k.Y;this.c=new WPb(this.u,this.t,-10000,10000);L5b(this.b._,-1200,800,1200);N5b(this.c._,100);this.s=new _7b;hPb(this.s,this.c);this.d=new Jwb(this.b,this.G.c);K5b(this.d.v,0);this.d.s=1;this.d.A=1.2;Gwb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;Ewb(this.d,0.15);$7b(this.H,new Q7b(328965,2000,4000));hPb(this.H,new IXb(1118481));this.e=new jYb(16777215,1.15);L5b(this.e._,500,2000,0);hPb(this.H,this.e);this.q=new CYb(16729088,1.5,0);K5b(this.q._,0);hPb(this.H,this.q);this.g=new hOb(256,256);zNb(this.g,(lEb(),gEb));xNb(this.g,(aEb(),$Db));uNb(this.g,(wCb(),uCb));vNb(this.g,false);this.o=new hOb(256,256);zNb(this.o,gEb);xNb(this.o,$Db);uNb(this.o,uCb);vNb(this.o,false);n=new XKc;u=n.i;LMb(su(u.a[AQc],225),new Ljb(0.05));Z4b(su(su(u.a[qUc],225).d,296),256,256);LMb(su(u.a[XUc],225),this.g);s=new hOb(2048,2048);zNb(s,gEb);xNb(s,$Db);uNb(s,uCb);s.r=false;GNb(s,(DFb(),CFb));HNb(s,CFb);c=new NNb('./static/textures/terrain/grasslight-big.jpg',new Msc(this,s));GNb(c,CFb);HNb(c,CFb);d=new NNb('./static/textures/terrain/backgrounddetailed6.jpg',this);GNb(d,CFb);HNb(d,CFb);b=new NNb('./static/textures/terrain/grasslight-big-nm.jpg',this);GNb(b,CFb);HNb(b,CFb);t=new ayc;this.B=t.i;LMb(su(FRb(this.B,kUc),225),this.o);LMb(su(FRb(this.B,lUc),225),new Ljb(3.5));LMb(su(FRb(this.B,YUc),225),this.g);LMb(su(FRb(this.B,ZUc),225),c);LMb(su(FRb(this.B,$Uc),225),d);LMb(su(FRb(this.B,mUc),225),s);LMb(su(FRb(this.B,_Uc),225),b);LMb(su(FRb(this.B,aVc),225),(Mib(),Mib(),Lib));LMb(su(FRb(this.B,bVc),225),Lib);LMb(su(FRb(this.B,JTc),225),Lib);T2b(su(su(FRb(this.B,PTc),225).d,292),16777215);T2b(su(su(FRb(this.B,QTc),225).d,292),16777215);T2b(su(su(FRb(this.B,OTc),225).d,292),1118481);LMb(su(FRb(this.B,pUc),225),new Ljb(30));LMb(su(FRb(this.B,cVc),225),new Ljb(375));Z4b(su(su(FRb(this.B,dVc),225).d,296),6,6);this.A=new gtb;Eob(this.A,tUc,new NMb((eNb(),SMb),new Ljb(1)));Eob(this.A,eVc,new NMb($Mb,new b5b(1.5,1.5)));Eob(this.A,fVc,new NMb($Mb,new b5b(0,0)));this.k=new gtb;i=new f2b((Ysc(),Xsc));sIb($Yb(i),this.A);i.c=false;i.b=true;Eob(this.k,gVc,i);j=new g2b(n);sIb($Yb(j),u);j.c=false;j.b=true;Eob(this.k,ETc,j);k=new g2b(t);sIb($Yb(k),this.B);k.c=true;k.b=true;Eob(this.k,'terrain',k);o=new sWb(this.u,this.t);p=new f_b;_$b(p,new W2b(0));this.r=new n7b(o,p);N5b(this.r._,-500);hPb(this.s,this.r);g=new tWb(6000,6000,64,64);KQb(g);this.v=new n7b(g,k);L5b(this.v._,0,-125,0);h3b(this.v.cb,-1.5707963267948966);rPb(this.v,false);hPb(this.H,this.v);YGb(this.G.k,this.H.b.c,1);this.G.k.ab=true;this.G.k.bb=true;UGb(this.G.k,false);q=new LIc(this.H,this.b);f=new wIc(0.6);e=new OIc(new RIc);LMb(su(FRb($Yb(e.b).i,VTc),225),new Ljb(0.65));this.f=new OIc(new lKc);this.D=new OIc(new oLc);LMb(su(FRb($Yb(this.f.b).i,VUc),225),new Ljb(6/this.u));LMb(su(FRb($Yb(this.D.b).i,WUc),225),new Ljb(6/this.t));LMb(su(FRb($Yb(this.f.b).i,hVc),225),new Ljb(0.5));LMb(su(FRb($Yb(this.D.b).i,hVc),225),new Ljb(0.5));this.D.a=true;r=new hOb(this.u,this.t);zNb(s,fEb);xNb(s,$Db);uNb(s,uCb);s.f=false;s.r=false;a=new EIc(this.G.k,r);oqb(a.b,q);oqb(a.b,f);oqb(a.b,e);CIc(a,this.f);CIc(a,this.D);this.n=new yqb;new izc('./static/models/animated/parrot.js',new Psc(this));new izc(UUc,new Ssc(this));new izc('./static/models/animated/stork.js',new Vsc(this));this.p=rh()};_.ob=function Ksc(a){var b,c,d,e,f;b=(rh()-this.p)*0.001;if(this.v.gb){Hwb(this.d);this.j=r3b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;S2b(this.H.b.c,0.1,e,this.j);YGb(this.G.k,this.H.b.c,1);SXb(this.e,0.1+f*1.0499999999999998);AYb(this.q,0.9+f*0.6);LMb(su(FRb(this.B,lUc),225),new Ljb(0.6+f*2.9));if(this.C){this.a=r3b(this.a+-7.5E-4,0,0.05);LMb(su(zob(this.A,tUc),225),new Ljb(su(su(zob(this.A,tUc),225).d,150).a+b*this.a));V4b(su(su(zob(this.A,fVc),225).d,296),b*0.05);$4b(su(su(FRb(this.B,iVc),225).d,296),4*su(su(zob(this.A,fVc),225).d,296).c);NSb(this.r,su(zob(this.k,gVc),281));MGb(this.G.k,this.s,this.c,this.g,true);NSb(this.r,su(zob(this.k,ETc),281));MGb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=su(rqb(this.n,c),304);w7b(d,Au(1000*b));V4b(d._,d.d*b);d._.c>2000&&$4b(d._,-1500-Skb()*500)}MGb(this.G.k,this.H,this.b,null,false)}this.p=rh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;aU(1239,1,{},Msc);_.Td=function Nsc(a){Fsc(this.a);Esc(this.a,new EKc,a,this.b)};aU(1240,1,{},Psc);_.yf=function Qsc(a,b){dzc((su(a,338),su(b,241)));Dsc(this.a,su(b,241),500,-3500,500,700);Dsc(this.a,su(b,241),500,-3000-Skb()*500,500,-200);Dsc(this.a,su(b,241),500,-3000-Skb()*500,500,200);Dsc(this.a,su(b,241),500,-3000-Skb()*500,500,1000)};aU(1241,1,{},Ssc);_.yf=function Tsc(a,b){dzc((su(a,338),su(b,241)));Dsc(this.a,su(b,241),1000,-3000-Skb()*500,350,40)};aU(1242,1,{},Vsc);_.yf=function Wsc(a,b){dzc((su(a,338),su(b,241)));Dsc(this.a,su(b,241),1000,-3000-Skb()*500,350,340)};var Xsc;aU(1243,1,{},atc);_.Nd=function btc(){return jtc(),$sc};_.Od=function ctc(){return ktc(),_sc};var $sc,_sc;aU(1244,1,{},etc);_.mc=function ftc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};aU(1245,1,{},htc);_.mc=function itc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};aU(1351,731,TNc,ayc);_.Kd=function byc(){sIb(this,iNb());sIb(this,jNb());sIb(this,kNb());lIb(this,aVc,new NMb((eNb(),VMb),(Mib(),Mib(),Kib)));lIb(this,bVc,new NMb(VMb,Kib));lIb(this,JTc,new NMb(VMb,Kib));lIb(this,jVc,new NMb(VMb,Kib));lIb(this,ZUc,new MMb(YMb));lIb(this,$Uc,new MMb(YMb));lIb(this,_Uc,new MMb(YMb));lIb(this,kUc,new MMb(YMb));lIb(this,mUc,new MMb(YMb));lIb(this,YUc,new MMb(YMb));lIb(this,lUc,new NMb(SMb,new Ljb(1)));lIb(this,kVc,new NMb(SMb,new Ljb(0)));lIb(this,cVc,new NMb(SMb,new Ljb(1)));lIb(this,PTc,new NMb(RMb,new W2b(15658734)));lIb(this,QTc,new NMb(RMb,new W2b(1118481)));lIb(this,OTc,new NMb(RMb,new W2b(328965)));lIb(this,pUc,new NMb(SMb,new Ljb(30)));lIb(this,VTc,new NMb(SMb,new Ljb(1)));lIb(this,'uRepeatBase',new NMb($Mb,new b5b(1,1)));lIb(this,dVc,new NMb($Mb,new b5b(1,1)));lIb(this,iVc,new NMb($Mb,new b5b(0,0)))};_.Ld=function cyc(a){var b,c;c=new Wqb(iu(ZR,BMc,1,[WTc,XTc]));b=new Wqb(iu(ZR,BMc,1,[ZTc,$Tc,_Tc]));uIb(this,CIb(a,iu(aS,BMc,173,[c,b])))};_.Md=function dyc(a){var b,c;c=new Wqb(iu(ZR,BMc,1,[aUc]));b=new Wqb(iu(ZR,BMc,1,[bUc]));vIb(this,CIb(a,iu(aS,BMc,173,[c,b])))};var eyc;aU(1352,1,{},jyc);_.Nd=function kyc(){return syc(),hyc};_.Od=function lyc(){return tyc(),iyc};var hyc,iyc;aU(1353,1,{},nyc);_.mc=function oyc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};aU(1354,1,{},qyc);_.mc=function ryc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};aU(1446,731,TNc,RIc);_.Kd=function SIc(){lIb(this,LTc,new MMb((eNb(),YMb)));lIb(this,VTc,new NMb(SMb,new Ljb(1)))};var TIc;aU(1447,1,{},YIc);_.Nd=function ZIc(){return fJc(),WIc};_.Od=function $Ic(){return gJc(),XIc};var WIc,XIc;aU(1448,1,{},aJc);_.mc=function bJc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};aU(1449,1,{},dJc);_.mc=function eJc(){return BUc};aU(1470,731,TNc,lKc);_.Kd=function mKc(){lIb(this,LTc,new MMb((eNb(),YMb)));lIb(this,VUc,new NMb(SMb,new Ljb(0.001953125)));lIb(this,hVc,new NMb(SMb,new Ljb(0.35)))};var nKc;aU(1471,1,{},sKc);_.Nd=function tKc(){return BKc(),qKc};_.Od=function uKc(){return CKc(),rKc};var qKc,rKc;aU(1472,1,{},wKc);_.mc=function xKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};aU(1473,1,{},zKc);_.mc=function AKc(){return BUc};aU(1476,731,TNc,EKc);_.Kd=function FKc(){lIb(this,LTc,new MMb((eNb(),YMb)))};var GKc;aU(1477,1,{},LKc);_.Nd=function MKc(){return UKc(),JKc};_.Od=function NKc(){return VKc(),KKc};var JKc,KKc;aU(1478,1,{},PKc);_.mc=function QKc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};aU(1479,1,{},SKc);_.mc=function TKc(){return BUc};aU(1482,731,TNc,XKc);_.Kd=function YKc(){lIb(this,XUc,new MMb((eNb(),YMb)));lIb(this,qUc,new NMb($Mb,new b5b(512,512)));lIb(this,eVc,new NMb($Mb,new b5b(1,1)));lIb(this,AQc,new NMb(SMb,new Ljb(0.05)))};var ZKc;aU(1483,1,{},cLc);_.Nd=function dLc(){return lLc(),aLc};_.Od=function eLc(){return mLc(),bLc};var aLc,bLc;aU(1484,1,{},gLc);_.mc=function hLc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};aU(1485,1,{},jLc);_.mc=function kLc(){return BUc};aU(1488,731,TNc,oLc);_.Kd=function pLc(){lIb(this,LTc,new MMb((eNb(),YMb)));lIb(this,WUc,new NMb(SMb,new Ljb(0.001953125)));lIb(this,hVc,new NMb(SMb,new Ljb(0.35)))};var qLc;aU(1489,1,{},vLc);_.Nd=function wLc(){return ELc(),tLc};_.Od=function xLc(){return FLc(),uLc};var tLc,uLc;aU(1490,1,{},zLc);_.mc=function ALc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};aU(1491,1,{},CLc);_.mc=function DLc(){return BUc};var oO=zjb(_Sc,'TerrainDynamic$DemoScene',1238),kO=zjb(_Sc,'TerrainDynamic$DemoScene$1',1239),lO=zjb(_Sc,'TerrainDynamic$DemoScene$2',1240),mO=zjb(_Sc,'TerrainDynamic$DemoScene$3',1241),nO=zjb(_Sc,'TerrainDynamic$DemoScene$4',1242),bR=zjb(DUc,lVc,1482),_O=zjb(RSc,'TerrainShader',1351),FQ=zjb(DUc,'BleachBypassShader',1446),VQ=zjb(DUc,'HorizontalTiltShiftShader',1470),fR=zjb(DUc,'VerticalTiltShiftShader',1488),rO=zjb(_Sc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1243),pO=zjb(_Sc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1244),qO=zjb(_Sc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1245),aR=zjb(DUc,mVc,1483),$Q=zjb(DUc,nVc,1484),_Q=zjb(DUc,oVc,1485),$O=zjb(RSc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1352),YO=zjb(RSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1353),ZO=zjb(RSc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1354),EQ=zjb(DUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1447),CQ=zjb(DUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1448),DQ=zjb(DUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1449),UQ=zjb(DUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1471),SQ=zjb(DUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1472),TQ=zjb(DUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1473),eR=zjb(DUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1489),cR=zjb(DUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1490),dR=zjb(DUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1491),ZQ=zjb(DUc,'LuminosityShader',1476),YQ=zjb(DUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1477),WQ=zjb(DUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1478),XQ=zjb(DUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1479);sOc(xi)(38);