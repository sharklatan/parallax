function Ksc(){}
function Osc(){}
function Rsc(){}
function rvc(){}
function vvc(){}
function yvc(){}
function Djc(a){this.a=a}
function Gsc(){Gsc=ZJc;Fsc=new Ksc}
function Tsc(){Tsc=ZJc;Isc=new Osc}
function Usc(){Usc=ZJc;Jsc=new Rsc}
function nvc(){nvc=ZJc;mvc=new rvc}
function Avc(){Avc=ZJc;pvc=new vvc}
function Bvc(){Bvc=ZJc;qvc=new yvc}
function ivc(){sIb.call(this,(nvc(),mvc))}
function Dsc(){sIb.call(this,(Gsc(),Fsc))}
function zjc(){z9b.call(this);this.d=0;this.e=0}
function yjc(a,b){var c,d,e,f,g,i;d=new HNb(gRc);d.k=4;b5b(d.B,0.998,0.998);b5b(d.A,0.001,0.001);BNb(d,(yFb(),xFb));CNb(d,xFb);pNb(d,(rCb(),pCb));e=new HNb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');b5b(e.B,0.998,0.998);b5b(e.A,0.001,0.001);BNb(e,xFb);CNb(e,xFb);pNb(e,pCb);c=new HNb('./static/models/obj/leeperrysmith/Map-COL.jpg');b5b(c.B,0.998,0.998);b5b(c.A,0.001,0.001);BNb(c,xFb);CNb(c,xFb);pNb(c,pCb);g=new ivc;i=g.i;GMb(qu(i.a[iRc],225),(Gib(),Gib(),Fib));GMb(qu(i.a[jRc],225),Fib);GMb(qu(i.a[kRc],225),a.b.e);GMb(qu(i.a[lRc],225),c);GMb(qu(i.a[mRc],225),d);GMb(qu(i.a[nRc],225),e);X2b(qu(qu(i.a[oRc],225).d,293),10526880);X2b(qu(qu(i.a[pRc],225).d,293),10526880);X2b(qu(qu(i.a[qRc],225).d,293),10526880);GMb(qu(i.a[rRc],225),new Fjb(0.145));GMb(qu(i.a[sRc],225),new Fjb(0.75));GMb(qu(i.a[tRc],225),new Fjb(16));D6b(qu(qu(i.a[uRc],225).d,301),0.001,0.001,0.998,0.998);f=new k2b(g);f.c=true;a.c=new r7b(b,f);d5b(a.c._,-50);O5b(a.c.eb,100);hPb(a.c,true);a.c.U=true;cPb(a.H,a.c)}
var iRc='enableBump',kRc='tBeckmann',rRc='uRoughness',sRc='uSpecularBrightness';ZT(1119,1,ILc);_.zb=function wjc(){_8b(this.b,new zjc(this.a))};ZT(1120,972,{323:1},zjc);_.nb=function Ajc(){var a,b,c,d,e,f,g;this.a=new fQb(27,vGb(this.G.k),1,10000);R5b(this.a._,1200);cPb(this.H,new MXb(5592405));d=new GYb(16777215,1.5,1000);P5b(d._,0,0,600);cPb(this.H,d);f=new OYb(1);P5b(f._,0.05,0.05,1);cPb(this.H,f);f._.of(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new nYb(16777215,0.85);P5b(a._,1,-0.5,1);W2b(a.L,0.6,1,0.85);cPb(this.H,a);a._.of(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new nYb(16777215,0.85);P5b(b._,1,-0.5,-1);cPb(this.H,b);new pGc(new Dsc);c=new pGc(new cHc);c.a=true;g=new cOb(512,512);uNb(g,(gEb(),aEb));sNb(g,(XDb(),VDb));pNb(g,(rCb(),pCb));g.f=false;this.b=new fGc(this.G.k,g);new Lwc(hRc,new Djc(this));TGb(this.G.k,new $2b(5001561),1);e=new MFb(this.G.k,this.H);e.g=false;PGb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function Bjc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){e3b(this.c.cb,0.05*(b-this.c.cb.d));d3b(this.c.cb,0.05*(c-this.c.cb.c))}oGb(this.G.k,true);HGb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;ZT(1121,1,{},Djc);_.Af=function Ejc(a,b){yjc(this.a,qu(b,242))};ZT(1249,730,vLc,Dsc);_.Ld=function Esc(){};var Fsc;ZT(1250,1,{},Ksc);_.Od=function Lsc(){return Tsc(),Isc};_.Pd=function Msc(){return Usc(),Jsc};var Isc,Jsc;ZT(1251,1,{},Osc);_.nc=function Psc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};ZT(1252,1,{},Rsc);_.nc=function Ssc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};ZT(1298,730,vLc,ivc);_.Ld=function jvc(){nIb(this,dNb());nIb(this,eNb());nIb(this,fNb());gIb(this,iRc,new IMb((_Mb(),QMb),lkb(0)));gIb(this,jRc,new IMb(QMb,lkb(0)));gIb(this,lRc,new HMb(TMb));gIb(this,kRc,new HMb(TMb));gIb(this,pRc,new IMb(MMb,new $2b(15658734)));gIb(this,qRc,new IMb(MMb,new $2b(1118481)));gIb(this,oRc,new IMb(MMb,new $2b(328965)));gIb(this,vRc,new IMb(NMb,new Fjb(1)));gIb(this,rRc,new IMb(NMb,new Fjb(0.15)));gIb(this,sRc,new IMb(NMb,new Fjb(0.75)));gIb(this,mRc,new HMb(TMb));gIb(this,tRc,new IMb(NMb,new Fjb(1)));gIb(this,nRc,new HMb(TMb));gIb(this,uRc,new IMb(ZMb,new H6b(0,0,1,1)));gIb(this,'uWrapRGB',new IMb(XMb,new V5b(0.75,0.375,0.1875)))};_.Md=function kvc(a){var b,c;c=new Rqb(gu(WR,cKc,1,[wRc,xRc,yRc]));b=new Rqb(gu(WR,cKc,1,[zRc,ARc,BRc]));pIb(this,xIb(a,gu(ZR,cKc,173,[c,b])))};_.Nd=function lvc(a){var b,c;c=new Rqb(gu(WR,cKc,1,[CRc]));b=new Rqb(gu(WR,cKc,1,[DRc]));qIb(this,xIb(a,gu(ZR,cKc,173,[c,b])))};var mvc;ZT(1299,1,{},rvc);_.Od=function svc(){return Avc(),pvc};_.Pd=function tvc(){return Bvc(),qvc};var pvc,qvc;ZT(1300,1,{},vvc);_.nc=function wvc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};ZT(1301,1,{},yvc);_.nc=function zvc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var dM=tjb(zQc,'MaterialsBumpmapSkin$DemoScene',1120),cM=tjb(zQc,'MaterialsBumpmapSkin$DemoScene$1',1121),tO=tjb(sQc,'BeckmannShader',1249),sO=tjb(sQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1250),qO=tjb(sQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1251),rO=tjb(sQc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1252),UO=tjb(sQc,'SkinSimpleShader',1298),TO=tjb(sQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1299),RO=tjb(sQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1300),SO=tjb(sQc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1301);WLc(xi)(18);