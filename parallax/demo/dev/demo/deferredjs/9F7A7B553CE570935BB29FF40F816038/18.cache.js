function Otc(){}
function Stc(){}
function Vtc(){}
function vwc(){}
function zwc(){}
function Cwc(){}
function tkc(a){this.a=a}
function Ktc(){Ktc=bLc;Jtc=new Otc}
function Xtc(){Xtc=bLc;Mtc=new Stc}
function Ytc(){Ytc=bLc;Ntc=new Vtc}
function rwc(){rwc=bLc;qwc=new vwc}
function Ewc(){Ewc=bLc;twc=new zwc}
function Fwc(){Fwc=bLc;uwc=new Cwc}
function mwc(){OIb.call(this,(rwc(),qwc))}
function Htc(){OIb.call(this,(Ktc(),Jtc))}
function pkc(){qac.call(this);this.d=0;this.e=0}
function okc(a,b){var c,d,e,f,g,i;d=new bOb(pSc);d.k=4;g6b(d.B,0.998,0.998);g6b(d.A,0.001,0.001);XNb(d,(UFb(),TFb));YNb(d,TFb);LNb(d,(NCb(),LCb));e=new bOb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');g6b(e.B,0.998,0.998);g6b(e.A,0.001,0.001);XNb(e,TFb);YNb(e,TFb);LNb(e,LCb);c=new bOb('./static/models/obj/leeperrysmith/Map-COL.jpg');g6b(c.B,0.998,0.998);g6b(c.A,0.001,0.001);XNb(c,TFb);YNb(c,TFb);LNb(c,LCb);g=new mwc;i=g.i;aNb(ru(i.a[rSc],225),(Zib(),Zib(),Yib));aNb(ru(i.a[sSc],225),Yib);aNb(ru(i.a[tSc],225),a.b.e);aNb(ru(i.a[uSc],225),c);aNb(ru(i.a[vSc],225),d);aNb(ru(i.a[wSc],225),e);a4b(ru(ru(i.a[xSc],225).d,293),10526880);a4b(ru(ru(i.a[ySc],225).d,293),10526880);a4b(ru(ru(i.a[zSc],225).d,293),10526880);aNb(ru(i.a[ASc],225),new Yjb(0.145));aNb(ru(i.a[BSc],225),new Yjb(0.75));aNb(ru(i.a[CSc],225),new Yjb(16));I7b(ru(ru(i.a[DSc],225).d,301),0.001,0.001,0.998,0.998);f=new o3b(g);f.c=true;a.c=new yYb(b,f);i6b(a.c._,-50);T6b(a.c.eb,100);DPb(a.c,true);a.c.U=true;yPb(a.H,a.c)}
var rSc='enableBump',tSc='tBeckmann',ASc='uRoughness',BSc='uSpecularBrightness';lU(1127,1,NMc);_.zb=function mkc(){S9b(this.b,new pkc(this.a))};lU(1128,980,{323:1},pkc);_.nb=function qkc(){var a,b,c,d,e,f,g;this.a=new BQb(27,RGb(this.G.k),1,10000);W6b(this.a._,1200);yPb(this.H,new QYb(5592405));d=new KZb(16777215,1.5,1000);U6b(d._,0,0,600);yPb(this.H,d);f=new SZb(1);U6b(f._,0.05,0.05,1);yPb(this.H,f);f._.qf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new rZb(16777215,0.85);U6b(a._,1,-0.5,1);_3b(a.L,0.6,1,0.85);yPb(this.H,a);a._.qf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new rZb(16777215,0.85);U6b(b._,1,-0.5,-1);yPb(this.H,b);new tHc(new Htc);c=new tHc(new gIc);c.a=true;g=new yOb(512,512);QNb(g,(CEb(),wEb));ONb(g,(rEb(),pEb));LNb(g,(NCb(),LCb));g.f=false;this.b=new jHc(this.G.k,g);new Pxc(qSc,new tkc(this));nHb(this.G.k,new d4b(5001561),1);e=new gGb(this.G.k,this.H);e.g=false;jHb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function rkc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){j4b(this.c.cb,0.05*(b-this.c.cb.d));i4b(this.c.cb,0.05*(c-this.c.cb.c))}KGb(this.G.k,true);bHb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;lU(1129,1,{},tkc);_.Bf=function ukc(a,b){okc(this.a,ru(b,242))};lU(1261,732,zMc,Htc);_.Ld=function Itc(){};var Jtc;lU(1262,1,{},Otc);_.Od=function Ptc(){return Xtc(),Mtc};_.Pd=function Qtc(){return Ytc(),Ntc};var Mtc,Ntc;lU(1263,1,{},Stc);_.nc=function Ttc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};lU(1264,1,{},Vtc);_.nc=function Wtc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};lU(1310,732,zMc,mwc);_.Ld=function nwc(){JIb(this,zNb());JIb(this,ANb());JIb(this,BNb());CIb(this,rSc,new cNb((vNb(),kNb),Ekb(0)));CIb(this,sSc,new cNb(kNb,Ekb(0)));CIb(this,uSc,new bNb(nNb));CIb(this,tSc,new bNb(nNb));CIb(this,ySc,new cNb(gNb,new d4b(15658734)));CIb(this,zSc,new cNb(gNb,new d4b(1118481)));CIb(this,xSc,new cNb(gNb,new d4b(328965)));CIb(this,ESc,new cNb(hNb,new Yjb(1)));CIb(this,ASc,new cNb(hNb,new Yjb(0.15)));CIb(this,BSc,new cNb(hNb,new Yjb(0.75)));CIb(this,vSc,new bNb(nNb));CIb(this,CSc,new cNb(hNb,new Yjb(1)));CIb(this,wSc,new bNb(nNb));CIb(this,DSc,new cNb(tNb,new M7b(0,0,1,1)));CIb(this,'uWrapRGB',new cNb(rNb,new $6b(0.75,0.375,0.1875)))};_.Md=function owc(a){var b,c;c=new jrb(hu(hS,gLc,1,[FSc,GSc,HSc]));b=new jrb(hu(hS,gLc,1,[ISc,JSc,KSc]));LIb(this,TIb(a,hu(kS,gLc,173,[c,b])))};_.Nd=function pwc(a){var b,c;c=new jrb(hu(hS,gLc,1,[LSc]));b=new jrb(hu(hS,gLc,1,[MSc]));MIb(this,TIb(a,hu(kS,gLc,173,[c,b])))};var qwc;lU(1311,1,{},vwc);_.Od=function wwc(){return Ewc(),twc};_.Pd=function xwc(){return Fwc(),uwc};var twc,uwc;lU(1312,1,{},zwc);_.nc=function Awc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};lU(1313,1,{},Cwc);_.nc=function Dwc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var mM=Mjb(IRc,'MaterialsBumpmapSkin$DemoScene',1128),lM=Mjb(IRc,'MaterialsBumpmapSkin$DemoScene$1',1129),GO=Mjb(BRc,'BeckmannShader',1261),FO=Mjb(BRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1262),DO=Mjb(BRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1263),EO=Mjb(BRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1264),fP=Mjb(BRc,'SkinSimpleShader',1310),eP=Mjb(BRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1311),cP=Mjb(BRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1312),dP=Mjb(BRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1313);_Mc(xi)(18);