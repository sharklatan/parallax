function vtc(){}
function ztc(){}
function Ctc(){}
function Qwc(){}
function Uwc(){}
function Xwc(){}
function DHc(){}
function HHc(){}
function KHc(){}
function ZIc(){}
function bJc(){}
function eJc(){}
function qJc(){}
function uJc(){}
function xJc(){}
function JJc(){}
function NJc(){}
function QJc(){}
function aKc(){}
function eKc(){}
function hKc(){}
function IZb(a,b){a.b=b}
function q8b(a,b){a.k=b}
function hHc(a,b){Cqb(a.b,b)}
function itc(a){this.a=a}
function ltc(a){this.a=a}
function otc(a){this.a=a}
function rtc(){rtc=bLc;qtc=new vtc}
function Etc(){Etc=bLc;ttc=new ztc}
function Ftc(){Ftc=bLc;utc=new Ctc}
function Mwc(){Mwc=bLc;Lwc=new Qwc}
function Zwc(){Zwc=bLc;Owc=new Uwc}
function $wc(){$wc=bLc;Pwc=new Xwc}
function zHc(){zHc=bLc;yHc=new DHc}
function MHc(){MHc=bLc;BHc=new HHc}
function NHc(){NHc=bLc;CHc=new KHc}
function VIc(){VIc=bLc;UIc=new ZIc}
function gJc(){gJc=bLc;XIc=new bJc}
function hJc(){hJc=bLc;YIc=new eJc}
function mJc(){mJc=bLc;lJc=new qJc}
function zJc(){zJc=bLc;oJc=new uJc}
function AJc(){AJc=bLc;pJc=new xJc}
function FJc(){FJc=bLc;EJc=new JJc}
function SJc(){SJc=bLc;HJc=new NJc}
function TJc(){TJc=bLc;IJc=new QJc}
function YJc(){YJc=bLc;XJc=new aKc}
function jKc(){jKc=bLc;$Jc=new eKc}
function kKc(){kKc=bLc;_Jc=new hKc}
function ftc(a,b){this.a=a;this.b=b}
function Hwc(){OIb.call(this,(Mwc(),Lwc))}
function wHc(){OIb.call(this,(zHc(),yHc))}
function SIc(){OIb.call(this,(VIc(),UIc))}
function jJc(){OIb.call(this,(mJc(),lJc))}
function CJc(){OIb.call(this,(FJc(),EJc))}
function VJc(){OIb.call(this,(YJc(),XJc))}
function $sc(a){a.w+=1;a.w==3&&JPb(a.v,true)}
function _sc(){qac.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Zsc(a,b,c,d){var e,f,g;g=new o3b(b);aNb(ru(eSb(g$b(g).i,uSc),225),c);f=new X8b;e=new yYb(new VWb(a.u,a.t),g);W6b(e._,-500);yPb(f,e);bHb(a.G.k,f,a.c,d,true)}
function Ysc(a,b,c,d,e,f){var g,i;g=new g1b;_0b(g,new d4b(16755285));g.j=true;e1b(g,($$b(),X$b));i=new s8b(b,g);i.d=c;q8b(i,zu(600*dlb()));U6b(i._,d,e,f);r4b(i.cb,1.5707963267948966);i.S=true;i.U=true;yPb(a.H,i);Cqb(a.n,i)}
var KTc='enableDiffuse1',LTc='enableDiffuse2',DTc='h',FTc='heightMap',QTc='heightmap',PTc='offset',RTc='r',JTc='tDetail',HTc='tDiffuse1',ITc='tDiffuse2',NTc='uRepeatOverlay',ETc='v';lU(1250,1,NMc);_.zb=function Wsc(){S9b(this.b,new _sc(this.a))};lU(1251,980,{78:1,186:1,338:1},_sc);_.Ud=function atc(a){$sc(this)};_.Gd=function btc(a){this.u=a.a.Z;this.t=a.a.Y;aNb(ru(eSb(g$b(this.f.b).i,DTc),225),new Yjb(6/this.u));aNb(ru(eSb(g$b(this.D.b).i,ETc),225),new Yjb(6/this.t))};_.nb=function ctc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;ft((Txb(),Sxb),(byb(),ayb),this);this.b=new BQb(40,RGb(this.G.k),2,4000);this.u=this.G.k.Z;this.t=this.G.k.Y;this.c=new mQb(this.u,this.t,-10000,10000);U6b(this.b._,-1200,800,1200);W6b(this.c._,100);this.s=new X8b;yPb(this.s,this.c);this.d=new Ywb(this.b,this.G.c);T6b(this.d.v,0);this.d.s=1;this.d.A=1.2;Vwb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;Twb(this.d,0.15);V8b(this.H,new L8b(328965,2000,4000));yPb(this.H,new QYb(1118481));this.e=new rZb(16777215,1.15);U6b(this.e._,500,2000,0);yPb(this.H,this.e);this.q=new KZb(16729088,1.5,0);T6b(this.q._,0);yPb(this.H,this.q);this.g=new yOb(256,256);QNb(this.g,(CEb(),xEb));ONb(this.g,(rEb(),pEb));LNb(this.g,(NCb(),LCb));MNb(this.g,false);this.o=new yOb(256,256);QNb(this.o,xEb);ONb(this.o,pEb);LNb(this.o,LCb);MNb(this.o,false);n=new CJc;u=n.i;aNb(ru(u.a[hPc],225),new Yjb(0.05));g6b(ru(ru(u.a[$Sc],225).d,297),256,256);aNb(ru(u.a[FTc],225),this.g);s=new yOb(2048,2048);QNb(s,xEb);ONb(s,pEb);LNb(s,LCb);s.r=false;XNb(s,(UFb(),TFb));YNb(s,TFb);c=new cOb('./static/textures/terrain/grasslight-big.jpg',new ftc(this,s));XNb(c,TFb);YNb(c,TFb);d=new cOb('./static/textures/terrain/backgrounddetailed6.jpg',this);XNb(d,TFb);YNb(d,TFb);b=new cOb('./static/textures/terrain/grasslight-big-nm.jpg',this);XNb(b,TFb);YNb(b,TFb);t=new Hwc;this.B=t.i;aNb(ru(eSb(this.B,USc),225),this.o);aNb(ru(eSb(this.B,VSc),225),new Yjb(3.5));aNb(ru(eSb(this.B,GTc),225),this.g);aNb(ru(eSb(this.B,HTc),225),c);aNb(ru(eSb(this.B,ITc),225),d);aNb(ru(eSb(this.B,WSc),225),s);aNb(ru(eSb(this.B,JTc),225),b);aNb(ru(eSb(this.B,KTc),225),(Zib(),Zib(),Yib));aNb(ru(eSb(this.B,LTc),225),Yib);aNb(ru(eSb(this.B,sSc),225),Yib);a4b(ru(ru(eSb(this.B,ySc),225).d,293),16777215);a4b(ru(ru(eSb(this.B,zSc),225).d,293),16777215);a4b(ru(ru(eSb(this.B,xSc),225).d,293),1118481);aNb(ru(eSb(this.B,ZSc),225),new Yjb(30));aNb(ru(eSb(this.B,MTc),225),new Yjb(375));g6b(ru(ru(eSb(this.B,NTc),225).d,297),6,6);this.A=new vtb;Sob(this.A,bTc,new cNb((vNb(),hNb),new Yjb(1)));Sob(this.A,OTc,new cNb(pNb,new k6b(1.5,1.5)));Sob(this.A,PTc,new cNb(pNb,new k6b(0,0)));this.k=new vtb;i=new n3b((rtc(),qtc));JIb(g$b(i),this.A);i.c=false;i.b=true;Sob(this.k,QTc,i);j=new o3b(n);JIb(g$b(j),u);j.c=false;j.b=true;Sob(this.k,oSc,j);k=new o3b(t);JIb(g$b(k),this.B);k.c=true;k.b=true;Sob(this.k,'terrain',k);o=new VWb(this.u,this.t);p=new n0b;h0b(p,new d4b(0));this.r=new yYb(o,p);W6b(this.r._,-500);yPb(this.s,this.r);g=new WWb(6000,6000,64,64);iRb(g);this.v=new yYb(g,k);U6b(this.v._,0,-125,0);q4b(this.v.cb,-1.5707963267948966);JPb(this.v,false);yPb(this.H,this.v);nHb(this.G.k,this.H.a.c,1);this.G.k.ab=true;this.G.k.bb=true;jHb(this.G.k,false);q=new qHc(this.H,this.b);f=new bHc(0.6);e=new tHc(new wHc);aNb(ru(eSb(g$b(e.b).i,ESc),225),new Yjb(0.65));this.f=new tHc(new SIc);this.D=new tHc(new VJc);aNb(ru(eSb(g$b(this.f.b).i,DTc),225),new Yjb(6/this.u));aNb(ru(eSb(g$b(this.D.b).i,ETc),225),new Yjb(6/this.t));aNb(ru(eSb(g$b(this.f.b).i,RTc),225),new Yjb(0.5));aNb(ru(eSb(g$b(this.D.b).i,RTc),225),new Yjb(0.5));this.D.a=true;r=new yOb(this.u,this.t);QNb(s,wEb);ONb(s,pEb);LNb(s,LCb);s.f=false;s.r=false;a=new jHc(this.G.k,r);Cqb(a.b,q);Cqb(a.b,f);Cqb(a.b,e);hHc(a,this.f);hHc(a,this.D);this.n=new Mqb;new Pxc('./static/models/animated/parrot.js',new itc(this));new Pxc(CTc,new ltc(this));new Pxc('./static/models/animated/stork.js',new otc(this));this.p=rh()};_.ob=function dtc(a){var b,c,d,e,f;b=(rh()-this.p)*0.001;if(this.v.gb){Wwb(this.d);this.j=A4b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;_3b(this.H.a.c,0.1,e,this.j);nHb(this.G.k,this.H.a.c,1);$Yb(this.e,0.1+f*1.0499999999999998);IZb(this.q,0.9+f*0.6);aNb(ru(eSb(this.B,VSc),225),new Yjb(0.6+f*2.9));if(this.C){this.a=A4b(this.a+-7.5E-4,0,0.05);aNb(ru(Nob(this.A,bTc),225),new Yjb(ru(ru(Nob(this.A,bTc),225).d,150).a+b*this.a));c6b(ru(ru(Nob(this.A,PTc),225).d,297),b*0.05);h6b(ru(ru(eSb(this.B,STc),225).d,297),4*ru(ru(Nob(this.A,PTc),225).d,297).c);oTb(this.r,ru(Nob(this.k,QTc),282));bHb(this.G.k,this.s,this.c,this.g,true);oTb(this.r,ru(Nob(this.k,oSc),282));bHb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=ru(Fqb(this.n,c),305);r8b(d,zu(1000*b));c6b(d._,d.d*b);d._.c>2000&&h6b(d._,-1500-dlb()*500)}bHb(this.G.k,this.H,this.b,null,false)}this.p=rh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;lU(1252,1,{},ftc);_.Ud=function gtc(a){$sc(this.a);Zsc(this.a,new jJc,a,this.b)};lU(1253,1,{},itc);_.Bf=function jtc(a,b){Kxc((ru(a,339),ru(b,242)));Ysc(this.a,ru(b,242),500,-3500,500,700);Ysc(this.a,ru(b,242),500,-3000-dlb()*500,500,-200);Ysc(this.a,ru(b,242),500,-3000-dlb()*500,500,200);Ysc(this.a,ru(b,242),500,-3000-dlb()*500,500,1000)};lU(1254,1,{},ltc);_.Bf=function mtc(a,b){Kxc((ru(a,339),ru(b,242)));Ysc(this.a,ru(b,242),1000,-3000-dlb()*500,350,40)};lU(1255,1,{},otc);_.Bf=function ptc(a,b){Kxc((ru(a,339),ru(b,242)));Ysc(this.a,ru(b,242),1000,-3000-dlb()*500,350,340)};var qtc;lU(1256,1,{},vtc);_.Od=function wtc(){return Etc(),ttc};_.Pd=function xtc(){return Ftc(),utc};var ttc,utc;lU(1257,1,{},ztc);_.nc=function Atc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};lU(1258,1,{},Ctc);_.nc=function Dtc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};lU(1316,732,zMc,Hwc);_.Ld=function Iwc(){JIb(this,zNb());JIb(this,ANb());JIb(this,BNb());CIb(this,KTc,new cNb((vNb(),kNb),(Zib(),Zib(),Xib)));CIb(this,LTc,new cNb(kNb,Xib));CIb(this,sSc,new cNb(kNb,Xib));CIb(this,TTc,new cNb(kNb,Xib));CIb(this,HTc,new bNb(nNb));CIb(this,ITc,new bNb(nNb));CIb(this,JTc,new bNb(nNb));CIb(this,USc,new bNb(nNb));CIb(this,WSc,new bNb(nNb));CIb(this,GTc,new bNb(nNb));CIb(this,VSc,new cNb(hNb,new Yjb(1)));CIb(this,UTc,new cNb(hNb,new Yjb(0)));CIb(this,MTc,new cNb(hNb,new Yjb(1)));CIb(this,ySc,new cNb(gNb,new d4b(15658734)));CIb(this,zSc,new cNb(gNb,new d4b(1118481)));CIb(this,xSc,new cNb(gNb,new d4b(328965)));CIb(this,ZSc,new cNb(hNb,new Yjb(30)));CIb(this,ESc,new cNb(hNb,new Yjb(1)));CIb(this,'uRepeatBase',new cNb(pNb,new k6b(1,1)));CIb(this,NTc,new cNb(pNb,new k6b(1,1)));CIb(this,STc,new cNb(pNb,new k6b(0,0)))};_.Md=function Jwc(a){var b,c;c=new jrb(hu(hS,gLc,1,[FSc,GSc]));b=new jrb(hu(hS,gLc,1,[ISc,JSc,KSc]));LIb(this,TIb(a,hu(kS,gLc,173,[c,b])))};_.Nd=function Kwc(a){var b,c;c=new jrb(hu(hS,gLc,1,[LSc]));b=new jrb(hu(hS,gLc,1,[MSc]));MIb(this,TIb(a,hu(kS,gLc,173,[c,b])))};var Lwc;lU(1317,1,{},Qwc);_.Od=function Rwc(){return Zwc(),Owc};_.Pd=function Swc(){return $wc(),Pwc};var Owc,Pwc;lU(1318,1,{},Uwc);_.nc=function Vwc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};lU(1319,1,{},Xwc);_.nc=function Ywc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};lU(1411,732,zMc,wHc);_.Ld=function xHc(){CIb(this,uSc,new bNb((vNb(),nNb)));CIb(this,ESc,new cNb(hNb,new Yjb(1)))};var yHc;lU(1412,1,{},DHc);_.Od=function EHc(){return MHc(),BHc};_.Pd=function FHc(){return NHc(),CHc};var BHc,CHc;lU(1413,1,{},HHc);_.nc=function IHc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};lU(1414,1,{},KHc);_.nc=function LHc(){return jTc};lU(1435,732,zMc,SIc);_.Ld=function TIc(){CIb(this,uSc,new bNb((vNb(),nNb)));CIb(this,DTc,new cNb(hNb,new Yjb(0.001953125)));CIb(this,RTc,new cNb(hNb,new Yjb(0.35)))};var UIc;lU(1436,1,{},ZIc);_.Od=function $Ic(){return gJc(),XIc};_.Pd=function _Ic(){return hJc(),YIc};var XIc,YIc;lU(1437,1,{},bJc);_.nc=function cJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};lU(1438,1,{},eJc);_.nc=function fJc(){return jTc};lU(1441,732,zMc,jJc);_.Ld=function kJc(){CIb(this,uSc,new bNb((vNb(),nNb)))};var lJc;lU(1442,1,{},qJc);_.Od=function rJc(){return zJc(),oJc};_.Pd=function sJc(){return AJc(),pJc};var oJc,pJc;lU(1443,1,{},uJc);_.nc=function vJc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};lU(1444,1,{},xJc);_.nc=function yJc(){return jTc};lU(1447,732,zMc,CJc);_.Ld=function DJc(){CIb(this,FTc,new bNb((vNb(),nNb)));CIb(this,$Sc,new cNb(pNb,new k6b(512,512)));CIb(this,OTc,new cNb(pNb,new k6b(1,1)));CIb(this,hPc,new cNb(hNb,new Yjb(0.05)))};var EJc;lU(1448,1,{},JJc);_.Od=function KJc(){return SJc(),HJc};_.Pd=function LJc(){return TJc(),IJc};var HJc,IJc;lU(1449,1,{},NJc);_.nc=function OJc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};lU(1450,1,{},QJc);_.nc=function RJc(){return jTc};lU(1453,732,zMc,VJc);_.Ld=function WJc(){CIb(this,uSc,new bNb((vNb(),nNb)));CIb(this,ETc,new cNb(hNb,new Yjb(0.001953125)));CIb(this,RTc,new cNb(hNb,new Yjb(0.35)))};var XJc;lU(1454,1,{},aKc);_.Od=function bKc(){return jKc(),$Jc};_.Pd=function cKc(){return kKc(),_Jc};var $Jc,_Jc;lU(1455,1,{},eKc);_.nc=function fKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};lU(1456,1,{},hKc);_.nc=function iKc(){return jTc};var yO=Mjb(LRc,'TerrainDynamic$DemoScene',1251),uO=Mjb(LRc,'TerrainDynamic$DemoScene$1',1252),vO=Mjb(LRc,'TerrainDynamic$DemoScene$2',1253),wO=Mjb(LRc,'TerrainDynamic$DemoScene$3',1254),xO=Mjb(LRc,'TerrainDynamic$DemoScene$4',1255),lR=Mjb(lTc,VTc,1447),jP=Mjb(BRc,'TerrainShader',1316),PQ=Mjb(lTc,'BleachBypassShader',1411),dR=Mjb(lTc,'HorizontalTiltShiftShader',1435),pR=Mjb(lTc,'VerticalTiltShiftShader',1453),BO=Mjb(LRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1256),zO=Mjb(LRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1257),AO=Mjb(LRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1258),kR=Mjb(lTc,WTc,1448),iR=Mjb(lTc,XTc,1449),jR=Mjb(lTc,YTc,1450),iP=Mjb(BRc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1317),gP=Mjb(BRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1318),hP=Mjb(BRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1319),OQ=Mjb(lTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1412),MQ=Mjb(lTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1413),NQ=Mjb(lTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1414),cR=Mjb(lTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1436),aR=Mjb(lTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1437),bR=Mjb(lTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1438),oR=Mjb(lTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1454),mR=Mjb(lTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1455),nR=Mjb(lTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1456),hR=Mjb(lTc,'LuminosityShader',1441),gR=Mjb(lTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1442),eR=Mjb(lTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1443),fR=Mjb(lTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1444);_Mc(xi)(38);