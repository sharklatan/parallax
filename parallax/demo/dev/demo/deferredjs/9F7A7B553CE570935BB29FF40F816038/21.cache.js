function EKb(){}
function IKb(){}
function LKb(){}
function AKb(){AKb=bLc;zKb=new EKb}
function NKb(){NKb=bLc;CKb=new IKb}
function OKb(){OKb=bLc;DKb=new LKb}
function xKb(){OIb.call(this,(AKb(),zKb))}
function Glc(){qac.call(this);this.c=0;this.d=0}
lU(756,732,zMc,xKb);_.Ld=function yKb(){CIb(this,'mRefractionRatio',new cNb((vNb(),hNb),new Yjb(1.02)));CIb(this,'mFresnelBias',new cNb(hNb,new Yjb(0.1)));CIb(this,'mFresnelPower',new cNb(hNb,new Yjb(2)));CIb(this,'mFresnelScale',new cNb(hNb,new Yjb(1)));CIb(this,PSc,new bNb(nNb))};var zKb;lU(757,1,{},EKb);_.Od=function FKb(){return NKb(),CKb};_.Pd=function GKb(){return OKb(),DKb};var CKb,DKb;lU(758,1,{},IKb);_.nc=function JKb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};lU(759,1,{},LKb);_.nc=function MKb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};lU(1147,1,NMc);_.zb=function Elc(){S9b(this.b,new Glc(this.a))};lU(1148,980,{327:1},Glc);_.nb=function Hlc(){var a,b,c,d,e,f,g,i,j;this.a=new BQb(60,RGb(this.G.k),1,100000);W6b(this.a._,3200);this.b=new BQb(60,RGb(this.G.k),1,100000);this.e=new X8b;a=new bXb(100,32,16);j=new kOb('./static/textures/cube/park2/*.jpg');LNb(j,(NCb(),LCb));g=new xKb;aNb(ru(eSb(g.i,PSc),225),j);c=new o3b(g);this.f=new Mqb;for(b=0;b<500;b++){d=new yYb(a,c);h6b(d._,dlb()*10000-5000);i6b(d._,dlb()*10000-5000);W6b(d._,dlb()*10000-5000);T6b(d.eb,dlb()*3+1);yPb(this.H,d);Cqb(this.f,d)}this.H.W=false;i=new oJb;aNb(ru(eSb(i.i,PSc),225),j);f=new o3b(i);r$b(f,(d0b(),a0b));e=new yYb(new mWb(100000,100000,100000),f);yPb(this.e,e);jHb(this.G.k,false)};_.ob=function Ilc(a){var b,c,d,e;e=1.0E-4*a;c6b(this.a._,(this.c-this.a._.c)*0.05);d6b(this.a._,(-this.d-this.a._.d)*0.05);XPb(this.a,this.H._);k4b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=ru(Fqb(this.f,b),304);h6b(d._,5000*Math.cos(e+b));i6b(d._,5000*Math.sin(e+b*1.1))}KGb(this.G.k,true);bHb(this.G.k,this.e,this.b,null,false);bHb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var HM=Mjb(IRc,'MaterialsCubemapFresnel$DemoScene',1148),bG=Mjb(QSc,'FresnelShader',756),aG=Mjb(QSc,'FresnelShader_Resources_default_InlineClientBundleGenerator',757),$F=Mjb(QSc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',758),_F=Mjb(QSc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',759);_Mc(xi)(21);