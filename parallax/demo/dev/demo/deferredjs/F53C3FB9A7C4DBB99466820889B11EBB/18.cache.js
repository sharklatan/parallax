function Vtc(){}
function Ztc(){}
function auc(){}
function Cwc(){}
function Gwc(){}
function Jwc(){}
function Akc(a){this.b=a}
function Rtc(){Rtc=iLc;Qtc=new Vtc}
function cuc(){cuc=iLc;Ttc=new Ztc}
function duc(){duc=iLc;Utc=new auc}
function ywc(){ywc=iLc;xwc=new Cwc}
function Lwc(){Lwc=iLc;Awc=new Gwc}
function Mwc(){Mwc=iLc;Bwc=new Jwc}
function twc(){VIb.call(this,(ywc(),xwc))}
function Otc(){VIb.call(this,(Rtc(),Qtc))}
function wkc(){xac.call(this);this.e=0;this.f=0}
function vkc(a,b){var c,d,e,f,g,i;d=new iOb(BSc);d.n=4;n6b(d.C,0.998,0.998);n6b(d.B,0.001,0.001);cOb(d,(_Fb(),$Fb));dOb(d,$Fb);SNb(d,(UCb(),SCb));e=new iOb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');n6b(e.C,0.998,0.998);n6b(e.B,0.001,0.001);cOb(e,$Fb);dOb(e,$Fb);SNb(e,SCb);c=new iOb('./static/models/obj/leeperrysmith/Map-COL.jpg');n6b(c.C,0.998,0.998);n6b(c.B,0.001,0.001);cOb(c,$Fb);dOb(c,$Fb);SNb(c,SCb);g=new twc;i=g.j;hNb(Eu(i.b[DSc],225),(ejb(),ejb(),djb));hNb(Eu(i.b[ESc],225),djb);hNb(Eu(i.b[FSc],225),a.c.f);hNb(Eu(i.b[GSc],225),c);hNb(Eu(i.b[HSc],225),d);hNb(Eu(i.b[ISc],225),e);h4b(Eu(Eu(i.b[JSc],225).e,293),10526880);h4b(Eu(Eu(i.b[KSc],225).e,293),10526880);h4b(Eu(Eu(i.b[LSc],225).e,293),10526880);hNb(Eu(i.b[MSc],225),new dkb(0.145));hNb(Eu(i.b[NSc],225),new dkb(0.75));hNb(Eu(i.b[OSc],225),new dkb(16));P7b(Eu(Eu(i.b[PSc],225).e,301),0.001,0.001,0.998,0.998);f=new v3b(g);f.d=true;a.d=new FYb(b,f);p6b(a.d.ab,-50);$6b(a.d.fb,100);KPb(a.d,true);a.d.V=true;FPb(a.I,a.d)}
var DSc='enableBump',FSc='tBeckmann',MSc='uRoughness',NSc='uSpecularBrightness';xU(1121,1,WMc);_.Db=function tkc(){Z9b(this.c,new wkc(this.b))};xU(1122,974,{323:1},wkc);_.ob=function xkc(){var a,b,c,d,e,f,g;this.b=new IQb(27,YGb(this.H.n),1,10000);b7b(this.b.ab,1200);FPb(this.I,new XYb(5592405));d=new RZb(16777215,1.5,1000);_6b(d.ab,0,0,600);FPb(this.I,d);f=new ZZb(1);_6b(f.ab,0.05,0.05,1);FPb(this.I,f);f.ab.tf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new yZb(16777215,0.85);_6b(a.ab,1,-0.5,1);g4b(a.M,0.6,1,0.85);FPb(this.I,a);a.ab.tf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new yZb(16777215,0.85);_6b(b.ab,1,-0.5,-1);FPb(this.I,b);new AHc(new Otc);c=new AHc(new nIc);c.b=true;g=new FOb(512,512);XNb(g,(JEb(),DEb));VNb(g,(yEb(),wEb));SNb(g,(UCb(),SCb));g.g=false;this.c=new qHc(this.H.n,g);new Wxc(CSc,new Akc(this));uHb(this.H.n,new k4b(5001561),1);e=new nGb(this.H.n,this.I);e.i=false;qHb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function ykc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){q4b(this.d.db,0.05*(b-this.d.db.e));p4b(this.d.db,0.05*(c-this.d.db.d))}RGb(this.H.n,true);iHb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;xU(1123,1,{},Akc);_.Ef=function Bkc(a,b){vkc(this.b,Eu(b,242))};xU(1255,726,IMc,Otc);_.Od=function Ptc(){};var Qtc;xU(1256,1,{},Vtc);_.Rd=function Wtc(){return cuc(),Ttc};_.Sd=function Xtc(){return duc(),Utc};var Ttc,Utc;xU(1257,1,{},Ztc);_.qc=function $tc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};xU(1258,1,{},auc);_.qc=function buc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};xU(1304,726,IMc,twc);_.Od=function uwc(){QIb(this,GNb());QIb(this,HNb());QIb(this,INb());JIb(this,DSc,new jNb((CNb(),rNb),Lkb(0)));JIb(this,ESc,new jNb(rNb,Lkb(0)));JIb(this,GSc,new iNb(uNb));JIb(this,FSc,new iNb(uNb));JIb(this,KSc,new jNb(nNb,new k4b(15658734)));JIb(this,LSc,new jNb(nNb,new k4b(1118481)));JIb(this,JSc,new jNb(nNb,new k4b(328965)));JIb(this,QSc,new jNb(oNb,new dkb(1)));JIb(this,MSc,new jNb(oNb,new dkb(0.15)));JIb(this,NSc,new jNb(oNb,new dkb(0.75)));JIb(this,HSc,new iNb(uNb));JIb(this,OSc,new jNb(oNb,new dkb(1)));JIb(this,ISc,new iNb(uNb));JIb(this,PSc,new jNb(ANb,new T7b(0,0,1,1)));JIb(this,'uWrapRGB',new jNb(yNb,new f7b(0.75,0.375,0.1875)))};_.Pd=function vwc(a){var b,c;c=new qrb(uu(tS,oLc,1,[RSc,SSc,TSc]));b=new qrb(uu(tS,oLc,1,[USc,VSc,WSc]));SIb(this,$Ib(a,uu(wS,oLc,173,[c,b])))};_.Qd=function wwc(a){var b,c;c=new qrb(uu(tS,oLc,1,[XSc]));b=new qrb(uu(tS,oLc,1,[YSc]));TIb(this,$Ib(a,uu(wS,oLc,173,[c,b])))};var xwc;xU(1305,1,{},Cwc);_.Rd=function Dwc(){return Lwc(),Awc};_.Sd=function Ewc(){return Mwc(),Bwc};var Awc,Bwc;xU(1306,1,{},Gwc);_.qc=function Hwc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};xU(1307,1,{},Jwc);_.qc=function Kwc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var zM=Tjb(URc,'MaterialsBumpmapSkin$DemoScene',1122),yM=Tjb(URc,'MaterialsBumpmapSkin$DemoScene$1',1123),SO=Tjb(NRc,'BeckmannShader',1255),RO=Tjb(NRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1256),PO=Tjb(NRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1257),QO=Tjb(NRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1258),rP=Tjb(NRc,'SkinSimpleShader',1304),qP=Tjb(NRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1305),oP=Tjb(NRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1306),pP=Tjb(NRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1307);iNc(Hi)(18);