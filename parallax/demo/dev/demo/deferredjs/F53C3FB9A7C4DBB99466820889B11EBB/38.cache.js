function Ctc(){}
function Gtc(){}
function Jtc(){}
function Xwc(){}
function _wc(){}
function cxc(){}
function KHc(){}
function OHc(){}
function RHc(){}
function eJc(){}
function iJc(){}
function lJc(){}
function xJc(){}
function BJc(){}
function EJc(){}
function QJc(){}
function UJc(){}
function XJc(){}
function hKc(){}
function lKc(){}
function oKc(){}
function PZb(a,b){a.c=b}
function x8b(a,b){a.n=b}
function oHc(a,b){Jqb(a.c,b)}
function ptc(a){this.b=a}
function stc(a){this.b=a}
function vtc(a){this.b=a}
function ytc(){ytc=iLc;xtc=new Ctc}
function Ltc(){Ltc=iLc;Atc=new Gtc}
function Mtc(){Mtc=iLc;Btc=new Jtc}
function Twc(){Twc=iLc;Swc=new Xwc}
function exc(){exc=iLc;Vwc=new _wc}
function fxc(){fxc=iLc;Wwc=new cxc}
function GHc(){GHc=iLc;FHc=new KHc}
function THc(){THc=iLc;IHc=new OHc}
function UHc(){UHc=iLc;JHc=new RHc}
function aJc(){aJc=iLc;_Ic=new eJc}
function nJc(){nJc=iLc;cJc=new iJc}
function oJc(){oJc=iLc;dJc=new lJc}
function tJc(){tJc=iLc;sJc=new xJc}
function GJc(){GJc=iLc;vJc=new BJc}
function HJc(){HJc=iLc;wJc=new EJc}
function MJc(){MJc=iLc;LJc=new QJc}
function ZJc(){ZJc=iLc;OJc=new UJc}
function $Jc(){$Jc=iLc;PJc=new XJc}
function dKc(){dKc=iLc;cKc=new hKc}
function qKc(){qKc=iLc;fKc=new lKc}
function rKc(){rKc=iLc;gKc=new oKc}
function mtc(a,b){this.b=a;this.c=b}
function qJc(){VIb.call(this,(tJc(),sJc))}
function JJc(){VIb.call(this,(MJc(),LJc))}
function ZIc(){VIb.call(this,(aJc(),_Ic))}
function Owc(){VIb.call(this,(Twc(),Swc))}
function DHc(){VIb.call(this,(GHc(),FHc))}
function aKc(){VIb.call(this,(dKc(),cKc))}
function ftc(a){a.A+=1;a.A==3&&QPb(a.w,true)}
function gtc(){xac.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function etc(a,b,c,d){var e,f,g;g=new v3b(b);hNb(Eu(lSb(n$b(g).j,GSc),225),c);f=new c9b;e=new FYb(new aXb(a.v,a.u),g);b7b(e.ab,-500);FPb(f,e);iHb(a.H.n,f,a.d,d,true)}
function dtc(a,b,c,d,e,f){var g,i;g=new n1b;g1b(g,new k4b(16755285));g.k=true;l1b(g,(f_b(),c_b));i=new z8b(b,g);i.e=c;x8b(i,Mu(600*klb()));_6b(i.ab,d,e,f);y4b(i.db,1.5707963267948966);i.T=true;i.V=true;FPb(a.I,i);Jqb(a.o,i)}
var WTc='enableDiffuse1',XTc='enableDiffuse2',PTc='h',RTc='heightMap',aUc='heightmap',_Tc='offset',bUc='r',VTc='tDetail',TTc='tDiffuse1',UTc='tDiffuse2',ZTc='uRepeatOverlay',QTc='v';xU(1244,1,WMc);_.Db=function btc(){Z9b(this.c,new gtc(this.b))};xU(1245,974,{78:1,186:1,338:1},gtc);_.Xd=function htc(a){ftc(this)};_.Jd=function itc(a){this.v=a.b.$;this.u=a.b.Z;hNb(Eu(lSb(n$b(this.g.c).j,PTc),225),new dkb(6/this.v));hNb(Eu(lSb(n$b(this.F.c).j,QTc),225),new dkb(6/this.u))};_.ob=function jtc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;tt(($xb(),Zxb),(iyb(),hyb),this);this.c=new IQb(40,YGb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new tQb(this.v,this.u,-10000,10000);_6b(this.c.ab,-1200,800,1200);b7b(this.d.ab,100);this.t=new c9b;FPb(this.t,this.d);this.e=new dxb(this.c,this.H.d);$6b(this.e.w,0);this.e.t=1;this.e.B=1.2;axb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;$wb(this.e,0.15);a9b(this.I,new S8b(328965,2000,4000));FPb(this.I,new XYb(1118481));this.f=new yZb(16777215,1.15);_6b(this.f.ab,500,2000,0);FPb(this.I,this.f);this.r=new RZb(16729088,1.5,0);$6b(this.r.ab,0);FPb(this.I,this.r);this.i=new FOb(256,256);XNb(this.i,(JEb(),EEb));VNb(this.i,(yEb(),wEb));SNb(this.i,(UCb(),SCb));TNb(this.i,false);this.p=new FOb(256,256);XNb(this.p,EEb);VNb(this.p,wEb);SNb(this.p,SCb);TNb(this.p,false);n=new JJc;u=n.j;hNb(Eu(u.b[uPc],225),new dkb(0.05));n6b(Eu(Eu(u.b[kTc],225).e,297),256,256);hNb(Eu(u.b[RTc],225),this.i);s=new FOb(2048,2048);XNb(s,EEb);VNb(s,wEb);SNb(s,SCb);s.s=false;cOb(s,(_Fb(),$Fb));dOb(s,$Fb);c=new jOb('./static/textures/terrain/grasslight-big.jpg',new mtc(this,s));cOb(c,$Fb);dOb(c,$Fb);d=new jOb('./static/textures/terrain/backgrounddetailed6.jpg',this);cOb(d,$Fb);dOb(d,$Fb);b=new jOb('./static/textures/terrain/grasslight-big-nm.jpg',this);cOb(b,$Fb);dOb(b,$Fb);t=new Owc;this.C=t.j;hNb(Eu(lSb(this.C,eTc),225),this.p);hNb(Eu(lSb(this.C,fTc),225),new dkb(3.5));hNb(Eu(lSb(this.C,STc),225),this.i);hNb(Eu(lSb(this.C,TTc),225),c);hNb(Eu(lSb(this.C,UTc),225),d);hNb(Eu(lSb(this.C,gTc),225),s);hNb(Eu(lSb(this.C,VTc),225),b);hNb(Eu(lSb(this.C,WTc),225),(ejb(),ejb(),djb));hNb(Eu(lSb(this.C,XTc),225),djb);hNb(Eu(lSb(this.C,ESc),225),djb);h4b(Eu(Eu(lSb(this.C,KSc),225).e,293),16777215);h4b(Eu(Eu(lSb(this.C,LSc),225).e,293),16777215);h4b(Eu(Eu(lSb(this.C,JSc),225).e,293),1118481);hNb(Eu(lSb(this.C,jTc),225),new dkb(30));hNb(Eu(lSb(this.C,YTc),225),new dkb(375));n6b(Eu(Eu(lSb(this.C,ZTc),225).e,297),6,6);this.B=new Ctb;Zob(this.B,nTc,new jNb((CNb(),oNb),new dkb(1)));Zob(this.B,$Tc,new jNb(wNb,new r6b(1.5,1.5)));Zob(this.B,_Tc,new jNb(wNb,new r6b(0,0)));this.n=new Ctb;i=new u3b((ytc(),xtc));QIb(n$b(i),this.B);i.d=false;i.c=true;Zob(this.n,aUc,i);j=new v3b(n);QIb(n$b(j),u);j.d=false;j.c=true;Zob(this.n,ASc,j);k=new v3b(t);QIb(n$b(k),this.C);k.d=true;k.c=true;Zob(this.n,'terrain',k);o=new aXb(this.v,this.u);p=new u0b;o0b(p,new k4b(0));this.s=new FYb(o,p);b7b(this.s.ab,-500);FPb(this.t,this.s);g=new bXb(6000,6000,64,64);pRb(g);this.w=new FYb(g,k);_6b(this.w.ab,0,-125,0);x4b(this.w.db,-1.5707963267948966);QPb(this.w,false);FPb(this.I,this.w);uHb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;qHb(this.H.n,false);q=new xHc(this.I,this.c);f=new iHc(0.6);e=new AHc(new DHc);hNb(Eu(lSb(n$b(e.c).j,QSc),225),new dkb(0.65));this.g=new AHc(new ZIc);this.F=new AHc(new aKc);hNb(Eu(lSb(n$b(this.g.c).j,PTc),225),new dkb(6/this.v));hNb(Eu(lSb(n$b(this.F.c).j,QTc),225),new dkb(6/this.u));hNb(Eu(lSb(n$b(this.g.c).j,bUc),225),new dkb(0.5));hNb(Eu(lSb(n$b(this.F.c).j,bUc),225),new dkb(0.5));this.F.b=true;r=new FOb(this.v,this.u);XNb(s,DEb);VNb(s,wEb);SNb(s,SCb);s.g=false;s.s=false;a=new qHc(this.H.n,r);Jqb(a.c,q);Jqb(a.c,f);Jqb(a.c,e);oHc(a,this.g);oHc(a,this.F);this.o=new Tqb;new Wxc('./static/models/animated/parrot.js',new ptc(this));new Wxc(OTc,new stc(this));new Wxc('./static/models/animated/stork.js',new vtc(this));this.q=Bh()};_.pb=function ktc(a){var b,c,d,e,f;b=(Bh()-this.q)*0.001;if(this.w.hb){bxb(this.e);this.k=H4b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;g4b(this.I.b.d,0.1,e,this.k);uHb(this.H.n,this.I.b.d,1);fZb(this.f,0.1+f*1.0499999999999998);PZb(this.r,0.9+f*0.6);hNb(Eu(lSb(this.C,fTc),225),new dkb(0.6+f*2.9));if(this.D){this.b=H4b(this.b+-7.5E-4,0,0.05);hNb(Eu(Uob(this.B,nTc),225),new dkb(Eu(Eu(Uob(this.B,nTc),225).e,150).b+b*this.b));j6b(Eu(Eu(Uob(this.B,_Tc),225).e,297),b*0.05);o6b(Eu(Eu(lSb(this.C,cUc),225).e,297),4*Eu(Eu(Uob(this.B,_Tc),225).e,297).d);vTb(this.s,Eu(Uob(this.n,aUc),282));iHb(this.H.n,this.t,this.d,this.i,true);vTb(this.s,Eu(Uob(this.n,ASc),282));iHb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Eu(Mqb(this.o,c),305);y8b(d,Mu(1000*b));j6b(d.ab,d.e*b);d.ab.d>2000&&o6b(d.ab,-1500-klb()*500)}iHb(this.H.n,this.I,this.c,null,false)}this.q=Bh()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;xU(1246,1,{},mtc);_.Xd=function ntc(a){ftc(this.b);etc(this.b,new qJc,a,this.c)};xU(1247,1,{},ptc);_.Ef=function qtc(a,b){Rxc((Eu(a,339),Eu(b,242)));dtc(this.b,Eu(b,242),500,-3500,500,700);dtc(this.b,Eu(b,242),500,-3000-klb()*500,500,-200);dtc(this.b,Eu(b,242),500,-3000-klb()*500,500,200);dtc(this.b,Eu(b,242),500,-3000-klb()*500,500,1000)};xU(1248,1,{},stc);_.Ef=function ttc(a,b){Rxc((Eu(a,339),Eu(b,242)));dtc(this.b,Eu(b,242),1000,-3000-klb()*500,350,40)};xU(1249,1,{},vtc);_.Ef=function wtc(a,b){Rxc((Eu(a,339),Eu(b,242)));dtc(this.b,Eu(b,242),1000,-3000-klb()*500,350,340)};var xtc;xU(1250,1,{},Ctc);_.Rd=function Dtc(){return Ltc(),Atc};_.Sd=function Etc(){return Mtc(),Btc};var Atc,Btc;xU(1251,1,{},Gtc);_.qc=function Htc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};xU(1252,1,{},Jtc);_.qc=function Ktc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};xU(1310,726,IMc,Owc);_.Od=function Pwc(){QIb(this,GNb());QIb(this,HNb());QIb(this,INb());JIb(this,WTc,new jNb((CNb(),rNb),(ejb(),ejb(),cjb)));JIb(this,XTc,new jNb(rNb,cjb));JIb(this,ESc,new jNb(rNb,cjb));JIb(this,dUc,new jNb(rNb,cjb));JIb(this,TTc,new iNb(uNb));JIb(this,UTc,new iNb(uNb));JIb(this,VTc,new iNb(uNb));JIb(this,eTc,new iNb(uNb));JIb(this,gTc,new iNb(uNb));JIb(this,STc,new iNb(uNb));JIb(this,fTc,new jNb(oNb,new dkb(1)));JIb(this,eUc,new jNb(oNb,new dkb(0)));JIb(this,YTc,new jNb(oNb,new dkb(1)));JIb(this,KSc,new jNb(nNb,new k4b(15658734)));JIb(this,LSc,new jNb(nNb,new k4b(1118481)));JIb(this,JSc,new jNb(nNb,new k4b(328965)));JIb(this,jTc,new jNb(oNb,new dkb(30)));JIb(this,QSc,new jNb(oNb,new dkb(1)));JIb(this,'uRepeatBase',new jNb(wNb,new r6b(1,1)));JIb(this,ZTc,new jNb(wNb,new r6b(1,1)));JIb(this,cUc,new jNb(wNb,new r6b(0,0)))};_.Pd=function Qwc(a){var b,c;c=new qrb(uu(tS,oLc,1,[RSc,SSc]));b=new qrb(uu(tS,oLc,1,[USc,VSc,WSc]));SIb(this,$Ib(a,uu(wS,oLc,173,[c,b])))};_.Qd=function Rwc(a){var b,c;c=new qrb(uu(tS,oLc,1,[XSc]));b=new qrb(uu(tS,oLc,1,[YSc]));TIb(this,$Ib(a,uu(wS,oLc,173,[c,b])))};var Swc;xU(1311,1,{},Xwc);_.Rd=function Ywc(){return exc(),Vwc};_.Sd=function Zwc(){return fxc(),Wwc};var Vwc,Wwc;xU(1312,1,{},_wc);_.qc=function axc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};xU(1313,1,{},cxc);_.qc=function dxc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};xU(1405,726,IMc,DHc);_.Od=function EHc(){JIb(this,GSc,new iNb((CNb(),uNb)));JIb(this,QSc,new jNb(oNb,new dkb(1)))};var FHc;xU(1406,1,{},KHc);_.Rd=function LHc(){return THc(),IHc};_.Sd=function MHc(){return UHc(),JHc};var IHc,JHc;xU(1407,1,{},OHc);_.qc=function PHc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};xU(1408,1,{},RHc);_.qc=function SHc(){return vTc};xU(1429,726,IMc,ZIc);_.Od=function $Ic(){JIb(this,GSc,new iNb((CNb(),uNb)));JIb(this,PTc,new jNb(oNb,new dkb(0.001953125)));JIb(this,bUc,new jNb(oNb,new dkb(0.35)))};var _Ic;xU(1430,1,{},eJc);_.Rd=function fJc(){return nJc(),cJc};_.Sd=function gJc(){return oJc(),dJc};var cJc,dJc;xU(1431,1,{},iJc);_.qc=function jJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};xU(1432,1,{},lJc);_.qc=function mJc(){return vTc};xU(1435,726,IMc,qJc);_.Od=function rJc(){JIb(this,GSc,new iNb((CNb(),uNb)))};var sJc;xU(1436,1,{},xJc);_.Rd=function yJc(){return GJc(),vJc};_.Sd=function zJc(){return HJc(),wJc};var vJc,wJc;xU(1437,1,{},BJc);_.qc=function CJc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};xU(1438,1,{},EJc);_.qc=function FJc(){return vTc};xU(1441,726,IMc,JJc);_.Od=function KJc(){JIb(this,RTc,new iNb((CNb(),uNb)));JIb(this,kTc,new jNb(wNb,new r6b(512,512)));JIb(this,$Tc,new jNb(wNb,new r6b(1,1)));JIb(this,uPc,new jNb(oNb,new dkb(0.05)))};var LJc;xU(1442,1,{},QJc);_.Rd=function RJc(){return ZJc(),OJc};_.Sd=function SJc(){return $Jc(),PJc};var OJc,PJc;xU(1443,1,{},UJc);_.qc=function VJc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};xU(1444,1,{},XJc);_.qc=function YJc(){return vTc};xU(1447,726,IMc,aKc);_.Od=function bKc(){JIb(this,GSc,new iNb((CNb(),uNb)));JIb(this,QTc,new jNb(oNb,new dkb(0.001953125)));JIb(this,bUc,new jNb(oNb,new dkb(0.35)))};var cKc;xU(1448,1,{},hKc);_.Rd=function iKc(){return qKc(),fKc};_.Sd=function jKc(){return rKc(),gKc};var fKc,gKc;xU(1449,1,{},lKc);_.qc=function mKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};xU(1450,1,{},oKc);_.qc=function pKc(){return vTc};var KO=Tjb(XRc,'TerrainDynamic$DemoScene',1245),GO=Tjb(XRc,'TerrainDynamic$DemoScene$1',1246),HO=Tjb(XRc,'TerrainDynamic$DemoScene$2',1247),IO=Tjb(XRc,'TerrainDynamic$DemoScene$3',1248),JO=Tjb(XRc,'TerrainDynamic$DemoScene$4',1249),xR=Tjb(xTc,fUc,1441),vP=Tjb(NRc,'TerrainShader',1310),_Q=Tjb(xTc,'BleachBypassShader',1405),pR=Tjb(xTc,'HorizontalTiltShiftShader',1429),BR=Tjb(xTc,'VerticalTiltShiftShader',1447),NO=Tjb(XRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1250),LO=Tjb(XRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1251),MO=Tjb(XRc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1252),wR=Tjb(xTc,gUc,1442),uR=Tjb(xTc,hUc,1443),vR=Tjb(xTc,iUc,1444),uP=Tjb(NRc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1311),sP=Tjb(NRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1312),tP=Tjb(NRc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1313),$Q=Tjb(xTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1406),YQ=Tjb(xTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1407),ZQ=Tjb(xTc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1408),oR=Tjb(xTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1430),mR=Tjb(xTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1431),nR=Tjb(xTc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1432),AR=Tjb(xTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1448),yR=Tjb(xTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1449),zR=Tjb(xTc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1450),tR=Tjb(xTc,'LuminosityShader',1435),sR=Tjb(xTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1436),qR=Tjb(xTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1437),rR=Tjb(xTc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1438);iNc(Hi)(38);