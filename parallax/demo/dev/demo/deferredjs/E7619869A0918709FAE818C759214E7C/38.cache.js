function avc(){}
function evc(){}
function hvc(){}
function hLc(){}
function lLc(){}
function oLc(){}
function ALc(){}
function ELc(){}
function HLc(){}
function Hyc(){}
function Lyc(){}
function Oyc(){}
function uJc(){}
function yJc(){}
function BJc(){}
function QKc(){}
function UKc(){}
function XKc(){}
function XLc(){}
function TLc(){}
function $Lc(){}
function Y$b(a,b){a.c=b}
function W9b(a,b){a.n=b}
function $Ic(a,b){yrb(a.c,b)}
function Puc(a){this.b=a}
function Suc(a){this.b=a}
function Vuc(a){this.b=a}
function Yuc(){Yuc=UMc;Xuc=new avc}
function jvc(){jvc=UMc;$uc=new evc}
function kvc(){kvc=UMc;_uc=new hvc}
function dLc(){dLc=UMc;cLc=new hLc}
function qLc(){qLc=UMc;fLc=new lLc}
function rLc(){rLc=UMc;gLc=new oLc}
function wLc(){wLc=UMc;vLc=new ALc}
function JLc(){JLc=UMc;yLc=new ELc}
function KLc(){KLc=UMc;zLc=new HLc}
function PLc(){PLc=UMc;OLc=new TLc}
function aMc(){aMc=UMc;RLc=new XLc}
function bMc(){bMc=UMc;SLc=new $Lc}
function Dyc(){Dyc=UMc;Cyc=new Hyc}
function Qyc(){Qyc=UMc;Fyc=new Lyc}
function Ryc(){Ryc=UMc;Gyc=new Oyc}
function qJc(){qJc=UMc;pJc=new uJc}
function DJc(){DJc=UMc;sJc=new yJc}
function EJc(){EJc=UMc;tJc=new BJc}
function MKc(){MKc=UMc;LKc=new QKc}
function ZKc(){ZKc=UMc;OKc=new UKc}
function $Kc(){$Kc=UMc;PKc=new XKc}
function Muc(a,b){this.b=a;this.c=b}
function MLc(){_Jb.call(this,(PLc(),OLc))}
function aLc(){_Jb.call(this,(dLc(),cLc))}
function tLc(){_Jb.call(this,(wLc(),vLc))}
function yyc(){_Jb.call(this,(Dyc(),Cyc))}
function nJc(){_Jb.call(this,(qJc(),pJc))}
function JKc(){_Jb.call(this,(MKc(),LKc))}
function Fuc(a){a.A+=1;a.A==3&&WQb(a.w,true)}
function Guc(){Xbc.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function Euc(a,b,c,d){var e,f,g;g=new G4b(b);nOb(bw(sTb(y_b(g).j,wUc),226),c);f=new Bac;e=new MZb(new gYb(a.v,a.u),g);A8b(e.ab,-500);LQb(f,e);qIb(a.H.n,f,a.d,d,true)}
function Duc(a,b,c,d,e,f){var g,i;g=new y2b;r2b(g,new A5b(16755285));g.k=true;w2b(g,(q0b(),n0b));i=new Y9b(b,g);i.e=c;W9b(i,jw(600*$lb()));y8b(i.ab,d,e,f);O5b(i.db,1.5707963267948966);i.T=true;i.V=true;LQb(a.I,i);yrb(a.o,i)}
var MVc='enableDiffuse1',NVc='enableDiffuse2',FVc='h',HVc='heightMap',SVc='heightmap',RVc='offset',TVc='r',LVc='tDetail',JVc='tDiffuse1',KVc='tDiffuse2',PVc='uRepeatOverlay',GVc='v';kW(1260,1,GOc);_.Qb=function Buc(){xbc(this.c,new Guc(this.b))};kW(1261,990,{78:1,186:1,343:1},Guc);_._d=function Huc(a){Fuc(this)};_.Nd=function Iuc(a){this.v=a.b.ib;this.u=a.b.hb;nOb(bw(sTb(y_b(this.g.c).j,FVc),226),new Tkb(6/this.v));nOb(bw(sTb(y_b(this.F.c).j,GVc),226),new Tkb(6/this.u))};_.ob=function Juc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Su((Pyb(),Oyb),(Zyb(),Yyb),this);this.c=new PRb(40,UGb(this.H.n),2,4000);this.v=this.H.n.ib;this.u=this.H.n.hb;this.d=new ARb(this.v,this.u,-10000,10000);y8b(this.c.ab,-1200,800,1200);A8b(this.d.ab,100);this.t=new Bac;LQb(this.t,this.d);this.e=new Uxb(this.c,this.H.d);x8b(this.e.w,0);this.e.t=1;this.e.B=1.2;Rxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;Pxb(this.e,0.15);zac(this.I,new pac(328965,2000,4000));LQb(this.I,new c$b(1118481));this.f=new G$b(16777215,1.15);y8b(this.f.ab,500,2000,0);LQb(this.I,this.f);this.r=new _$b(16729088,1.5,0);x8b(this.r.ab,0);LQb(this.I,this.r);this.i=new LPb(256,256);bPb(this.i,(yFb(),tFb));_Ob(this.i,(nFb(),lFb));YOb(this.i,(JDb(),HDb));ZOb(this.i,false);this.p=new LPb(256,256);bPb(this.p,tFb);_Ob(this.p,lFb);YOb(this.p,HDb);ZOb(this.p,false);n=new tLc;u=n.j;nOb(bw(u.b[oRc],226),new Tkb(0.05));K7b(bw(bw(u.b[aVc],226).e,302),256,256);nOb(bw(u.b[HVc],226),this.i);s=new LPb(2048,2048);bPb(s,tFb);_Ob(s,lFb);YOb(s,HDb);s.s=false;iPb(s,(QGb(),PGb));jPb(s,PGb);c=new pPb('./static/textures/terrain/grasslight-big.jpg',new Muc(this,s));iPb(c,PGb);jPb(c,PGb);d=new pPb('./static/textures/terrain/backgrounddetailed6.jpg',this);iPb(d,PGb);jPb(d,PGb);b=new pPb('./static/textures/terrain/grasslight-big-nm.jpg',this);iPb(b,PGb);jPb(b,PGb);t=new yyc;this.C=t.j;nOb(bw(sTb(this.C,WUc),226),this.p);nOb(bw(sTb(this.C,XUc),226),new Tkb(3.5));nOb(bw(sTb(this.C,IVc),226),this.i);nOb(bw(sTb(this.C,JVc),226),c);nOb(bw(sTb(this.C,KVc),226),d);nOb(bw(sTb(this.C,YUc),226),s);nOb(bw(sTb(this.C,LVc),226),b);nOb(bw(sTb(this.C,MVc),226),(Ujb(),Ujb(),Tjb));nOb(bw(sTb(this.C,NVc),226),Tjb);nOb(bw(sTb(this.C,uUc),226),Tjb);w5b(bw(bw(sTb(this.C,AUc),226).e,298),16777215);w5b(bw(bw(sTb(this.C,BUc),226).e,298),16777215);w5b(bw(bw(sTb(this.C,zUc),226).e,298),1118481);nOb(bw(sTb(this.C,_Uc),226),new Tkb(30));nOb(bw(sTb(this.C,OVc),226),new Tkb(375));K7b(bw(bw(sTb(this.C,PVc),226).e,302),6,6);this.B=new rub;Opb(this.B,dVc,new pOb((IOb(),uOb),new Tkb(1)));Opb(this.B,QVc,new pOb(COb,new O7b(1.5,1.5)));Opb(this.B,RVc,new pOb(COb,new O7b(0,0)));this.n=new rub;i=new F4b((Yuc(),Xuc));WJb(y_b(i),this.B);i.d=false;i.c=true;Opb(this.n,SVc,i);j=new G4b(n);WJb(y_b(j),u);j.d=false;j.c=true;Opb(this.n,qUc,j);k=new G4b(t);WJb(y_b(k),this.C);k.d=true;k.c=true;Opb(this.n,'terrain',k);o=new gYb(this.v,this.u);p=new F1b;z1b(p,new A5b(0));this.s=new MZb(o,p);A8b(this.s.ab,-500);LQb(this.t,this.s);g=new hYb(6000,6000,64,64);wSb(g);this.w=new MZb(g,k);y8b(this.w.ab,0,-125,0);N5b(this.w.db,-1.5707963267948966);WQb(this.w,false);LQb(this.I,this.w);AIb(this.H.n,this.I.b.d,1);this.H.n.Y=true;this.H.n.Z=true;VGb(this.H.n,false);q=new hJc(this.I,this.c);f=new UIc(0.6);e=new kJc(new nJc);nOb(bw(sTb(y_b(e.c).j,GUc),226),new Tkb(0.65));this.g=new kJc(new JKc);this.F=new kJc(new MLc);nOb(bw(sTb(y_b(this.g.c).j,FVc),226),new Tkb(6/this.v));nOb(bw(sTb(y_b(this.F.c).j,GVc),226),new Tkb(6/this.u));nOb(bw(sTb(y_b(this.g.c).j,TVc),226),new Tkb(0.5));nOb(bw(sTb(y_b(this.F.c).j,TVc),226),new Tkb(0.5));this.F.b=true;r=new LPb(this.v,this.u);bPb(s,sFb);_Ob(s,lFb);YOb(s,HDb);s.g=false;s.s=false;a=new aJc(this.H.n,r);yrb(a.c,q);yrb(a.c,f);yrb(a.c,e);$Ic(a,this.g);$Ic(a,this.F);this.o=new Irb;new Gzc('./static/models/animated/parrot.js',new Puc(this));new Gzc(EVc,new Suc(this));new Gzc('./static/models/animated/stork.js',new Vuc(this));this.q=Ji()};_.pb=function Kuc(a){var b,c,d,e,f;b=(Ji()-this.q)*0.001;if(this.w.hb){Sxb(this.e);this.k=X5b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;v5b(this.I.b.d,0.1,e,this.k);AIb(this.H.n,this.I.b.d,1);m$b(this.f,0.1+f*1.0499999999999998);Y$b(this.r,0.9+f*0.6);nOb(bw(sTb(this.C,XUc),226),new Tkb(0.6+f*2.9));if(this.D){this.b=X5b(this.b+-7.5E-4,0,0.05);nOb(bw(Jpb(this.B,dVc),226),new Tkb(bw(bw(Jpb(this.B,dVc),226).e,150).b+b*this.b));G7b(bw(bw(Jpb(this.B,RVc),226).e,302),b*0.05);L7b(bw(bw(sTb(this.C,UVc),226).e,302),4*bw(bw(Jpb(this.B,RVc),226).e,302).d);CUb(this.s,bw(Jpb(this.n,SVc),287));qIb(this.H.n,this.t,this.d,this.i,true);CUb(this.s,bw(Jpb(this.n,qUc),287));qIb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=bw(Brb(this.o,c),310);X9b(d,jw(1000*b));G7b(d.ab,d.e*b);d.ab.d>2000&&L7b(d.ab,-1500-$lb()*500)}qIb(this.H.n,this.I,this.c,null,false)}this.q=Ji()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;kW(1262,1,{},Muc);_._d=function Nuc(a){Fuc(this.b);Euc(this.b,new aLc,a,this.c)};kW(1263,1,{},Puc);_.Jf=function Quc(a,b){Bzc((bw(a,345),bw(b,243)));Duc(this.b,bw(b,243),500,-3500,500,700);Duc(this.b,bw(b,243),500,-3000-$lb()*500,500,-200);Duc(this.b,bw(b,243),500,-3000-$lb()*500,500,200);Duc(this.b,bw(b,243),500,-3000-$lb()*500,500,1000)};kW(1264,1,{},Suc);_.Jf=function Tuc(a,b){Bzc((bw(a,345),bw(b,243)));Duc(this.b,bw(b,243),1000,-3000-$lb()*500,350,40)};kW(1265,1,{},Vuc);_.Jf=function Wuc(a,b){Bzc((bw(a,345),bw(b,243)));Duc(this.b,bw(b,243),1000,-3000-$lb()*500,350,340)};var Xuc;kW(1266,1,{},avc);_.Vd=function bvc(){return jvc(),$uc};_.Wd=function cvc(){return kvc(),_uc};var $uc,_uc;kW(1267,1,{},evc);_.uc=function fvc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};kW(1268,1,{},hvc);_.uc=function ivc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};kW(1329,742,sOc,yyc);_.Sd=function zyc(){WJb(this,MOb());WJb(this,NOb());WJb(this,OOb());PJb(this,MVc,new pOb((IOb(),xOb),(Ujb(),Ujb(),Sjb)));PJb(this,NVc,new pOb(xOb,Sjb));PJb(this,uUc,new pOb(xOb,Sjb));PJb(this,VVc,new pOb(xOb,Sjb));PJb(this,JVc,new oOb(AOb));PJb(this,KVc,new oOb(AOb));PJb(this,LVc,new oOb(AOb));PJb(this,WUc,new oOb(AOb));PJb(this,YUc,new oOb(AOb));PJb(this,IVc,new oOb(AOb));PJb(this,XUc,new pOb(uOb,new Tkb(1)));PJb(this,WVc,new pOb(uOb,new Tkb(0)));PJb(this,OVc,new pOb(uOb,new Tkb(1)));PJb(this,AUc,new pOb(tOb,new A5b(15658734)));PJb(this,BUc,new pOb(tOb,new A5b(1118481)));PJb(this,zUc,new pOb(tOb,new A5b(328965)));PJb(this,_Uc,new pOb(uOb,new Tkb(30)));PJb(this,GUc,new pOb(uOb,new Tkb(1)));PJb(this,'uRepeatBase',new pOb(COb,new O7b(1,1)));PJb(this,PVc,new pOb(COb,new O7b(1,1)));PJb(this,UVc,new pOb(COb,new O7b(0,0)))};_.Td=function Ayc(a){var b,c;c=new fsb(Tv(gU,$Mc,1,[HUc,IUc]));b=new fsb(Tv(gU,$Mc,1,[KUc,LUc,MUc]));YJb(this,eKb(a,Tv(jU,$Mc,173,[c,b])))};_.Ud=function Byc(a){var b,c;c=new fsb(Tv(gU,$Mc,1,[NUc]));b=new fsb(Tv(gU,$Mc,1,[OUc]));ZJb(this,eKb(a,Tv(jU,$Mc,173,[c,b])))};var Cyc;kW(1330,1,{},Hyc);_.Vd=function Iyc(){return Qyc(),Fyc};_.Wd=function Jyc(){return Ryc(),Gyc};var Fyc,Gyc;kW(1331,1,{},Lyc);_.uc=function Myc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};kW(1332,1,{},Oyc);_.uc=function Pyc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};kW(1424,742,sOc,nJc);_.Sd=function oJc(){PJb(this,wUc,new oOb((IOb(),AOb)));PJb(this,GUc,new pOb(uOb,new Tkb(1)))};var pJc;kW(1425,1,{},uJc);_.Vd=function vJc(){return DJc(),sJc};_.Wd=function wJc(){return EJc(),tJc};var sJc,tJc;kW(1426,1,{},yJc);_.uc=function zJc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};kW(1427,1,{},BJc);_.uc=function CJc(){return lVc};kW(1448,742,sOc,JKc);_.Sd=function KKc(){PJb(this,wUc,new oOb((IOb(),AOb)));PJb(this,FVc,new pOb(uOb,new Tkb(0.001953125)));PJb(this,TVc,new pOb(uOb,new Tkb(0.35)))};var LKc;kW(1449,1,{},QKc);_.Vd=function RKc(){return ZKc(),OKc};_.Wd=function SKc(){return $Kc(),PKc};var OKc,PKc;kW(1450,1,{},UKc);_.uc=function VKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};kW(1451,1,{},XKc);_.uc=function YKc(){return lVc};kW(1454,742,sOc,aLc);_.Sd=function bLc(){PJb(this,wUc,new oOb((IOb(),AOb)))};var cLc;kW(1455,1,{},hLc);_.Vd=function iLc(){return qLc(),fLc};_.Wd=function jLc(){return rLc(),gLc};var fLc,gLc;kW(1456,1,{},lLc);_.uc=function mLc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};kW(1457,1,{},oLc);_.uc=function pLc(){return lVc};kW(1460,742,sOc,tLc);_.Sd=function uLc(){PJb(this,HVc,new oOb((IOb(),AOb)));PJb(this,aVc,new pOb(COb,new O7b(512,512)));PJb(this,QVc,new pOb(COb,new O7b(1,1)));PJb(this,oRc,new pOb(uOb,new Tkb(0.05)))};var vLc;kW(1461,1,{},ALc);_.Vd=function BLc(){return JLc(),yLc};_.Wd=function CLc(){return KLc(),zLc};var yLc,zLc;kW(1462,1,{},ELc);_.uc=function FLc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};kW(1463,1,{},HLc);_.uc=function ILc(){return lVc};kW(1466,742,sOc,MLc);_.Sd=function NLc(){PJb(this,wUc,new oOb((IOb(),AOb)));PJb(this,GVc,new pOb(uOb,new Tkb(0.001953125)));PJb(this,TVc,new pOb(uOb,new Tkb(0.35)))};var OLc;kW(1467,1,{},TLc);_.Vd=function ULc(){return aMc(),RLc};_.Wd=function VLc(){return bMc(),SLc};var RLc,SLc;kW(1468,1,{},XLc);_.uc=function YLc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};kW(1469,1,{},$Lc);_.uc=function _Lc(){return lVc};var uQ=Hkb(MTc,'TerrainDynamic$DemoScene',1261),qQ=Hkb(MTc,'TerrainDynamic$DemoScene$1',1262),rQ=Hkb(MTc,'TerrainDynamic$DemoScene$2',1263),sQ=Hkb(MTc,'TerrainDynamic$DemoScene$3',1264),tQ=Hkb(MTc,'TerrainDynamic$DemoScene$4',1265),kT=Hkb(nVc,XVc,1460),iR=Hkb(CTc,'TerrainShader',1329),OS=Hkb(nVc,'BleachBypassShader',1424),cT=Hkb(nVc,'HorizontalTiltShiftShader',1448),oT=Hkb(nVc,'VerticalTiltShiftShader',1466),xQ=Hkb(MTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1266),vQ=Hkb(MTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1267),wQ=Hkb(MTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1268),jT=Hkb(nVc,YVc,1461),hT=Hkb(nVc,ZVc,1462),iT=Hkb(nVc,$Vc,1463),hR=Hkb(CTc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1330),fR=Hkb(CTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1331),gR=Hkb(CTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1332),NS=Hkb(nVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1425),LS=Hkb(nVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1426),MS=Hkb(nVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1427),bT=Hkb(nVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1449),_S=Hkb(nVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1450),aT=Hkb(nVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1451),nT=Hkb(nVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1467),lT=Hkb(nVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1468),mT=Hkb(nVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1469),gT=Hkb(nVc,'LuminosityShader',1454),fT=Hkb(nVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1455),dT=Hkb(nVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1456),eT=Hkb(nVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1457);UOc(Pj)(38);