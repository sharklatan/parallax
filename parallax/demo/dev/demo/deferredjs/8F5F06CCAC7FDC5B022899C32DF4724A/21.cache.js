function QKb(){}
function UKb(){}
function XKb(){}
function MKb(){MKb=kNc;LKb=new QKb}
function ZKb(){ZKb=kNc;OKb=new UKb}
function $Kb(){$Kb=kNc;PKb=new XKb}
function JKb(){$Ib.call(this,(MKb(),LKb))}
function Ulc(){eac.call(this);this.d=0;this.e=0}
JU(755,731,KOc,JKb);_.Sd=function KKb(){OIb(this,'mRefractionRatio',new oNb((HNb(),tNb),new lkb(1.02)));OIb(this,'mFresnelBias',new oNb(tNb,new lkb(0.1)));OIb(this,'mFresnelPower',new oNb(tNb,new lkb(2)));OIb(this,'mFresnelScale',new oNb(tNb,new lkb(1)));OIb(this,cVc,new nNb(zNb))};var LKb;JU(756,1,{},QKb);_.Vd=function RKb(){return ZKb(),OKb};_.Wd=function SKb(){return $Kb(),PKb};var OKb,PKb;JU(757,1,{},UKb);_.uc=function VKb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};JU(758,1,{},XKb);_.uc=function YKb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};JU(1139,1,XOc);_.Db=function Slc(){G9b(this.c,new Ulc(this.b))};JU(1140,973,{327:1},Ulc);_.ob=function Vlc(){var a,b,c,d,e,f,g,i,j;this.b=new NQb(60,bHb(this.H.n),1,100000);x6b(this.b.ab,3200);this.c=new NQb(60,bHb(this.H.n),1,100000);this.f=new M8b;a=new kXb(100,32,16);j=new wOb('./static/textures/cube/park2/*.jpg');XNb(j,(ZCb(),XCb));g=new JKb;mNb(Wu(nSb(g.j,cVc),225),j);c=new S2b(g);this.g=new _qb;for(b=0;b<500;b++){e=new Z7b(a,c);K5b(e.ab,slb()*10000-5000);L5b(e.ab,slb()*10000-5000);x6b(e.ab,slb()*10000-5000);u6b(e.fb,slb()*3+1);KPb(this.I,e);Rqb(this.g,e)}this.I.X=false;i=new AJb;mNb(Wu(nSb(i.j,cVc),225),j);f=new S2b(i);VZb(f,(H_b(),E_b));d=new Z7b(new vWb(100000,100000,100000),f);KPb(this.f,d);vHb(this.H.n,false)};_.pb=function Wlc(a){var b,c,d,e;e=1.0E-4*a;F5b(this.b.ab,(this.d-this.b.ab.d)*0.05);G5b(this.b.ab,(-this.e-this.b.ab.e)*0.05);hQb(this.b,this.I.ab);N3b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Wu(Uqb(this.g,b),304);K5b(d.ab,5000*Math.cos(e+b));L5b(d.ab,5000*Math.sin(e+b*1.1))}WGb(this.H.n,true);nHb(this.H.n,this.f,this.c,null,false);nHb(this.H.n,this.I,this.b,null,false)};_.d=0;_.e=0;var iN=_jb(XTc,'MaterialsCubemapFresnel$DemoScene',1140),KG=_jb(dVc,'FresnelShader',755),JG=_jb(dVc,'FresnelShader_Resources_default_InlineClientBundleGenerator',756),HG=_jb(dVc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',757),IG=_jb(dVc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',758);jPc(Ii)(21);