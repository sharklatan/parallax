function huc(){}
function luc(){}
function ouc(){}
function Eyc(){}
function Iyc(){}
function Lyc(){}
function Dkc(a){this.b=a}
function duc(){duc=kNc;cuc=new huc}
function quc(){quc=kNc;fuc=new luc}
function ruc(){ruc=kNc;guc=new ouc}
function Ayc(){Ayc=kNc;zyc=new Eyc}
function Nyc(){Nyc=kNc;Cyc=new Iyc}
function Oyc(){Oyc=kNc;Dyc=new Lyc}
function vyc(){$Ib.call(this,(Ayc(),zyc))}
function auc(){$Ib.call(this,(duc(),cuc))}
function zkc(){eac.call(this);this.e=0;this.f=0}
function ykc(a,b){var c,d,e,f,g,i;d=new nOb(EUc);d.n=4;J5b(d.C,0.998,0.998);J5b(d.B,0.001,0.001);hOb(d,(eGb(),dGb));iOb(d,dGb);XNb(d,(ZCb(),XCb));e=new nOb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');J5b(e.C,0.998,0.998);J5b(e.B,0.001,0.001);hOb(e,dGb);iOb(e,dGb);XNb(e,XCb);c=new nOb('./static/models/obj/leeperrysmith/Map-COL.jpg');J5b(c.C,0.998,0.998);J5b(c.B,0.001,0.001);hOb(c,dGb);iOb(c,dGb);XNb(c,XCb);g=new vyc;i=g.j;mNb(Wu(i.b[GUc],225),(mjb(),mjb(),ljb));mNb(Wu(i.b[HUc],225),ljb);mNb(Wu(i.b[IUc],225),a.c.f);mNb(Wu(i.b[JUc],225),c);mNb(Wu(i.b[KUc],225),d);mNb(Wu(i.b[LUc],225),e);D3b(Wu(Wu(i.b[MUc],225).e,293),10526880);D3b(Wu(Wu(i.b[NUc],225).e,293),10526880);D3b(Wu(Wu(i.b[OUc],225).e,293),10526880);mNb(Wu(i.b[PUc],225),new lkb(0.145));mNb(Wu(i.b[QUc],225),new lkb(0.75));mNb(Wu(i.b[RUc],225),new lkb(16));j7b(Wu(Wu(i.b[SUc],225).e,301),0.001,0.001,0.998,0.998);f=new S2b(g);f.d=true;a.d=new Z7b(b,f);L5b(a.d.ab,-50);u6b(a.d.fb,100);PPb(a.d,true);a.d.V=true;KPb(a.I,a.d)}
var GUc='enableBump',IUc='tBeckmann',PUc='uRoughness',QUc='uSpecularBrightness';JU(1119,1,XOc);_.Db=function wkc(){G9b(this.c,new zkc(this.b))};JU(1120,973,{323:1},zkc);_.ob=function Akc(){var a,b,c,d,e,f,g;this.b=new NQb(27,bHb(this.H.n),1,10000);x6b(this.b.ab,1200);KPb(this.I,new sYb(5592405));d=new mZb(16777215,1.5,1000);v6b(d.ab,0,0,600);KPb(this.I,d);f=new uZb(1);v6b(f.ab,0.05,0.05,1);KPb(this.I,f);f.ab.vf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new VYb(16777215,0.85);v6b(a.ab,1,-0.5,1);C3b(a.M,0.6,1,0.85);KPb(this.I,a);a.ab.vf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new VYb(16777215,0.85);v6b(b.ab,1,-0.5,-1);KPb(this.I,b);new CJc(new auc);c=new CJc(new pKc);c.b=true;g=new KOb(512,512);aOb(g,(OEb(),IEb));$Nb(g,(DEb(),BEb));XNb(g,(ZCb(),XCb));g.g=false;this.c=new sJc(this.H.n,g);new Yzc(FUc,new Dkc(this));zHb(this.H.n,new G3b(5001561),1);e=new sGb(this.H.n,this.I);e.i=false;vHb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function Bkc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){M3b(this.d.db,0.05*(b-this.d.db.e));L3b(this.d.db,0.05*(c-this.d.db.d))}WGb(this.H.n,true);nHb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;JU(1121,1,{},Dkc);_.If=function Ekc(a,b){ykc(this.b,Wu(b,242))};JU(1249,731,KOc,auc);_.Sd=function buc(){};var cuc;JU(1250,1,{},huc);_.Vd=function iuc(){return quc(),fuc};_.Wd=function juc(){return ruc(),guc};var fuc,guc;JU(1251,1,{},luc);_.uc=function muc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};JU(1252,1,{},ouc);_.uc=function puc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};JU(1346,731,KOc,vyc);_.Sd=function wyc(){VIb(this,LNb());VIb(this,MNb());VIb(this,NNb());OIb(this,GUc,new oNb((HNb(),wNb),Tkb(0)));OIb(this,HUc,new oNb(wNb,Tkb(0)));OIb(this,JUc,new nNb(zNb));OIb(this,IUc,new nNb(zNb));OIb(this,NUc,new oNb(sNb,new G3b(15658734)));OIb(this,OUc,new oNb(sNb,new G3b(1118481)));OIb(this,MUc,new oNb(sNb,new G3b(328965)));OIb(this,TUc,new oNb(tNb,new lkb(1)));OIb(this,PUc,new oNb(tNb,new lkb(0.15)));OIb(this,QUc,new oNb(tNb,new lkb(0.75)));OIb(this,KUc,new nNb(zNb));OIb(this,RUc,new oNb(tNb,new lkb(1)));OIb(this,LUc,new nNb(zNb));OIb(this,SUc,new oNb(FNb,new n7b(0,0,1,1)));OIb(this,'uWrapRGB',new oNb(DNb,new B6b(0.75,0.375,0.1875)))};_.Td=function xyc(a){var b,c;c=new xrb(Mu(GS,qNc,1,[UUc,VUc,WUc]));b=new xrb(Mu(GS,qNc,1,[XUc,YUc,ZUc]));XIb(this,dJb(a,Mu(JS,qNc,173,[c,b])))};_.Ud=function yyc(a){var b,c;c=new xrb(Mu(GS,qNc,1,[$Uc]));b=new xrb(Mu(GS,qNc,1,[_Uc]));YIb(this,dJb(a,Mu(JS,qNc,173,[c,b])))};var zyc;JU(1347,1,{},Eyc);_.Vd=function Fyc(){return Nyc(),Cyc};_.Wd=function Gyc(){return Oyc(),Dyc};var Cyc,Dyc;JU(1348,1,{},Iyc);_.uc=function Jyc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};JU(1349,1,{},Lyc);_.uc=function Myc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var QM=_jb(XTc,'MaterialsBumpmapSkin$DemoScene',1120),PM=_jb(XTc,'MaterialsBumpmapSkin$DemoScene$1',1121),dP=_jb(QTc,'BeckmannShader',1249),cP=_jb(QTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1250),aP=_jb(QTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1251),bP=_jb(QTc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1252),EP=_jb(QTc,'SkinSimpleShader',1346),DP=_jb(QTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1347),BP=_jb(QTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1348),CP=_jb(QTc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1349);jPc(Ii)(18);