function Qtc(){}
function Utc(){}
function Xtc(){}
function Zyc(){}
function bzc(){}
function ezc(){}
function MJc(){}
function QJc(){}
function TJc(){}
function gLc(){}
function kLc(){}
function nLc(){}
function zLc(){}
function DLc(){}
function GLc(){}
function SLc(){}
function WLc(){}
function ZLc(){}
function jMc(){}
function nMc(){}
function qMc(){}
function kZb(a,b){a.c=b}
function f8b(a,b){a.n=b}
function qJc(a,b){Rqb(a.c,b)}
function Dtc(a){this.b=a}
function Gtc(a){this.b=a}
function Jtc(a){this.b=a}
function Mtc(){Mtc=kNc;Ltc=new Qtc}
function Ztc(){Ztc=kNc;Otc=new Utc}
function $tc(){$tc=kNc;Ptc=new Xtc}
function Vyc(){Vyc=kNc;Uyc=new Zyc}
function VJc(){VJc=kNc;KJc=new QJc}
function IJc(){IJc=kNc;HJc=new MJc}
function WJc(){WJc=kNc;LJc=new TJc}
function gzc(){gzc=kNc;Xyc=new bzc}
function hzc(){hzc=kNc;Yyc=new ezc}
function cLc(){cLc=kNc;bLc=new gLc}
function pLc(){pLc=kNc;eLc=new kLc}
function qLc(){qLc=kNc;fLc=new nLc}
function vLc(){vLc=kNc;uLc=new zLc}
function ILc(){ILc=kNc;xLc=new DLc}
function JLc(){JLc=kNc;yLc=new GLc}
function OLc(){OLc=kNc;NLc=new SLc}
function _Lc(){_Lc=kNc;QLc=new WLc}
function aMc(){aMc=kNc;RLc=new ZLc}
function fMc(){fMc=kNc;eMc=new jMc}
function sMc(){sMc=kNc;hMc=new nMc}
function tMc(){tMc=kNc;iMc=new qMc}
function Atc(a,b){this.b=a;this.c=b}
function Qyc(){$Ib.call(this,(Vyc(),Uyc))}
function FJc(){$Ib.call(this,(IJc(),HJc))}
function _Kc(){$Ib.call(this,(cLc(),bLc))}
function sLc(){$Ib.call(this,(vLc(),uLc))}
function LLc(){$Ib.call(this,(OLc(),NLc))}
function cMc(){$Ib.call(this,(fMc(),eMc))}
function ttc(a){a.A+=1;a.A==3&&VPb(a.w,true)}
function utc(){eac.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function stc(a,b,c,d){var e,f,g;g=new S2b(b);mNb(Wu(nSb(KZb(g).j,JUc),225),c);f=new M8b;e=new Z7b(new cXb(a.v,a.u),g);x6b(e.ab,-500);KPb(f,e);nHb(a.H.n,f,a.d,d,true)}
function rtc(a,b,c,d,e,f){var g,i;g=new K0b;D0b(g,new G3b(16755285));g.k=true;I0b(g,(C$b(),z$b));i=new h8b(b,g);i.e=c;f8b(i,cv(600*slb()));v6b(i.ab,d,e,f);U3b(i.db,1.5707963267948966);i.T=true;i.V=true;KPb(a.I,i);Rqb(a.o,i)}
var ZVc='enableDiffuse1',$Vc='enableDiffuse2',SVc='h',UVc='heightMap',dWc='heightmap',cWc='offset',eWc='r',YVc='tDetail',WVc='tDiffuse1',XVc='tDiffuse2',aWc='uRepeatOverlay',TVc='v';JU(1238,1,XOc);_.Db=function ptc(){G9b(this.c,new utc(this.b))};JU(1239,973,{78:1,186:1,338:1},utc);_._d=function vtc(a){ttc(this)};_.Nd=function wtc(a){this.v=a.b.$;this.u=a.b.Z;mNb(Wu(nSb(KZb(this.g.c).j,SVc),225),new lkb(6/this.v));mNb(Wu(nSb(KZb(this.F.c).j,TVc),225),new lkb(6/this.u))};_.ob=function xtc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Lt((fyb(),eyb),(pyb(),oyb),this);this.c=new NQb(40,bHb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new yQb(this.v,this.u,-10000,10000);v6b(this.c.ab,-1200,800,1200);x6b(this.d.ab,100);this.t=new M8b;KPb(this.t,this.d);this.e=new kxb(this.c,this.H.d);u6b(this.e.w,0);this.e.t=1;this.e.B=1.2;hxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;fxb(this.e,0.15);K8b(this.I,new A8b(328965,2000,4000));KPb(this.I,new sYb(1118481));this.f=new VYb(16777215,1.15);v6b(this.f.ab,500,2000,0);KPb(this.I,this.f);this.r=new mZb(16729088,1.5,0);u6b(this.r.ab,0);KPb(this.I,this.r);this.i=new KOb(256,256);aOb(this.i,(OEb(),JEb));$Nb(this.i,(DEb(),BEb));XNb(this.i,(ZCb(),XCb));YNb(this.i,false);this.p=new KOb(256,256);aOb(this.p,JEb);$Nb(this.p,BEb);XNb(this.p,XCb);YNb(this.p,false);n=new LLc;u=n.j;mNb(Wu(u.b[CRc],225),new lkb(0.05));J5b(Wu(Wu(u.b[nVc],225).e,297),256,256);mNb(Wu(u.b[UVc],225),this.i);s=new KOb(2048,2048);aOb(s,JEb);$Nb(s,BEb);XNb(s,XCb);s.s=false;hOb(s,(eGb(),dGb));iOb(s,dGb);c=new oOb('./static/textures/terrain/grasslight-big.jpg',new Atc(this,s));hOb(c,dGb);iOb(c,dGb);d=new oOb('./static/textures/terrain/backgrounddetailed6.jpg',this);hOb(d,dGb);iOb(d,dGb);b=new oOb('./static/textures/terrain/grasslight-big-nm.jpg',this);hOb(b,dGb);iOb(b,dGb);t=new Qyc;this.C=t.j;mNb(Wu(nSb(this.C,hVc),225),this.p);mNb(Wu(nSb(this.C,iVc),225),new lkb(3.5));mNb(Wu(nSb(this.C,VVc),225),this.i);mNb(Wu(nSb(this.C,WVc),225),c);mNb(Wu(nSb(this.C,XVc),225),d);mNb(Wu(nSb(this.C,jVc),225),s);mNb(Wu(nSb(this.C,YVc),225),b);mNb(Wu(nSb(this.C,ZVc),225),(mjb(),mjb(),ljb));mNb(Wu(nSb(this.C,$Vc),225),ljb);mNb(Wu(nSb(this.C,HUc),225),ljb);D3b(Wu(Wu(nSb(this.C,NUc),225).e,293),16777215);D3b(Wu(Wu(nSb(this.C,OUc),225).e,293),16777215);D3b(Wu(Wu(nSb(this.C,MUc),225).e,293),1118481);mNb(Wu(nSb(this.C,mVc),225),new lkb(30));mNb(Wu(nSb(this.C,_Vc),225),new lkb(375));J5b(Wu(Wu(nSb(this.C,aWc),225).e,297),6,6);this.B=new Jtb;fpb(this.B,qVc,new oNb((HNb(),tNb),new lkb(1)));fpb(this.B,bWc,new oNb(BNb,new N5b(1.5,1.5)));fpb(this.B,cWc,new oNb(BNb,new N5b(0,0)));this.n=new Jtb;i=new R2b((Mtc(),Ltc));VIb(KZb(i),this.B);i.d=false;i.c=true;fpb(this.n,dWc,i);j=new S2b(n);VIb(KZb(j),u);j.d=false;j.c=true;fpb(this.n,DUc,j);k=new S2b(t);VIb(KZb(k),this.C);k.d=true;k.c=true;fpb(this.n,'terrain',k);o=new cXb(this.v,this.u);p=new R_b;L_b(p,new G3b(0));this.s=new Z7b(o,p);x6b(this.s.ab,-500);KPb(this.t,this.s);g=new dXb(6000,6000,64,64);sRb(g);this.w=new Z7b(g,k);v6b(this.w.ab,0,-125,0);T3b(this.w.db,-1.5707963267948966);VPb(this.w,false);KPb(this.I,this.w);zHb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;vHb(this.H.n,false);q=new zJc(this.I,this.c);f=new kJc(0.6);e=new CJc(new FJc);mNb(Wu(nSb(KZb(e.c).j,TUc),225),new lkb(0.65));this.g=new CJc(new _Kc);this.F=new CJc(new cMc);mNb(Wu(nSb(KZb(this.g.c).j,SVc),225),new lkb(6/this.v));mNb(Wu(nSb(KZb(this.F.c).j,TVc),225),new lkb(6/this.u));mNb(Wu(nSb(KZb(this.g.c).j,eWc),225),new lkb(0.5));mNb(Wu(nSb(KZb(this.F.c).j,eWc),225),new lkb(0.5));this.F.b=true;r=new KOb(this.v,this.u);aOb(s,IEb);$Nb(s,BEb);XNb(s,XCb);s.g=false;s.s=false;a=new sJc(this.H.n,r);Rqb(a.c,q);Rqb(a.c,f);Rqb(a.c,e);qJc(a,this.g);qJc(a,this.F);this.o=new _qb;new Yzc('./static/models/animated/parrot.js',new Dtc(this));new Yzc(RVc,new Gtc(this));new Yzc('./static/models/animated/stork.js',new Jtc(this));this.q=Ch()};_.pb=function ytc(a){var b,c,d,e,f;b=(Ch()-this.q)*0.001;if(this.w.hb){ixb(this.e);this.k=b4b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;C3b(this.I.b.d,0.1,e,this.k);zHb(this.H.n,this.I.b.d,1);CYb(this.f,0.1+f*1.0499999999999998);kZb(this.r,0.9+f*0.6);mNb(Wu(nSb(this.C,iVc),225),new lkb(0.6+f*2.9));if(this.D){this.b=b4b(this.b+-7.5E-4,0,0.05);mNb(Wu(apb(this.B,qVc),225),new lkb(Wu(Wu(apb(this.B,qVc),225).e,150).b+b*this.b));F5b(Wu(Wu(apb(this.B,cWc),225).e,297),b*0.05);K5b(Wu(Wu(nSb(this.C,fWc),225).e,297),4*Wu(Wu(apb(this.B,cWc),225).e,297).d);xTb(this.s,Wu(apb(this.n,dWc),282));nHb(this.H.n,this.t,this.d,this.i,true);xTb(this.s,Wu(apb(this.n,DUc),282));nHb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Wu(Uqb(this.o,c),305);g8b(d,cv(1000*b));F5b(d.ab,d.e*b);d.ab.d>2000&&K5b(d.ab,-1500-slb()*500)}nHb(this.H.n,this.I,this.c,null,false)}this.q=Ch()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;JU(1240,1,{},Atc);_._d=function Btc(a){ttc(this.b);stc(this.b,new sLc,a,this.c)};JU(1241,1,{},Dtc);_.If=function Etc(a,b){Tzc((Wu(a,339),Wu(b,242)));rtc(this.b,Wu(b,242),500,-3500,500,700);rtc(this.b,Wu(b,242),500,-3000-slb()*500,500,-200);rtc(this.b,Wu(b,242),500,-3000-slb()*500,500,200);rtc(this.b,Wu(b,242),500,-3000-slb()*500,500,1000)};JU(1242,1,{},Gtc);_.If=function Htc(a,b){Tzc((Wu(a,339),Wu(b,242)));rtc(this.b,Wu(b,242),1000,-3000-slb()*500,350,40)};JU(1243,1,{},Jtc);_.If=function Ktc(a,b){Tzc((Wu(a,339),Wu(b,242)));rtc(this.b,Wu(b,242),1000,-3000-slb()*500,350,340)};var Ltc;JU(1244,1,{},Qtc);_.Vd=function Rtc(){return Ztc(),Otc};_.Wd=function Stc(){return $tc(),Ptc};var Otc,Ptc;JU(1245,1,{},Utc);_.uc=function Vtc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};JU(1246,1,{},Xtc);_.uc=function Ytc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};JU(1352,731,KOc,Qyc);_.Sd=function Ryc(){VIb(this,LNb());VIb(this,MNb());VIb(this,NNb());OIb(this,ZVc,new oNb((HNb(),wNb),(mjb(),mjb(),kjb)));OIb(this,$Vc,new oNb(wNb,kjb));OIb(this,HUc,new oNb(wNb,kjb));OIb(this,gWc,new oNb(wNb,kjb));OIb(this,WVc,new nNb(zNb));OIb(this,XVc,new nNb(zNb));OIb(this,YVc,new nNb(zNb));OIb(this,hVc,new nNb(zNb));OIb(this,jVc,new nNb(zNb));OIb(this,VVc,new nNb(zNb));OIb(this,iVc,new oNb(tNb,new lkb(1)));OIb(this,hWc,new oNb(tNb,new lkb(0)));OIb(this,_Vc,new oNb(tNb,new lkb(1)));OIb(this,NUc,new oNb(sNb,new G3b(15658734)));OIb(this,OUc,new oNb(sNb,new G3b(1118481)));OIb(this,MUc,new oNb(sNb,new G3b(328965)));OIb(this,mVc,new oNb(tNb,new lkb(30)));OIb(this,TUc,new oNb(tNb,new lkb(1)));OIb(this,'uRepeatBase',new oNb(BNb,new N5b(1,1)));OIb(this,aWc,new oNb(BNb,new N5b(1,1)));OIb(this,fWc,new oNb(BNb,new N5b(0,0)))};_.Td=function Syc(a){var b,c;c=new xrb(Mu(GS,qNc,1,[UUc,VUc]));b=new xrb(Mu(GS,qNc,1,[XUc,YUc,ZUc]));XIb(this,dJb(a,Mu(JS,qNc,173,[c,b])))};_.Ud=function Tyc(a){var b,c;c=new xrb(Mu(GS,qNc,1,[$Uc]));b=new xrb(Mu(GS,qNc,1,[_Uc]));YIb(this,dJb(a,Mu(JS,qNc,173,[c,b])))};var Uyc;JU(1353,1,{},Zyc);_.Vd=function $yc(){return gzc(),Xyc};_.Wd=function _yc(){return hzc(),Yyc};var Xyc,Yyc;JU(1354,1,{},bzc);_.uc=function czc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};JU(1355,1,{},ezc);_.uc=function fzc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};JU(1447,731,KOc,FJc);_.Sd=function GJc(){OIb(this,JUc,new nNb((HNb(),zNb)));OIb(this,TUc,new oNb(tNb,new lkb(1)))};var HJc;JU(1448,1,{},MJc);_.Vd=function NJc(){return VJc(),KJc};_.Wd=function OJc(){return WJc(),LJc};var KJc,LJc;JU(1449,1,{},QJc);_.uc=function RJc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};JU(1450,1,{},TJc);_.uc=function UJc(){return yVc};JU(1471,731,KOc,_Kc);_.Sd=function aLc(){OIb(this,JUc,new nNb((HNb(),zNb)));OIb(this,SVc,new oNb(tNb,new lkb(0.001953125)));OIb(this,eWc,new oNb(tNb,new lkb(0.35)))};var bLc;JU(1472,1,{},gLc);_.Vd=function hLc(){return pLc(),eLc};_.Wd=function iLc(){return qLc(),fLc};var eLc,fLc;JU(1473,1,{},kLc);_.uc=function lLc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};JU(1474,1,{},nLc);_.uc=function oLc(){return yVc};JU(1477,731,KOc,sLc);_.Sd=function tLc(){OIb(this,JUc,new nNb((HNb(),zNb)))};var uLc;JU(1478,1,{},zLc);_.Vd=function ALc(){return ILc(),xLc};_.Wd=function BLc(){return JLc(),yLc};var xLc,yLc;JU(1479,1,{},DLc);_.uc=function ELc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};JU(1480,1,{},GLc);_.uc=function HLc(){return yVc};JU(1483,731,KOc,LLc);_.Sd=function MLc(){OIb(this,UVc,new nNb((HNb(),zNb)));OIb(this,nVc,new oNb(BNb,new N5b(512,512)));OIb(this,bWc,new oNb(BNb,new N5b(1,1)));OIb(this,CRc,new oNb(tNb,new lkb(0.05)))};var NLc;JU(1484,1,{},SLc);_.Vd=function TLc(){return _Lc(),QLc};_.Wd=function ULc(){return aMc(),RLc};var QLc,RLc;JU(1485,1,{},WLc);_.uc=function XLc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};JU(1486,1,{},ZLc);_.uc=function $Lc(){return yVc};JU(1489,731,KOc,cMc);_.Sd=function dMc(){OIb(this,JUc,new nNb((HNb(),zNb)));OIb(this,TVc,new oNb(tNb,new lkb(0.001953125)));OIb(this,eWc,new oNb(tNb,new lkb(0.35)))};var eMc;JU(1490,1,{},jMc);_.Vd=function kMc(){return sMc(),hMc};_.Wd=function lMc(){return tMc(),iMc};var hMc,iMc;JU(1491,1,{},nMc);_.uc=function oMc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};JU(1492,1,{},qMc);_.uc=function rMc(){return yVc};var XO=_jb($Tc,'TerrainDynamic$DemoScene',1239),TO=_jb($Tc,'TerrainDynamic$DemoScene$1',1240),UO=_jb($Tc,'TerrainDynamic$DemoScene$2',1241),VO=_jb($Tc,'TerrainDynamic$DemoScene$3',1242),WO=_jb($Tc,'TerrainDynamic$DemoScene$4',1243),KR=_jb(AVc,iWc,1483),IP=_jb(QTc,'TerrainShader',1352),mR=_jb(AVc,'BleachBypassShader',1447),CR=_jb(AVc,'HorizontalTiltShiftShader',1471),OR=_jb(AVc,'VerticalTiltShiftShader',1489),$O=_jb($Tc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1244),YO=_jb($Tc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1245),ZO=_jb($Tc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1246),JR=_jb(AVc,jWc,1484),HR=_jb(AVc,kWc,1485),IR=_jb(AVc,lWc,1486),HP=_jb(QTc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1353),FP=_jb(QTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1354),GP=_jb(QTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1355),lR=_jb(AVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1448),jR=_jb(AVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1449),kR=_jb(AVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1450),BR=_jb(AVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1472),zR=_jb(AVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1473),AR=_jb(AVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1474),NR=_jb(AVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1490),LR=_jb(AVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1491),MR=_jb(AVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1492),GR=_jb(AVc,'LuminosityShader',1477),FR=_jb(AVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1478),DR=_jb(AVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1479),ER=_jb(AVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1480);jPc(Ii)(38);