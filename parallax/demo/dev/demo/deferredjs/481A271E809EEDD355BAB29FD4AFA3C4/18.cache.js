function $sc(){}
function ctc(){}
function ftc(){}
function swc(){}
function wwc(){}
function zwc(){}
function ljc(a){this.b=a}
function htc(){htc=$Kc;Ysc=new ctc}
function itc(){itc=$Kc;Zsc=new ftc}
function Wsc(){Wsc=$Kc;Vsc=new $sc}
function owc(){owc=$Kc;nwc=new swc}
function Bwc(){Bwc=$Kc;qwc=new wwc}
function Cwc(){Cwc=$Kc;rwc=new zwc}
function jwc(){pIb.call(this,(owc(),nwc))}
function Tsc(){pIb.call(this,(Wsc(),Vsc))}
function hjc(){R8b.call(this);this.e=0;this.f=0}
function gjc(a,b){var c,d,e,f,g,i;d=new jNb(nSc);d.n=4;v4b(d.C,0.998,0.998);v4b(d.B,0.001,0.001);dNb(d,(vFb(),uFb));eNb(d,uFb);TMb(d,(oCb(),mCb));e=new jNb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');v4b(e.C,0.998,0.998);v4b(e.B,0.001,0.001);dNb(e,uFb);eNb(e,uFb);TMb(e,mCb);c=new jNb('./static/models/obj/leeperrysmith/Map-COL.jpg');v4b(c.C,0.998,0.998);v4b(c.B,0.001,0.001);dNb(c,uFb);eNb(c,uFb);TMb(c,mCb);g=new jwc;i=g.j;iMb(Fu(i.b[pSc],225),(Fib(),Fib(),Eib));iMb(Fu(i.b[qSc],225),Eib);iMb(Fu(i.b[rSc],225),a.c.f);iMb(Fu(i.b[sSc],225),c);iMb(Fu(i.b[tSc],225),d);iMb(Fu(i.b[uSc],225),e);p2b(Fu(Fu(i.b[vSc],225).e,293),10526880);p2b(Fu(Fu(i.b[wSc],225).e,293),10526880);p2b(Fu(Fu(i.b[xSc],225).e,293),10526880);iMb(Fu(i.b[ySc],225),new Ejb(0.145));iMb(Fu(i.b[zSc],225),new Ejb(0.75));iMb(Fu(i.b[ASc],225),new Ejb(16));W5b(Fu(Fu(i.b[BSc],225).e,301),0.001,0.001,0.998,0.998);f=new E1b(g);f.d=true;a.d=new K6b(b,f);x4b(a.d.ab,-50);f5b(a.d.fb,100);LOb(a.d,true);a.d.V=true;GOb(a.I,a.d)}
var pSc='enableBump',rSc='tBeckmann',ySc='uRoughness',zSc='uSpecularBrightness';$T(1106,1,KMc);_.Db=function ejc(){r8b(this.c,new hjc(this.b))};$T(1107,961,{323:1},hjc);_.ob=function ijc(){var a,b,c,d,e,f,g;this.b=new GPb(27,sGb(this.H.n),1,10000);i5b(this.b.ab,1200);GOb(this.I,new fXb(5592405));d=new _Xb(16777215,1.5,1000);g5b(d.ab,0,0,600);GOb(this.I,d);f=new hYb(1);g5b(f.ab,0.05,0.05,1);GOb(this.I,f);f.ab.of(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new IXb(16777215,0.85);g5b(a.ab,1,-0.5,1);o2b(a.M,0.6,1,0.85);GOb(this.I,a);a.ab.of(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new IXb(16777215,0.85);g5b(b.ab,1,-0.5,-1);GOb(this.I,b);new qHc(new Tsc);c=new qHc(new dIc);c.b=true;g=new GNb(512,512);YMb(g,(dEb(),ZDb));WMb(g,(UDb(),SDb));TMb(g,(oCb(),mCb));g.g=false;this.c=new gHc(this.H.n,g);new Mxc(oSc,new ljc(this));QGb(this.H.n,new s2b(5001561),1);e=new JFb(this.H.n,this.I);e.i=false;MGb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function jjc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){y2b(this.d.db,0.05*(b-this.d.db.e));x2b(this.d.db,0.05*(c-this.d.db.d))}mGb(this.H.n);EGb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;$T(1108,1,{},ljc);_.Bf=function mjc(a,b){gjc(this.b,Fu(b,241))};$T(1240,725,xMc,Tsc);_.Nd=function Usc(){};var Vsc;$T(1241,1,{},$sc);_.Qd=function _sc(){return htc(),Ysc};_.Rd=function atc(){return itc(),Zsc};var Ysc,Zsc;$T(1242,1,{},ctc);_.pc=function dtc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};$T(1243,1,{},ftc);_.pc=function gtc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};$T(1319,725,xMc,jwc);_.Nd=function kwc(){kIb(this,HMb());kIb(this,IMb());kIb(this,JMb());dIb(this,pSc,new kMb((DMb(),sMb),kkb(0)));dIb(this,qSc,new kMb(sMb,kkb(0)));dIb(this,sSc,new jMb(vMb));dIb(this,rSc,new jMb(vMb));dIb(this,wSc,new kMb(oMb,new s2b(15658734)));dIb(this,xSc,new kMb(oMb,new s2b(1118481)));dIb(this,vSc,new kMb(oMb,new s2b(328965)));dIb(this,CSc,new kMb(pMb,new Ejb(1)));dIb(this,ySc,new kMb(pMb,new Ejb(0.15)));dIb(this,zSc,new kMb(pMb,new Ejb(0.75)));dIb(this,tSc,new jMb(vMb));dIb(this,ASc,new kMb(pMb,new Ejb(1)));dIb(this,uSc,new jMb(vMb));dIb(this,BSc,new kMb(BMb,new $5b(0,0,1,1)));dIb(this,'uWrapRGB',new kMb(zMb,new m5b(0.75,0.375,0.1875)))};_.Od=function lwc(a){var b,c;c=new Pqb(vu(XR,eLc,1,[DSc,ESc,FSc]));b=new Pqb(vu(XR,eLc,1,[GSc,HSc,ISc]));mIb(this,uIb(a,vu($R,eLc,173,[c,b])))};_.Pd=function mwc(a){var b,c;c=new Pqb(vu(XR,eLc,1,[JSc]));b=new Pqb(vu(XR,eLc,1,[KSc]));nIb(this,uIb(a,vu($R,eLc,173,[c,b])))};var nwc;$T(1320,1,{},swc);_.Qd=function twc(){return Bwc(),qwc};_.Rd=function uwc(){return Cwc(),rwc};var qwc,rwc;$T(1321,1,{},wwc);_.pc=function xwc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};$T(1322,1,{},zwc);_.pc=function Awc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var oM=sjb(FRc,'MaterialsBumpmapSkin$DemoScene',1107),nM=sjb(FRc,'MaterialsBumpmapSkin$DemoScene$1',1108),GO=sjb(yRc,'BeckmannShader',1240),FO=sjb(yRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1241),DO=sjb(yRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1242),EO=sjb(yRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1243),VO=sjb(yRc,'SkinSimpleShader',1319),UO=sjb(yRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1320),SO=sjb(yRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1321),TO=sjb(yRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1322);YMc(Hi)(18);