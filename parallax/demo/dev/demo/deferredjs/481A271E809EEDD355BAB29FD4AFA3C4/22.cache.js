function MJb(){}
function QJb(){}
function TJb(){}
function IJb(){IJb=$Kc;HJb=new MJb}
function VJb(){VJb=$Kc;KJb=new QJb}
function WJb(){WJb=$Kc;LJb=new TJb}
function FJb(){pIb.call(this,(IJb(),HJb))}
function Ckc(){R8b.call(this);this.d=0;this.e=0}
$T(743,725,xMc,FJb);_.Nd=function GJb(){dIb(this,'mRefractionRatio',new kMb((DMb(),pMb),new Ejb(1.02)));dIb(this,'mFresnelBias',new kMb(pMb,new Ejb(0.1)));dIb(this,'mFresnelPower',new kMb(pMb,new Ejb(2)));dIb(this,'mFresnelScale',new kMb(pMb,new Ejb(1)));dIb(this,RSc,new jMb(vMb))};var HJb;$T(744,1,{},MJb);_.Qd=function NJb(){return VJb(),KJb};_.Rd=function OJb(){return WJb(),LJb};var KJb,LJb;$T(745,1,{},QJb);_.pc=function RJb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};$T(746,1,{},TJb);_.pc=function UJb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};$T(1126,1,KMc);_.Db=function Akc(){r8b(this.c,new Ckc(this.b))};$T(1127,961,{327:1},Ckc);_.ob=function Dkc(){var a,b,c,d,e,f,g,i,j;this.b=new GPb(60,sGb(this.H.n),1,100000);i5b(this.b.ab,3200);this.c=new GPb(60,sGb(this.H.n),1,100000);this.f=new x7b;a=new ZVb(100,32,16);j=new sNb('./static/textures/cube/park2/*.jpg');TMb(j,(oCb(),mCb));g=new FJb;iMb(Fu(cRb(g.j,RSc),225),j);c=new E1b(g);this.g=new rqb;for(b=0;b<500;b++){d=new K6b(a,c);w4b(d.ab,Lkb()*10000-5000);x4b(d.ab,Lkb()*10000-5000);i5b(d.ab,Lkb()*10000-5000);f5b(d.fb,Lkb()*3+1);GOb(this.I,d);hqb(this.g,d)}this.I.X=false;i=new RIb;iMb(Fu(cRb(i.j,RSc),225),j);f=new E1b(i);IYb(f,(u$b(),r$b));e=new K6b(new iVb(100000,100000,100000),f);GOb(this.f,e);MGb(this.H.n,false)};_.pb=function Ekc(a){var b,c,d,e;e=1.0E-4*a;r4b(this.b.ab,(this.d-this.b.ab.d)*0.05);s4b(this.b.ab,(-this.e-this.b.ab.e)*0.05);cPb(this.b,this.I.ab);z2b(this.c.db,this.b.db);for(b=0,c=this.g.c;b<c;b++){d=Fu(kqb(this.g,b),304);w4b(d.ab,5000*Math.cos(e+b));x4b(d.ab,5000*Math.sin(e+b*1.1))}mGb(this.H.n);EGb(this.H.n,this.f,this.c,null,false);EGb(this.H.n,this.I,this.b,null,false)};_.d=0;_.e=0;var JM=sjb(FRc,'MaterialsCubemapFresnel$DemoScene',1127),kG=sjb(SSc,'FresnelShader',743),jG=sjb(SSc,'FresnelShader_Resources_default_InlineClientBundleGenerator',744),hG=sjb(SSc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',745),iG=sjb(SSc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',746);YMc(Hi)(22);