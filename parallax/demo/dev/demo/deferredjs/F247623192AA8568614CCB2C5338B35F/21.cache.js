function kKb(){}
function oKb(){}
function rKb(){}
function gKb(){gKb=GMc;fKb=new kKb}
function tKb(){tKb=GMc;iKb=new oKb}
function uKb(){uKb=GMc;jKb=new rKb}
function dKb(){uIb.call(this,(gKb(),fKb))}
function olc(){A9b.call(this);this.c=0;this.d=0}
fU(752,728,cOc,dKb);_.Ld=function eKb(){iIb(this,'mRefractionRatio',new KMb((bNb(),PMb),new Ijb(1.02)));iIb(this,'mFresnelBias',new KMb(PMb,new Ijb(0.1)));iIb(this,'mFresnelPower',new KMb(PMb,new Ijb(2)));iIb(this,'mFresnelScale',new KMb(PMb,new Ijb(1)));iIb(this,xUc,new JMb(VMb))};var fKb;fU(753,1,{},kKb);_.Od=function lKb(){return tKb(),iKb};_.Pd=function mKb(){return uKb(),jKb};var iKb,jKb;fU(754,1,{},oKb);_.nc=function pKb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};fU(755,1,{},rKb);_.nc=function sKb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};fU(1136,1,pOc);_.zb=function mlc(){a9b(this.b,new olc(this.a))};fU(1137,970,{327:1},olc);_.nb=function plc(){var a,b,c,d,e,f,g,i,j;this.a=new hQb(60,xGb(this.G.k),1,100000);T5b(this.a._,3200);this.b=new hQb(60,xGb(this.G.k),1,100000);this.e=new g8b;a=new GWb(100,32,16);j=new SNb('./static/textures/cube/park2/*.jpg');rNb(j,(tCb(),rCb));g=new dKb;IMb(zu(JRb(g.i,xUc),225),j);c=new m2b(g);this.f=new vqb;for(b=0;b<500;b++){d=new t7b(a,c);e5b(d._,Pkb()*10000-5000);f5b(d._,Pkb()*10000-5000);T5b(d._,Pkb()*10000-5000);Q5b(d.eb,Pkb()*3+1);ePb(this.H,d);lqb(this.f,d)}this.H.W=false;i=new WIb;IMb(zu(JRb(i.i,xUc),225),j);f=new m2b(i);pZb(f,(b_b(),$$b));e=new t7b(new RVb(100000,100000,100000),f);ePb(this.e,e);RGb(this.G.k,false)};_.ob=function qlc(a){var b,c,d,e;e=1.0E-4*a;_4b(this.a._,(this.c-this.a._.c)*0.05);a5b(this.a._,(-this.d-this.a._.d)*0.05);DPb(this.a,this.H._);h3b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=zu(oqb(this.f,b),304);e5b(d._,5000*Math.cos(e+b));f5b(d._,5000*Math.sin(e+b*1.1))}qGb(this.G.k,true);JGb(this.G.k,this.e,this.b,null,false);JGb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var GM=wjb(qTc,'MaterialsCubemapFresnel$DemoScene',1137),gG=wjb(yUc,'FresnelShader',752),fG=wjb(yUc,'FresnelShader_Resources_default_InlineClientBundleGenerator',753),dG=wjb(yUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',754),eG=wjb(yUc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',755);DOc(xi)(21);