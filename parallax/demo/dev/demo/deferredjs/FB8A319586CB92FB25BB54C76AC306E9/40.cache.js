function AKb(){}
function EKb(){}
function HKb(){}
function juc(){}
function nuc(){}
function quc(){}
function Cuc(){}
function Guc(){}
function Juc(){}
function Vuc(){}
function Zuc(){}
function avc(){}
function O8b(a,b){a.d=b}
function wKb(){wKb=IKc;vKb=new AKb}
function JKb(){JKb=IKc;yKb=new EKb}
function KKb(){KKb=IKc;zKb=new HKb}
function fuc(){fuc=IKc;euc=new juc}
function suc(){suc=IKc;huc=new nuc}
function tuc(){tuc=IKc;iuc=new quc}
function yuc(){yuc=IKc;xuc=new Cuc}
function Luc(){Luc=IKc;Auc=new Guc}
function Muc(){Muc=IKc;Buc=new Juc}
function Ruc(){Ruc=IKc;Quc=new Vuc}
function cvc(){cvc=IKc;Tuc=new Zuc}
function dvc(){dvc=IKc;Uuc=new avc}
function Zrc(a,b){this.b=a;this.c=b}
function x0b(){_Zb.call(this);this.b=false;this.c=1}
function rKb(){bJb.call(this,(wKb(),vKb))}
function cuc(){bJb.call(this,(fuc(),euc))}
function vuc(){bJb.call(this,(yuc(),xuc))}
function Ouc(){bJb.call(this,(Ruc(),Quc))}
function $Gb(a,b){LHb(a,b);ZGb(a,false)}
function v6b(a,b){var c;c=new N4b;L4b(c,b.q,A4b(c,b.Y));return n6b(a,c)}
function Vrc(){iac.call(this);this.u=new E6b(0,1000,-1000);this.s=new D6b}
var WTc='bgColor',YTc='fAspect',VTc='fGodRayIntensity',ZTc='fStepSize',MTc='mFar',LTc='mNear',_Tc='tColors',aUc='tGodRays',$Tc='tInput',XTc='vSunPositionScreenSpace',bUc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';KU(750,732,gMc,rKb);_.Sd=function sKb(){RIb(this,LTc,new rNb((KNb(),wNb),new okb(1)));RIb(this,MTc,new rNb(wNb,new okb(2000)));RIb(this,qSc,new rNb(wNb,new okb(1)))};_.Td=function tKb(a){var b,c;c=new Arb(Nu(HS,OKc,1,[NTc]));b=new Arb(Nu(HS,OKc,1,[OTc]));$Ib(this,gJb(a,Nu(KS,OKc,173,[c,b])))};_.Ud=function uKb(a){var b,c;c=new Arb(Nu(HS,OKc,1,[PTc,QTc]));b=new Arb(Nu(HS,OKc,1,[RTc,STc,TTc]));_Ib(this,gJb(a,Nu(KS,OKc,173,[c,b])))};var vKb;KU(751,1,{},AKb);_.Vd=function BKb(){return JKb(),yKb};_.Wd=function CKb(){return KKb(),zKb};var yKb,zKb;KU(752,1,{},EKb);_.uc=function FKb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};KU(753,1,{},HKb);_.uc=function IKb(){return UTc};KU(817,814,{78:1,186:1,235:1,236:1,249:1});_.ee=function EQb(){return this.c};_.fe=function FQb(){return this.e};KU(818,814,{78:1,186:1,235:1,237:1,249:1});_.ee=function SQb(){return this.c};_.fe=function TQb(){return this.i};KU(922,915,{279:1,282:1},x0b);_.We=function y0b(){var a;return a=new x0b,JZb(this,a),a.b=this.b,a.c=this.c,a};_.Xe=function z0b(){return new rKb};_.Te=function A0b(){return this.c};_.Ue=function B0b(){return this.b};_.Ye=function C0b(a,b){var c;OZb(this,b);c=NZb(this).j;if($u(a,235)){pNb(Xu(c.b[LTc],225),new okb(Xu(a,235).fe()));pNb(Xu(c.b[MTc],225),new okb(Xu(a,235).ee()))}pNb(Xu(c.b[qSc],225),new okb(this.$))};_.b=false;_.c=0;KU(1231,1,tMc);_.Db=function Trc(){K9b(this.c,new Vrc(this.b))};KU(1232,974,{336:1},Vrc);_.ob=function Wrc(){var a,b,c,d;this.b=new QQb(70,eHb(this.H.n),1,3000);A6b(this.b.ab,200);this.c=new x0b;c=new U_b;O_b(c,new J3b(0));S_b(c,(C_b(),z_b));new uxc('./static/models/obj/tree/tree.js',new Zrc(this,c));a=new nXb(1,20,10);this.t=new a8b(a,c);x6b(this.t.fb,20);NPb(this.I,this.t);OHb(this.H.n,false);yHb(this.H.n,false);BHb(this.H.n,1297,1);this.k=new P8b;this.j=new BQb(this.H.n.$,this.H.n.Z,-10000,10000);A6b(this.j.ab,100);NPb(this.k,this.j);this.o=new NOb(this.H.n.$,this.H.n.Z);dOb(this.o,(REb(),LEb));bOb(this.o,(GEb(),EEb));$Nb(this.o,(aDb(),_Cb));this.p=new NOb(this.H.n.$,this.H.n.Z);dOb(this.p,LEb);bOb(this.p,EEb);$Nb(this.p,_Cb);d=~~(this.H.n.$/4);b=~~(this.H.n.Z/4);this.q=new NOb(d,b);dOb(this.q,LEb);bOb(this.q,EEb);$Nb(this.q,_Cb);this.r=new NOb(d,b);dOb(this.r,LEb);bOb(this.r,EEb);$Nb(this.r,_Cb);this.f=new V2b(new vuc);this.d=new V2b(new cuc);pNb(Xu(qSb(NZb(this.d).j,VTc),225),new okb(0.75));this.e=new V2b(new Ouc);G3b(Xu(Xu(qSb(NZb(this.e).j,WTc),225).e,293),1297);G3b(Xu(Xu(qSb(NZb(this.e).j,dTc),225).e,293),16772608);this.n=new a8b(new cXb(this.H.n.$,this.H.n.Z),this.f);A6b(this.n.ab,-9900);NPb(this.k,this.n)};_.pb=function Xrc(a){var b,c,d,e,f,g;f=a/4000;N5b(this.t.ab,200*olb(f));A6b(this.t.ab,200*xlb(f)-100);I5b(this.b.ab,(this.g-this.b.ab.d)*0.036);J5b(this.b.ab,(-this.i-this.b.ab.e)*0.036);kQb(this.b,this.I.ab);v6b(this.s.sf(this.u),this.b);N5b(this.s,(this.s.d+1)/2);O5b(this.s,(this.s.e+1)/2);M5b(Xu(Xu(qSb(NZb(this.f).j,XTc),225).e,297),this.s.d,this.s.e);M5b(Xu(Xu(qSb(NZb(this.e).j,XTc),225).e,297),this.s.d,this.s.e);$Gb(this.H.n,this.o);g=this.H.n.$;b=this.H.n.Z;d=0.74*b;e=0.74*b;N5b(this.s,this.s.d*g);O5b(this.s,this.s.e*b);MHb(this.H.n,dv(this.s.d-e/2),dv(this.s.e-d/2),dv(e),dv(d));dHb(this.H.n,true);pNb(Xu(qSb(NZb(this.e).j,YTc),225),new okb(g/b));O8b(this.k,this.e);qHb(this.H.n,this.k,this.j,this.o,false);dHb(this.H.n,false);O8b(this.I,null);qHb(this.H.n,this.I,this.b,this.o,false);O8b(this.I,this.c);qHb(this.H.n,this.I,this.b,this.p,true);c=ulb(6,-1);pNb(Xu(qSb(NZb(this.f).j,ZTc),225),new okb(c));pNb(Xu(qSb(NZb(this.f).j,$Tc),225),this.p);O8b(this.k,this.f);qHb(this.H.n,this.k,this.j,this.r,false);c=ulb(6,-2);pNb(Xu(qSb(NZb(this.f).j,ZTc),225),new okb(c));pNb(Xu(qSb(NZb(this.f).j,$Tc),225),this.r);qHb(this.H.n,this.k,this.j,this.q,false);c=ulb(6,-3);pNb(Xu(qSb(NZb(this.f).j,ZTc),225),new okb(c));pNb(Xu(qSb(NZb(this.f).j,$Tc),225),this.q);qHb(this.H.n,this.k,this.j,this.r,false);pNb(Xu(qSb(NZb(this.d).j,_Tc),225),this.o);pNb(Xu(qSb(NZb(this.d).j,aUc),225),this.r);O8b(this.k,this.d);qHb(this.H.n,this.k,this.j,null,false);O8b(this.k,null)};_.g=0;_.i=0;KU(1233,1,{},Zrc);_.Hf=function $rc(a,b){var c;c=new a8b(b,this.c);y6b(c.ab,0,-150,-150);x6b(c.fb,400);c.X=false;v4b(c.W,c.ab,c.bb,c.fb);c.Z=true;NPb(this.b.I,c)};KU(1269,732,gMc,cuc);_.Sd=function duc(){RIb(this,_Tc,new qNb((KNb(),CNb)));RIb(this,aUc,new qNb(CNb));RIb(this,VTc,new rNb(wNb,new okb(0.69)));RIb(this,XTc,new rNb(ENb,new Q5b(0.5,0.5)))};var euc;KU(1270,1,{},juc);_.Vd=function kuc(){return suc(),huc};_.Wd=function luc(){return tuc(),iuc};var huc,iuc;KU(1271,1,{},nuc);_.uc=function ouc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};KU(1272,1,{},quc);_.uc=function ruc(){return bUc};KU(1275,732,gMc,vuc);_.Sd=function wuc(){RIb(this,$Tc,new qNb((KNb(),CNb)));RIb(this,ZTc,new rNb(wNb,new okb(1)));RIb(this,XTc,new rNb(ENb,new Q5b(0.5,0.5)))};var xuc;KU(1276,1,{},Cuc);_.Vd=function Duc(){return Luc(),Auc};_.Wd=function Euc(){return Muc(),Buc};var Auc,Buc;KU(1277,1,{},Guc);_.uc=function Huc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};KU(1278,1,{},Juc);_.uc=function Kuc(){return bUc};KU(1281,732,gMc,Ouc);_.Sd=function Puc(){RIb(this,XTc,new rNb((KNb(),ENb),new Q5b(0.5,0.5)));RIb(this,YTc,new rNb(wNb,new okb(1)));RIb(this,dTc,new rNb(vNb,new J3b(16772608)));RIb(this,WTc,new rNb(vNb,new J3b(0)))};var Quc;KU(1282,1,{},Vuc);_.Vd=function Wuc(){return cvc(),Tuc};_.Wd=function Xuc(){return dvc(),Uuc};var Tuc,Uuc;KU(1283,1,{},Zuc);_.uc=function $uc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};KU(1284,1,{},avc);_.uc=function bvc(){return bUc};var MO=ckb(xRc,'PostprocessingGodrays$DemoScene',1232),LO=ckb(xRc,'PostprocessingGodrays$DemoScene$1',1233),vJ=ckb(cUc,'MeshDepthMaterial',922),oP=ckb(nRc,'GodRaysGenerateShader',1275),kP=ckb(nRc,'GodRaysCombineShader',1269),sP=ckb(nRc,'GodraysFakeSunShader',1281),HG=ckb(CSc,'DepthShader',750),nP=ckb(nRc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1276),lP=ckb(nRc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1277),mP=ckb(nRc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1278),jP=ckb(nRc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1270),hP=ckb(nRc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1271),iP=ckb(nRc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1272),rP=ckb(nRc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1282),pP=ckb(nRc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1283),qP=ckb(nRc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1284),GG=ckb(CSc,'DepthShader_Resources_default_InlineClientBundleGenerator',751),EG=ckb(CSc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',752),FG=ckb(CSc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',753);HMc(Ii)(40);