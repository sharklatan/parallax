function bkc(){}
function hkc(){}
function Fuc(){}
function Ouc(){}
function Luc(){}
function Tuc(){}
function Suc(){}
function Xuc(){}
function Wuc(){}
function Wxc(){}
function Oxc(){}
function Zxc(){}
function cyc(){}
function byc(){}
function gyc(){}
function fyc(){}
function dkc(){i8b.call(this)}
function Guc(){FFb.call(this,(Kuc(),Juc))}
function Pxc(){FFb.call(this,(Vxc(),Uxc))}
function Vxc(){Vxc=JLc;Uxc=new Zxc}
function jyc(){jyc=JLc;Xxc=new cyc}
function kyc(){kyc=JLc;Yxc=new gyc}
function Kuc(){Kuc=JLc;Juc=new Ouc}
function $uc(){$uc=JLc;Muc=new Tuc}
function _uc(){_uc=JLc;Nuc=new Xuc}
function ikc(a,b){this.b=a;this.c=b}
function ckc(a,b){var c,d,e,f,g,i;d=new zLb(bQc);d.n=4;wTb(d.y,0.998,0.998);wTb(d.x,0.001,0.001);wLb(d,(ADb(),zDb));xLb(d,zDb);mLb(d,(TAb(),RAb));e=new zLb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');wTb(e.y,0.998,0.998);wTb(e.x,0.001,0.001);wLb(e,zDb);xLb(e,zDb);mLb(e,RAb);c=new zLb('./static/models/obj/leeperrysmith/Map-COL.jpg');wTb(c.y,0.998,0.998);wTb(c.x,0.001,0.001);wLb(c,zDb);xLb(c,zDb);mLb(c,RAb);g=new Pxc;i=g.j;BKb(wr(i.b[dQc],166),(afb(),afb(),_eb));BKb(wr(i.b[eQc],166),_eb);BKb(wr(i.b[fQc],166),a.c.f);BKb(wr(i.b[gQc],166),c);BKb(wr(i.b[hQc],166),d);BKb(wr(i.b[iQc],166),e);zOb(wr(wr(i.b[jQc],166).e,178),10526880);zOb(wr(wr(i.b[kQc],166).e,178),10526880);zOb(wr(wr(i.b[lQc],166).e,178),10526880);BKb(wr(i.b[mQc],166),new $fb(0.145));BKb(wr(i.b[nQc],166),new $fb(0.75));BKb(wr(i.b[oQc],166),new $fb(16));MUb(wr(wr(i.b[pQc],166).e,194),0.001,0.001,0.998,0.998);f=new o5b(g);f.d=true;a.d=new a6b(b,f);a.d.X.e=-50;_Tb(a.d.ab,100);a.d.N=true;a.d.O=true;jNb(a.E,a.d)}
var dQc='enableBump',fQc='tBeckmann',mQc='uRoughness',nQc='uSpecularBrightness';_=Yjc.prototype;_.zb=function akc(){e8b(this.c,new dkc(this.b))};_=dkc.prototype=bkc.prototype=new h8b;_.gC=function ekc(){return _G};_.nb=function fkc(){var a,b,c,d,e,f,g,i,j;this.b=new iOb(27,dEb(this.D.o),1,10000);this.b.X.c=1200;jNb(this.E,new N$b(5592405));f=new K_b(16777215,1.5,1000);$Tb(f.X,0,0,600);jNb(this.E,f);i=new Y_b(1);$Tb(i.X,0.05,0.05,1);jNb(this.E,i);i.X.He(700);i.N=true;i.v=true;i.F=2048;i.D=2048;i.z=200;i.y=1500;i.d=40;i.w=-0.005;i.B=0.15;b=new q_b(16777215,0.85);$Tb(b.X,1,-0.5,1);yOb(b.I,0.6,0.3,1);jNb(this.E,b);b.X.He(500);b.N=true;b.F=2048;b.D=2048;b.z=200;b.y=1500;b.f=-500;b.g=500;b.i=500;b.e=-500;b.w=-0.005;b.B=0.15;c=new q_b(16777215,0.85);$Tb(c.X,1,-0.5,-1);jNb(this.E,c);new gHc(new Guc);d=new gHc(new cIc);d.b=true;j=new eMb(512,512);qLb(j,(eCb(),$Bb));oLb(j,(UBb(),SBb));mLb(j,(TAb(),RAb));j.g=false;this.c=new VGc(this.D.o,j);e=new Zyc;try{Myc(e,cQc,new ikc(this,e))}catch(a){a=XM(a);if(zr(a,41)){$Mb();AQ(ZMb,(gQ(),eQ),MPc)}else throw a}qEb(this.D.o,5001561,1);g=new TDb(this.D.o,this.E);g.g=false;this.D.o.O=false;this.D.o.Q=true;this.D.o.R=true;this.D.o.T=true};_.ob=function gkc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){sTb(this.d.$,0.05*(b-this.d.$.e));rTb(this.d.$,0.05*(c-this.d.$.d))}aEb(this.D.o);iEb(this.D.o,this.E,this.b,null,false)};_.cM={261:1};_.b=null;_.c=null;_.d=null;_.e=0;_.f=0;_=ikc.prototype=hkc.prototype=new Jb;_.gC=function jkc(){return $G};_.Gf=function kkc(){ckc(this.b,this.c.b)};_.b=null;_.c=null;_=Guc.prototype=Fuc.prototype=new rFb;_.gC=function Huc(){return fJ};_.Qd=function Iuc(){};_.cM={164:1};var Juc;_=Ouc.prototype=Luc.prototype=new Jb;_.gC=function Puc(){return eJ};_.Td=function Quc(){return $uc(),Muc};_.Ud=function Ruc(){return _uc(),Nuc};var Muc=null,Nuc=null;_=Tuc.prototype=Suc.prototype=new Jb;_.gC=function Uuc(){return cJ};_.dc=function Vuc(){return 'varying vec2 vUv;\r\n\r\nfloat PHBeckmann( float ndoth, float m ) {\r\n\r\n\tfloat alpha = acos( ndoth );\r\n\tfloat ta = tan( alpha );\r\n\r\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\r\n\treturn val;\r\n\r\n}\r\n\r\nfloat KSTextureCompute( vec2 tex ) {\r\n\r\n\t// Scale the value to fit within [0,1]  invert upon lookup.\r\n\r\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tfloat x = KSTextureCompute( vUv );\r\n\r\n\tgl_FragColor = vec4( x, x, x, 1.0 );\r\n\r\n}\r\n'};_=Xuc.prototype=Wuc.prototype=new Jb;_.gC=function Yuc(){return dJ};_.dc=function Zuc(){return qQc};_=Pxc.prototype=Oxc.prototype=new rFb;_.gC=function Qxc(){return sJ};_.Qd=function Rxc(){BFb(this,aLb());BFb(this,bLb());BFb(this,cLb());uFb(this,dQc,new DKb((XKb(),MKb),Lgb(0)));uFb(this,eQc,new DKb(MKb,Lgb(0)));uFb(this,gQc,new CKb(PKb));uFb(this,fQc,new CKb(PKb));uFb(this,kQc,new DKb(IKb,new EOb(15658734)));uFb(this,lQc,new DKb(IKb,new EOb(1118481)));uFb(this,jQc,new DKb(IKb,new EOb(328965)));uFb(this,rQc,new DKb(JKb,new $fb(1)));uFb(this,mQc,new DKb(JKb,new $fb(0.15)));uFb(this,nQc,new DKb(JKb,new $fb(0.75)));uFb(this,hQc,new CKb(PKb));uFb(this,oQc,new DKb(JKb,new $fb(1)));uFb(this,iQc,new CKb(PKb));uFb(this,pQc,new DKb(VKb,new PUb(0,0,1,1)));uFb(this,'uWrapRGB',new DKb(TKb,new eUb(0.75,0.375,0.1875)))};_.Rd=function Sxc(a){var b,c;c=new Unb(nr(PL,{88:1,106:1},1,[sQc,tQc,uQc]));b=new Unb(nr(PL,{88:1,106:1},1,[vQc,wQc,xQc]));DFb(this,LFb(a,nr(TL,{88:1,106:1},117,[c,b])))};_.Sd=function Txc(a){var b,c;c=new Unb(nr(PL,{88:1,106:1},1,[yQc]));b=new Unb(nr(PL,{88:1,106:1},1,[zQc]));EFb(this,LFb(a,nr(TL,{88:1,106:1},117,[c,b])))};_.cM={164:1};var Uxc;_=Zxc.prototype=Wxc.prototype=new Jb;_.gC=function $xc(){return rJ};_.Td=function _xc(){return jyc(),Xxc};_.Ud=function ayc(){return kyc(),Yxc};var Xxc=null,Yxc=null;_=cyc.prototype=byc.prototype=new Jb;_.gC=function dyc(){return pJ};_.dc=function eyc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 uAmbientColor;\r\nuniform vec3 uDiffuseColor;\r\nuniform vec3 uSpecularColor;\r\nuniform float uOpacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * uDiffuseColor * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * uSpecularColor * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// directional lights\r\n\t\t\t\t\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += uDiffuseColor * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += uSpecularColor * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * uAmbientColor ) + specularTotal;\r\n\r\n[*]\r\n\r\n}'};_=gyc.prototype=fyc.prototype=new Jb;_.gC=function hyc(){return qJ};_.dc=function iyc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalMatrix * normal;\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var _G=Pfb(BPc,'MaterialsBumpmapSkin$DemoScene',IE),$G=Pfb(BPc,'MaterialsBumpmapSkin$DemoScene$1',yy),fJ=Pfb(EPc,'BeckmannShader',RB),eJ=Pfb(EPc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',yy),cJ=Pfb(EPc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',yy),dJ=Pfb(EPc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',yy),sJ=Pfb(EPc,'SkinSimpleShader',RB),rJ=Pfb(EPc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',yy),pJ=Pfb(EPc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',yy),qJ=Pfb(EPc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',yy);$Lc(he)(23);