function AHb(){}
function JHb(){}
function GHb(){}
function OHb(){}
function NHb(){}
function SHb(){}
function RHb(){}
function fmc(){}
function gmc(){i8b.call(this)}
function BHb(){FFb.call(this,(FHb(),EHb))}
function FHb(){FHb=JLc;EHb=new JHb}
function VHb(){VHb=JLc;HHb=new OHb}
function WHb(){WHb=JLc;IHb=new SHb}
_=BHb.prototype=AHb.prototype=new rFb;_.gC=function CHb(){return uB};_.Qd=function DHb(){uFb(this,'mRefractionRatio',new DKb((XKb(),JKb),new $fb(1.02)));uFb(this,'mFresnelBias',new DKb(JKb,new $fb(0.1)));uFb(this,'mFresnelPower',new DKb(JKb,new $fb(2)));uFb(this,'mFresnelScale',new DKb(JKb,new $fb(1)));uFb(this,IQc,new CKb(PKb))};_.cM={164:1};var EHb;_=JHb.prototype=GHb.prototype=new Jb;_.gC=function KHb(){return tB};_.Td=function LHb(){return VHb(),HHb};_.Ud=function MHb(){return WHb(),IHb};var HHb=null,IHb=null;_=OHb.prototype=NHb.prototype=new Jb;_.gC=function PHb(){return rB};_.dc=function QHb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};_=SHb.prototype=RHb.prototype=new Jb;_.gC=function THb(){return sB};_.dc=function UHb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};_=amc.prototype;_.zb=function emc(){e8b(this.c,new gmc(this.b))};_=gmc.prototype=fmc.prototype=new h8b;_.gC=function hmc(){return wH};_.nb=function imc(){var a,b,c,d,e,f,g,i;this.b=new iOb(60,dEb(this.D.o),1,100000);this.b.X.c=3200;this.c=new iOb(60,dEb(this.D.o),1,100000);this.f=new $6b;a=new eZb(100,32,16);i=new NLb('./static/textures/cube/park2/*.jpg');mLb(i,(TAb(),RAb));f=new BHb;BKb(wr(f.j.b[IQc],166),i);c=new o5b(f);this.g=new rnb;for(b=0;b<500;++b){d=new a6b(a,c);xTb(d.X,Math.random()*10000-5000);yTb(d.X,Math.random()*10000-5000);bUb(d.X,Math.random()*10000-5000);_Tb(d.ab,Math.random()*3+1);jNb(this.E,d);fnb(this.g,d)}this.E.S=false;g=new lGb;BKb(wr(g.j.b[IQc],166),i);e=new o5b(g);A0b(e,(t2b(),q2b));d=new a6b(new oYb(100000,100000,100000),e);jNb(this.f,d);this.D.o.O=false};_.ob=function jmc(a){var b,c,d,e;e=1.0E-4*a;rTb(this.b.X,(this.d-this.b.X.d)*0.05);sTb(this.b.X,(-this.e-this.b.X.e)*0.05);KNb(this.b,this.E.X);this.c.$.Fe(this.b.$);for(b=0,c=this.g.c;b<c;++b){d=wr(jnb(this.g,b),240);xTb(d.X,5000*Math.cos(e+b));yTb(d.X,5000*Math.sin(e+b*1.1))}aEb(this.D.o);iEb(this.D.o,this.f,this.c,null,false);iEb(this.D.o,this.E,this.b,null,false)};_.cM={265:1};_.b=null;_.c=null;_.d=0;_.e=0;_.f=null;_.g=null;var uB=Pfb(FQc,'FresnelShader',RB),tB=Pfb(FQc,'FresnelShader_Resources_default_InlineClientBundleGenerator',yy),rB=Pfb(FQc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',yy),sB=Pfb(FQc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',yy),wH=Pfb(BPc,'MaterialsCubemapFresnel$DemoScene',IE);$Lc(he)(28);