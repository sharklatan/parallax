function enc(){}
function Wwc(){}
function dxc(){}
function axc(){}
function ixc(){}
function hxc(){}
function mxc(){}
function lxc(){}
function OGc(){}
function yIc(){}
function HIc(){}
function EIc(){}
function MIc(){}
function LIc(){}
function QIc(){}
function PIc(){}
function fnc(){i8b.call(this)}
function Xwc(){FFb.call(this,(_wc(),$wc))}
function zIc(){FFb.call(this,(DIc(),CIc))}
function DIc(){DIc=JLc;CIc=new HIc}
function TIc(){TIc=JLc;FIc=new MIc}
function UIc(){UIc=JLc;GIc=new QIc}
function _wc(){_wc=JLc;$wc=new dxc}
function pxc(){pxc=JLc;bxc=new ixc}
function qxc(){qxc=JLc;cxc=new mxc}
function PGc(){this.c=new o5b(new zIc);BKb(wr(p0b(this.c).j.b[WQc],166),(afb(),afb(),$eb));BKb(wr(p0b(this.c).j.b[XQc],166),new $fb(0.35));BKb(wr(p0b(this.c).j.b[YQc],166),new $fb(0.95));BKb(wr(p0b(this.c).j.b[ZQc],166),Lgb(2048));this.f=true;this.g=true}
var WQc='grayscale',XQc='nIntensity',ZQc='sCount',YQc='sIntensity',PQc='texture1',RQc='texture2';_=_mc.prototype;_.zb=function dnc(){e8b(this.c,new fnc(this.b))};_=fnc.prototype=enc.prototype=new h8b;_.gC=function gnc(){return GH};_.Nd=function hnc(a){xTb(wr(wr(this.e.b[OQc],166).e,192),a.b.p);yTb(wr(wr(this.e.b[OQc],166).e,192),a.b.o)};_.nb=function inc(){var a,b,c,d,e,f,g;Xp(($vb(),Zvb),(jwb(),iwb),this);this.b=new iOb(35,dEb(this.D.o),1,3000);this.b.X.c=4;d=new o5b(new Xwc);this.e=p0b(d).j;f=new zLb('./static/textures/lava/cloud.png');wLb(f,(ADb(),zDb));xLb(f,zDb);BKb(wr(this.e.b[PQc],166),f);g=new zLb(QQc);wLb(g,zDb);xLb(g,zDb);BKb(wr(this.e.b[RQc],166),g);this.c=new a6b(new oZb(0.65,0.3,30,30),d);this.c.$.d=0.3;jNb(this.E,this.c);a=new UGc(this.D.o);e=new cHc(this.E,this.b);b=new LGc(1.25);c=new PGc;c.b=true;fnb(a.c,e);fnb(a.c,b);fnb(a.c,c);this.D.o.O=false;this.d=fd()};_.ob=function jnc(a){var b;b=(fd()-this.d)*0.001*5;BKb(wr(this.e.b[SQc],166),new $fb(wr(wr(this.e.b[SQc],166).e,95).b+0.2*b));rTb(this.c.$,0.05*b);sTb(this.c.$,0.0125*b);aEb(this.D.o);this.d=fd();iEb(this.D.o,this.E,this.b,null,false)};_.cM={38:1,131:1};_.b=null;_.c=null;_.d=0;_.e=null;_=Xwc.prototype=Wwc.prototype=new rFb;_.gC=function Ywc(){return kJ};_.Qd=function Zwc(){uFb(this,TQc,new DKb((XKb(),JKb),new $fb(0.45)));uFb(this,UQc,new DKb(TKb,new eUb(0,0,0)));uFb(this,SQc,new DKb(JKb,new $fb(1)));uFb(this,OQc,new DKb(RKb,new zTb));uFb(this,VQc,new DKb(RKb,new ATb(3,1)));uFb(this,PQc,new CKb(PKb));uFb(this,RQc,new CKb(PKb))};_.cM={164:1};var $wc;_=dxc.prototype=axc.prototype=new Jb;_.gC=function exc(){return jJ};_.Td=function fxc(){return pxc(),bxc};_.Ud=function gxc(){return qxc(),cxc};var bxc=null,cxc=null;_=ixc.prototype=hxc.prototype=new Jb;_.gC=function jxc(){return hJ};_.dc=function kxc(){return 'uniform float time;\r\nuniform vec2 resolution;\r\n\r\nuniform float fogDensity;\r\nuniform vec3 fogColor;\r\n\r\nuniform sampler2D texture1;\r\nuniform sampler2D texture2;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main( void ) {\r\n\r\n\tvec2 position = -1.0 + 2.0 * vUv;\r\n\r\n\tvec4 noise = texture2D( texture1, vUv );\r\n\tvec2 T1 = vUv + vec2( 1.5, -1.5 ) * time  *0.02;\r\n\tvec2 T2 = vUv + vec2( -0.5, 2.0 ) * time * 0.01;\r\n\r\n\tT1.x += noise.x * 2.0;\r\n\tT1.y += noise.y * 2.0;\r\n\tT2.x -= noise.y * 0.2;\r\n\tT2.y += noise.z * 0.2;\r\n\r\n\tfloat p = texture2D( texture1, T1 * 2.0 ).a;\r\n\r\n\tvec4 color = texture2D( texture2, T2 * 2.0 );\r\n\tvec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );\r\n\r\n\tif( temp.r > 1.0 ){ temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }\r\n\tif( temp.g > 1.0 ){ temp.rb += temp.g - 1.0; }\r\n\tif( temp.b > 1.0 ){ temp.rg += temp.b - 1.0; }\r\n\r\n\tgl_FragColor = temp;\r\n\r\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\tconst float LOG2 = 1.442695;\r\n\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\r\n\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\r\n\r\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\r\n\r\n}\r\n'};_=mxc.prototype=lxc.prototype=new Jb;_.gC=function nxc(){return iJ};_.dc=function oxc(){return 'uniform vec2 uvScale;\r\nvarying vec2 vUv;\r\n\r\nvoid main()\r\n{\r\n\r\n\tvUv = uvScale * uv;\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}'};_=PGc.prototype=OGc.prototype=new GGc;_.gC=function QGc(){return sK};_.Og=function RGc(a,b,c){BKb(wr(p0b(this.c).j.b[gQc],166),a.e);BKb(wr(p0b(this.c).j.b[SQc],166),new $fb(wr(wr(p0b(this.c).j.b[SQc],166).e,95).b+b));h$b(a.d,this.c);this.b?iEb(a.o,a.p,a.b,null,false):iEb(a.o,a.p,a.b,a.i,false)};_.cM={283:1};_.b=false;_.c=null;_=zIc.prototype=yIc.prototype=new rFb;_.gC=function AIc(){return NK};_.Qd=function BIc(){uFb(this,gQc,new CKb((XKb(),PKb)));uFb(this,SQc,new DKb(JKb,new $fb(0)));uFb(this,XQc,new DKb(JKb,new $fb(0.5)));uFb(this,YQc,new DKb(JKb,new $fb(0.05)));uFb(this,ZQc,new DKb(MKb,Lgb(4096)));uFb(this,WQc,new DKb(MKb,(afb(),afb(),_eb)))};_.cM={164:1};var CIc;_=HIc.prototype=EIc.prototype=new Jb;_.gC=function IIc(){return MK};_.Td=function JIc(){return TIc(),FIc};_.Ud=function KIc(){return UIc(),GIc};var FIc=null,GIc=null;_=MIc.prototype=LIc.prototype=new Jb;_.gC=function NIc(){return KK};_.dc=function OIc(){return '// control parameter\r\nuniform float time;\r\n\r\nuniform bool grayscale;\r\n\r\n// noise effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float nIntensity;\r\n\r\n// scanlines effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float sIntensity;\r\n\r\n// scanlines effect count value (0 = no effect, 4096 = full effect)\r\nuniform float sCount;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\t// sample the source\r\n\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\r\n\r\n\t// make some noise\r\n\tfloat x = vUv.x * vUv.y * time *  1000.0;\r\n\tx = mod( x, 13.0 ) * mod( x, 123.0 );\r\n\tfloat dx = mod( x, 0.01 );\r\n\r\n\t// add noise\r\n\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\r\n\r\n\t// get us a sine and cosine\r\n\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\r\n\r\n\t// add scanlines\r\n\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\r\n\r\n\t// interpolate between source and result by intensity\r\n\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\r\n\r\n\t// convert to grayscale if desired\r\n\tif( grayscale ) {\r\n\r\n\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\r\n\r\n\t}\r\n\r\n\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\r\n\r\n}\r\n'};_=QIc.prototype=PIc.prototype=new Jb;_.gC=function RIc(){return LK};_.dc=function SIc(){return qQc};var GH=Pfb(BPc,'MaterialsShaderLava$DemoScene',IE),kJ=Pfb(EPc,'LavaShader',RB),jJ=Pfb(EPc,'LavaShader_Resources_default_InlineClientBundleGenerator',yy),hJ=Pfb(EPc,'LavaShader_Resources_default_InlineClientBundleGenerator$1',yy),iJ=Pfb(EPc,'LavaShader_Resources_default_InlineClientBundleGenerator$2',yy),sK=Pfb($Qc,'FilmPass',tK),NK=Pfb(_Qc,'FilmShader',RB),MK=Pfb(_Qc,'FilmShader_Resources_default_InlineClientBundleGenerator',yy),KK=Pfb(_Qc,'FilmShader_Resources_default_InlineClientBundleGenerator$1',yy),LK=Pfb(_Qc,'FilmShader_Resources_default_InlineClientBundleGenerator$2',yy);$Lc(he)(30);