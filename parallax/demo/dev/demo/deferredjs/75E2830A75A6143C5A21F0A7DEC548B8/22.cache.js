function SIb(){}
function WIb(){}
function ZIb(){}
function OIb(){OIb=WGc;NIb=new SIb}
function _Ib(){_Ib=WGc;QIb=new WIb}
function aJb(){aJb=WGc;RIb=new ZIb}
function LIb(){vHb.call(this,(OIb(),NIb))}
function Fjc(){U7b.call(this);this.c=0;this.d=0}
kT(746,728,rIc,LIb);_.Jd=function MIb(){jHb(this,'mRefractionRatio',new qLb((JLb(),vLb),new Mib(1.02)));jHb(this,'mFresnelBias',new qLb(vLb,new Mib(0.1)));jHb(this,'mFresnelPower',new qLb(vLb,new Mib(2)));jHb(this,'mFresnelScale',new qLb(vLb,new Mib(1)));jHb(this,POc,new pLb(BLb))};var NIb;kT(747,1,{},SIb);_.Md=function TIb(){return _Ib(),QIb};_.Nd=function UIb(){return aJb(),RIb};var QIb,RIb;kT(748,1,{},WIb);_.mc=function XIb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};kT(749,1,{},ZIb);_.mc=function $Ib(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};kT(1129,1,EIc);_.zb=function Djc(){u7b(this.b,new Fjc(this.a))};kT(1130,964,{327:1},Fjc);_.nb=function Gjc(){var a,b,c,d,e,f,g,i,j;this.a=new MOb(60,yFb(this.D.k),1,100000);m4b(this.a._,3200);this.b=new MOb(60,yFb(this.D.k),1,100000);this.e=new A6b;a=new dVb(100,32,16);j=new yMb('./static/textures/cube/park2/*.jpg');ZLb(j,(uBb(),sBb));g=new LIb;oLb(Au(iQb(g.i,POc),225),j);c=new I0b(g);this.f=new zpb;for(b=0;b<500;b++){d=new O5b(a,c);A3b(d._,Tjb()*10000-5000);B3b(d._,Tjb()*10000-5000);m4b(d._,Tjb()*10000-5000);j4b(d.eb,Tjb()*3+1);MNb(this.F,d);ppb(this.f,d)}this.F.W=false;i=new XHb;oLb(Au(iQb(i.i,POc),225),j);f=new I0b(i);NXb(f,(yZb(),vZb));e=new O5b(new oUb(100000,100000,100000),f);MNb(this.e,e);SFb(this.D.k,false)};_.ob=function Hjc(a){var b,c,d,e;e=1.0E-4*a;v3b(this.a._,(this.c-this.a._.c)*0.05);w3b(this.a._,(-this.d-this.a._.d)*0.05);iOb(this.a,this.F._);D1b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=Au(spb(this.f,b),304);A3b(d._,5000*Math.cos(e+b));B3b(d._,5000*Math.sin(e+b*1.1))}sFb(this.D.k);KFb(this.D.k,this.e,this.b,null,false);KFb(this.D.k,this.F,this.a,null,false)};_.c=0;_.d=0;var CM=Aib(ENc,'MaterialsCubemapFresnel$DemoScene',1130),dG=Aib(QOc,'FresnelShader',746),cG=Aib(QOc,'FresnelShader_Resources_default_InlineClientBundleGenerator',747),aG=Aib(QOc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',748),bG=Aib(QOc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',749);RIc(xi)(22);