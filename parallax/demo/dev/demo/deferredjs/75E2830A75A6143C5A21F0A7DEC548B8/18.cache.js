function erc(){}
function irc(){}
function lrc(){}
function xuc(){}
function Buc(){}
function Euc(){}
function oic(a){this.a=a}
function tuc(){tuc=WGc;suc=new xuc}
function Guc(){Guc=WGc;vuc=new Buc}
function Huc(){Huc=WGc;wuc=new Euc}
function arc(){arc=WGc;_qc=new erc}
function nrc(){nrc=WGc;crc=new irc}
function orc(){orc=WGc;drc=new lrc}
function Zqc(){vHb.call(this,(arc(),_qc))}
function ouc(){vHb.call(this,(tuc(),suc))}
function kic(){U7b.call(this);this.d=0;this.e=0}
function jic(a,b){var c,d,e,f,g,i;d=new pMb(mOc);d.k=4;z3b(d.B,0.998,0.998);z3b(d.A,0.001,0.001);jMb(d,(BEb(),AEb));kMb(d,AEb);ZLb(d,(uBb(),sBb));e=new pMb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');z3b(e.B,0.998,0.998);z3b(e.A,0.001,0.001);jMb(e,AEb);kMb(e,AEb);ZLb(e,sBb);c=new pMb('./static/models/obj/leeperrysmith/Map-COL.jpg');z3b(c.B,0.998,0.998);z3b(c.A,0.001,0.001);jMb(c,AEb);kMb(c,AEb);ZLb(c,sBb);g=new ouc;i=g.i;oLb(Au(i.a[oOc],225),(Nhb(),Nhb(),Mhb));oLb(Au(i.a[pOc],225),Mhb);oLb(Au(i.a[qOc],225),a.b.e);oLb(Au(i.a[rOc],225),c);oLb(Au(i.a[sOc],225),d);oLb(Au(i.a[tOc],225),e);t1b(Au(Au(i.a[uOc],225).d,293),10526880);t1b(Au(Au(i.a[vOc],225).d,293),10526880);t1b(Au(Au(i.a[wOc],225).d,293),10526880);oLb(Au(i.a[xOc],225),new Mib(0.145));oLb(Au(i.a[yOc],225),new Mib(0.75));oLb(Au(i.a[zOc],225),new Mib(16));$4b(Au(Au(i.a[AOc],225).d,301),0.001,0.001,0.998,0.998);f=new I0b(g);f.c=true;a.c=new O5b(b,f);B3b(a.c._,-50);j4b(a.c.eb,100);RNb(a.c,true);a.c.U=true;MNb(a.F,a.c)}
var oOc='enableBump',qOc='tBeckmann',xOc='uRoughness',yOc='uSpecularBrightness';kT(1109,1,EIc);_.zb=function hic(){u7b(this.b,new kic(this.a))};kT(1110,964,{323:1},kic);_.nb=function lic(){var a,b,c,d,e,f,g;this.a=new MOb(27,yFb(this.D.k),1,10000);m4b(this.a._,1200);MNb(this.F,new lWb(5592405));d=new eXb(16777215,1.5,1000);k4b(d._,0,0,600);MNb(this.F,d);f=new mXb(1);k4b(f._,0.05,0.05,1);MNb(this.F,f);f._.kf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new OWb(16777215,0.85);k4b(a._,1,-0.5,1);s1b(a.L,0.6,1,0.85);MNb(this.F,a);a._.kf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new OWb(16777215,0.85);k4b(b._,1,-0.5,-1);MNb(this.F,b);new _Ec(new Zqc);c=new _Ec(new vFc);c.a=true;g=new MMb(512,512);cMb(g,(jDb(),dDb));aMb(g,($Cb(),YCb));ZLb(g,(uBb(),sBb));g.f=false;this.b=new REc(this.D.k,g);new wvc(nOc,new oic(this));WFb(this.D.k,new w1b(5001561),1);e=new PEb(this.D.k,this.F);e.g=false;SFb(this.D.k,false);this.D.k.ab=true;this.D.k.bb=true};_.ob=function mic(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){C1b(this.c.cb,0.05*(b-this.c.cb.d));B1b(this.c.cb,0.05*(c-this.c.cb.c))}sFb(this.D.k);KFb(this.D.k,this.F,this.a,null,false)};_.d=0;_.e=0;kT(1111,1,{},oic);_.xf=function pic(a,b){jic(this.a,Au(b,241))};kT(1230,728,rIc,Zqc);_.Jd=function $qc(){};var _qc;kT(1231,1,{},erc);_.Md=function frc(){return nrc(),crc};_.Nd=function grc(){return orc(),drc};var crc,drc;kT(1232,1,{},irc);_.mc=function jrc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};kT(1233,1,{},lrc);_.mc=function mrc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};kT(1308,728,rIc,ouc);_.Jd=function puc(){qHb(this,NLb());qHb(this,OLb());qHb(this,PLb());jHb(this,oOc,new qLb((JLb(),yLb),sjb(0)));jHb(this,pOc,new qLb(yLb,sjb(0)));jHb(this,rOc,new pLb(BLb));jHb(this,qOc,new pLb(BLb));jHb(this,vOc,new qLb(uLb,new w1b(15658734)));jHb(this,wOc,new qLb(uLb,new w1b(1118481)));jHb(this,uOc,new qLb(uLb,new w1b(328965)));jHb(this,BOc,new qLb(vLb,new Mib(1)));jHb(this,xOc,new qLb(vLb,new Mib(0.15)));jHb(this,yOc,new qLb(vLb,new Mib(0.75)));jHb(this,sOc,new pLb(BLb));jHb(this,zOc,new qLb(vLb,new Mib(1)));jHb(this,tOc,new pLb(BLb));jHb(this,AOc,new qLb(HLb,new c5b(0,0,1,1)));jHb(this,'uWrapRGB',new qLb(FLb,new q4b(0.75,0.375,0.1875)))};_.Kd=function quc(a){var b,c;c=new Xpb(qu(hR,_Gc,1,[COc,DOc,EOc]));b=new Xpb(qu(hR,_Gc,1,[FOc,GOc,HOc]));sHb(this,AHb(a,qu(kR,_Gc,173,[c,b])))};_.Ld=function ruc(a){var b,c;c=new Xpb(qu(hR,_Gc,1,[IOc]));b=new Xpb(qu(hR,_Gc,1,[JOc]));tHb(this,AHb(a,qu(kR,_Gc,173,[c,b])))};var suc;kT(1309,1,{},xuc);_.Md=function yuc(){return Guc(),vuc};_.Nd=function zuc(){return Huc(),wuc};var vuc,wuc;kT(1310,1,{},Buc);_.mc=function Cuc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};kT(1311,1,{},Euc);_.mc=function Fuc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var hM=Aib(ENc,'MaterialsBumpmapSkin$DemoScene',1110),gM=Aib(ENc,'MaterialsBumpmapSkin$DemoScene$1',1111),oO=Aib(xNc,'BeckmannShader',1230),nO=Aib(xNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1231),lO=Aib(xNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1232),mO=Aib(xNc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1233),DO=Aib(xNc,'SkinSimpleShader',1308),CO=Aib(xNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1309),AO=Aib(xNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1310),BO=Aib(xNc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1311);RIc(xi)(18);