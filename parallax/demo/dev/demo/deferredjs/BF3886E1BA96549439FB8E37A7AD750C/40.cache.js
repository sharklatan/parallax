function gLb(){}
function kLb(){}
function nLb(){}
function Mxc(){}
function Qxc(){}
function Txc(){}
function dyc(){}
function hyc(){}
function kyc(){}
function wyc(){}
function Ayc(){}
function Dyc(){}
function q9b(a,b){a.c=b}
function qLb(){qLb=EQc;fLb=new nLb}
function cLb(){cLb=EQc;bLb=new gLb}
function pLb(){pLb=EQc;eLb=new kLb}
function nyc(){nyc=EQc;cyc=new kyc}
function myc(){myc=EQc;byc=new hyc}
function syc(){syc=EQc;ryc=new wyc}
function Fyc(){Fyc=EQc;uyc=new Ayc}
function Gyc(){Gyc=EQc;vyc=new Dyc}
function _xc(){_xc=EQc;$xc=new dyc}
function Ixc(){Ixc=EQc;Hxc=new Mxc}
function Vxc(){Vxc=EQc;Kxc=new Qxc}
function Wxc(){Wxc=EQc;Lxc=new Txc}
function qtc(a,b){this.a=a;this.b=b}
function GHb(a,b){rIb(a,b);FHb(a,false)}
function ZKb(){JJb.call(this,(cLb(),bLb))}
function Fxc(){JJb.call(this,(Ixc(),Hxc))}
function Yxc(){JJb.call(this,(_xc(),$xc))}
function pyc(){JJb.call(this,(syc(),ryc))}
function _0b(){D$b.call(this);this.a=false;this.b=1}
function mtc(){Lac.call(this);this.t=new g7b(0,1000,-1000);this.r=new f7b}
function Z6b(a,b){var c;c=new p5b;n5b(c,b.p,c5b(c,b.X));return R6b(a,c)}
var NZc='bgColor',PZc='fAspect',MZc='fGodRayIntensity',QZc='fStepSize',DZc='mFar',CZc='mNear',SZc='tColors',TZc='tGodRays',RZc='tInput',OZc='vSunPositionScreenSpace',UZc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';PU(748,730,aSc,ZKb);_.Ld=function $Kb(){xJb(this,CZc,new ZNb((qOb(),cOb),new qkb(1)));xJb(this,DZc,new ZNb(cOb,new qkb(2000)));xJb(this,mYc,new ZNb(cOb,new qkb(1)))};_.Md=function _Kb(a){var b,c;c=new Brb(pu(KS,JQc,1,[EZc]));b=new Brb(pu(KS,JQc,1,[FZc]));GJb(this,OJb(a,pu(NS,JQc,173,[c,b])))};_.Nd=function aLb(a){var b,c;c=new Brb(pu(KS,JQc,1,[GZc,HZc]));b=new Brb(pu(KS,JQc,1,[IZc,JZc,KZc]));HJb(this,OJb(a,pu(NS,JQc,173,[c,b])))};var bLb;PU(749,1,{},gLb);_.Od=function hLb(){return pLb(),eLb};_.Pd=function iLb(){return qLb(),fLb};var eLb,fLb;PU(750,1,{},kLb);_.nc=function lLb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};PU(751,1,{},nLb);_.nc=function oLb(){return LZc};PU(920,913,{280:1,283:1},_0b);_.Ne=function a1b(){var a;return a=new _0b,l$b(this,a),a.a=this.a,a.b=this.b,a};_.Oe=function b1b(){return new ZKb};_.Ke=function c1b(){return this.b};_.Le=function d1b(){return this.a};_.Pe=function e1b(a,b){var c;q$b(this,b);c=p$b(this).i;if(a.cZ==YG){XNb(zu(c.a[CZc],227),new qkb(zu(a,237).d));XNb(zu(c.a[DZc],227),new qkb(zu(a,237).b))}XNb(zu(c.a[mYc],227),new qkb(this.Z))};_.a=false;_.b=0;PU(1228,1,nSc);_.zb=function ktc(){lac(this.b,new mtc(this.a))};PU(1229,972,{337:1},mtc);_.nb=function ntc(){var a,b,c,d;this.a=new uRb(70,MHb(this.G.k),1,3000);c7b(this.a._,200);this.b=new _0b;c=new w0b;q0b(c,new l4b(0));u0b(c,(e0b(),b0b));new XAc('./static/models/obj/tree/tree.js',new qtc(this,c));a=new RXb(1,20,10);this.s=new E8b(a,c);_6b(this.s.eb,20);tQb(this.H,this.s);uIb(this.G.k,false);eIb(this.G.k,false);hIb(this.G.k,1297,1);this.j=new r9b;this.i=new hRb(this.G.k.Z,this.G.k.Y,-10000,10000);c7b(this.i._,100);tQb(this.j,this.i);this.n=new tPb(this.G.k.Z,this.G.k.Y);LOb(this.n,(wFb(),qFb));JOb(this.n,(lFb(),jFb));GOb(this.n,(hDb(),gDb));this.o=new tPb(this.G.k.Z,this.G.k.Y);LOb(this.o,qFb);JOb(this.o,jFb);GOb(this.o,gDb);d=~~(this.G.k.Z/4);b=~~(this.G.k.Y/4);this.p=new tPb(d,b);LOb(this.p,qFb);JOb(this.p,jFb);GOb(this.p,gDb);this.q=new tPb(d,b);LOb(this.q,qFb);JOb(this.q,jFb);GOb(this.q,gDb);this.e=new x3b(new Yxc);this.c=new x3b(new Fxc);XNb(zu(USb(p$b(this.c).i,MZc),227),new qkb(0.75));this.d=new x3b(new pyc);i4b(zu(zu(USb(p$b(this.d).i,NZc),227).d,294),1297);i4b(zu(zu(USb(p$b(this.d).i,UYc),227).d,294),16772608);this.k=new E8b(new GXb(this.G.k.Z,this.G.k.Y),this.e);c7b(this.k._,-9900);tQb(this.j,this.k)};_.ob=function otc(a){var b,c,d,e,f,g;f=a/4000;p6b(this.s._,200*qlb(f));c7b(this.s._,200*zlb(f)-100);k6b(this.a._,(this.f-this.a._.c)*0.036);l6b(this.a._,(-this.g-this.a._.d)*0.036);SQb(this.a,this.H._);Z6b(this.r.jf(this.t),this.a);p6b(this.r,(this.r.c+1)/2);q6b(this.r,(this.r.d+1)/2);o6b(zu(zu(USb(p$b(this.e).i,OZc),227).d,298),this.r.c,this.r.d);o6b(zu(zu(USb(p$b(this.d).i,OZc),227).d,298),this.r.c,this.r.d);GHb(this.G.k,this.n);g=this.G.k.Z;b=this.G.k.Y;d=0.74*b;e=0.74*b;p6b(this.r,this.r.c*g);q6b(this.r,this.r.d*b);sIb(this.G.k,Hu(this.r.c-e/2),Hu(this.r.d-d/2),Hu(e),Hu(d));LHb(this.G.k,true);XNb(zu(USb(p$b(this.d).i,PZc),227),new qkb(g/b));q9b(this.j,this.d);YHb(this.G.k,this.j,this.i,this.n,false);LHb(this.G.k,false);q9b(this.H,null);YHb(this.G.k,this.H,this.a,this.n,false);q9b(this.H,this.b);YHb(this.G.k,this.H,this.a,this.o,true);c=wlb(6,-1);XNb(zu(USb(p$b(this.e).i,QZc),227),new qkb(c));XNb(zu(USb(p$b(this.e).i,RZc),227),this.o);q9b(this.j,this.e);YHb(this.G.k,this.j,this.i,this.q,false);c=wlb(6,-2);XNb(zu(USb(p$b(this.e).i,QZc),227),new qkb(c));XNb(zu(USb(p$b(this.e).i,RZc),227),this.q);YHb(this.G.k,this.j,this.i,this.p,false);c=wlb(6,-3);XNb(zu(USb(p$b(this.e).i,QZc),227),new qkb(c));XNb(zu(USb(p$b(this.e).i,RZc),227),this.p);YHb(this.G.k,this.j,this.i,this.q,false);XNb(zu(USb(p$b(this.c).i,SZc),227),this.n);XNb(zu(USb(p$b(this.c).i,TZc),227),this.q);q9b(this.j,this.c);YHb(this.G.k,this.j,this.i,null,false);q9b(this.j,null)};_.f=0;_.g=0;PU(1230,1,{},qtc);_.zf=function rtc(a,b){var c;c=new E8b(b,this.b);a7b(c._,0,-150,-150);_6b(c.eb,400);c.W=false;Z4b(c.V,c._,c.ab,c.eb);c.Y=true;tQb(this.a.H,c)};PU(1319,730,aSc,Fxc);_.Ld=function Gxc(){xJb(this,SZc,new YNb((qOb(),iOb)));xJb(this,TZc,new YNb(iOb));xJb(this,MZc,new ZNb(cOb,new qkb(0.69)));xJb(this,OZc,new ZNb(kOb,new s6b(0.5,0.5)))};var Hxc;PU(1320,1,{},Mxc);_.Od=function Nxc(){return Vxc(),Kxc};_.Pd=function Oxc(){return Wxc(),Lxc};var Kxc,Lxc;PU(1321,1,{},Qxc);_.nc=function Rxc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};PU(1322,1,{},Txc);_.nc=function Uxc(){return UZc};PU(1325,730,aSc,Yxc);_.Ld=function Zxc(){xJb(this,RZc,new YNb((qOb(),iOb)));xJb(this,QZc,new ZNb(cOb,new qkb(1)));xJb(this,OZc,new ZNb(kOb,new s6b(0.5,0.5)))};var $xc;PU(1326,1,{},dyc);_.Od=function eyc(){return myc(),byc};_.Pd=function fyc(){return nyc(),cyc};var byc,cyc;PU(1327,1,{},hyc);_.nc=function iyc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};PU(1328,1,{},kyc);_.nc=function lyc(){return UZc};PU(1331,730,aSc,pyc);_.Ld=function qyc(){xJb(this,OZc,new ZNb((qOb(),kOb),new s6b(0.5,0.5)));xJb(this,PZc,new ZNb(cOb,new qkb(1)));xJb(this,UYc,new ZNb(bOb,new l4b(16772608)));xJb(this,NZc,new ZNb(bOb,new l4b(0)))};var ryc;PU(1332,1,{},wyc);_.Od=function xyc(){return Fyc(),uyc};_.Pd=function yyc(){return Gyc(),vyc};var uyc,vyc;PU(1333,1,{},Ayc);_.nc=function Byc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};PU(1334,1,{},Dyc);_.nc=function Eyc(){return UZc};var jO=ekb(sXc,'PostprocessingGodrays$DemoScene',1229),iO=ekb(sXc,'PostprocessingGodrays$DemoScene$1',1230),UI=ekb(VZc,'MeshDepthMaterial',920),RO=ekb(iXc,'GodRaysGenerateShader',1325),NO=ekb(iXc,'GodRaysCombineShader',1319),VO=ekb(iXc,'GodraysFakeSunShader',1331),eG=ekb(yYc,'DepthShader',748),QO=ekb(iXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1326),OO=ekb(iXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1327),PO=ekb(iXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1328),MO=ekb(iXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1320),KO=ekb(iXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1321),LO=ekb(iXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1322),UO=ekb(iXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1332),SO=ekb(iXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1333),TO=ekb(iXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1334),dG=ekb(yYc,'DepthShader_Resources_default_InlineClientBundleGenerator',749),bG=ekb(yYc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',750),cG=ekb(yYc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',751);BSc(xi)(40);