function evc(){}
function ivc(){}
function lvc(){}
function Dzc(){}
function Hzc(){}
function Kzc(){}
function ilc(a){this.a=a}
function avc(){avc=EQc;_uc=new evc}
function nvc(){nvc=EQc;cvc=new ivc}
function ovc(){ovc=EQc;dvc=new lvc}
function zzc(){zzc=EQc;yzc=new Dzc}
function Mzc(){Mzc=EQc;Bzc=new Hzc}
function Nzc(){Nzc=EQc;Czc=new Kzc}
function uzc(){JJb.call(this,(zzc(),yzc))}
function Zuc(){JJb.call(this,(avc(),_uc))}
function elc(){Lac.call(this);this.d=0;this.e=0}
function dlc(a,b){var c,d,e,f,g,i;d=new YOb(YXc);d.k=4;o6b(d.B,0.998,0.998);o6b(d.A,0.001,0.001);SOb(d,(OGb(),NGb));TOb(d,NGb);GOb(d,(hDb(),fDb));e=new YOb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');o6b(e.B,0.998,0.998);o6b(e.A,0.001,0.001);SOb(e,NGb);TOb(e,NGb);GOb(e,fDb);c=new YOb($Xc);o6b(c.B,0.998,0.998);o6b(c.A,0.001,0.001);SOb(c,NGb);TOb(c,NGb);GOb(c,fDb);g=new uzc;i=g.i;XNb(zu(i.a[_Xc],227),(rjb(),rjb(),qjb));XNb(zu(i.a[aYc],227),qjb);XNb(zu(i.a[bYc],227),a.b.f);XNb(zu(i.a[cYc],227),c);XNb(zu(i.a[dYc],227),d);XNb(zu(i.a[eYc],227),e);i4b(zu(zu(i.a[fYc],227).d,294),10526880);i4b(zu(zu(i.a[gYc],227).d,294),10526880);i4b(zu(zu(i.a[hYc],227).d,294),10526880);XNb(zu(i.a[iYc],227),new qkb(0.145));XNb(zu(i.a[jYc],227),new qkb(0.75));XNb(zu(i.a[kYc],227),new qkb(16));Q7b(zu(zu(i.a[lYc],227).d,302),0.001,0.001,0.998,0.998);f=new x3b(g);f.c=true;a.c=new E8b(b,f);q6b(a.c._,-50);_6b(a.c.eb,100);yQb(a.c,true);a.c.U=true;tQb(a.H,a.c)}
var _Xc='enableBump',bYc='tBeckmann',iYc='uRoughness',jYc='uSpecularBrightness';PU(1118,1,nSc);_.zb=function blc(){lac(this.b,new elc(this.a))};PU(1119,972,{324:1},elc);_.nb=function flc(){var a,b,c,d,e,f,g;this.a=new uRb(27,MHb(this.G.k),1,10000);c7b(this.a._,1200);tQb(this.H,new ZYb(5592405));d=new TZb(16777215,1.5,1000);a7b(d._,0,0,600);tQb(this.H,d);f=new _Zb(1);a7b(f._,0.05,0.05,1);tQb(this.H,f);f._.mf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new AZb(16777215,0.85);a7b(a._,1,-0.5,1);h4b(a.L,0.6,1,0.85);tQb(this.H,a);a._.mf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new AZb(16777215,0.85);a7b(b._,1,-0.5,-1);tQb(this.H,b);new NKc(new Zuc);c=new NKc(new WLc);c.a=true;g=new tPb(512,512);LOb(g,(wFb(),qFb));JOb(g,(lFb(),jFb));GOb(g,(hDb(),fDb));g.f=false;this.b=new CKc(this.G.k,g);new XAc(ZXc,new ilc(this));iIb(this.G.k,new l4b(5001561),1);e=new bHb(this.G.k,this.H);e.g=false;eIb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function glc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){r4b(this.c.cb,0.05*(b-this.c.cb.d));q4b(this.c.cb,0.05*(c-this.c.cb.c))}FHb(this.G.k,true);YHb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;PU(1120,1,{},ilc);_.zf=function jlc(a,b){dlc(this.a,zu(b,243))};PU(1252,730,aSc,Zuc);_.Ld=function $uc(){};var _uc;PU(1253,1,{},evc);_.Od=function fvc(){return nvc(),cvc};_.Pd=function gvc(){return ovc(),dvc};var cvc,dvc;PU(1254,1,{},ivc);_.nc=function jvc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};PU(1255,1,{},lvc);_.nc=function mvc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};PU(1350,730,aSc,uzc);_.Ld=function vzc(){EJb(this,uOb());EJb(this,vOb());EJb(this,wOb());xJb(this,_Xc,new ZNb((qOb(),fOb),Ykb(0)));xJb(this,aYc,new ZNb(fOb,Ykb(0)));xJb(this,cYc,new YNb(iOb));xJb(this,bYc,new YNb(iOb));xJb(this,gYc,new ZNb(bOb,new l4b(15658734)));xJb(this,hYc,new ZNb(bOb,new l4b(1118481)));xJb(this,fYc,new ZNb(bOb,new l4b(328965)));xJb(this,mYc,new ZNb(cOb,new qkb(1)));xJb(this,iYc,new ZNb(cOb,new qkb(0.15)));xJb(this,jYc,new ZNb(cOb,new qkb(0.75)));xJb(this,dYc,new YNb(iOb));xJb(this,kYc,new ZNb(cOb,new qkb(1)));xJb(this,eYc,new YNb(iOb));xJb(this,lYc,new ZNb(oOb,new U7b(0,0,1,1)));xJb(this,'uWrapRGB',new ZNb(mOb,new g7b(0.75,0.375,0.1875)))};_.Md=function wzc(a){var b,c;c=new Brb(pu(KS,JQc,1,[nYc,oYc,pYc]));b=new Brb(pu(KS,JQc,1,[qYc,rYc,sYc]));GJb(this,OJb(a,pu(NS,JQc,173,[c,b])))};_.Nd=function xzc(a){var b,c;c=new Brb(pu(KS,JQc,1,[tYc]));b=new Brb(pu(KS,JQc,1,[uYc]));HJb(this,OJb(a,pu(NS,JQc,173,[c,b])))};var yzc;PU(1351,1,{},Dzc);_.Od=function Ezc(){return Mzc(),Bzc};_.Pd=function Fzc(){return Nzc(),Czc};var Bzc,Czc;PU(1352,1,{},Hzc);_.nc=function Izc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};PU(1353,1,{},Kzc);_.nc=function Lzc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var nM=ekb(pXc,'MaterialsBumpmapSkin$DemoScene',1119),mM=ekb(pXc,'MaterialsBumpmapSkin$DemoScene$1',1120),HO=ekb(iXc,'BeckmannShader',1252),GO=ekb(iXc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1253),EO=ekb(iXc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1254),FO=ekb(iXc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1255),gP=ekb(iXc,'SkinSimpleShader',1350),fP=ekb(iXc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1351),dP=ekb(iXc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1352),eP=ekb(iXc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1353);BSc(xi)(18);