function Ctc(){}
function Gtc(){}
function Jtc(){}
function Lyc(){}
function Pyc(){}
function Syc(){}
function yJc(){}
function CJc(){}
function FJc(){}
function UKc(){}
function YKc(){}
function _Kc(){}
function _Lc(){}
function lLc(){}
function pLc(){}
function sLc(){}
function ELc(){}
function ILc(){}
function LLc(){}
function XLc(){}
function cMc(){}
function aZb(a,b){a.c=b}
function X7b(a,b){a.n=b}
function cJc(a,b){Qqb(a.c,b)}
function ptc(a){this.b=a}
function stc(a){this.b=a}
function vtc(a){this.b=a}
function ytc(){ytc=YMc;xtc=new Ctc}
function Ltc(){Ltc=YMc;Atc=new Gtc}
function Mtc(){Mtc=YMc;Btc=new Jtc}
function Hyc(){Hyc=YMc;Gyc=new Lyc}
function Uyc(){Uyc=YMc;Jyc=new Pyc}
function Vyc(){Vyc=YMc;Kyc=new Syc}
function uJc(){uJc=YMc;tJc=new yJc}
function HJc(){HJc=YMc;wJc=new CJc}
function IJc(){IJc=YMc;xJc=new FJc}
function QKc(){QKc=YMc;PKc=new UKc}
function bLc(){bLc=YMc;SKc=new YKc}
function cLc(){cLc=YMc;TKc=new _Kc}
function hLc(){hLc=YMc;gLc=new lLc}
function uLc(){uLc=YMc;jLc=new pLc}
function vLc(){vLc=YMc;kLc=new sLc}
function ALc(){ALc=YMc;zLc=new ELc}
function NLc(){NLc=YMc;CLc=new ILc}
function OLc(){OLc=YMc;DLc=new LLc}
function TLc(){TLc=YMc;SLc=new XLc}
function eMc(){eMc=YMc;VLc=new _Lc}
function fMc(){fMc=YMc;WLc=new cMc}
function mtc(a,b){this.b=a;this.c=b}
function Cyc(){ZIb.call(this,(Hyc(),Gyc))}
function rJc(){ZIb.call(this,(uJc(),tJc))}
function NKc(){ZIb.call(this,(QKc(),PKc))}
function eLc(){ZIb.call(this,(hLc(),gLc))}
function xLc(){ZIb.call(this,(ALc(),zLc))}
function QLc(){ZIb.call(this,(TLc(),SLc))}
function ftc(a){a.A+=1;a.A==3&&TPb(a.w,true)}
function gtc(){V9b.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function etc(a,b,c,d){var e,f,g;g=new I2b(b);lNb(Xu(fSb(AZb(g).j,vUc),225),c);f=new B8b;e=new P7b(new UWb(a.v,a.u),g);n6b(e.ab,-500);JPb(f,e);mHb(a.H.n,f,a.d,d,true)}
function dtc(a,b,c,d,e,f){var g,i;g=new A0b;t0b(g,new w3b(16755285));g.k=true;y0b(g,(s$b(),p$b));i=new Z7b(b,g);i.e=c;X7b(i,dv(600*rlb()));l6b(i.ab,d,e,f);K3b(i.db,1.5707963267948966);i.T=true;i.V=true;JPb(a.I,i);Qqb(a.o,i)}
var MVc='enableDiffuse1',NVc='enableDiffuse2',FVc='h',HVc='heightMap',SVc='heightmap',RVc='offset',TVc='r',LVc='tDetail',JVc='tDiffuse1',KVc='tDiffuse2',PVc='uRepeatOverlay',GVc='v';JU(1237,1,IOc);_.Db=function btc(){v9b(this.c,new gtc(this.b))};JU(1238,973,{78:1,186:1,337:1},gtc);_.$d=function htc(a){ftc(this)};_.Md=function itc(a){this.v=a.b.$;this.u=a.b.Z;lNb(Xu(fSb(AZb(this.g.c).j,FVc),225),new kkb(6/this.v));lNb(Xu(fSb(AZb(this.F.c).j,GVc),225),new kkb(6/this.u))};_.ob=function jtc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Mt((eyb(),dyb),(oyb(),nyb),this);this.c=new JQb(40,aHb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new wQb(this.v,this.u,-10000,10000);l6b(this.c.ab,-1200,800,1200);n6b(this.d.ab,100);this.t=new B8b;JPb(this.t,this.d);this.e=new jxb(this.c,this.H.d);k6b(this.e.w,0);this.e.t=1;this.e.B=1.2;gxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;exb(this.e,0.15);A8b(this.I,new q8b(328965,2000,4000));JPb(this.I,new iYb(1118481));this.f=new LYb(16777215,1.15);l6b(this.f.ab,500,2000,0);JPb(this.I,this.f);this.r=new cZb(16729088,1.5,0);k6b(this.r.ab,0);JPb(this.I,this.r);this.i=new JOb(256,256);_Nb(this.i,(NEb(),IEb));ZNb(this.i,(CEb(),AEb));WNb(this.i,(YCb(),WCb));XNb(this.i,false);this.p=new JOb(256,256);_Nb(this.p,IEb);ZNb(this.p,AEb);WNb(this.p,WCb);XNb(this.p,false);n=new xLc;u=n.j;lNb(Xu(u.b[nRc],225),new kkb(0.05));z5b(Xu(Xu(u.b[aVc],225).e,296),256,256);lNb(Xu(u.b[HVc],225),this.i);s=new JOb(2048,2048);_Nb(s,IEb);ZNb(s,AEb);WNb(s,WCb);s.s=false;gOb(s,(dGb(),cGb));hOb(s,cGb);c=new nOb('./static/textures/terrain/grasslight-big.jpg',new mtc(this,s));gOb(c,cGb);hOb(c,cGb);d=new nOb('./static/textures/terrain/backgrounddetailed6.jpg',this);gOb(d,cGb);hOb(d,cGb);b=new nOb('./static/textures/terrain/grasslight-big-nm.jpg',this);gOb(b,cGb);hOb(b,cGb);t=new Cyc;this.C=t.j;lNb(Xu(fSb(this.C,WUc),225),this.p);lNb(Xu(fSb(this.C,XUc),225),new kkb(3.5));lNb(Xu(fSb(this.C,IVc),225),this.i);lNb(Xu(fSb(this.C,JVc),225),c);lNb(Xu(fSb(this.C,KVc),225),d);lNb(Xu(fSb(this.C,YUc),225),s);lNb(Xu(fSb(this.C,LVc),225),b);lNb(Xu(fSb(this.C,MVc),225),(ljb(),ljb(),kjb));lNb(Xu(fSb(this.C,NVc),225),kjb);lNb(Xu(fSb(this.C,tUc),225),kjb);t3b(Xu(Xu(fSb(this.C,zUc),225).e,292),16777215);t3b(Xu(Xu(fSb(this.C,AUc),225).e,292),16777215);t3b(Xu(Xu(fSb(this.C,yUc),225).e,292),1118481);lNb(Xu(fSb(this.C,_Uc),225),new kkb(30));lNb(Xu(fSb(this.C,OVc),225),new kkb(375));z5b(Xu(Xu(fSb(this.C,PVc),225).e,296),6,6);this.B=new Itb;epb(this.B,dVc,new nNb((GNb(),sNb),new kkb(1)));epb(this.B,QVc,new nNb(ANb,new D5b(1.5,1.5)));epb(this.B,RVc,new nNb(ANb,new D5b(0,0)));this.n=new Itb;i=new H2b((ytc(),xtc));UIb(AZb(i),this.B);i.d=false;i.c=true;epb(this.n,SVc,i);j=new I2b(n);UIb(AZb(j),u);j.d=false;j.c=true;epb(this.n,oUc,j);k=new I2b(t);UIb(AZb(k),this.C);k.d=true;k.c=true;epb(this.n,'terrain',k);o=new UWb(this.v,this.u);p=new H_b;B_b(p,new w3b(0));this.s=new P7b(o,p);n6b(this.s.ab,-500);JPb(this.t,this.s);g=new VWb(6000,6000,64,64);kRb(g);this.w=new P7b(g,k);l6b(this.w.ab,0,-125,0);J3b(this.w.db,-1.5707963267948966);TPb(this.w,false);JPb(this.I,this.w);yHb(this.H.n,this.I.c.d,1);this.H.n.bb=true;this.H.n.cb=true;uHb(this.H.n,false);q=new lJc(this.I,this.c);f=new YIc(0.6);e=new oJc(new rJc);lNb(Xu(fSb(AZb(e.c).j,FUc),225),new kkb(0.65));this.g=new oJc(new NKc);this.F=new oJc(new QLc);lNb(Xu(fSb(AZb(this.g.c).j,FVc),225),new kkb(6/this.v));lNb(Xu(fSb(AZb(this.F.c).j,GVc),225),new kkb(6/this.u));lNb(Xu(fSb(AZb(this.g.c).j,TVc),225),new kkb(0.5));lNb(Xu(fSb(AZb(this.F.c).j,TVc),225),new kkb(0.5));this.F.b=true;r=new JOb(this.v,this.u);_Nb(s,HEb);ZNb(s,AEb);WNb(s,WCb);s.g=false;s.s=false;a=new eJc(this.H.n,r);Qqb(a.c,q);Qqb(a.c,f);Qqb(a.c,e);cJc(a,this.g);cJc(a,this.F);this.o=new $qb;new Kzc('./static/models/animated/parrot.js',new ptc(this));new Kzc(EVc,new stc(this));new Kzc('./static/models/animated/stork.js',new vtc(this));this.q=Ch()};_.pb=function ktc(a){var b,c,d,e,f;b=(Ch()-this.q)*0.001;if(this.w.hb){hxb(this.e);this.k=T3b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;s3b(this.I.c.d,0.1,e,this.k);yHb(this.H.n,this.I.c.d,1);sYb(this.f,0.1+f*1.0499999999999998);aZb(this.r,0.9+f*0.6);lNb(Xu(fSb(this.C,XUc),225),new kkb(0.6+f*2.9));if(this.D){this.b=T3b(this.b+-7.5E-4,0,0.05);lNb(Xu(_ob(this.B,dVc),225),new kkb(Xu(Xu(_ob(this.B,dVc),225).e,150).b+b*this.b));v5b(Xu(Xu(_ob(this.B,RVc),225).e,296),b*0.05);A5b(Xu(Xu(fSb(this.C,UVc),225).e,296),4*Xu(Xu(_ob(this.B,RVc),225).e,296).d);nTb(this.s,Xu(_ob(this.n,SVc),281));mHb(this.H.n,this.t,this.d,this.i,true);nTb(this.s,Xu(_ob(this.n,oUc),281));mHb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Xu(Tqb(this.o,c),304);Y7b(d,dv(1000*b));v5b(d.ab,d.e*b);d.ab.d>2000&&A5b(d.ab,-1500-rlb()*500)}mHb(this.H.n,this.I,this.c,null,false)}this.q=Ch()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;JU(1239,1,{},mtc);_.$d=function ntc(a){ftc(this.b);etc(this.b,new eLc,a,this.c)};JU(1240,1,{},ptc);_.Ff=function qtc(a,b){Fzc((Xu(a,338),Xu(b,241)));dtc(this.b,Xu(b,241),500,-3500,500,700);dtc(this.b,Xu(b,241),500,-3000-rlb()*500,500,-200);dtc(this.b,Xu(b,241),500,-3000-rlb()*500,500,200);dtc(this.b,Xu(b,241),500,-3000-rlb()*500,500,1000)};JU(1241,1,{},stc);_.Ff=function ttc(a,b){Fzc((Xu(a,338),Xu(b,241)));dtc(this.b,Xu(b,241),1000,-3000-rlb()*500,350,40)};JU(1242,1,{},vtc);_.Ff=function wtc(a,b){Fzc((Xu(a,338),Xu(b,241)));dtc(this.b,Xu(b,241),1000,-3000-rlb()*500,350,340)};var xtc;JU(1243,1,{},Ctc);_.Ud=function Dtc(){return Ltc(),Atc};_.Vd=function Etc(){return Mtc(),Btc};var Atc,Btc;JU(1244,1,{},Gtc);_.tc=function Htc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};JU(1245,1,{},Jtc);_.tc=function Ktc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};JU(1351,731,vOc,Cyc);_.Rd=function Dyc(){UIb(this,KNb());UIb(this,LNb());UIb(this,MNb());NIb(this,MVc,new nNb((GNb(),vNb),(ljb(),ljb(),jjb)));NIb(this,NVc,new nNb(vNb,jjb));NIb(this,tUc,new nNb(vNb,jjb));NIb(this,VVc,new nNb(vNb,jjb));NIb(this,JVc,new mNb(yNb));NIb(this,KVc,new mNb(yNb));NIb(this,LVc,new mNb(yNb));NIb(this,WUc,new mNb(yNb));NIb(this,YUc,new mNb(yNb));NIb(this,IVc,new mNb(yNb));NIb(this,XUc,new nNb(sNb,new kkb(1)));NIb(this,WVc,new nNb(sNb,new kkb(0)));NIb(this,OVc,new nNb(sNb,new kkb(1)));NIb(this,zUc,new nNb(rNb,new w3b(15658734)));NIb(this,AUc,new nNb(rNb,new w3b(1118481)));NIb(this,yUc,new nNb(rNb,new w3b(328965)));NIb(this,_Uc,new nNb(sNb,new kkb(30)));NIb(this,FUc,new nNb(sNb,new kkb(1)));NIb(this,'uRepeatBase',new nNb(ANb,new D5b(1,1)));NIb(this,PVc,new nNb(ANb,new D5b(1,1)));NIb(this,UVc,new nNb(ANb,new D5b(0,0)))};_.Sd=function Eyc(a){var b,c;c=new wrb(Nu(GS,cNc,1,[GUc,HUc]));b=new wrb(Nu(GS,cNc,1,[JUc,KUc,LUc]));WIb(this,cJb(a,Nu(JS,cNc,173,[c,b])))};_.Td=function Fyc(a){var b,c;c=new wrb(Nu(GS,cNc,1,[MUc]));b=new wrb(Nu(GS,cNc,1,[NUc]));XIb(this,cJb(a,Nu(JS,cNc,173,[c,b])))};var Gyc;JU(1352,1,{},Lyc);_.Ud=function Myc(){return Uyc(),Jyc};_.Vd=function Nyc(){return Vyc(),Kyc};var Jyc,Kyc;JU(1353,1,{},Pyc);_.tc=function Qyc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};JU(1354,1,{},Syc);_.tc=function Tyc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};JU(1446,731,vOc,rJc);_.Rd=function sJc(){NIb(this,vUc,new mNb((GNb(),yNb)));NIb(this,FUc,new nNb(sNb,new kkb(1)))};var tJc;JU(1447,1,{},yJc);_.Ud=function zJc(){return HJc(),wJc};_.Vd=function AJc(){return IJc(),xJc};var wJc,xJc;JU(1448,1,{},CJc);_.tc=function DJc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};JU(1449,1,{},FJc);_.tc=function GJc(){return lVc};JU(1470,731,vOc,NKc);_.Rd=function OKc(){NIb(this,vUc,new mNb((GNb(),yNb)));NIb(this,FVc,new nNb(sNb,new kkb(0.001953125)));NIb(this,TVc,new nNb(sNb,new kkb(0.35)))};var PKc;JU(1471,1,{},UKc);_.Ud=function VKc(){return bLc(),SKc};_.Vd=function WKc(){return cLc(),TKc};var SKc,TKc;JU(1472,1,{},YKc);_.tc=function ZKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};JU(1473,1,{},_Kc);_.tc=function aLc(){return lVc};JU(1476,731,vOc,eLc);_.Rd=function fLc(){NIb(this,vUc,new mNb((GNb(),yNb)))};var gLc;JU(1477,1,{},lLc);_.Ud=function mLc(){return uLc(),jLc};_.Vd=function nLc(){return vLc(),kLc};var jLc,kLc;JU(1478,1,{},pLc);_.tc=function qLc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};JU(1479,1,{},sLc);_.tc=function tLc(){return lVc};JU(1482,731,vOc,xLc);_.Rd=function yLc(){NIb(this,HVc,new mNb((GNb(),yNb)));NIb(this,aVc,new nNb(ANb,new D5b(512,512)));NIb(this,QVc,new nNb(ANb,new D5b(1,1)));NIb(this,nRc,new nNb(sNb,new kkb(0.05)))};var zLc;JU(1483,1,{},ELc);_.Ud=function FLc(){return NLc(),CLc};_.Vd=function GLc(){return OLc(),DLc};var CLc,DLc;JU(1484,1,{},ILc);_.tc=function JLc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};JU(1485,1,{},LLc);_.tc=function MLc(){return lVc};JU(1488,731,vOc,QLc);_.Rd=function RLc(){NIb(this,vUc,new mNb((GNb(),yNb)));NIb(this,GVc,new nNb(sNb,new kkb(0.001953125)));NIb(this,TVc,new nNb(sNb,new kkb(0.35)))};var SLc;JU(1489,1,{},XLc);_.Ud=function YLc(){return eMc(),VLc};_.Vd=function ZLc(){return fMc(),WLc};var VLc,WLc;JU(1490,1,{},_Lc);_.tc=function aMc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};JU(1491,1,{},cMc);_.tc=function dMc(){return lVc};var XO=$jb(LTc,'TerrainDynamic$DemoScene',1238),TO=$jb(LTc,'TerrainDynamic$DemoScene$1',1239),UO=$jb(LTc,'TerrainDynamic$DemoScene$2',1240),VO=$jb(LTc,'TerrainDynamic$DemoScene$3',1241),WO=$jb(LTc,'TerrainDynamic$DemoScene$4',1242),KR=$jb(nVc,XVc,1482),IP=$jb(BTc,'TerrainShader',1351),mR=$jb(nVc,'BleachBypassShader',1446),CR=$jb(nVc,'HorizontalTiltShiftShader',1470),OR=$jb(nVc,'VerticalTiltShiftShader',1488),$O=$jb(LTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1243),YO=$jb(LTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1244),ZO=$jb(LTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1245),JR=$jb(nVc,YVc,1483),HR=$jb(nVc,ZVc,1484),IR=$jb(nVc,$Vc,1485),HP=$jb(BTc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1352),FP=$jb(BTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1353),GP=$jb(BTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1354),lR=$jb(nVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1447),jR=$jb(nVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1448),kR=$jb(nVc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1449),BR=$jb(nVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1471),zR=$jb(nVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1472),AR=$jb(nVc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1473),NR=$jb(nVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1489),LR=$jb(nVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1490),MR=$jb(nVc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1491),GR=$jb(nVc,'LuminosityShader',1476),FR=$jb(nVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1477),DR=$jb(nVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1478),ER=$jb(nVc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1479);WOc(Ii)(38);