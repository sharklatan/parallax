function LLb(){}
function PLb(){}
function SLb(){}
function myc(){}
function qyc(){}
function tyc(){}
function Fyc(){}
function Jyc(){}
function Myc(){}
function Yyc(){}
function azc(){}
function dzc(){}
function V9b(a,b){a.d=b}
function VLb(){VLb=eRc;KLb=new SLb}
function HLb(){HLb=eRc;GLb=new LLb}
function ULb(){ULb=eRc;JLb=new PLb}
function Uyc(){Uyc=eRc;Tyc=new Yyc}
function iyc(){iyc=eRc;hyc=new myc}
function vyc(){vyc=eRc;kyc=new qyc}
function wyc(){wyc=eRc;lyc=new tyc}
function Byc(){Byc=eRc;Ayc=new Fyc}
function Oyc(){Oyc=eRc;Dyc=new Jyc}
function Pyc(){Pyc=eRc;Eyc=new Myc}
function fzc(){fzc=eRc;Wyc=new azc}
function gzc(){gzc=eRc;Xyc=new dzc}
function Stc(a,b){this.b=a;this.c=b}
function jIb(a,b){WIb(a,b);iIb(a,false)}
function CLb(){mKb.call(this,(HLb(),GLb))}
function fyc(){mKb.call(this,(iyc(),hyc))}
function yyc(){mKb.call(this,(Byc(),Ayc))}
function Ryc(){mKb.call(this,(Uyc(),Tyc))}
function E1b(){g_b.call(this);this.b=false;this.c=1}
function Otc(){obc.call(this);this.u=new L7b(0,1000,-1000);this.s=new K7b}
function C7b(a,b){var c;c=new U5b;S5b(c,b.q,H5b(c,b.Y));return u7b(a,c)}
var n$c='bgColor',p$c='fAspect',m$c='fGodRayIntensity',q$c='fStepSize',d$c='mFar',c$c='mNear',s$c='tColors',t$c='tGodRays',r$c='tInput',o$c='vSunPositionScreenSpace',u$c='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';rV(751,733,DSc,CLb);_.Rd=function DLb(){aKb(this,c$c,new COb((VOb(),HOb),new Ukb(1)));aKb(this,d$c,new COb(HOb,new Ukb(2000)));aKb(this,OYc,new COb(HOb,new Ukb(1)))};_.Sd=function ELb(a){var b,c;c=new esb(Nu(mT,kRc,1,[e$c]));b=new esb(Nu(mT,kRc,1,[f$c]));jKb(this,rKb(a,Nu(pT,kRc,173,[c,b])))};_.Td=function FLb(a){var b,c;c=new esb(Nu(mT,kRc,1,[g$c,h$c]));b=new esb(Nu(mT,kRc,1,[i$c,j$c,k$c]));kKb(this,rKb(a,Nu(pT,kRc,173,[c,b])))};var GLb;rV(752,1,{},LLb);_.Ud=function MLb(){return ULb(),JLb};_.Vd=function NLb(){return VLb(),KLb};var JLb,KLb;rV(753,1,{},PLb);_.tc=function QLb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};rV(754,1,{},SLb);_.tc=function TLb(){return l$c};rV(923,916,{280:1,283:1},E1b);_.Te=function F1b(){var a;return a=new E1b,Q$b(this,a),a.b=this.b,a.c=this.c,a};_.Ue=function G1b(){return new CLb};_.Qe=function H1b(){return this.c};_.Re=function I1b(){return this.b};_.Ve=function J1b(a,b){var c;V$b(this,b);c=U$b(this).j;if(a.cZ==BH){AOb(Xu(c.b[c$c],227),new Ukb(Xu(a,237).e));AOb(Xu(c.b[d$c],227),new Ukb(Xu(a,237).c))}AOb(Xu(c.b[OYc],227),new Ukb(this.$))};_.b=false;_.c=0;rV(1230,1,QSc);_.Db=function Mtc(){Qac(this.c,new Otc(this.b))};rV(1231,975,{337:1},Otc);_.ob=function Ptc(){var a,b,c,d;this.b=new ZRb(70,pIb(this.H.n),1,3000);H7b(this.b.ab,200);this.c=new E1b;c=new _0b;V0b(c,new Q4b(0));Z0b(c,(J0b(),G0b));new xBc('./static/models/obj/tree/tree.js',new Stc(this,c));a=new uYb(1,20,10);this.t=new h9b(a,c);E7b(this.t.fb,20);YQb(this.I,this.t);ZIb(this.H.n,false);JIb(this.H.n,false);MIb(this.H.n,1297,1);this.k=new W9b;this.j=new MRb(this.H.n.$,this.H.n.Z,-10000,10000);H7b(this.j.ab,100);YQb(this.k,this.j);this.o=new YPb(this.H.n.$,this.H.n.Z);oPb(this.o,(_Fb(),VFb));mPb(this.o,(QFb(),OFb));jPb(this.o,(MDb(),LDb));this.p=new YPb(this.H.n.$,this.H.n.Z);oPb(this.p,VFb);mPb(this.p,OFb);jPb(this.p,LDb);d=~~(this.H.n.$/4);b=~~(this.H.n.Z/4);this.q=new YPb(d,b);oPb(this.q,VFb);mPb(this.q,OFb);jPb(this.q,LDb);this.r=new YPb(d,b);oPb(this.r,VFb);mPb(this.r,OFb);jPb(this.r,LDb);this.f=new a4b(new yyc);this.d=new a4b(new fyc);AOb(Xu(xTb(U$b(this.d).j,m$c),227),new Ukb(0.75));this.e=new a4b(new Ryc);N4b(Xu(Xu(xTb(U$b(this.e).j,n$c),227).e,294),1297);N4b(Xu(Xu(xTb(U$b(this.e).j,uZc),227).e,294),16772608);this.n=new h9b(new jYb(this.H.n.$,this.H.n.Z),this.f);H7b(this.n.ab,-9900);YQb(this.k,this.n)};_.pb=function Qtc(a){var b,c,d,e,f,g;f=a/4000;U6b(this.t.ab,200*Ulb(f));H7b(this.t.ab,200*bmb(f)-100);P6b(this.b.ab,(this.g-this.b.ab.d)*0.036);Q6b(this.b.ab,(-this.i-this.b.ab.e)*0.036);vRb(this.b,this.I.ab);C7b(this.s.pf(this.u),this.b);U6b(this.s,(this.s.d+1)/2);V6b(this.s,(this.s.e+1)/2);T6b(Xu(Xu(xTb(U$b(this.f).j,o$c),227).e,298),this.s.d,this.s.e);T6b(Xu(Xu(xTb(U$b(this.e).j,o$c),227).e,298),this.s.d,this.s.e);jIb(this.H.n,this.o);g=this.H.n.$;b=this.H.n.Z;d=0.74*b;e=0.74*b;U6b(this.s,this.s.d*g);V6b(this.s,this.s.e*b);XIb(this.H.n,dv(this.s.d-e/2),dv(this.s.e-d/2),dv(e),dv(d));oIb(this.H.n,true);AOb(Xu(xTb(U$b(this.e).j,p$c),227),new Ukb(g/b));V9b(this.k,this.e);BIb(this.H.n,this.k,this.j,this.o,false);oIb(this.H.n,false);V9b(this.I,null);BIb(this.H.n,this.I,this.b,this.o,false);V9b(this.I,this.c);BIb(this.H.n,this.I,this.b,this.p,true);c=$lb(6,-1);AOb(Xu(xTb(U$b(this.f).j,q$c),227),new Ukb(c));AOb(Xu(xTb(U$b(this.f).j,r$c),227),this.p);V9b(this.k,this.f);BIb(this.H.n,this.k,this.j,this.r,false);c=$lb(6,-2);AOb(Xu(xTb(U$b(this.f).j,q$c),227),new Ukb(c));AOb(Xu(xTb(U$b(this.f).j,r$c),227),this.r);BIb(this.H.n,this.k,this.j,this.q,false);c=$lb(6,-3);AOb(Xu(xTb(U$b(this.f).j,q$c),227),new Ukb(c));AOb(Xu(xTb(U$b(this.f).j,r$c),227),this.q);BIb(this.H.n,this.k,this.j,this.r,false);AOb(Xu(xTb(U$b(this.d).j,s$c),227),this.o);AOb(Xu(xTb(U$b(this.d).j,t$c),227),this.r);V9b(this.k,this.d);BIb(this.H.n,this.k,this.j,null,false);V9b(this.k,null)};_.g=0;_.i=0;rV(1232,1,{},Stc);_.Ff=function Ttc(a,b){var c;c=new h9b(b,this.c);F7b(c.ab,0,-150,-150);E7b(c.fb,400);c.X=false;C5b(c.W,c.ab,c.bb,c.fb);c.Z=true;YQb(this.b.I,c)};rV(1321,733,DSc,fyc);_.Rd=function gyc(){aKb(this,s$c,new BOb((VOb(),NOb)));aKb(this,t$c,new BOb(NOb));aKb(this,m$c,new COb(HOb,new Ukb(0.69)));aKb(this,o$c,new COb(POb,new X6b(0.5,0.5)))};var hyc;rV(1322,1,{},myc);_.Ud=function nyc(){return vyc(),kyc};_.Vd=function oyc(){return wyc(),lyc};var kyc,lyc;rV(1323,1,{},qyc);_.tc=function ryc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};rV(1324,1,{},tyc);_.tc=function uyc(){return u$c};rV(1327,733,DSc,yyc);_.Rd=function zyc(){aKb(this,r$c,new BOb((VOb(),NOb)));aKb(this,q$c,new COb(HOb,new Ukb(1)));aKb(this,o$c,new COb(POb,new X6b(0.5,0.5)))};var Ayc;rV(1328,1,{},Fyc);_.Ud=function Gyc(){return Oyc(),Dyc};_.Vd=function Hyc(){return Pyc(),Eyc};var Dyc,Eyc;rV(1329,1,{},Jyc);_.tc=function Kyc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};rV(1330,1,{},Myc);_.tc=function Nyc(){return u$c};rV(1333,733,DSc,Ryc);_.Rd=function Syc(){aKb(this,o$c,new COb((VOb(),POb),new X6b(0.5,0.5)));aKb(this,p$c,new COb(HOb,new Ukb(1)));aKb(this,uZc,new COb(GOb,new Q4b(16772608)));aKb(this,n$c,new COb(GOb,new Q4b(0)))};var Tyc;rV(1334,1,{},Yyc);_.Ud=function Zyc(){return fzc(),Wyc};_.Vd=function $yc(){return gzc(),Xyc};var Wyc,Xyc;rV(1335,1,{},azc);_.tc=function bzc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};rV(1336,1,{},dzc);_.tc=function ezc(){return u$c};var NO=Ikb(UXc,'PostprocessingGodrays$DemoScene',1231),MO=Ikb(UXc,'PostprocessingGodrays$DemoScene$1',1232),xJ=Ikb(v$c,'MeshDepthMaterial',923),tP=Ikb(KXc,'GodRaysGenerateShader',1327),pP=Ikb(KXc,'GodRaysCombineShader',1321),xP=Ikb(KXc,'GodraysFakeSunShader',1333),JG=Ikb($Yc,'DepthShader',751),sP=Ikb(KXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1328),qP=Ikb(KXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1329),rP=Ikb(KXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1330),oP=Ikb(KXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1322),mP=Ikb(KXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1323),nP=Ikb(KXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1324),wP=Ikb(KXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1334),uP=Ikb(KXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1335),vP=Ikb(KXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1336),IG=Ikb($Yc,'DepthShader_Resources_default_InlineClientBundleGenerator',752),GG=Ikb($Yc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',753),HG=Ikb($Yc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',754);cTc(Ii)(40);