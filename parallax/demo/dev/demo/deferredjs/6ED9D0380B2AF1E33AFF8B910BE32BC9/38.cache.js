function nvc(){}
function rvc(){}
function uvc(){}
function uOc(){}
function bOc(){}
function eOc(){}
function qOc(){}
function xOc(){}
function JOc(){}
function NOc(){}
function QOc(){}
function QPc(){}
function MPc(){}
function TPc(){}
function yAc(){}
function CAc(){}
function FAc(){}
function ZNc(){}
function u$b(a,b){a.c=b}
function p9b(a,b){a.n=b}
function avc(a){this.b=a}
function dvc(a){this.b=a}
function gvc(a){this.b=a}
function jvc(){jvc=eRc;ivc=new nvc}
function wvc(){wvc=eRc;lvc=new rvc}
function xvc(){xvc=eRc;mvc=new uvc}
function zOc(){zOc=eRc;oOc=new uOc}
function mOc(){mOc=eRc;lOc=new qOc}
function AOc(){AOc=eRc;pOc=new xOc}
function FOc(){FOc=eRc;EOc=new JOc}
function SOc(){SOc=eRc;HOc=new NOc}
function TOc(){TOc=eRc;IOc=new QOc}
function gOc(){gOc=eRc;XNc=new bOc}
function hOc(){hOc=eRc;YNc=new eOc}
function VNc(){VNc=eRc;UNc=new ZNc}
function VPc(){VPc=eRc;KPc=new QPc}
function IPc(){IPc=eRc;HPc=new MPc}
function WPc(){WPc=eRc;LPc=new TPc}
function uAc(){uAc=eRc;tAc=new yAc}
function HAc(){HAc=eRc;wAc=new CAc}
function IAc(){IAc=eRc;xAc=new FAc}
function Zuc(a,b){this.b=a;this.c=b}
function pAc(){mKb.call(this,(uAc(),tAc))}
function SNc(){mKb.call(this,(VNc(),UNc))}
function jOc(){mKb.call(this,(mOc(),lOc))}
function COc(){mKb.call(this,(FOc(),EOc))}
function FPc(){mKb.call(this,(IPc(),HPc))}
function Suc(a){a.A+=1;a.A==3&&hRb(a.w,true)}
function Tuc(){obc.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function Ruc(a,b,c,d){var e,f,g;g=new a4b(b);AOb(Xu(xTb(U$b(g).j,EYc),227),c);f=new W9b;e=new h9b(new mYb(a.v,a.u),g);H7b(e.ab,-500);YQb(f,e);BIb(a.H.n,f,a.d,d,true)}
function Quc(a,b,c,d,e,f){var g,i;g=new U1b;N1b(g,new Q4b(16755285));g.k=true;S1b(g,(M_b(),J_b));i=new r9b(b,g);i.e=c;p9b(i,dv(600*_lb()));F7b(i.ab,d,e,f);c5b(i.db,1.5707963267948966);i.T=true;i.V=true;YQb(a.I,i);yrb(a.o,i)}
var OZc='enableDiffuse1',PZc='enableDiffuse2',JZc='heightMap',UZc='heightmap',VZc='r',NZc='tDetail',LZc='tDiffuse1',MZc='tDiffuse2',RZc='uRepeatOverlay';rV(1243,1,QSc);_.Db=function Ouc(){Qac(this.c,new Tuc(this.b))};rV(1244,975,{78:1,186:1,339:1},Tuc);_.$d=function Uuc(a){Suc(this)};_.Md=function Vuc(a){this.v=a.b.$;this.u=a.b.Z;AOb(Xu(xTb(U$b(this.g.c).j,HZc),227),new Ukb(6/this.v));AOb(Xu(xTb(U$b(this.F.c).j,IZc),227),new Ukb(6/this.u))};_.ob=function Wuc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Mt((Oyb(),Nyb),(Yyb(),Xyb),this);this.c=new ZRb(40,pIb(this.H.n),2,4000);this.v=this.H.n.$;this.u=this.H.n.Z;this.d=new MRb(this.v,this.u,-10000,10000);F7b(this.c.ab,-1200,800,1200);H7b(this.d.ab,100);this.t=new W9b;YQb(this.t,this.d);this.e=new Txb(this.c,this.H.d);E7b(this.e.w,0);this.e.t=1;this.e.B=1.2;Qxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;Oxb(this.e,0.15);U9b(this.I,new K9b(328965,2000,4000));YQb(this.I,new CZb(1118481));this.f=new d$b(16777215,1.15);F7b(this.f.ab,500,2000,0);YQb(this.I,this.f);this.r=new w$b(16729088,1.5,0);E7b(this.r.ab,0);YQb(this.I,this.r);this.i=new YPb(256,256);oPb(this.i,(_Fb(),WFb));mPb(this.i,(QFb(),OFb));jPb(this.i,(MDb(),KDb));kPb(this.i,false);this.p=new YPb(256,256);oPb(this.p,WFb);mPb(this.p,OFb);jPb(this.p,KDb);kPb(this.p,false);n=new COc;u=n.j;AOb(Xu(u.b[vVc],227),new Ukb(0.05));T6b(Xu(Xu(u.b[iZc],227).e,298),256,256);AOb(Xu(u.b[JZc],227),this.i);s=new YPb(2048,2048);oPb(s,WFb);mPb(s,OFb);jPb(s,KDb);s.s=false;vPb(s,(rHb(),qHb));wPb(s,qHb);c=new CPb('./static/textures/terrain/grasslight-big.jpg',new Zuc(this,s));vPb(c,qHb);wPb(c,qHb);d=new CPb('./static/textures/terrain/backgrounddetailed6.jpg',this);vPb(d,qHb);wPb(d,qHb);b=new CPb('./static/textures/terrain/grasslight-big-nm.jpg',this);vPb(b,qHb);wPb(b,qHb);t=new pAc;this.C=t.j;AOb(Xu(xTb(this.C,cZc),227),this.p);AOb(Xu(xTb(this.C,dZc),227),new Ukb(3.5));AOb(Xu(xTb(this.C,KZc),227),this.i);AOb(Xu(xTb(this.C,LZc),227),c);AOb(Xu(xTb(this.C,MZc),227),d);AOb(Xu(xTb(this.C,eZc),227),s);AOb(Xu(xTb(this.C,NZc),227),b);AOb(Xu(xTb(this.C,OZc),227),(Vjb(),Vjb(),Ujb));AOb(Xu(xTb(this.C,PZc),227),Ujb);AOb(Xu(xTb(this.C,CYc),227),Ujb);N4b(Xu(Xu(xTb(this.C,IYc),227).e,294),16777215);N4b(Xu(Xu(xTb(this.C,JYc),227).e,294),16777215);N4b(Xu(Xu(xTb(this.C,HYc),227).e,294),1118481);AOb(Xu(xTb(this.C,hZc),227),new Ukb(30));AOb(Xu(xTb(this.C,QZc),227),new Ukb(375));T6b(Xu(Xu(xTb(this.C,RZc),227).e,298),6,6);this.B=new qub;Opb(this.B,lZc,new COb((VOb(),HOb),new Ukb(1)));Opb(this.B,SZc,new COb(POb,new X6b(1.5,1.5)));Opb(this.B,TZc,new COb(POb,new X6b(0,0)));this.n=new qub;i=new _3b((jvc(),ivc));hKb(U$b(i),this.B);i.d=false;i.c=true;Opb(this.n,UZc,i);j=new a4b(n);hKb(U$b(j),u);j.d=false;j.c=true;Opb(this.n,xYc,j);k=new a4b(t);hKb(U$b(k),this.C);k.d=true;k.c=true;Opb(this.n,'terrain',k);o=new mYb(this.v,this.u);p=new _0b;V0b(p,new Q4b(0));this.s=new h9b(o,p);H7b(this.s.ab,-500);YQb(this.t,this.s);g=new nYb(6000,6000,64,64);CSb(g);this.w=new h9b(g,k);F7b(this.w.ab,0,-125,0);b5b(this.w.db,-1.5707963267948966);hRb(this.w,false);YQb(this.I,this.w);NIb(this.H.n,this.I.b.d,1);this.H.n.bb=true;this.H.n.cb=true;JIb(this.H.n,false);q=new jLc(this.I,this.c);f=new MKc(0.6);e=new nLc(new tLc);AOb(Xu(xTb(U$b(e.c).j,OYc),227),new Ukb(0.65));this.g=new nLc(new SNc);this.F=new nLc(new FPc);AOb(Xu(xTb(U$b(this.g.c).j,HZc),227),new Ukb(6/this.v));AOb(Xu(xTb(U$b(this.F.c).j,IZc),227),new Ukb(6/this.u));AOb(Xu(xTb(U$b(this.g.c).j,VZc),227),new Ukb(0.5));AOb(Xu(xTb(U$b(this.F.c).j,VZc),227),new Ukb(0.5));this.F.b=true;r=new YPb(this.v,this.u);oPb(s,VFb);mPb(s,OFb);jPb(s,KDb);s.g=false;s.s=false;a=new cLc(this.H.n,r);yrb(a.d,q);yrb(a.d,f);yrb(a.d,e);aLc(a,this.g);aLc(a,this.F);this.o=new Irb;new xBc('./static/models/animated/parrot.js',new avc(this));new xBc(GZc,new dvc(this));new xBc('./static/models/animated/stork.js',new gvc(this));this.q=Ch()};_.pb=function Xuc(a){var b,c,d,e,f;b=(Ch()-this.q)*0.001;if(this.w.hb){Rxb(this.e);this.k=l5b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;M4b(this.I.b.d,0.1,e,this.k);NIb(this.H.n,this.I.b.d,1);MZb(this.f,0.1+f*1.0499999999999998);u$b(this.r,0.9+f*0.6);AOb(Xu(xTb(this.C,dZc),227),new Ukb(0.6+f*2.9));if(this.D){this.b=l5b(this.b+-7.5E-4,0,0.05);AOb(Xu(Jpb(this.B,lZc),227),new Ukb(Xu(Xu(Jpb(this.B,lZc),227).e,150).b+b*this.b));P6b(Xu(Xu(Jpb(this.B,TZc),227).e,298),b*0.05);U6b(Xu(Xu(xTb(this.C,WZc),227).e,298),4*Xu(Xu(Jpb(this.B,TZc),227).e,298).d);HUb(this.s,Xu(Jpb(this.n,UZc),283));BIb(this.H.n,this.t,this.d,this.i,true);HUb(this.s,Xu(Jpb(this.n,xYc),283));BIb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Xu(Brb(this.o,c),306);q9b(d,dv(1000*b));P6b(d.ab,d.e*b);d.ab.d>2000&&U6b(d.ab,-1500-_lb()*500)}BIb(this.H.n,this.I,this.c,null,false)}this.q=Ch()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;rV(1245,1,{},Zuc);_.$d=function $uc(a){Suc(this.b);Ruc(this.b,new jOc,a,this.c)};rV(1246,1,{},avc);_.Ff=function bvc(a,b){sBc((Xu(a,340),Xu(b,243)));Quc(this.b,Xu(b,243),500,-3500,500,700);Quc(this.b,Xu(b,243),500,-3000-_lb()*500,500,-200);Quc(this.b,Xu(b,243),500,-3000-_lb()*500,500,200);Quc(this.b,Xu(b,243),500,-3000-_lb()*500,500,1000)};rV(1247,1,{},dvc);_.Ff=function evc(a,b){sBc((Xu(a,340),Xu(b,243)));Quc(this.b,Xu(b,243),1000,-3000-_lb()*500,350,40)};rV(1248,1,{},gvc);_.Ff=function hvc(a,b){sBc((Xu(a,340),Xu(b,243)));Quc(this.b,Xu(b,243),1000,-3000-_lb()*500,350,340)};var ivc;rV(1249,1,{},nvc);_.Ud=function ovc(){return wvc(),lvc};_.Vd=function pvc(){return xvc(),mvc};var lvc,mvc;rV(1250,1,{},rvc);_.tc=function svc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};rV(1251,1,{},uvc);_.tc=function vvc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};rV(1358,733,DSc,pAc);_.Rd=function qAc(){hKb(this,ZOb());hKb(this,$Ob());hKb(this,_Ob());aKb(this,OZc,new COb((VOb(),KOb),(Vjb(),Vjb(),Tjb)));aKb(this,PZc,new COb(KOb,Tjb));aKb(this,CYc,new COb(KOb,Tjb));aKb(this,XZc,new COb(KOb,Tjb));aKb(this,LZc,new BOb(NOb));aKb(this,MZc,new BOb(NOb));aKb(this,NZc,new BOb(NOb));aKb(this,cZc,new BOb(NOb));aKb(this,eZc,new BOb(NOb));aKb(this,KZc,new BOb(NOb));aKb(this,dZc,new COb(HOb,new Ukb(1)));aKb(this,YZc,new COb(HOb,new Ukb(0)));aKb(this,QZc,new COb(HOb,new Ukb(1)));aKb(this,IYc,new COb(GOb,new Q4b(15658734)));aKb(this,JYc,new COb(GOb,new Q4b(1118481)));aKb(this,HYc,new COb(GOb,new Q4b(328965)));aKb(this,hZc,new COb(HOb,new Ukb(30)));aKb(this,OYc,new COb(HOb,new Ukb(1)));aKb(this,'uRepeatBase',new COb(POb,new X6b(1,1)));aKb(this,RZc,new COb(POb,new X6b(1,1)));aKb(this,WZc,new COb(POb,new X6b(0,0)))};_.Sd=function rAc(a){var b,c;c=new esb(Nu(mT,kRc,1,[PYc,QYc]));b=new esb(Nu(mT,kRc,1,[SYc,TYc,UYc]));jKb(this,rKb(a,Nu(pT,kRc,173,[c,b])))};_.Td=function sAc(a){var b,c;c=new esb(Nu(mT,kRc,1,[VYc]));b=new esb(Nu(mT,kRc,1,[WYc]));kKb(this,rKb(a,Nu(pT,kRc,173,[c,b])))};var tAc;rV(1359,1,{},yAc);_.Ud=function zAc(){return HAc(),wAc};_.Vd=function AAc(){return IAc(),xAc};var wAc,xAc;rV(1360,1,{},CAc);_.tc=function DAc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};rV(1361,1,{},FAc);_.tc=function GAc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};rV(1499,733,DSc,SNc);_.Rd=function TNc(){aKb(this,EYc,new BOb((VOb(),NOb)));aKb(this,HZc,new COb(HOb,new Ukb(0.001953125)));aKb(this,VZc,new COb(HOb,new Ukb(0.35)))};var UNc;rV(1500,1,{},ZNc);_.Ud=function $Nc(){return gOc(),XNc};_.Vd=function _Nc(){return hOc(),YNc};var XNc,YNc;rV(1501,1,{},bOc);_.tc=function cOc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};rV(1502,1,{},eOc);_.tc=function fOc(){return zZc};rV(1505,733,DSc,jOc);_.Rd=function kOc(){aKb(this,EYc,new BOb((VOb(),NOb)))};var lOc;rV(1506,1,{},qOc);_.Ud=function rOc(){return zOc(),oOc};_.Vd=function sOc(){return AOc(),pOc};var oOc,pOc;rV(1507,1,{},uOc);_.tc=function vOc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};rV(1508,1,{},xOc);_.tc=function yOc(){return zZc};rV(1511,733,DSc,COc);_.Rd=function DOc(){aKb(this,JZc,new BOb((VOb(),NOb)));aKb(this,iZc,new COb(POb,new X6b(512,512)));aKb(this,SZc,new COb(POb,new X6b(1,1)));aKb(this,vVc,new COb(HOb,new Ukb(0.05)))};var EOc;rV(1512,1,{},JOc);_.Ud=function KOc(){return SOc(),HOc};_.Vd=function LOc(){return TOc(),IOc};var HOc,IOc;rV(1513,1,{},NOc);_.tc=function OOc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};rV(1514,1,{},QOc);_.tc=function ROc(){return zZc};rV(1529,733,DSc,FPc);_.Rd=function GPc(){aKb(this,EYc,new BOb((VOb(),NOb)));aKb(this,IZc,new COb(HOb,new Ukb(0.001953125)));aKb(this,VZc,new COb(HOb,new Ukb(0.35)))};var HPc;rV(1530,1,{},MPc);_.Ud=function NPc(){return VPc(),KPc};_.Vd=function OPc(){return WPc(),LPc};var KPc,LPc;rV(1531,1,{},QPc);_.tc=function RPc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};rV(1532,1,{},TPc);_.tc=function UPc(){return zZc};var bP=Ikb(UXc,'TerrainDynamic$DemoScene',1244),ZO=Ikb(UXc,'TerrainDynamic$DemoScene$1',1245),$O=Ikb(UXc,'TerrainDynamic$DemoScene$2',1246),_O=Ikb(UXc,'TerrainDynamic$DemoScene$3',1247),aP=Ikb(UXc,'TerrainDynamic$DemoScene$4',1248),eS=Ikb(ZZc,$Zc,1511),OP=Ikb(KXc,'TerrainShader',1358),YR=Ikb(ZZc,'HorizontalTiltShiftShader',1499),qS=Ikb(ZZc,'VerticalTiltShiftShader',1529),eP=Ikb(UXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1249),cP=Ikb(UXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1250),dP=Ikb(UXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1251),dS=Ikb(ZZc,_Zc,1512),bS=Ikb(ZZc,a$c,1513),cS=Ikb(ZZc,b$c,1514),NP=Ikb(KXc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1359),LP=Ikb(KXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1360),MP=Ikb(KXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1361),XR=Ikb(ZZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1500),VR=Ikb(ZZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1501),WR=Ikb(ZZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1502),pS=Ikb(ZZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1530),nS=Ikb(ZZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1531),oS=Ikb(ZZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1532),aS=Ikb(ZZc,'LuminosityShader',1505),_R=Ikb(ZZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1506),ZR=Ikb(ZZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1507),$R=Ikb(ZZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1508);cTc(Ii)(38);