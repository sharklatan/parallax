function Ruc(){}
function Vuc(){}
function Yuc(){}
function YNc(){}
function BNc(){}
function FNc(){}
function INc(){}
function UNc(){}
function _Nc(){}
function aAc(){}
function eAc(){}
function hAc(){}
function lOc(){}
function pOc(){}
function sOc(){}
function sPc(){}
function oPc(){}
function vPc(){}
function VZb(a,b){a.b=b}
function Q8b(a,b){a.k=b}
function Euc(a){this.a=a}
function Huc(a){this.a=a}
function Kuc(a){this.a=a}
function Nuc(){Nuc=IQc;Muc=new Ruc}
function $uc(){$uc=IQc;Puc=new Vuc}
function _uc(){_uc=IQc;Quc=new Yuc}
function bOc(){bOc=IQc;SNc=new YNc}
function cOc(){cOc=IQc;TNc=new _Nc}
function xNc(){xNc=IQc;wNc=new BNc}
function KNc(){KNc=IQc;zNc=new FNc}
function LNc(){LNc=IQc;ANc=new INc}
function QNc(){QNc=IQc;PNc=new UNc}
function Yzc(){Yzc=IQc;Xzc=new aAc}
function jAc(){jAc=IQc;$zc=new eAc}
function kAc(){kAc=IQc;_zc=new hAc}
function kPc(){kPc=IQc;jPc=new oPc}
function xPc(){xPc=IQc;mPc=new sPc}
function yPc(){yPc=IQc;nPc=new vPc}
function hOc(){hOc=IQc;gOc=new lOc}
function uOc(){uOc=IQc;jOc=new pOc}
function vOc(){vOc=IQc;kOc=new sOc}
function Buc(a,b){this.a=a;this.b=b}
function Tzc(){NJb.call(this,(Yzc(),Xzc))}
function uNc(){NJb.call(this,(xNc(),wNc))}
function NNc(){NJb.call(this,(QNc(),PNc))}
function eOc(){NJb.call(this,(hOc(),gOc))}
function hPc(){NJb.call(this,(kPc(),jPc))}
function uuc(a){a.w+=1;a.w==3&&IQb(a.v,true)}
function vuc(){Pac.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function tuc(a,b,c,d){var e,f,g;g=new B3b(b);_Nb(ru(YSb(t$b(g).i,ZXc),227),c);f=new v9b;e=new I8b(new NXb(a.u,a.t),g);g7b(e._,-500);xQb(f,e);aIb(a.G.k,f,a.c,d,true)}
function suc(a,b,c,d,e,f){var g,i;g=new t1b;m1b(g,new p4b(16755285));g.j=true;r1b(g,(l_b(),i_b));i=new S8b(b,g);i.d=c;Q8b(i,zu(600*Blb()));e7b(i._,d,e,f);D4b(i.cb,1.5707963267948966);i.S=true;i.U=true;xQb(a.H,i);Zqb(a.n,i)}
var hZc='enableDiffuse1',iZc='enableDiffuse2',cZc='heightMap',nZc='heightmap',oZc='r',gZc='tDetail',eZc='tDiffuse1',fZc='tDiffuse2',kZc='uRepeatOverlay';KU(1244,1,rSc);_.zb=function quc(){pac(this.b,new vuc(this.a))};KU(1245,975,{78:1,186:1,339:1},vuc);_.Ud=function wuc(a){uuc(this)};_.Gd=function xuc(a){this.u=a.a.Z;this.t=a.a.Y;_Nb(ru(YSb(t$b(this.f.b).i,aZc),227),new ukb(6/this.u));_Nb(ru(YSb(t$b(this.D.b).i,bZc),227),new ukb(6/this.t))};_.nb=function yuc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;ft((nyb(),myb),(xyb(),wyb),this);this.b=new yRb(40,QHb(this.G.k),2,4000);this.u=this.G.k.Z;this.t=this.G.k.Y;this.c=new lRb(this.u,this.t,-10000,10000);e7b(this.b._,-1200,800,1200);g7b(this.c._,100);this.s=new v9b;xQb(this.s,this.c);this.d=new sxb(this.b,this.G.c);d7b(this.d.v,0);this.d.s=1;this.d.A=1.2;pxb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;nxb(this.d,0.15);t9b(this.H,new j9b(328965,2000,4000));xQb(this.H,new bZb(1118481));this.e=new EZb(16777215,1.15);e7b(this.e._,500,2000,0);xQb(this.H,this.e);this.q=new XZb(16729088,1.5,0);d7b(this.q._,0);xQb(this.H,this.q);this.g=new xPb(256,256);POb(this.g,(AFb(),vFb));NOb(this.g,(pFb(),nFb));KOb(this.g,(lDb(),jDb));LOb(this.g,false);this.o=new xPb(256,256);POb(this.o,vFb);NOb(this.o,nFb);KOb(this.o,jDb);LOb(this.o,false);n=new eOc;u=n.i;_Nb(ru(u.a[NUc],227),new ukb(0.05));s6b(ru(ru(u.a[DYc],227).d,298),256,256);_Nb(ru(u.a[cZc],227),this.g);s=new xPb(2048,2048);POb(s,vFb);NOb(s,nFb);KOb(s,jDb);s.r=false;WOb(s,(SGb(),RGb));XOb(s,RGb);c=new bPb('./static/textures/terrain/grasslight-big.jpg',new Buc(this,s));WOb(c,RGb);XOb(c,RGb);d=new bPb('./static/textures/terrain/backgrounddetailed6.jpg',this);WOb(d,RGb);XOb(d,RGb);b=new bPb('./static/textures/terrain/grasslight-big-nm.jpg',this);WOb(b,RGb);XOb(b,RGb);t=new Tzc;this.B=t.i;_Nb(ru(YSb(this.B,xYc),227),this.o);_Nb(ru(YSb(this.B,yYc),227),new ukb(3.5));_Nb(ru(YSb(this.B,dZc),227),this.g);_Nb(ru(YSb(this.B,eZc),227),c);_Nb(ru(YSb(this.B,fZc),227),d);_Nb(ru(YSb(this.B,zYc),227),s);_Nb(ru(YSb(this.B,gZc),227),b);_Nb(ru(YSb(this.B,hZc),227),(vjb(),vjb(),ujb));_Nb(ru(YSb(this.B,iZc),227),ujb);_Nb(ru(YSb(this.B,XXc),227),ujb);m4b(ru(ru(YSb(this.B,bYc),227).d,294),16777215);m4b(ru(ru(YSb(this.B,cYc),227).d,294),16777215);m4b(ru(ru(YSb(this.B,aYc),227).d,294),1118481);_Nb(ru(YSb(this.B,CYc),227),new ukb(30));_Nb(ru(YSb(this.B,jZc),227),new ukb(375));s6b(ru(ru(YSb(this.B,kZc),227).d,298),6,6);this.A=new Rtb;npb(this.A,GYc,new bOb((uOb(),gOb),new ukb(1)));npb(this.A,lZc,new bOb(oOb,new w6b(1.5,1.5)));npb(this.A,mZc,new bOb(oOb,new w6b(0,0)));this.k=new Rtb;i=new A3b((Nuc(),Muc));IJb(t$b(i),this.A);i.c=false;i.b=true;npb(this.k,nZc,i);j=new B3b(n);IJb(t$b(j),u);j.c=false;j.b=true;npb(this.k,SXc,j);k=new B3b(t);IJb(t$b(k),this.B);k.c=true;k.b=true;npb(this.k,'terrain',k);o=new NXb(this.u,this.t);p=new A0b;u0b(p,new p4b(0));this.r=new I8b(o,p);g7b(this.r._,-500);xQb(this.s,this.r);g=new OXb(6000,6000,64,64);bSb(g);this.v=new I8b(g,k);e7b(this.v._,0,-125,0);C4b(this.v.cb,-1.5707963267948966);IQb(this.v,false);xQb(this.H,this.v);mIb(this.G.k,this.H.a.c,1);this.G.k.ab=true;this.G.k.bb=true;iIb(this.G.k,false);q=new NKc(this.H,this.b);f=new oKc(0.6);e=new RKc(new XKc);_Nb(ru(YSb(t$b(e.b).i,hYc),227),new ukb(0.65));this.f=new RKc(new uNc);this.D=new RKc(new hPc);_Nb(ru(YSb(t$b(this.f.b).i,aZc),227),new ukb(6/this.u));_Nb(ru(YSb(t$b(this.D.b).i,bZc),227),new ukb(6/this.t));_Nb(ru(YSb(t$b(this.f.b).i,oZc),227),new ukb(0.5));_Nb(ru(YSb(t$b(this.D.b).i,oZc),227),new ukb(0.5));this.D.a=true;r=new xPb(this.u,this.t);POb(s,uFb);NOb(s,nFb);KOb(s,jDb);s.f=false;s.r=false;a=new GKc(this.G.k,r);Zqb(a.c,q);Zqb(a.c,f);Zqb(a.c,e);EKc(a,this.f);EKc(a,this.D);this.n=new hrb;new _Ac('./static/models/animated/parrot.js',new Euc(this));new _Ac(_Yc,new Huc(this));new _Ac('./static/models/animated/stork.js',new Kuc(this));this.p=rh()};_.ob=function zuc(a){var b,c,d,e,f;b=(rh()-this.p)*0.001;if(this.v.gb){qxb(this.d);this.j=M4b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;l4b(this.H.a.c,0.1,e,this.j);mIb(this.G.k,this.H.a.c,1);lZb(this.e,0.1+f*1.0499999999999998);VZb(this.q,0.9+f*0.6);_Nb(ru(YSb(this.B,yYc),227),new ukb(0.6+f*2.9));if(this.C){this.a=M4b(this.a+-7.5E-4,0,0.05);_Nb(ru(ipb(this.A,GYc),227),new ukb(ru(ru(ipb(this.A,GYc),227).d,150).a+b*this.a));o6b(ru(ru(ipb(this.A,mZc),227).d,298),b*0.05);t6b(ru(ru(YSb(this.B,pZc),227).d,298),4*ru(ru(ipb(this.A,mZc),227).d,298).c);gUb(this.r,ru(ipb(this.k,nZc),283));aIb(this.G.k,this.s,this.c,this.g,true);gUb(this.r,ru(ipb(this.k,SXc),283));aIb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=ru(arb(this.n,c),306);R8b(d,zu(1000*b));o6b(d._,d.d*b);d._.c>2000&&t6b(d._,-1500-Blb()*500)}aIb(this.G.k,this.H,this.b,null,false)}this.p=rh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;KU(1246,1,{},Buc);_.Ud=function Cuc(a){uuc(this.a);tuc(this.a,new NNc,a,this.b)};KU(1247,1,{},Euc);_.zf=function Fuc(a,b){WAc((ru(a,340),ru(b,243)));suc(this.a,ru(b,243),500,-3500,500,700);suc(this.a,ru(b,243),500,-3000-Blb()*500,500,-200);suc(this.a,ru(b,243),500,-3000-Blb()*500,500,200);suc(this.a,ru(b,243),500,-3000-Blb()*500,500,1000)};KU(1248,1,{},Huc);_.zf=function Iuc(a,b){WAc((ru(a,340),ru(b,243)));suc(this.a,ru(b,243),1000,-3000-Blb()*500,350,40)};KU(1249,1,{},Kuc);_.zf=function Luc(a,b){WAc((ru(a,340),ru(b,243)));suc(this.a,ru(b,243),1000,-3000-Blb()*500,350,340)};var Muc;KU(1250,1,{},Ruc);_.Od=function Suc(){return $uc(),Puc};_.Pd=function Tuc(){return _uc(),Quc};var Puc,Quc;KU(1251,1,{},Vuc);_.nc=function Wuc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};KU(1252,1,{},Yuc);_.nc=function Zuc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};KU(1359,733,eSc,Tzc);_.Ld=function Uzc(){IJb(this,yOb());IJb(this,zOb());IJb(this,AOb());BJb(this,hZc,new bOb((uOb(),jOb),(vjb(),vjb(),tjb)));BJb(this,iZc,new bOb(jOb,tjb));BJb(this,XXc,new bOb(jOb,tjb));BJb(this,qZc,new bOb(jOb,tjb));BJb(this,eZc,new aOb(mOb));BJb(this,fZc,new aOb(mOb));BJb(this,gZc,new aOb(mOb));BJb(this,xYc,new aOb(mOb));BJb(this,zYc,new aOb(mOb));BJb(this,dZc,new aOb(mOb));BJb(this,yYc,new bOb(gOb,new ukb(1)));BJb(this,rZc,new bOb(gOb,new ukb(0)));BJb(this,jZc,new bOb(gOb,new ukb(1)));BJb(this,bYc,new bOb(fOb,new p4b(15658734)));BJb(this,cYc,new bOb(fOb,new p4b(1118481)));BJb(this,aYc,new bOb(fOb,new p4b(328965)));BJb(this,CYc,new bOb(gOb,new ukb(30)));BJb(this,hYc,new bOb(gOb,new ukb(1)));BJb(this,'uRepeatBase',new bOb(oOb,new w6b(1,1)));BJb(this,kZc,new bOb(oOb,new w6b(1,1)));BJb(this,pZc,new bOb(oOb,new w6b(0,0)))};_.Md=function Vzc(a){var b,c;c=new Frb(hu(FS,NQc,1,[iYc,jYc]));b=new Frb(hu(FS,NQc,1,[lYc,mYc,nYc]));KJb(this,SJb(a,hu(IS,NQc,173,[c,b])))};_.Nd=function Wzc(a){var b,c;c=new Frb(hu(FS,NQc,1,[oYc]));b=new Frb(hu(FS,NQc,1,[pYc]));LJb(this,SJb(a,hu(IS,NQc,173,[c,b])))};var Xzc;KU(1360,1,{},aAc);_.Od=function bAc(){return jAc(),$zc};_.Pd=function cAc(){return kAc(),_zc};var $zc,_zc;KU(1361,1,{},eAc);_.nc=function fAc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};KU(1362,1,{},hAc);_.nc=function iAc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};KU(1500,733,eSc,uNc);_.Ld=function vNc(){BJb(this,ZXc,new aOb((uOb(),mOb)));BJb(this,aZc,new bOb(gOb,new ukb(0.001953125)));BJb(this,oZc,new bOb(gOb,new ukb(0.35)))};var wNc;KU(1501,1,{},BNc);_.Od=function CNc(){return KNc(),zNc};_.Pd=function DNc(){return LNc(),ANc};var zNc,ANc;KU(1502,1,{},FNc);_.nc=function GNc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};KU(1503,1,{},INc);_.nc=function JNc(){return UYc};KU(1506,733,eSc,NNc);_.Ld=function ONc(){BJb(this,ZXc,new aOb((uOb(),mOb)))};var PNc;KU(1507,1,{},UNc);_.Od=function VNc(){return bOc(),SNc};_.Pd=function WNc(){return cOc(),TNc};var SNc,TNc;KU(1508,1,{},YNc);_.nc=function ZNc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};KU(1509,1,{},_Nc);_.nc=function aOc(){return UYc};KU(1512,733,eSc,eOc);_.Ld=function fOc(){BJb(this,cZc,new aOb((uOb(),mOb)));BJb(this,DYc,new bOb(oOb,new w6b(512,512)));BJb(this,lZc,new bOb(oOb,new w6b(1,1)));BJb(this,NUc,new bOb(gOb,new ukb(0.05)))};var gOc;KU(1513,1,{},lOc);_.Od=function mOc(){return uOc(),jOc};_.Pd=function nOc(){return vOc(),kOc};var jOc,kOc;KU(1514,1,{},pOc);_.nc=function qOc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};KU(1515,1,{},sOc);_.nc=function tOc(){return UYc};KU(1530,733,eSc,hPc);_.Ld=function iPc(){BJb(this,ZXc,new aOb((uOb(),mOb)));BJb(this,bZc,new bOb(gOb,new ukb(0.001953125)));BJb(this,oZc,new bOb(gOb,new ukb(0.35)))};var jPc;KU(1531,1,{},oPc);_.Od=function pPc(){return xPc(),mPc};_.Pd=function qPc(){return yPc(),nPc};var mPc,nPc;KU(1532,1,{},sPc);_.nc=function tPc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};KU(1533,1,{},vPc);_.nc=function wPc(){return UYc};var uO=ikb(nXc,'TerrainDynamic$DemoScene',1245),qO=ikb(nXc,'TerrainDynamic$DemoScene$1',1246),rO=ikb(nXc,'TerrainDynamic$DemoScene$2',1247),sO=ikb(nXc,'TerrainDynamic$DemoScene$3',1248),tO=ikb(nXc,'TerrainDynamic$DemoScene$4',1249),xR=ikb(sZc,tZc,1512),fP=ikb(dXc,'TerrainShader',1359),pR=ikb(sZc,'HorizontalTiltShiftShader',1500),JR=ikb(sZc,'VerticalTiltShiftShader',1530),xO=ikb(nXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1250),vO=ikb(nXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1251),wO=ikb(nXc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1252),wR=ikb(sZc,uZc,1513),uR=ikb(sZc,vZc,1514),vR=ikb(sZc,wZc,1515),eP=ikb(dXc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1360),cP=ikb(dXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1361),dP=ikb(dXc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1362),oR=ikb(sZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1501),mR=ikb(sZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1502),nR=ikb(sZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1503),IR=ikb(sZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1531),GR=ikb(sZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1532),HR=ikb(sZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1533),tR=ikb(sZc,'LuminosityShader',1506),sR=ikb(sZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1507),qR=ikb(sZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1508),rR=ikb(sZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1509);FSc(xi)(38);