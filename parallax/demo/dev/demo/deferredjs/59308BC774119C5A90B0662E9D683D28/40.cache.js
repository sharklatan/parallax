function kLb(){}
function oLb(){}
function rLb(){}
function Qxc(){}
function Uxc(){}
function Xxc(){}
function hyc(){}
function lyc(){}
function oyc(){}
function Ayc(){}
function Eyc(){}
function Hyc(){}
function u9b(a,b){a.c=b}
function uLb(){uLb=IQc;jLb=new rLb}
function gLb(){gLb=IQc;fLb=new kLb}
function tLb(){tLb=IQc;iLb=new oLb}
function ryc(){ryc=IQc;gyc=new oyc}
function dyc(){dyc=IQc;cyc=new hyc}
function qyc(){qyc=IQc;fyc=new lyc}
function wyc(){wyc=IQc;vyc=new Ayc}
function Jyc(){Jyc=IQc;yyc=new Eyc}
function Kyc(){Kyc=IQc;zyc=new Hyc}
function Mxc(){Mxc=IQc;Lxc=new Qxc}
function Zxc(){Zxc=IQc;Oxc=new Uxc}
function $xc(){$xc=IQc;Pxc=new Xxc}
function utc(a,b){this.a=a;this.b=b}
function KHb(a,b){vIb(a,b);JHb(a,false)}
function bLb(){NJb.call(this,(gLb(),fLb))}
function Jxc(){NJb.call(this,(Mxc(),Lxc))}
function ayc(){NJb.call(this,(dyc(),cyc))}
function tyc(){NJb.call(this,(wyc(),vyc))}
function d1b(){H$b.call(this);this.a=false;this.b=1}
function qtc(){Pac.call(this);this.t=new k7b(0,1000,-1000);this.r=new j7b}
function b7b(a,b){var c;c=new t5b;r5b(c,b.p,g5b(c,b.X));return V6b(a,c)}
var IZc='bgColor',KZc='fAspect',HZc='fGodRayIntensity',LZc='fStepSize',yZc='mFar',xZc='mNear',NZc='tColors',OZc='tGodRays',MZc='tInput',JZc='vSunPositionScreenSpace',PZc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';KU(751,733,eSc,bLb);_.Ld=function cLb(){BJb(this,xZc,new bOb((uOb(),gOb),new ukb(1)));BJb(this,yZc,new bOb(gOb,new ukb(2000)));BJb(this,hYc,new bOb(gOb,new ukb(1)))};_.Md=function dLb(a){var b,c;c=new Frb(hu(FS,NQc,1,[zZc]));b=new Frb(hu(FS,NQc,1,[AZc]));KJb(this,SJb(a,hu(IS,NQc,173,[c,b])))};_.Nd=function eLb(a){var b,c;c=new Frb(hu(FS,NQc,1,[BZc,CZc]));b=new Frb(hu(FS,NQc,1,[DZc,EZc,FZc]));LJb(this,SJb(a,hu(IS,NQc,173,[c,b])))};var fLb;KU(752,1,{},kLb);_.Od=function lLb(){return tLb(),iLb};_.Pd=function mLb(){return uLb(),jLb};var iLb,jLb;KU(753,1,{},oLb);_.nc=function pLb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};KU(754,1,{},rLb);_.nc=function sLb(){return GZc};KU(923,916,{280:1,283:1},d1b);_.Ne=function e1b(){var a;return a=new d1b,p$b(this,a),a.a=this.a,a.b=this.b,a};_.Oe=function f1b(){return new bLb};_.Ke=function g1b(){return this.b};_.Le=function h1b(){return this.a};_.Pe=function i1b(a,b){var c;u$b(this,b);c=t$b(this).i;if(a.cZ==TG){_Nb(ru(c.a[xZc],227),new ukb(ru(a,237).d));_Nb(ru(c.a[yZc],227),new ukb(ru(a,237).b))}_Nb(ru(c.a[hYc],227),new ukb(this.Z))};_.a=false;_.b=0;KU(1231,1,rSc);_.zb=function otc(){pac(this.b,new qtc(this.a))};KU(1232,975,{337:1},qtc);_.nb=function rtc(){var a,b,c,d;this.a=new yRb(70,QHb(this.G.k),1,3000);g7b(this.a._,200);this.b=new d1b;c=new A0b;u0b(c,new p4b(0));y0b(c,(i0b(),f0b));new _Ac('./static/models/obj/tree/tree.js',new utc(this,c));a=new VXb(1,20,10);this.s=new I8b(a,c);d7b(this.s.eb,20);xQb(this.H,this.s);yIb(this.G.k,false);iIb(this.G.k,false);lIb(this.G.k,1297,1);this.j=new v9b;this.i=new lRb(this.G.k.Z,this.G.k.Y,-10000,10000);g7b(this.i._,100);xQb(this.j,this.i);this.n=new xPb(this.G.k.Z,this.G.k.Y);POb(this.n,(AFb(),uFb));NOb(this.n,(pFb(),nFb));KOb(this.n,(lDb(),kDb));this.o=new xPb(this.G.k.Z,this.G.k.Y);POb(this.o,uFb);NOb(this.o,nFb);KOb(this.o,kDb);d=~~(this.G.k.Z/4);b=~~(this.G.k.Y/4);this.p=new xPb(d,b);POb(this.p,uFb);NOb(this.p,nFb);KOb(this.p,kDb);this.q=new xPb(d,b);POb(this.q,uFb);NOb(this.q,nFb);KOb(this.q,kDb);this.e=new B3b(new ayc);this.c=new B3b(new Jxc);_Nb(ru(YSb(t$b(this.c).i,HZc),227),new ukb(0.75));this.d=new B3b(new tyc);m4b(ru(ru(YSb(t$b(this.d).i,IZc),227).d,294),1297);m4b(ru(ru(YSb(t$b(this.d).i,PYc),227).d,294),16772608);this.k=new I8b(new KXb(this.G.k.Z,this.G.k.Y),this.e);g7b(this.k._,-9900);xQb(this.j,this.k)};_.ob=function stc(a){var b,c,d,e,f,g;f=a/4000;t6b(this.s._,200*ulb(f));g7b(this.s._,200*Dlb(f)-100);o6b(this.a._,(this.f-this.a._.c)*0.036);p6b(this.a._,(-this.g-this.a._.d)*0.036);WQb(this.a,this.H._);b7b(this.r.jf(this.t),this.a);t6b(this.r,(this.r.c+1)/2);u6b(this.r,(this.r.d+1)/2);s6b(ru(ru(YSb(t$b(this.e).i,JZc),227).d,298),this.r.c,this.r.d);s6b(ru(ru(YSb(t$b(this.d).i,JZc),227).d,298),this.r.c,this.r.d);KHb(this.G.k,this.n);g=this.G.k.Z;b=this.G.k.Y;d=0.74*b;e=0.74*b;t6b(this.r,this.r.c*g);u6b(this.r,this.r.d*b);wIb(this.G.k,zu(this.r.c-e/2),zu(this.r.d-d/2),zu(e),zu(d));PHb(this.G.k,true);_Nb(ru(YSb(t$b(this.d).i,KZc),227),new ukb(g/b));u9b(this.j,this.d);aIb(this.G.k,this.j,this.i,this.n,false);PHb(this.G.k,false);u9b(this.H,null);aIb(this.G.k,this.H,this.a,this.n,false);u9b(this.H,this.b);aIb(this.G.k,this.H,this.a,this.o,true);c=Alb(6,-1);_Nb(ru(YSb(t$b(this.e).i,LZc),227),new ukb(c));_Nb(ru(YSb(t$b(this.e).i,MZc),227),this.o);u9b(this.j,this.e);aIb(this.G.k,this.j,this.i,this.q,false);c=Alb(6,-2);_Nb(ru(YSb(t$b(this.e).i,LZc),227),new ukb(c));_Nb(ru(YSb(t$b(this.e).i,MZc),227),this.q);aIb(this.G.k,this.j,this.i,this.p,false);c=Alb(6,-3);_Nb(ru(YSb(t$b(this.e).i,LZc),227),new ukb(c));_Nb(ru(YSb(t$b(this.e).i,MZc),227),this.p);aIb(this.G.k,this.j,this.i,this.q,false);_Nb(ru(YSb(t$b(this.c).i,NZc),227),this.n);_Nb(ru(YSb(t$b(this.c).i,OZc),227),this.q);u9b(this.j,this.c);aIb(this.G.k,this.j,this.i,null,false);u9b(this.j,null)};_.f=0;_.g=0;KU(1233,1,{},utc);_.zf=function vtc(a,b){var c;c=new I8b(b,this.b);e7b(c._,0,-150,-150);d7b(c.eb,400);c.W=false;b5b(c.V,c._,c.ab,c.eb);c.Y=true;xQb(this.a.H,c)};KU(1322,733,eSc,Jxc);_.Ld=function Kxc(){BJb(this,NZc,new aOb((uOb(),mOb)));BJb(this,OZc,new aOb(mOb));BJb(this,HZc,new bOb(gOb,new ukb(0.69)));BJb(this,JZc,new bOb(oOb,new w6b(0.5,0.5)))};var Lxc;KU(1323,1,{},Qxc);_.Od=function Rxc(){return Zxc(),Oxc};_.Pd=function Sxc(){return $xc(),Pxc};var Oxc,Pxc;KU(1324,1,{},Uxc);_.nc=function Vxc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};KU(1325,1,{},Xxc);_.nc=function Yxc(){return PZc};KU(1328,733,eSc,ayc);_.Ld=function byc(){BJb(this,MZc,new aOb((uOb(),mOb)));BJb(this,LZc,new bOb(gOb,new ukb(1)));BJb(this,JZc,new bOb(oOb,new w6b(0.5,0.5)))};var cyc;KU(1329,1,{},hyc);_.Od=function iyc(){return qyc(),fyc};_.Pd=function jyc(){return ryc(),gyc};var fyc,gyc;KU(1330,1,{},lyc);_.nc=function myc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};KU(1331,1,{},oyc);_.nc=function pyc(){return PZc};KU(1334,733,eSc,tyc);_.Ld=function uyc(){BJb(this,JZc,new bOb((uOb(),oOb),new w6b(0.5,0.5)));BJb(this,KZc,new bOb(gOb,new ukb(1)));BJb(this,PYc,new bOb(fOb,new p4b(16772608)));BJb(this,IZc,new bOb(fOb,new p4b(0)))};var vyc;KU(1335,1,{},Ayc);_.Od=function Byc(){return Jyc(),yyc};_.Pd=function Cyc(){return Kyc(),zyc};var yyc,zyc;KU(1336,1,{},Eyc);_.nc=function Fyc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};KU(1337,1,{},Hyc);_.nc=function Iyc(){return PZc};var eO=ikb(nXc,'PostprocessingGodrays$DemoScene',1232),dO=ikb(nXc,'PostprocessingGodrays$DemoScene$1',1233),OI=ikb(QZc,'MeshDepthMaterial',923),MO=ikb(dXc,'GodRaysGenerateShader',1328),IO=ikb(dXc,'GodRaysCombineShader',1322),QO=ikb(dXc,'GodraysFakeSunShader',1334),_F=ikb(tYc,'DepthShader',751),LO=ikb(dXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1329),JO=ikb(dXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1330),KO=ikb(dXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1331),HO=ikb(dXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1323),FO=ikb(dXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1324),GO=ikb(dXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1325),PO=ikb(dXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1335),NO=ikb(dXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1336),OO=ikb(dXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1337),$F=ikb(tYc,'DepthShader_Resources_default_InlineClientBundleGenerator',752),YF=ikb(tYc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',753),ZF=ikb(tYc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',754);FSc(xi)(40);