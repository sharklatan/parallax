function Krc(){}
function Orc(){}
function Rrc(){}
function avc(){}
function evc(){}
function hvc(){}
function Tic(a){this.b=a}
function Trc(){Trc=zHc;Irc=new Orc}
function Grc(){Grc=zHc;Frc=new Krc}
function Urc(){Urc=zHc;Jrc=new Rrc}
function Yuc(){Yuc=zHc;Xuc=new avc}
function jvc(){jvc=zHc;$uc=new evc}
function kvc(){kvc=zHc;_uc=new hvc}
function Tuc(){$Hb.call(this,(Yuc(),Xuc))}
function Drc(){$Hb.call(this,(Grc(),Frc))}
function Pic(){x8b.call(this);this.e=0;this.f=0}
function Oic(a,b){var c,d,e,f,g,i;d=new UMb(SOc);d.n=4;c4b(d.C,0.998,0.998);c4b(d.B,0.001,0.001);OMb(d,(eFb(),dFb));PMb(d,dFb);CMb(d,(ZBb(),XBb));e=new UMb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');c4b(e.C,0.998,0.998);c4b(e.B,0.001,0.001);OMb(e,dFb);PMb(e,dFb);CMb(e,XBb);c=new UMb('./static/models/obj/leeperrysmith/Map-COL.jpg');c4b(c.C,0.998,0.998);c4b(c.B,0.001,0.001);OMb(c,dFb);PMb(c,dFb);CMb(c,XBb);g=new Tuc;i=g.j;TLb(Xu(i.b[UOc],225),(pib(),pib(),oib));TLb(Xu(i.b[VOc],225),oib);TLb(Xu(i.b[WOc],225),a.c.f);TLb(Xu(i.b[XOc],225),c);TLb(Xu(i.b[YOc],225),d);TLb(Xu(i.b[ZOc],225),e);Y1b(Xu(Xu(i.b[$Oc],225).e,293),10526880);Y1b(Xu(Xu(i.b[_Oc],225).e,293),10526880);Y1b(Xu(Xu(i.b[aPc],225).e,293),10526880);TLb(Xu(i.b[bPc],225),new ojb(0.145));TLb(Xu(i.b[cPc],225),new ojb(0.75));TLb(Xu(i.b[dPc],225),new ojb(16));D5b(Xu(Xu(i.b[ePc],225).e,301),0.001,0.001,0.998,0.998);f=new l1b(g);f.d=true;a.d=new r6b(b,f);e4b(a.d.ab,-50);O4b(a.d.fb,100);uOb(a.d,true);a.d.V=true;pOb(a.G,a.d)}
var UOc='enableBump',WOc='tBeckmann',bPc='uRoughness',cPc='uSpecularBrightness';OT(1112,1,jJc);_.Db=function Mic(){Z7b(this.c,new Pic(this.b))};OT(1113,967,{323:1},Pic);_.ob=function Qic(){var a,b,c,d,e,f,g;this.b=new pPb(27,bGb(this.F.n),1,10000);R4b(this.b.ab,1200);pOb(this.G,new QWb(5592405));d=new JXb(16777215,1.5,1000);P4b(d.ab,0,0,600);pOb(this.G,d);f=new RXb(1);P4b(f.ab,0.05,0.05,1);pOb(this.G,f);f.ab.rf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new rXb(16777215,0.85);P4b(a.ab,1,-0.5,1);X1b(a.M,0.6,1,0.85);pOb(this.G,a);a.ab.rf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new rXb(16777215,0.85);P4b(b.ab,1,-0.5,-1);pOb(this.G,b);new EFc(new Drc);c=new EFc(new $Fc);c.b=true;g=new pNb(512,512);HMb(g,(ODb(),IDb));FMb(g,(DDb(),BDb));CMb(g,(ZBb(),XBb));g.g=false;this.c=new uFc(this.F.n,g);new _vc(TOc,new Tic(this));zGb(this.F.n,new _1b(5001561),1);e=new sFb(this.F.n,this.G);e.i=false;vGb(this.F.n,false);this.F.n.bb=true;this.F.n.cb=true};_.pb=function Ric(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){f2b(this.d.db,0.05*(b-this.d.db.e));e2b(this.d.db,0.05*(c-this.d.db.d))}XFb(this.F.n);nGb(this.F.n,this.G,this.b,null,false)};_.e=0;_.f=0;OT(1114,1,{},Tic);_.Ef=function Uic(a,b){Oic(this.b,Xu(b,241))};OT(1233,731,YIc,Drc);_.Qd=function Erc(){};var Frc;OT(1234,1,{},Krc);_.Td=function Lrc(){return Trc(),Irc};_.Ud=function Mrc(){return Urc(),Jrc};var Irc,Jrc;OT(1235,1,{},Orc);_.tc=function Prc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};OT(1236,1,{},Rrc);_.tc=function Src(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};OT(1311,731,YIc,Tuc);_.Qd=function Uuc(){VHb(this,qMb());VHb(this,rMb());VHb(this,sMb());OHb(this,UOc,new VLb((mMb(),bMb),Wjb(0)));OHb(this,VOc,new VLb(bMb,Wjb(0)));OHb(this,XOc,new ULb(eMb));OHb(this,WOc,new ULb(eMb));OHb(this,_Oc,new VLb(ZLb,new _1b(15658734)));OHb(this,aPc,new VLb(ZLb,new _1b(1118481)));OHb(this,$Oc,new VLb(ZLb,new _1b(328965)));OHb(this,fPc,new VLb($Lb,new ojb(1)));OHb(this,bPc,new VLb($Lb,new ojb(0.15)));OHb(this,cPc,new VLb($Lb,new ojb(0.75)));OHb(this,YOc,new ULb(eMb));OHb(this,dPc,new VLb($Lb,new ojb(1)));OHb(this,ZOc,new ULb(eMb));OHb(this,ePc,new VLb(kMb,new H5b(0,0,1,1)));OHb(this,'uWrapRGB',new VLb(iMb,new V4b(0.75,0.375,0.1875)))};_.Rd=function Vuc(a){var b,c;c=new Aqb(Nu(LR,FHc,1,[gPc,hPc,iPc]));b=new Aqb(Nu(LR,FHc,1,[jPc,kPc,lPc]));XHb(this,dIb(a,Nu(OR,FHc,173,[c,b])))};_.Sd=function Wuc(a){var b,c;c=new Aqb(Nu(LR,FHc,1,[mPc]));b=new Aqb(Nu(LR,FHc,1,[nPc]));YHb(this,dIb(a,Nu(OR,FHc,173,[c,b])))};var Xuc;OT(1312,1,{},avc);_.Td=function bvc(){return jvc(),$uc};_.Ud=function cvc(){return kvc(),_uc};var $uc,_uc;OT(1313,1,{},evc);_.tc=function fvc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};OT(1314,1,{},hvc);_.tc=function ivc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var MM=cjb(iOc,'MaterialsBumpmapSkin$DemoScene',1113),LM=cjb(iOc,'MaterialsBumpmapSkin$DemoScene$1',1114),SO=cjb(bOc,'BeckmannShader',1233),RO=cjb(bOc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1234),PO=cjb(bOc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1235),QO=cjb(bOc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1236),fP=cjb(bOc,'SkinSimpleShader',1311),eP=cjb(bOc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1312),cP=cjb(bOc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1313),dP=cjb(bOc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1314);wJc(Ii)(18);