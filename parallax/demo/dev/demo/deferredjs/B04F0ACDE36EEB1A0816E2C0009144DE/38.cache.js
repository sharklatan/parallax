function Duc(){}
function Huc(){}
function Kuc(){}
function KNc(){}
function nNc(){}
function rNc(){}
function uNc(){}
function GNc(){}
function NNc(){}
function ZNc(){}
function Ozc(){}
function Szc(){}
function Vzc(){}
function bOc(){}
function eOc(){}
function ePc(){}
function aPc(){}
function hPc(){}
function KZb(a,b){a.b=b}
function F8b(a,b){a.k=b}
function quc(a){this.a=a}
function tuc(a){this.a=a}
function wuc(a){this.a=a}
function zuc(){zuc=uQc;yuc=new Duc}
function Muc(){Muc=uQc;Buc=new Huc}
function Nuc(){Nuc=uQc;Cuc=new Kuc}
function PNc(){PNc=uQc;ENc=new KNc}
function jNc(){jNc=uQc;iNc=new nNc}
function wNc(){wNc=uQc;lNc=new rNc}
function xNc(){xNc=uQc;mNc=new uNc}
function CNc(){CNc=uQc;BNc=new GNc}
function QNc(){QNc=uQc;FNc=new NNc}
function VNc(){VNc=uQc;UNc=new ZNc}
function gOc(){gOc=uQc;XNc=new bOc}
function hOc(){hOc=uQc;YNc=new eOc}
function YOc(){YOc=uQc;XOc=new aPc}
function Yzc(){Yzc=uQc;Nzc=new Vzc}
function Kzc(){Kzc=uQc;Jzc=new Ozc}
function Xzc(){Xzc=uQc;Mzc=new Szc}
function jPc(){jPc=uQc;$Oc=new ePc}
function kPc(){kPc=uQc;_Oc=new hPc}
function nuc(a,b){this.a=a;this.b=b}
function Fzc(){CJb.call(this,(Kzc(),Jzc))}
function gNc(){CJb.call(this,(jNc(),iNc))}
function zNc(){CJb.call(this,(CNc(),BNc))}
function SNc(){CJb.call(this,(VNc(),UNc))}
function VOc(){CJb.call(this,(YOc(),XOc))}
function guc(a){a.w+=1;a.w==3&&xQb(a.v,true)}
function huc(){Eac.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function fuc(a,b,c,d){var e,f,g;g=new q3b(b);QNb(qu(NSb(i$b(g).i,IXc),227),c);f=new k9b;e=new x8b(new CXb(a.u,a.t),g);X6b(e._,-500);mQb(f,e);RHb(a.G.k,f,a.c,d,true)}
function euc(a,b,c,d,e,f){var g,i;g=new i1b;b1b(g,new e4b(16755285));g.j=true;g1b(g,(a_b(),Z$b));i=new H8b(b,g);i.d=c;F8b(i,yu(600*qlb()));V6b(i._,d,e,f);s4b(i.cb,1.5707963267948966);i.S=true;i.U=true;mQb(a.H,i);Oqb(a.n,i)}
var SYc='enableDiffuse1',TYc='enableDiffuse2',NYc='heightMap',YYc='heightmap',ZYc='r',RYc='tDetail',PYc='tDiffuse1',QYc='tDiffuse2',VYc='uRepeatOverlay';GU(1241,1,cSc);_.zb=function cuc(){eac(this.b,new huc(this.a))};GU(1242,973,{78:1,186:1,339:1},huc);_.Td=function iuc(a){guc(this)};_.Fd=function juc(a){this.u=a.a.Z;this.t=a.a.Y;QNb(qu(NSb(i$b(this.f.b).i,LYc),227),new jkb(6/this.u));QNb(qu(NSb(i$b(this.D.b).i,MYc),227),new jkb(6/this.t))};_.nb=function kuc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;ft((cyb(),byb),(myb(),lyb),this);this.b=new nRb(40,FHb(this.G.k),2,4000);this.u=this.G.k.Z;this.t=this.G.k.Y;this.c=new aRb(this.u,this.t,-10000,10000);V6b(this.b._,-1200,800,1200);X6b(this.c._,100);this.s=new k9b;mQb(this.s,this.c);this.d=new hxb(this.b,this.G.c);U6b(this.d.v,0);this.d.s=1;this.d.A=1.2;exb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;cxb(this.d,0.15);i9b(this.H,new $8b(328965,2000,4000));mQb(this.H,new SYb(1118481));this.e=new tZb(16777215,1.15);V6b(this.e._,500,2000,0);mQb(this.H,this.e);this.q=new MZb(16729088,1.5,0);U6b(this.q._,0);mQb(this.H,this.q);this.g=new mPb(256,256);EOb(this.g,(pFb(),kFb));COb(this.g,(eFb(),cFb));zOb(this.g,(aDb(),$Cb));AOb(this.g,false);this.o=new mPb(256,256);EOb(this.o,kFb);COb(this.o,cFb);zOb(this.o,$Cb);AOb(this.o,false);n=new SNc;u=n.i;QNb(qu(u.a[yUc],227),new jkb(0.05));h6b(qu(qu(u.a[mYc],227).d,298),256,256);QNb(qu(u.a[NYc],227),this.g);s=new mPb(2048,2048);EOb(s,kFb);COb(s,cFb);zOb(s,$Cb);s.r=false;LOb(s,(HGb(),GGb));MOb(s,GGb);c=new SOb('./static/textures/terrain/grasslight-big.jpg',new nuc(this,s));LOb(c,GGb);MOb(c,GGb);d=new SOb('./static/textures/terrain/backgrounddetailed6.jpg',this);LOb(d,GGb);MOb(d,GGb);b=new SOb('./static/textures/terrain/grasslight-big-nm.jpg',this);LOb(b,GGb);MOb(b,GGb);t=new Fzc;this.B=t.i;QNb(qu(NSb(this.B,gYc),227),this.o);QNb(qu(NSb(this.B,hYc),227),new jkb(3.5));QNb(qu(NSb(this.B,OYc),227),this.g);QNb(qu(NSb(this.B,PYc),227),c);QNb(qu(NSb(this.B,QYc),227),d);QNb(qu(NSb(this.B,iYc),227),s);QNb(qu(NSb(this.B,RYc),227),b);QNb(qu(NSb(this.B,SYc),227),(kjb(),kjb(),jjb));QNb(qu(NSb(this.B,TYc),227),jjb);QNb(qu(NSb(this.B,GXc),227),jjb);b4b(qu(qu(NSb(this.B,MXc),227).d,294),16777215);b4b(qu(qu(NSb(this.B,NXc),227).d,294),16777215);b4b(qu(qu(NSb(this.B,LXc),227).d,294),1118481);QNb(qu(NSb(this.B,lYc),227),new jkb(30));QNb(qu(NSb(this.B,UYc),227),new jkb(375));h6b(qu(qu(NSb(this.B,VYc),227).d,298),6,6);this.A=new Gtb;cpb(this.A,pYc,new SNb((jOb(),XNb),new jkb(1)));cpb(this.A,WYc,new SNb(dOb,new l6b(1.5,1.5)));cpb(this.A,XYc,new SNb(dOb,new l6b(0,0)));this.k=new Gtb;i=new p3b((zuc(),yuc));xJb(i$b(i),this.A);i.c=false;i.b=true;cpb(this.k,YYc,i);j=new q3b(n);xJb(i$b(j),u);j.c=false;j.b=true;cpb(this.k,BXc,j);k=new q3b(t);xJb(i$b(k),this.B);k.c=true;k.b=true;cpb(this.k,'terrain',k);o=new CXb(this.u,this.t);p=new p0b;j0b(p,new e4b(0));this.r=new x8b(o,p);X6b(this.r._,-500);mQb(this.s,this.r);g=new DXb(6000,6000,64,64);SRb(g);this.v=new x8b(g,k);V6b(this.v._,0,-125,0);r4b(this.v.cb,-1.5707963267948966);xQb(this.v,false);mQb(this.H,this.v);bIb(this.G.k,this.H.a.c,1);this.G.k.ab=true;this.G.k.bb=true;ZHb(this.G.k,false);q=new zKc(this.H,this.b);f=new aKc(0.6);e=new DKc(new JKc);QNb(qu(NSb(i$b(e.b).i,SXc),227),new jkb(0.65));this.f=new DKc(new gNc);this.D=new DKc(new VOc);QNb(qu(NSb(i$b(this.f.b).i,LYc),227),new jkb(6/this.u));QNb(qu(NSb(i$b(this.D.b).i,MYc),227),new jkb(6/this.t));QNb(qu(NSb(i$b(this.f.b).i,ZYc),227),new jkb(0.5));QNb(qu(NSb(i$b(this.D.b).i,ZYc),227),new jkb(0.5));this.D.a=true;r=new mPb(this.u,this.t);EOb(s,jFb);COb(s,cFb);zOb(s,$Cb);s.f=false;s.r=false;a=new sKc(this.G.k,r);Oqb(a.c,q);Oqb(a.c,f);Oqb(a.c,e);qKc(a,this.f);qKc(a,this.D);this.n=new Yqb;new NAc('./static/models/animated/parrot.js',new quc(this));new NAc(KYc,new tuc(this));new NAc('./static/models/animated/stork.js',new wuc(this));this.p=rh()};_.ob=function luc(a){var b,c,d,e,f;b=(rh()-this.p)*0.001;if(this.v.gb){fxb(this.d);this.j=B4b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;a4b(this.H.a.c,0.1,e,this.j);bIb(this.G.k,this.H.a.c,1);aZb(this.e,0.1+f*1.0499999999999998);KZb(this.q,0.9+f*0.6);QNb(qu(NSb(this.B,hYc),227),new jkb(0.6+f*2.9));if(this.C){this.a=B4b(this.a+-7.5E-4,0,0.05);QNb(qu(Zob(this.A,pYc),227),new jkb(qu(qu(Zob(this.A,pYc),227).d,150).a+b*this.a));d6b(qu(qu(Zob(this.A,XYc),227).d,298),b*0.05);i6b(qu(qu(NSb(this.B,$Yc),227).d,298),4*qu(qu(Zob(this.A,XYc),227).d,298).c);XTb(this.r,qu(Zob(this.k,YYc),283));RHb(this.G.k,this.s,this.c,this.g,true);XTb(this.r,qu(Zob(this.k,BXc),283));RHb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=qu(Rqb(this.n,c),306);G8b(d,yu(1000*b));d6b(d._,d.d*b);d._.c>2000&&i6b(d._,-1500-qlb()*500)}RHb(this.G.k,this.H,this.b,null,false)}this.p=rh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;GU(1243,1,{},nuc);_.Td=function ouc(a){guc(this.a);fuc(this.a,new zNc,a,this.b)};GU(1244,1,{},quc);_.yf=function ruc(a,b){IAc((qu(a,340),qu(b,243)));euc(this.a,qu(b,243),500,-3500,500,700);euc(this.a,qu(b,243),500,-3000-qlb()*500,500,-200);euc(this.a,qu(b,243),500,-3000-qlb()*500,500,200);euc(this.a,qu(b,243),500,-3000-qlb()*500,500,1000)};GU(1245,1,{},tuc);_.yf=function uuc(a,b){IAc((qu(a,340),qu(b,243)));euc(this.a,qu(b,243),1000,-3000-qlb()*500,350,40)};GU(1246,1,{},wuc);_.yf=function xuc(a,b){IAc((qu(a,340),qu(b,243)));euc(this.a,qu(b,243),1000,-3000-qlb()*500,350,340)};var yuc;GU(1247,1,{},Duc);_.Nd=function Euc(){return Muc(),Buc};_.Od=function Fuc(){return Nuc(),Cuc};var Buc,Cuc;GU(1248,1,{},Huc);_.mc=function Iuc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};GU(1249,1,{},Kuc);_.mc=function Luc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};GU(1356,731,RRc,Fzc);_.Kd=function Gzc(){xJb(this,nOb());xJb(this,oOb());xJb(this,pOb());qJb(this,SYc,new SNb((jOb(),$Nb),(kjb(),kjb(),ijb)));qJb(this,TYc,new SNb($Nb,ijb));qJb(this,GXc,new SNb($Nb,ijb));qJb(this,_Yc,new SNb($Nb,ijb));qJb(this,PYc,new RNb(bOb));qJb(this,QYc,new RNb(bOb));qJb(this,RYc,new RNb(bOb));qJb(this,gYc,new RNb(bOb));qJb(this,iYc,new RNb(bOb));qJb(this,OYc,new RNb(bOb));qJb(this,hYc,new SNb(XNb,new jkb(1)));qJb(this,aZc,new SNb(XNb,new jkb(0)));qJb(this,UYc,new SNb(XNb,new jkb(1)));qJb(this,MXc,new SNb(WNb,new e4b(15658734)));qJb(this,NXc,new SNb(WNb,new e4b(1118481)));qJb(this,LXc,new SNb(WNb,new e4b(328965)));qJb(this,lYc,new SNb(XNb,new jkb(30)));qJb(this,SXc,new SNb(XNb,new jkb(1)));qJb(this,'uRepeatBase',new SNb(dOb,new l6b(1,1)));qJb(this,VYc,new SNb(dOb,new l6b(1,1)));qJb(this,$Yc,new SNb(dOb,new l6b(0,0)))};_.Ld=function Hzc(a){var b,c;c=new urb(gu(BS,zQc,1,[TXc,UXc]));b=new urb(gu(BS,zQc,1,[WXc,XXc,YXc]));zJb(this,HJb(a,gu(ES,zQc,173,[c,b])))};_.Md=function Izc(a){var b,c;c=new urb(gu(BS,zQc,1,[ZXc]));b=new urb(gu(BS,zQc,1,[$Xc]));AJb(this,HJb(a,gu(ES,zQc,173,[c,b])))};var Jzc;GU(1357,1,{},Ozc);_.Nd=function Pzc(){return Xzc(),Mzc};_.Od=function Qzc(){return Yzc(),Nzc};var Mzc,Nzc;GU(1358,1,{},Szc);_.mc=function Tzc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};GU(1359,1,{},Vzc);_.mc=function Wzc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};GU(1497,731,RRc,gNc);_.Kd=function hNc(){qJb(this,IXc,new RNb((jOb(),bOb)));qJb(this,LYc,new SNb(XNb,new jkb(0.001953125)));qJb(this,ZYc,new SNb(XNb,new jkb(0.35)))};var iNc;GU(1498,1,{},nNc);_.Nd=function oNc(){return wNc(),lNc};_.Od=function pNc(){return xNc(),mNc};var lNc,mNc;GU(1499,1,{},rNc);_.mc=function sNc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};GU(1500,1,{},uNc);_.mc=function vNc(){return DYc};GU(1503,731,RRc,zNc);_.Kd=function ANc(){qJb(this,IXc,new RNb((jOb(),bOb)))};var BNc;GU(1504,1,{},GNc);_.Nd=function HNc(){return PNc(),ENc};_.Od=function INc(){return QNc(),FNc};var ENc,FNc;GU(1505,1,{},KNc);_.mc=function LNc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};GU(1506,1,{},NNc);_.mc=function ONc(){return DYc};GU(1509,731,RRc,SNc);_.Kd=function TNc(){qJb(this,NYc,new RNb((jOb(),bOb)));qJb(this,mYc,new SNb(dOb,new l6b(512,512)));qJb(this,WYc,new SNb(dOb,new l6b(1,1)));qJb(this,yUc,new SNb(XNb,new jkb(0.05)))};var UNc;GU(1510,1,{},ZNc);_.Nd=function $Nc(){return gOc(),XNc};_.Od=function _Nc(){return hOc(),YNc};var XNc,YNc;GU(1511,1,{},bOc);_.mc=function cOc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};GU(1512,1,{},eOc);_.mc=function fOc(){return DYc};GU(1527,731,RRc,VOc);_.Kd=function WOc(){qJb(this,IXc,new RNb((jOb(),bOb)));qJb(this,MYc,new SNb(XNb,new jkb(0.001953125)));qJb(this,ZYc,new SNb(XNb,new jkb(0.35)))};var XOc;GU(1528,1,{},aPc);_.Nd=function bPc(){return jPc(),$Oc};_.Od=function cPc(){return kPc(),_Oc};var $Oc,_Oc;GU(1529,1,{},ePc);_.mc=function fPc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};GU(1530,1,{},hPc);_.mc=function iPc(){return DYc};var qO=Zjb(YWc,'TerrainDynamic$DemoScene',1242),mO=Zjb(YWc,'TerrainDynamic$DemoScene$1',1243),nO=Zjb(YWc,'TerrainDynamic$DemoScene$2',1244),oO=Zjb(YWc,'TerrainDynamic$DemoScene$3',1245),pO=Zjb(YWc,'TerrainDynamic$DemoScene$4',1246),tR=Zjb(bZc,cZc,1509),bP=Zjb(OWc,'TerrainShader',1356),lR=Zjb(bZc,'HorizontalTiltShiftShader',1497),FR=Zjb(bZc,'VerticalTiltShiftShader',1527),tO=Zjb(YWc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1247),rO=Zjb(YWc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1248),sO=Zjb(YWc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1249),sR=Zjb(bZc,dZc,1510),qR=Zjb(bZc,eZc,1511),rR=Zjb(bZc,fZc,1512),aP=Zjb(OWc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1357),$O=Zjb(OWc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1358),_O=Zjb(OWc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1359),kR=Zjb(bZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1498),iR=Zjb(bZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1499),jR=Zjb(bZc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1500),ER=Zjb(bZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1528),CR=Zjb(bZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1529),DR=Zjb(bZc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1530),pR=Zjb(bZc,'LuminosityShader',1503),oR=Zjb(bZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1504),mR=Zjb(bZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1505),nR=Zjb(bZc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1506);qSc(xi)(38);