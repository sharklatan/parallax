function Wuc(){}
function $uc(){}
function bvc(){}
function tzc(){}
function xzc(){}
function Azc(){}
function $kc(a){this.a=a}
function Dzc(){Dzc=uQc;szc=new Azc}
function pzc(){pzc=uQc;ozc=new tzc}
function Czc(){Czc=uQc;rzc=new xzc}
function Suc(){Suc=uQc;Ruc=new Wuc}
function dvc(){dvc=uQc;Uuc=new $uc}
function evc(){evc=uQc;Vuc=new bvc}
function Puc(){CJb.call(this,(Suc(),Ruc))}
function kzc(){CJb.call(this,(pzc(),ozc))}
function Wkc(){Eac.call(this);this.d=0;this.e=0}
function Vkc(a,b){var c,d,e,f,g,i;d=new ROb(CXc);d.k=4;h6b(d.B,0.998,0.998);h6b(d.A,0.001,0.001);LOb(d,(HGb(),GGb));MOb(d,GGb);zOb(d,(aDb(),$Cb));e=new ROb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');h6b(e.B,0.998,0.998);h6b(e.A,0.001,0.001);LOb(e,GGb);MOb(e,GGb);zOb(e,$Cb);c=new ROb(EXc);h6b(c.B,0.998,0.998);h6b(c.A,0.001,0.001);LOb(c,GGb);MOb(c,GGb);zOb(c,$Cb);g=new kzc;i=g.i;QNb(qu(i.a[FXc],227),(kjb(),kjb(),jjb));QNb(qu(i.a[GXc],227),jjb);QNb(qu(i.a[HXc],227),a.b.f);QNb(qu(i.a[IXc],227),c);QNb(qu(i.a[JXc],227),d);QNb(qu(i.a[KXc],227),e);b4b(qu(qu(i.a[LXc],227).d,294),10526880);b4b(qu(qu(i.a[MXc],227).d,294),10526880);b4b(qu(qu(i.a[NXc],227).d,294),10526880);QNb(qu(i.a[OXc],227),new jkb(0.145));QNb(qu(i.a[PXc],227),new jkb(0.75));QNb(qu(i.a[QXc],227),new jkb(16));J7b(qu(qu(i.a[RXc],227).d,302),0.001,0.001,0.998,0.998);f=new q3b(g);f.c=true;a.c=new x8b(b,f);j6b(a.c._,-50);U6b(a.c.eb,100);rQb(a.c,true);a.c.U=true;mQb(a.H,a.c)}
var FXc='enableBump',HXc='tBeckmann',OXc='uRoughness',PXc='uSpecularBrightness';GU(1118,1,cSc);_.zb=function Tkc(){eac(this.b,new Wkc(this.a))};GU(1119,973,{324:1},Wkc);_.nb=function Xkc(){var a,b,c,d,e,f,g;this.a=new nRb(27,FHb(this.G.k),1,10000);X6b(this.a._,1200);mQb(this.H,new SYb(5592405));d=new MZb(16777215,1.5,1000);V6b(d._,0,0,600);mQb(this.H,d);f=new UZb(1);V6b(f._,0.05,0.05,1);mQb(this.H,f);f._.lf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new tZb(16777215,0.85);V6b(a._,1,-0.5,1);a4b(a.L,0.6,1,0.85);mQb(this.H,a);a._.lf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new tZb(16777215,0.85);V6b(b._,1,-0.5,-1);mQb(this.H,b);new DKc(new Puc);c=new DKc(new MLc);c.a=true;g=new mPb(512,512);EOb(g,(pFb(),jFb));COb(g,(eFb(),cFb));zOb(g,(aDb(),$Cb));g.f=false;this.b=new sKc(this.G.k,g);new NAc(DXc,new $kc(this));bIb(this.G.k,new e4b(5001561),1);e=new WGb(this.G.k,this.H);e.g=false;ZHb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function Ykc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){k4b(this.c.cb,0.05*(b-this.c.cb.d));j4b(this.c.cb,0.05*(c-this.c.cb.c))}yHb(this.G.k,true);RHb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;GU(1120,1,{},$kc);_.yf=function _kc(a,b){Vkc(this.a,qu(b,243))};GU(1252,731,RRc,Puc);_.Kd=function Quc(){};var Ruc;GU(1253,1,{},Wuc);_.Nd=function Xuc(){return dvc(),Uuc};_.Od=function Yuc(){return evc(),Vuc};var Uuc,Vuc;GU(1254,1,{},$uc);_.mc=function _uc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};GU(1255,1,{},bvc);_.mc=function cvc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};GU(1350,731,RRc,kzc);_.Kd=function lzc(){xJb(this,nOb());xJb(this,oOb());xJb(this,pOb());qJb(this,FXc,new SNb((jOb(),$Nb),Rkb(0)));qJb(this,GXc,new SNb($Nb,Rkb(0)));qJb(this,IXc,new RNb(bOb));qJb(this,HXc,new RNb(bOb));qJb(this,MXc,new SNb(WNb,new e4b(15658734)));qJb(this,NXc,new SNb(WNb,new e4b(1118481)));qJb(this,LXc,new SNb(WNb,new e4b(328965)));qJb(this,SXc,new SNb(XNb,new jkb(1)));qJb(this,OXc,new SNb(XNb,new jkb(0.15)));qJb(this,PXc,new SNb(XNb,new jkb(0.75)));qJb(this,JXc,new RNb(bOb));qJb(this,QXc,new SNb(XNb,new jkb(1)));qJb(this,KXc,new RNb(bOb));qJb(this,RXc,new SNb(hOb,new N7b(0,0,1,1)));qJb(this,'uWrapRGB',new SNb(fOb,new _6b(0.75,0.375,0.1875)))};_.Ld=function mzc(a){var b,c;c=new urb(gu(BS,zQc,1,[TXc,UXc,VXc]));b=new urb(gu(BS,zQc,1,[WXc,XXc,YXc]));zJb(this,HJb(a,gu(ES,zQc,173,[c,b])))};_.Md=function nzc(a){var b,c;c=new urb(gu(BS,zQc,1,[ZXc]));b=new urb(gu(BS,zQc,1,[$Xc]));AJb(this,HJb(a,gu(ES,zQc,173,[c,b])))};var ozc;GU(1351,1,{},tzc);_.Nd=function uzc(){return Czc(),rzc};_.Od=function vzc(){return Dzc(),szc};var rzc,szc;GU(1352,1,{},xzc);_.mc=function yzc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};GU(1353,1,{},Azc);_.mc=function Bzc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var eM=Zjb(VWc,'MaterialsBumpmapSkin$DemoScene',1119),dM=Zjb(VWc,'MaterialsBumpmapSkin$DemoScene$1',1120),yO=Zjb(OWc,'BeckmannShader',1252),xO=Zjb(OWc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1253),vO=Zjb(OWc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1254),wO=Zjb(OWc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1255),ZO=Zjb(OWc,'SkinSimpleShader',1350),YO=Zjb(OWc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1351),WO=Zjb(OWc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1352),XO=Zjb(OWc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1353);qSc(xi)(18);