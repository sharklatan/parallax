function qKb(){}
function uKb(){}
function xKb(){}
function mKb(){mKb=eKc;lKb=new qKb}
function zKb(){zKb=eKc;oKb=new uKb}
function AKb(){AKb=eKc;pKb=new xKb}
function jKb(){AIb.call(this,(mKb(),lKb))}
function Xkc(){H9b.call(this);this.c=0;this.d=0}
aU(755,731,CLc,jKb);_.Ld=function kKb(){oIb(this,'mRefractionRatio',new QMb((hNb(),VMb),new Njb(1.02)));oIb(this,'mFresnelBias',new QMb(VMb,new Njb(0.1)));oIb(this,'mFresnelPower',new QMb(VMb,new Njb(2)));oIb(this,'mFresnelScale',new QMb(VMb,new Njb(1)));oIb(this,QRc,new PMb(_Mb))};var lKb;aU(756,1,{},qKb);_.Od=function rKb(){return zKb(),oKb};_.Pd=function sKb(){return AKb(),pKb};var oKb,pKb;aU(757,1,{},uKb);_.nc=function vKb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};aU(758,1,{},xKb);_.nc=function yKb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};aU(1140,1,PLc);_.zb=function Vkc(){h9b(this.b,new Xkc(this.a))};aU(1141,973,{327:1},Xkc);_.nb=function Ykc(){var a,b,c,d,e,f,g,i,j;this.a=new nQb(60,DGb(this.G.k),1,100000);Z5b(this.a._,3200);this.b=new nQb(60,DGb(this.G.k),1,100000);this.e=new m8b;a=new MWb(100,32,16);j=new YNb('./static/textures/cube/park2/*.jpg');xNb(j,(zCb(),xCb));g=new jKb;OMb(ru(PRb(g.i,QRc),225),j);c=new s2b(g);this.f=new Bqb;for(b=0;b<500;b++){d=new z7b(a,c);k5b(d._,Ukb()*10000-5000);l5b(d._,Ukb()*10000-5000);Z5b(d._,Ukb()*10000-5000);W5b(d.eb,Ukb()*3+1);kPb(this.H,d);rqb(this.f,d)}this.H.W=false;i=new aJb;OMb(ru(PRb(i.i,QRc),225),j);f=new s2b(i);vZb(f,(h_b(),e_b));e=new z7b(new XVb(100000,100000,100000),f);kPb(this.e,e);XGb(this.G.k,false)};_.ob=function Zkc(a){var b,c,d,e;e=1.0E-4*a;f5b(this.a._,(this.c-this.a._.c)*0.05);g5b(this.a._,(-this.d-this.a._.d)*0.05);JPb(this.a,this.H._);n3b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=ru(uqb(this.f,b),304);k5b(d._,5000*Math.cos(e+b));l5b(d._,5000*Math.sin(e+b*1.1))}wGb(this.G.k,true);PGb(this.G.k,this.e,this.b,null,false);PGb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var BM=Bjb(JQc,'MaterialsCubemapFresnel$DemoScene',1141),bG=Bjb(RRc,'FresnelShader',755),aG=Bjb(RRc,'FresnelShader_Resources_default_InlineClientBundleGenerator',756),$F=Bjb(RRc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',757),_F=Bjb(RRc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',758);bMc(xi)(21);