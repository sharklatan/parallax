function qLb(){}
function uLb(){}
function xLb(){}
function Txc(){}
function Xxc(){}
function $xc(){}
function kyc(){}
function oyc(){}
function ryc(){}
function Dyc(){}
function Hyc(){}
function Kyc(){}
function A9b(a,b){a.d=b}
function ALb(){ALb=LQc;pLb=new xLb}
function mLb(){mLb=LQc;lLb=new qLb}
function zLb(){zLb=LQc;oLb=new uLb}
function zyc(){zyc=LQc;yyc=new Dyc}
function gyc(){gyc=LQc;fyc=new kyc}
function tyc(){tyc=LQc;iyc=new oyc}
function uyc(){uyc=LQc;jyc=new ryc}
function Myc(){Myc=LQc;Byc=new Hyc}
function Nyc(){Nyc=LQc;Cyc=new Kyc}
function ayc(){ayc=LQc;Rxc=new Xxc}
function byc(){byc=LQc;Sxc=new $xc}
function Pxc(){Pxc=LQc;Oxc=new Txc}
function xtc(a,b){this.b=a;this.c=b}
function QHb(a,b){BIb(a,b);PHb(a,false)}
function hLb(){TJb.call(this,(mLb(),lLb))}
function Mxc(){TJb.call(this,(Pxc(),Oxc))}
function dyc(){TJb.call(this,(gyc(),fyc))}
function wyc(){TJb.call(this,(zyc(),yyc))}
function j1b(){N$b.call(this);this.b=false;this.c=1}
function ttc(){Vac.call(this);this.u=new q7b(0,1000,-1000);this.s=new p7b}
function h7b(a,b){var c;c=new z5b;x5b(c,b.q,m5b(c,b.Y));return _6b(a,c)}
var PZc='bgColor',RZc='fAspect',OZc='fGodRayIntensity',SZc='fStepSize',FZc='mFar',EZc='mNear',UZc='tColors',VZc='tGodRays',TZc='tInput',QZc='vSunPositionScreenSpace',WZc='varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}';WU(745,727,iSc,hLb);_.Nd=function iLb(){HJb(this,EZc,new hOb((AOb(),mOb),new Akb(1)));HJb(this,FZc,new hOb(mOb,new Akb(2000)));HJb(this,oYc,new hOb(mOb,new Akb(1)))};_.Od=function jLb(a){var b,c;c=new Lrb(vu(RS,RQc,1,[GZc]));b=new Lrb(vu(RS,RQc,1,[HZc]));QJb(this,YJb(a,vu(US,RQc,173,[c,b])))};_.Pd=function kLb(a){var b,c;c=new Lrb(vu(RS,RQc,1,[IZc,JZc]));b=new Lrb(vu(RS,RQc,1,[KZc,LZc,MZc]));RJb(this,YJb(a,vu(US,RQc,173,[c,b])))};var lLb;WU(746,1,{},qLb);_.Qd=function rLb(){return zLb(),oLb};_.Rd=function sLb(){return ALb(),pLb};var oLb,pLb;WU(747,1,{},uLb);_.pc=function vLb(){return 'uniform float mNear;\r\nuniform float mFar;\r\nuniform float opacity;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n[*]\r\n\r\n\t#ifdef USE_LOGDEPTHBUF_EXT\r\n\r\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n\r\n\t#else\r\n\r\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n\t#endif\r\n\r\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\r\n\tgl_FragColor = vec4( vec3( color ), opacity );\r\n\r\n}'};WU(748,1,{},xLb);_.pc=function yLb(){return NZc};WU(917,910,{280:1,283:1},j1b);_.Pe=function k1b(){var a;return a=new j1b,v$b(this,a),a.b=this.b,a.c=this.c,a};_.Qe=function l1b(){return new hLb};_.Me=function m1b(){return this.c};_.Ne=function n1b(){return this.b};_.Re=function o1b(a,b){var c;A$b(this,b);c=z$b(this).j;if(a.cZ==eH){fOb(Fu(c.b[EZc],227),new Akb(Fu(a,237).e));fOb(Fu(c.b[FZc],227),new Akb(Fu(a,237).c))}fOb(Fu(c.b[oYc],227),new Akb(this.$))};_.b=false;_.c=0;WU(1224,1,vSc);_.Db=function rtc(){vac(this.c,new ttc(this.b))};WU(1225,969,{337:1},ttc);_.ob=function utc(){var a,b,c,d;this.b=new ERb(70,WHb(this.H.n),1,3000);m7b(this.b.ab,200);this.c=new j1b;c=new G0b;A0b(c,new v4b(0));E0b(c,(o0b(),l0b));new cBc('./static/models/obj/tree/tree.js',new xtc(this,c));a=new _Xb(1,20,10);this.t=new O8b(a,c);j7b(this.t.fb,20);DQb(this.I,this.t);EIb(this.H.n,false);oIb(this.H.n,false);rIb(this.H.n,1297,1);this.k=new B9b;this.j=new rRb(this.H.n.$,this.H.n.Z,-10000,10000);m7b(this.j.ab,100);DQb(this.k,this.j);this.o=new DPb(this.H.n.$,this.H.n.Z);VOb(this.o,(GFb(),AFb));TOb(this.o,(vFb(),tFb));QOb(this.o,(rDb(),qDb));this.p=new DPb(this.H.n.$,this.H.n.Z);VOb(this.p,AFb);TOb(this.p,tFb);QOb(this.p,qDb);d=~~(this.H.n.$/4);b=~~(this.H.n.Z/4);this.q=new DPb(d,b);VOb(this.q,AFb);TOb(this.q,tFb);QOb(this.q,qDb);this.r=new DPb(d,b);VOb(this.r,AFb);TOb(this.r,tFb);QOb(this.r,qDb);this.f=new H3b(new dyc);this.d=new H3b(new Mxc);fOb(Fu(cTb(z$b(this.d).j,OZc),227),new Akb(0.75));this.e=new H3b(new wyc);s4b(Fu(Fu(cTb(z$b(this.e).j,PZc),227).e,294),1297);s4b(Fu(Fu(cTb(z$b(this.e).j,WYc),227).e,294),16772608);this.n=new O8b(new QXb(this.H.n.$,this.H.n.Z),this.f);m7b(this.n.ab,-9900);DQb(this.k,this.n)};_.pb=function vtc(a){var b,c,d,e,f,g;f=a/4000;z6b(this.t.ab,200*Alb(f));m7b(this.t.ab,200*Jlb(f)-100);u6b(this.b.ab,(this.g-this.b.ab.d)*0.036);v6b(this.b.ab,(-this.i-this.b.ab.e)*0.036);aRb(this.b,this.I.ab);h7b(this.s.lf(this.u),this.b);z6b(this.s,(this.s.d+1)/2);A6b(this.s,(this.s.e+1)/2);y6b(Fu(Fu(cTb(z$b(this.f).j,QZc),227).e,298),this.s.d,this.s.e);y6b(Fu(Fu(cTb(z$b(this.e).j,QZc),227).e,298),this.s.d,this.s.e);QHb(this.H.n,this.o);g=this.H.n.$;b=this.H.n.Z;d=0.74*b;e=0.74*b;z6b(this.s,this.s.d*g);A6b(this.s,this.s.e*b);CIb(this.H.n,Nu(this.s.d-e/2),Nu(this.s.e-d/2),Nu(e),Nu(d));VHb(this.H.n,true);fOb(Fu(cTb(z$b(this.e).j,RZc),227),new Akb(g/b));A9b(this.k,this.e);gIb(this.H.n,this.k,this.j,this.o,false);VHb(this.H.n,false);A9b(this.I,null);gIb(this.H.n,this.I,this.b,this.o,false);A9b(this.I,this.c);gIb(this.H.n,this.I,this.b,this.p,true);c=Glb(6,-1);fOb(Fu(cTb(z$b(this.f).j,SZc),227),new Akb(c));fOb(Fu(cTb(z$b(this.f).j,TZc),227),this.p);A9b(this.k,this.f);gIb(this.H.n,this.k,this.j,this.r,false);c=Glb(6,-2);fOb(Fu(cTb(z$b(this.f).j,SZc),227),new Akb(c));fOb(Fu(cTb(z$b(this.f).j,TZc),227),this.r);gIb(this.H.n,this.k,this.j,this.q,false);c=Glb(6,-3);fOb(Fu(cTb(z$b(this.f).j,SZc),227),new Akb(c));fOb(Fu(cTb(z$b(this.f).j,TZc),227),this.q);gIb(this.H.n,this.k,this.j,this.r,false);fOb(Fu(cTb(z$b(this.d).j,UZc),227),this.o);fOb(Fu(cTb(z$b(this.d).j,VZc),227),this.r);A9b(this.k,this.d);gIb(this.H.n,this.k,this.j,null,false);A9b(this.k,null)};_.g=0;_.i=0;WU(1226,1,{},xtc);_.Bf=function ytc(a,b){var c;c=new O8b(b,this.c);k7b(c.ab,0,-150,-150);j7b(c.fb,400);c.X=false;h5b(c.W,c.ab,c.bb,c.fb);c.Z=true;DQb(this.b.I,c)};WU(1315,727,iSc,Mxc);_.Nd=function Nxc(){HJb(this,UZc,new gOb((AOb(),sOb)));HJb(this,VZc,new gOb(sOb));HJb(this,OZc,new hOb(mOb,new Akb(0.69)));HJb(this,QZc,new hOb(uOb,new C6b(0.5,0.5)))};var Oxc;WU(1316,1,{},Txc);_.Qd=function Uxc(){return ayc(),Rxc};_.Rd=function Vxc(){return byc(),Sxc};var Rxc,Sxc;WU(1317,1,{},Xxc);_.pc=function Yxc(){return 'varying vec2 vUv;\n\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\n\nvoid main() {\n\n\t// Since THREE.MeshDepthMaterial renders foreground objects white and background\n\t// objects black, the god-rays will be white streaks. Therefore value is inverted\n\t// before being combined with tColors\n\n\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\n\tgl_FragColor.a = 1.0;\n\n}\n'};WU(1318,1,{},$xc);_.pc=function _xc(){return WZc};WU(1321,727,iSc,dyc);_.Nd=function eyc(){HJb(this,TZc,new gOb((AOb(),sOb)));HJb(this,SZc,new hOb(mOb,new Akb(1)));HJb(this,QZc,new hOb(uOb,new C6b(0.5,0.5)))};var fyc;WU(1322,1,{},kyc);_.Qd=function lyc(){return tyc(),iyc};_.Rd=function myc(){return uyc(),jyc};var iyc,jyc;WU(1323,1,{},oyc);_.pc=function pyc(){return "#define TAPS_PER_PASS 6.0\n\nvarying vec2 vUv;\n\nuniform sampler2D tInput;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize; // filter step size\n\nvoid main() {\n\n\t// delta from current pixel to \"sun\" position\n\n\tvec2 delta = vSunPositionScreenSpace - vUv;\n\tfloat dist = length( delta );\n\n\t// Step vector (uv space)\n\n\tvec2 stepv = fStepSize * delta / dist;\n\n\t// Number of iterations between pixel and sun\n\n\tfloat iters = dist/fStepSize;\n\n\tvec2 uv = vUv.xy;\n\tfloat col = 0.0;\n\n\t// This breaks ANGLE in Chrome 22\n\t//\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n/*\n\t// Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n\t// so i've just left the loop\n\n\tfor ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\n\n\t\t\t\t\t// Accumulate samples, making sure we dont walk past the light source.\n\n\t\t\t\t\t// The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n\t\t\t\t\t// mode, with a black border colour. I don't think this is currently\n\t\t\t\t\t// exposed by three.js. As a result there might be artifacts when the\n\t\t\t\t\t// sun is to the left, right or bottom of screen as these cases are\n\t\t\t\t\t// not specifically handled.\n\n\t\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\n\t\tuv += stepv;\n\n\t}\n*/\n\n\t// Unrolling loop manually makes it work in ANGLE\n\n\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\n\tuv += stepv;\n\n\t// Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n\t// objectionable artifacts, in particular near the sun position. The side\n\t// effect is that the result is darker than it should be around the sun, as\n\t// TAPS_PER_PASS is greater than the number of samples actually accumulated.\n\t// When the result is inverted (in the shader 'godrays_combine', this produces\n\t// a slight bright spot at the position of the sun, even when it is occluded.\n\n\tgl_FragColor = vec4( col/TAPS_PER_PASS );\n\tgl_FragColor.a = 1.0;\n\n}\n"};WU(1324,1,{},ryc);_.pc=function syc(){return WZc};WU(1327,727,iSc,wyc);_.Nd=function xyc(){HJb(this,QZc,new hOb((AOb(),uOb),new C6b(0.5,0.5)));HJb(this,RZc,new hOb(mOb,new Akb(1)));HJb(this,WYc,new hOb(lOb,new v4b(16772608)));HJb(this,PZc,new hOb(lOb,new v4b(0)))};var yyc;WU(1328,1,{},Dyc);_.Qd=function Eyc(){return Myc(),Byc};_.Rd=function Fyc(){return Nyc(),Cyc};var Byc,Cyc;WU(1329,1,{},Hyc);_.pc=function Iyc(){return 'varying vec2 vUv;\n\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\n\nuniform vec3 sunColor;\nuniform vec3 bgColor;\n\nvoid main() {\n\n\tvec2 diff = vUv - vSunPositionScreenSpace;\n\n\t// Correct for aspect ratio\n\n\tdiff.x *= fAspect;\n\n\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\n\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\n\n\tgl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\n\tgl_FragColor.w = 1.0;\n\n}\n'};WU(1330,1,{},Kyc);_.pc=function Lyc(){return WZc};var qO=okb(uXc,'PostprocessingGodrays$DemoScene',1225),pO=okb(uXc,'PostprocessingGodrays$DemoScene$1',1226),aJ=okb(XZc,'MeshDepthMaterial',917),YO=okb(kXc,'GodRaysGenerateShader',1321),UO=okb(kXc,'GodRaysCombineShader',1315),aP=okb(kXc,'GodraysFakeSunShader',1327),mG=okb(AYc,'DepthShader',745),XO=okb(kXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator',1322),VO=okb(kXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$1',1323),WO=okb(kXc,'GodRaysGenerateShader_Resources_default_InlineClientBundleGenerator$2',1324),TO=okb(kXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator',1316),RO=okb(kXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$1',1317),SO=okb(kXc,'GodRaysCombineShader_Resources_default_InlineClientBundleGenerator$2',1318),_O=okb(kXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator',1328),ZO=okb(kXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$1',1329),$O=okb(kXc,'GodraysFakeSunShader_Resources_default_InlineClientBundleGenerator$2',1330),lG=okb(AYc,'DepthShader_Resources_default_InlineClientBundleGenerator',746),jG=okb(AYc,'DepthShader_Resources_default_InlineClientBundleGenerator$1',747),kG=okb(AYc,'DepthShader_Resources_default_InlineClientBundleGenerator$2',748);JSc(Hi)(40);