function lvc(){}
function pvc(){}
function svc(){}
function Kzc(){}
function Ozc(){}
function Rzc(){}
function plc(a){this.b=a}
function hvc(){hvc=LQc;gvc=new lvc}
function uvc(){uvc=LQc;jvc=new pvc}
function vvc(){vvc=LQc;kvc=new svc}
function Gzc(){Gzc=LQc;Fzc=new Kzc}
function Tzc(){Tzc=LQc;Izc=new Ozc}
function Uzc(){Uzc=LQc;Jzc=new Rzc}
function Bzc(){TJb.call(this,(Gzc(),Fzc))}
function evc(){TJb.call(this,(hvc(),gvc))}
function llc(){Vac.call(this);this.e=0;this.f=0}
function klc(a,b){var c,d,e,f,g,i;d=new gPb($Xc);d.n=4;y6b(d.C,0.998,0.998);y6b(d.B,0.001,0.001);aPb(d,(YGb(),XGb));bPb(d,XGb);QOb(d,(rDb(),pDb));e=new gPb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');y6b(e.C,0.998,0.998);y6b(e.B,0.001,0.001);aPb(e,XGb);bPb(e,XGb);QOb(e,pDb);c=new gPb(aYc);y6b(c.C,0.998,0.998);y6b(c.B,0.001,0.001);aPb(c,XGb);bPb(c,XGb);QOb(c,pDb);g=new Bzc;i=g.j;fOb(Fu(i.b[bYc],227),(Bjb(),Bjb(),Ajb));fOb(Fu(i.b[cYc],227),Ajb);fOb(Fu(i.b[dYc],227),a.c.g);fOb(Fu(i.b[eYc],227),c);fOb(Fu(i.b[fYc],227),d);fOb(Fu(i.b[gYc],227),e);s4b(Fu(Fu(i.b[hYc],227).e,294),10526880);s4b(Fu(Fu(i.b[iYc],227).e,294),10526880);s4b(Fu(Fu(i.b[jYc],227).e,294),10526880);fOb(Fu(i.b[kYc],227),new Akb(0.145));fOb(Fu(i.b[lYc],227),new Akb(0.75));fOb(Fu(i.b[mYc],227),new Akb(16));$7b(Fu(Fu(i.b[nYc],227).e,302),0.001,0.001,0.998,0.998);f=new H3b(g);f.d=true;a.d=new O8b(b,f);A6b(a.d.ab,-50);j7b(a.d.fb,100);IQb(a.d,true);a.d.V=true;DQb(a.I,a.d)}
var bYc='enableBump',dYc='tBeckmann',kYc='uRoughness',lYc='uSpecularBrightness';WU(1114,1,vSc);_.Db=function ilc(){vac(this.c,new llc(this.b))};WU(1115,969,{324:1},llc);_.ob=function mlc(){var a,b,c,d,e,f,g;this.b=new ERb(27,WHb(this.H.n),1,10000);m7b(this.b.ab,1200);DQb(this.I,new hZb(5592405));d=new b$b(16777215,1.5,1000);k7b(d.ab,0,0,600);DQb(this.I,d);f=new j$b(1);k7b(f.ab,0.05,0.05,1);DQb(this.I,f);f.ab.of(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new KZb(16777215,0.85);k7b(a.ab,1,-0.5,1);r4b(a.M,0.6,1,0.85);DQb(this.I,a);a.ab.of(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new KZb(16777215,0.85);k7b(b.ab,1,-0.5,-1);DQb(this.I,b);new UKc(new evc);c=new UKc(new bMc);c.b=true;g=new DPb(512,512);VOb(g,(GFb(),AFb));TOb(g,(vFb(),tFb));QOb(g,(rDb(),pDb));g.g=false;this.c=new JKc(this.H.n,g);new cBc(_Xc,new plc(this));sIb(this.H.n,new v4b(5001561),1);e=new lHb(this.H.n,this.I);e.i=false;oIb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function nlc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){B4b(this.d.db,0.05*(b-this.d.db.e));A4b(this.d.db,0.05*(c-this.d.db.d))}PHb(this.H.n,true);gIb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;WU(1116,1,{},plc);_.Bf=function qlc(a,b){klc(this.b,Fu(b,243))};WU(1248,727,iSc,evc);_.Nd=function fvc(){};var gvc;WU(1249,1,{},lvc);_.Qd=function mvc(){return uvc(),jvc};_.Rd=function nvc(){return vvc(),kvc};var jvc,kvc;WU(1250,1,{},pvc);_.pc=function qvc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};WU(1251,1,{},svc);_.pc=function tvc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};WU(1346,727,iSc,Bzc);_.Nd=function Czc(){OJb(this,EOb());OJb(this,FOb());OJb(this,GOb());HJb(this,bYc,new hOb((AOb(),pOb),glb(0)));HJb(this,cYc,new hOb(pOb,glb(0)));HJb(this,eYc,new gOb(sOb));HJb(this,dYc,new gOb(sOb));HJb(this,iYc,new hOb(lOb,new v4b(15658734)));HJb(this,jYc,new hOb(lOb,new v4b(1118481)));HJb(this,hYc,new hOb(lOb,new v4b(328965)));HJb(this,oYc,new hOb(mOb,new Akb(1)));HJb(this,kYc,new hOb(mOb,new Akb(0.15)));HJb(this,lYc,new hOb(mOb,new Akb(0.75)));HJb(this,fYc,new gOb(sOb));HJb(this,mYc,new hOb(mOb,new Akb(1)));HJb(this,gYc,new gOb(sOb));HJb(this,nYc,new hOb(yOb,new c8b(0,0,1,1)));HJb(this,'uWrapRGB',new hOb(wOb,new q7b(0.75,0.375,0.1875)))};_.Od=function Dzc(a){var b,c;c=new Lrb(vu(RS,RQc,1,[pYc,qYc,rYc]));b=new Lrb(vu(RS,RQc,1,[sYc,tYc,uYc]));QJb(this,YJb(a,vu(US,RQc,173,[c,b])))};_.Pd=function Ezc(a){var b,c;c=new Lrb(vu(RS,RQc,1,[vYc]));b=new Lrb(vu(RS,RQc,1,[wYc]));RJb(this,YJb(a,vu(US,RQc,173,[c,b])))};var Fzc;WU(1347,1,{},Kzc);_.Qd=function Lzc(){return Tzc(),Izc};_.Rd=function Mzc(){return Uzc(),Jzc};var Izc,Jzc;WU(1348,1,{},Ozc);_.pc=function Pzc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};WU(1349,1,{},Rzc);_.pc=function Szc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var vM=okb(rXc,'MaterialsBumpmapSkin$DemoScene',1115),uM=okb(rXc,'MaterialsBumpmapSkin$DemoScene$1',1116),OO=okb(kXc,'BeckmannShader',1248),NO=okb(kXc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1249),LO=okb(kXc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1250),MO=okb(kXc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1251),nP=okb(kXc,'SkinSimpleShader',1346),mP=okb(kXc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1347),kP=okb(kXc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1348),lP=okb(kXc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1349);JSc(Hi)(18);