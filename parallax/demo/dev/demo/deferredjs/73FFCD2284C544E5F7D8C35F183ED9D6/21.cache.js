function sKb(){}
function wKb(){}
function zKb(){}
function oKb(){oKb=hKc;nKb=new sKb}
function BKb(){BKb=hKc;qKb=new wKb}
function CKb(){CKb=hKc;rKb=new zKb}
function lKb(){CIb.call(this,(oKb(),nKb))}
function $kc(){J9b.call(this);this.c=0;this.d=0}
bU(756,732,FLc,lKb);_.Ld=function mKb(){qIb(this,'mRefractionRatio',new SMb((jNb(),XMb),new Pjb(1.02)));qIb(this,'mFresnelBias',new SMb(XMb,new Pjb(0.1)));qIb(this,'mFresnelPower',new SMb(XMb,new Pjb(2)));qIb(this,'mFresnelScale',new SMb(XMb,new Pjb(1)));qIb(this,SRc,new RMb(bNb))};var nKb;bU(757,1,{},sKb);_.Od=function tKb(){return BKb(),qKb};_.Pd=function uKb(){return CKb(),rKb};var qKb,rKb;bU(758,1,{},wKb);_.nc=function xKb(){return 'uniform samplerCube tCube;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n\tvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\r\n\r\n\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\r\n\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\r\n\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\r\n\trefractedColor.a = 1.0;\r\n\r\n\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n\r\n}\r\n'};bU(759,1,{},zKb);_.nc=function AKb(){return 'uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n\tvec3 I = mPosition.xyz - cameraPosition;\r\n\r\n\tvReflect = reflect( I, nWorld );\r\n\tvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\r\n\tvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\r\n\tvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\r\n\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}\r\n'};bU(1141,1,SLc);_.zb=function Ykc(){j9b(this.b,new $kc(this.a))};bU(1142,974,{327:1},$kc);_.nb=function _kc(){var a,b,c,d,e,f,g,i,j;this.a=new pQb(60,FGb(this.G.k),1,100000);_5b(this.a._,3200);this.b=new pQb(60,FGb(this.G.k),1,100000);this.e=new o8b;a=new OWb(100,32,16);j=new $Nb('./static/textures/cube/park2/*.jpg');zNb(j,(BCb(),zCb));g=new lKb;QMb(su(RRb(g.i,SRc),225),j);c=new u2b(g);this.f=new Dqb;for(b=0;b<500;b++){e=new B7b(a,c);m5b(e._,Wkb()*10000-5000);n5b(e._,Wkb()*10000-5000);_5b(e._,Wkb()*10000-5000);Y5b(e.eb,Wkb()*3+1);mPb(this.H,e);tqb(this.f,e)}this.H.W=false;i=new cJb;QMb(su(RRb(i.i,SRc),225),j);f=new u2b(i);xZb(f,(j_b(),g_b));d=new B7b(new ZVb(100000,100000,100000),f);mPb(this.e,d);ZGb(this.G.k,false)};_.ob=function alc(a){var b,c,d,e;e=1.0E-4*a;h5b(this.a._,(this.c-this.a._.c)*0.05);i5b(this.a._,(-this.d-this.a._.d)*0.05);LPb(this.a,this.H._);p3b(this.b.cb,this.a.cb);for(b=0,c=this.f.b;b<c;b++){d=su(wqb(this.f,b),304);m5b(d._,5000*Math.cos(e+b));n5b(d._,5000*Math.sin(e+b*1.1))}yGb(this.G.k,true);RGb(this.G.k,this.e,this.b,null,false);RGb(this.G.k,this.H,this.a,null,false)};_.c=0;_.d=0;var CM=Djb(LQc,'MaterialsCubemapFresnel$DemoScene',1142),cG=Djb(TRc,'FresnelShader',756),bG=Djb(TRc,'FresnelShader_Resources_default_InlineClientBundleGenerator',757),_F=Djb(TRc,'FresnelShader_Resources_default_InlineClientBundleGenerator$1',758),aG=Djb(TRc,'FresnelShader_Resources_default_InlineClientBundleGenerator$2',759);eMc(xi)(21);