function Nuc(){}
function Ruc(){}
function Uuc(){}
function MHc(){}
function QHc(){}
function THc(){}
function emc(){J9b.call(this)}
function Guc(){CIb.call(this,(Juc(),Iuc))}
function FHc(){CIb.call(this,(IHc(),HHc))}
function IHc(){IHc=hKc;HHc=new MHc}
function VHc(){VHc=hKc;KHc=new QHc}
function WHc(){WHc=hKc;LHc=new THc}
function Wuc(){Wuc=hKc;Luc=new Ruc}
function Juc(){Juc=hKc;Iuc=new Nuc}
function Xuc(){Xuc=hKc;Muc=new Uuc}
function kGc(){this.b=new u2b(new FHc);QMb(su(RRb(mZb(this.b).i,iSc),225),(Qib(),Qib(),Oib));QMb(su(RRb(mZb(this.b).i,jSc),225),new Pjb(0.35));QMb(su(RRb(mZb(this.b).i,kSc),225),new Pjb(0.95));QMb(su(RRb(mZb(this.b).i,lSc),225),vkb(2048));this.e=true;this.f=true}
var iSc='grayscale',jSc='nIntensity',lSc='sCount',kSc='sIntensity',cSc='texture1',dSc='texture2';bU(1158,1,SLc);_.zb=function cmc(){j9b(this.b,new emc(this.a))};bU(1159,974,PLc,emc);_.Gd=function fmc(a){m5b(su(su(RRb(this.d,bSc),225).d,297),a.a.Z);n5b(su(su(RRb(this.d,bSc),225).d,297),a.a.Y)};_.nb=function gmc(){var a,b,c,d,e,f,g;gt((Jxb(),Ixb),(Txb(),Sxb),this);this.a=new pQb(35,FGb(this.G.k),1,3000);_5b(this.a._,4);d=new u2b(new Guc);this.d=mZb(d).i;f=new RNb('./static/textures/lava/cloud.png');LNb(f,(IFb(),HFb));MNb(f,HFb);QMb(su(RRb(this.d,cSc),225),f);g=new RNb(RRc);LNb(g,HFb);MNb(g,HFb);QMb(su(RRb(this.d,dSc),225),g);this.b=new B7b(new WWb(0.65,0.3,30,30),d);v3b(this.b.cb,0.3);mPb(this.H,this.b);a=new oGc(this.G.k);e=new wGc(this.H,this.a);b=new hGc(1.25);c=new kGc;c.a=true;tqb(a.b,e);tqb(a.b,b);tqb(a.b,c);ZGb(this.G.k,false);this.c=rh()};_.ob=function hmc(a){var b;b=(rh()-this.c)*0.001*5;QMb(su(RRb(this.d,eSc),225),new Pjb(su(su(RRb(this.d,eSc),225).d,150).a+0.2*b));n3b(this.b.cb,0.05*b);o3b(this.b.cb,0.0125*b);yGb(this.G.k,true);this.c=rh();RGb(this.G.k,this.H,this.a,null,false)};_.c=0;bU(1287,732,FLc,Guc);_.Ld=function Huc(){qIb(this,fSc,new SMb((jNb(),XMb),new Pjb(0.45)));qIb(this,gSc,new SMb(fNb,new d6b(0,0,0)));qIb(this,eSc,new SMb(XMb,new Pjb(1)));qIb(this,bSc,new SMb(dNb,new o5b));qIb(this,hSc,new SMb(dNb,new p5b(3,1)));qIb(this,cSc,new RMb(bNb));qIb(this,dSc,new RMb(bNb))};var Iuc;bU(1288,1,{},Nuc);_.Od=function Ouc(){return Wuc(),Luc};_.Pd=function Puc(){return Xuc(),Muc};var Luc,Muc;bU(1289,1,{},Ruc);_.nc=function Suc(){return 'uniform float time;\nuniform vec2 resolution;\n\nuniform float fogDensity;\nuniform vec3 fogColor;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\n\nvarying vec2 vUv;\n\nvoid main( void ) {\n\n\tvec2 position = -1.0 + 2.0 * vUv;\n\n\tvec4 noise = texture2D( texture1, vUv );\n\tvec2 T1 = vUv + vec2( 1.5, -1.5 ) * time  *0.02;\n\tvec2 T2 = vUv + vec2( -0.5, 2.0 ) * time * 0.01;\n\n\tT1.x += noise.x * 2.0;\n\tT1.y += noise.y * 2.0;\n\tT2.x -= noise.y * 0.2;\n\tT2.y += noise.z * 0.2;\n\n\tfloat p = texture2D( texture1, T1 * 2.0 ).a;\n\n\tvec4 color = texture2D( texture2, T2 * 2.0 );\n\tvec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );\n\n\tif( temp.r > 1.0 ){ temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }\n\tif( temp.g > 1.0 ){ temp.rb += temp.g - 1.0; }\n\tif( temp.b > 1.0 ){ temp.rg += temp.b - 1.0; }\n\n\tgl_FragColor = temp;\n\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\tconst float LOG2 = 1.442695;\n\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n}\n'};bU(1290,1,{},Uuc);_.nc=function Vuc(){return 'uniform vec2 uvScale;\nvarying vec2 vUv;\n\nvoid main()\n{\n\n\tvUv = uvScale * uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n}'};bU(1396,1395,dMc,kGc);_.Qg=function lGc(a,b,c){QMb(su(RRb(mZb(this.b).i,xRc),225),a.d);QMb(su(RRb(mZb(this.b).i,eSc),225),new Pjb(su(su(RRb(mZb(this.b).i,eSc),225).d,150).a+b));_Sb(a.c,this.b);this.a?RGb(a.u,a.v,a.a,null,false):RGb(a.u,a.v,a.a,a.g,false)};_.a=false;bU(1419,732,FLc,FHc);_.Ld=function GHc(){qIb(this,xRc,new RMb((jNb(),bNb)));qIb(this,eSc,new SMb(XMb,new Pjb(0)));qIb(this,jSc,new SMb(XMb,new Pjb(0.5)));qIb(this,kSc,new SMb(XMb,new Pjb(0.05)));qIb(this,lSc,new SMb($Mb,vkb(4096)));qIb(this,iSc,new SMb($Mb,(Qib(),Qib(),Pib)))};var HHc;bU(1420,1,{},MHc);_.Od=function NHc(){return VHc(),KHc};_.Pd=function OHc(){return WHc(),LHc};var KHc,LHc;bU(1421,1,{},QHc);_.nc=function RHc(){return '// control parameter\r\nuniform float time;\r\n\r\nuniform bool grayscale;\r\n\r\n// noise effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float nIntensity;\r\n\r\n// scanlines effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float sIntensity;\r\n\r\n// scanlines effect count value (0 = no effect, 4096 = full effect)\r\nuniform float sCount;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\t// sample the source\r\n\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\r\n\r\n\t// make some noise\r\n\tfloat x = vUv.x * vUv.y * time *  1000.0;\r\n\tx = mod( x, 13.0 ) * mod( x, 123.0 );\r\n\tfloat dx = mod( x, 0.01 );\r\n\r\n\t// add noise\r\n\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\r\n\r\n\t// get us a sine and cosine\r\n\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\r\n\r\n\t// add scanlines\r\n\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\r\n\r\n\t// interpolate between source and result by intensity\r\n\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\r\n\r\n\t// convert to grayscale if desired\r\n\tif( grayscale ) {\r\n\r\n\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\r\n\r\n\t}\r\n\r\n\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\r\n\r\n}\r\n'};bU(1422,1,{},THc);_.nc=function UHc(){return mSc};var PM=Djb(LQc,'MaterialsShaderLava$DemoScene',1159),xQ=Djb(nSc,'FilmPass',1396),PO=Djb(EQc,'LavaShader',1287),SQ=Djb(oSc,'FilmShader',1419),OO=Djb(EQc,'LavaShader_Resources_default_InlineClientBundleGenerator',1288),MO=Djb(EQc,'LavaShader_Resources_default_InlineClientBundleGenerator$1',1289),NO=Djb(EQc,'LavaShader_Resources_default_InlineClientBundleGenerator$2',1290),RQ=Djb(oSc,'FilmShader_Resources_default_InlineClientBundleGenerator',1420),PQ=Djb(oSc,'FilmShader_Resources_default_InlineClientBundleGenerator$1',1421),QQ=Djb(oSc,'FilmShader_Resources_default_InlineClientBundleGenerator$2',1422);eMc(xi)(30);