function Etc(){}
function Itc(){}
function Ltc(){}
function lwc(){}
function pwc(){}
function swc(){}
function jkc(a){this.a=a}
function Atc(){Atc=TKc;ztc=new Etc}
function Ntc(){Ntc=TKc;Ctc=new Itc}
function Otc(){Otc=TKc;Dtc=new Ltc}
function hwc(){hwc=TKc;gwc=new lwc}
function uwc(){uwc=TKc;jwc=new pwc}
function vwc(){vwc=TKc;kwc=new swc}
function cwc(){EIb.call(this,(hwc(),gwc))}
function xtc(){EIb.call(this,(Atc(),ztc))}
function fkc(){gac.call(this);this.d=0;this.e=0}
function ekc(a,b){var c,d,e,f,g,i;d=new TNb(dSc);d.k=4;Y5b(d.B,0.998,0.998);Y5b(d.A,0.001,0.001);NNb(d,(KFb(),JFb));ONb(d,JFb);BNb(d,(DCb(),BCb));e=new TNb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');Y5b(e.B,0.998,0.998);Y5b(e.A,0.001,0.001);NNb(e,JFb);ONb(e,JFb);BNb(e,BCb);c=new TNb('./static/models/obj/leeperrysmith/Map-COL.jpg');Y5b(c.B,0.998,0.998);Y5b(c.A,0.001,0.001);NNb(c,JFb);ONb(c,JFb);BNb(c,BCb);g=new cwc;i=g.i;SMb(pu(i.a[fSc],225),(Pib(),Pib(),Oib));SMb(pu(i.a[gSc],225),Oib);SMb(pu(i.a[hSc],225),a.b.e);SMb(pu(i.a[iSc],225),c);SMb(pu(i.a[jSc],225),d);SMb(pu(i.a[kSc],225),e);S3b(pu(pu(i.a[lSc],225).d,293),10526880);S3b(pu(pu(i.a[mSc],225).d,293),10526880);S3b(pu(pu(i.a[nSc],225).d,293),10526880);SMb(pu(i.a[oSc],225),new Ojb(0.145));SMb(pu(i.a[pSc],225),new Ojb(0.75));SMb(pu(i.a[qSc],225),new Ojb(16));y7b(pu(pu(i.a[rSc],225).d,301),0.001,0.001,0.998,0.998);f=new e3b(g);f.c=true;a.c=new oYb(b,f);$5b(a.c._,-50);J6b(a.c.eb,100);tPb(a.c,true);a.c.U=true;oPb(a.H,a.c)}
var fSc='enableBump',hSc='tBeckmann',oSc='uRoughness',pSc='uSpecularBrightness';hU(1125,1,DMc);_.zb=function ckc(){I9b(this.b,new fkc(this.a))};hU(1126,978,{323:1},fkc);_.nb=function gkc(){var a,b,c,d,e,f,g;this.a=new rQb(27,HGb(this.G.k),1,10000);M6b(this.a._,1200);oPb(this.H,new GYb(5592405));d=new AZb(16777215,1.5,1000);K6b(d._,0,0,600);oPb(this.H,d);f=new IZb(1);K6b(f._,0.05,0.05,1);oPb(this.H,f);f._.qf(700);f.S=true;f.t=true;f.I=2048;f.G=2048;f.A=200;f.w=1500;f.d=40;f.u=-0.005;f.D=0.15;a=new hZb(16777215,0.85);K6b(a._,1,-0.5,1);R3b(a.L,0.6,1,0.85);oPb(this.H,a);a._.qf(500);a.S=true;a.I=2048;a.G=2048;a.A=200;a.w=1500;a.e=-500;a.f=500;a.g=500;a.d=-500;a.u=-0.005;a.D=0.15;b=new hZb(16777215,0.85);K6b(b._,1,-0.5,-1);oPb(this.H,b);new jHc(new xtc);c=new jHc(new YHc);c.a=true;g=new oOb(512,512);GNb(g,(sEb(),mEb));ENb(g,(hEb(),fEb));BNb(g,(DCb(),BCb));g.f=false;this.b=new _Gc(this.G.k,g);new Fxc(eSc,new jkc(this));dHb(this.G.k,new V3b(5001561),1);e=new YFb(this.G.k,this.H);e.g=false;_Gb(this.G.k,false);this.G.k.ab=true;this.G.k.bb=true};_.ob=function hkc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){_3b(this.c.cb,0.05*(b-this.c.cb.d));$3b(this.c.cb,0.05*(c-this.c.cb.c))}AGb(this.G.k,true);TGb(this.G.k,this.H,this.a,null,false)};_.d=0;_.e=0;hU(1127,1,{},jkc);_.Bf=function kkc(a,b){ekc(this.a,pu(b,242))};hU(1259,730,pMc,xtc);_.Ld=function ytc(){};var ztc;hU(1260,1,{},Etc);_.Od=function Ftc(){return Ntc(),Ctc};_.Pd=function Gtc(){return Otc(),Dtc};var Ctc,Dtc;hU(1261,1,{},Itc);_.nc=function Jtc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};hU(1262,1,{},Ltc);_.nc=function Mtc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};hU(1308,730,pMc,cwc);_.Ld=function dwc(){zIb(this,pNb());zIb(this,qNb());zIb(this,rNb());sIb(this,fSc,new UMb((lNb(),aNb),ukb(0)));sIb(this,gSc,new UMb(aNb,ukb(0)));sIb(this,iSc,new TMb(dNb));sIb(this,hSc,new TMb(dNb));sIb(this,mSc,new UMb(YMb,new V3b(15658734)));sIb(this,nSc,new UMb(YMb,new V3b(1118481)));sIb(this,lSc,new UMb(YMb,new V3b(328965)));sIb(this,sSc,new UMb(ZMb,new Ojb(1)));sIb(this,oSc,new UMb(ZMb,new Ojb(0.15)));sIb(this,pSc,new UMb(ZMb,new Ojb(0.75)));sIb(this,jSc,new TMb(dNb));sIb(this,qSc,new UMb(ZMb,new Ojb(1)));sIb(this,kSc,new TMb(dNb));sIb(this,rSc,new UMb(jNb,new C7b(0,0,1,1)));sIb(this,'uWrapRGB',new UMb(hNb,new Q6b(0.75,0.375,0.1875)))};_.Md=function ewc(a){var b,c;c=new _qb(fu(dS,YKc,1,[tSc,uSc,vSc]));b=new _qb(fu(dS,YKc,1,[wSc,xSc,ySc]));BIb(this,JIb(a,fu(gS,YKc,173,[c,b])))};_.Nd=function fwc(a){var b,c;c=new _qb(fu(dS,YKc,1,[zSc]));b=new _qb(fu(dS,YKc,1,[ASc]));CIb(this,JIb(a,fu(gS,YKc,173,[c,b])))};var gwc;hU(1309,1,{},lwc);_.Od=function mwc(){return uwc(),jwc};_.Pd=function nwc(){return vwc(),kwc};var jwc,kwc;hU(1310,1,{},pwc);_.nc=function qwc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};hU(1311,1,{},swc);_.nc=function twc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var iM=Cjb(wRc,'MaterialsBumpmapSkin$DemoScene',1126),hM=Cjb(wRc,'MaterialsBumpmapSkin$DemoScene$1',1127),CO=Cjb(pRc,'BeckmannShader',1259),BO=Cjb(pRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1260),zO=Cjb(pRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1261),AO=Cjb(pRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1262),bP=Cjb(pRc,'SkinSimpleShader',1308),aP=Cjb(pRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1309),$O=Cjb(pRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1310),_O=Cjb(pRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1311);RMc(xi)(18);