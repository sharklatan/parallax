function ttc(){}
function xtc(){}
function Atc(){}
function Cyc(){}
function Gyc(){}
function Jyc(){}
function pJc(){}
function tJc(){}
function wJc(){}
function LKc(){}
function PKc(){}
function SKc(){}
function SLc(){}
function cLc(){}
function gLc(){}
function jLc(){}
function vLc(){}
function zLc(){}
function CLc(){}
function OLc(){}
function VLc(){}
function NYb(a,b){a.b=b}
function I7b(a,b){a.k=b}
function VIc(a,b){sqb(a.b,b)}
function gtc(a){this.a=a}
function jtc(a){this.a=a}
function mtc(a){this.a=a}
function Dtc(){Dtc=PMc;stc=new Atc}
function ptc(){ptc=PMc;otc=new ttc}
function Ctc(){Ctc=PMc;rtc=new xtc}
function yyc(){yyc=PMc;xyc=new Cyc}
function Lyc(){Lyc=PMc;Ayc=new Gyc}
function Myc(){Myc=PMc;Byc=new Jyc}
function lJc(){lJc=PMc;kJc=new pJc}
function yJc(){yJc=PMc;nJc=new tJc}
function zJc(){zJc=PMc;oJc=new wJc}
function HKc(){HKc=PMc;GKc=new LKc}
function UKc(){UKc=PMc;JKc=new PKc}
function VKc(){VKc=PMc;KKc=new SKc}
function $Kc(){$Kc=PMc;ZKc=new cLc}
function lLc(){lLc=PMc;aLc=new gLc}
function mLc(){mLc=PMc;bLc=new jLc}
function rLc(){rLc=PMc;qLc=new vLc}
function ELc(){ELc=PMc;tLc=new zLc}
function FLc(){FLc=PMc;uLc=new CLc}
function KLc(){KLc=PMc;JLc=new OLc}
function XLc(){XLc=PMc;MLc=new SLc}
function YLc(){YLc=PMc;NLc=new VLc}
function dtc(a,b){this.a=a;this.b=b}
function tyc(){BIb.call(this,(yyc(),xyc))}
function iJc(){BIb.call(this,(lJc(),kJc))}
function EKc(){BIb.call(this,(HKc(),GKc))}
function XKc(){BIb.call(this,($Kc(),ZKc))}
function oLc(){BIb.call(this,(rLc(),qLc))}
function HLc(){BIb.call(this,(KLc(),JLc))}
function Ysc(a){a.w+=1;a.w==3&&wPb(a.v,true)}
function Zsc(){H9b.call(this);this.a=0;this.j=0;this.i=1;this.u=1000;this.t=1000;this.C=true}
function Xsc(a,b,c,d){var e,f,g;g=new t2b(b);PMb(su(QRb(lZb(g).i,cUc),225),c);f=new n8b;e=new A7b(new FWb(a.u,a.t),g);$5b(e._,-500);lPb(f,e);QGb(a.G.k,f,a.c,d,true)}
function Wsc(a,b,c,d,e,f){var g,i;g=new l0b;e0b(g,new h3b(16755285));g.j=true;j0b(g,(d$b(),a$b));i=new K7b(b,g);i.d=c;I7b(i,Au(600*Wkb()));Y5b(i._,d,e,f);v3b(i.cb,1.5707963267948966);i.S=true;i.U=true;lPb(a.H,i);sqb(a.n,i)}
var sVc='enableDiffuse1',tVc='enableDiffuse2',lVc='h',nVc='heightMap',yVc='heightmap',xVc='offset',zVc='r',rVc='tDetail',pVc='tDiffuse1',qVc='tDiffuse2',vVc='uRepeatOverlay',mVc='v';bU(1240,1,yOc);_.zb=function Usc(){h9b(this.b,new Zsc(this.a))};bU(1241,974,{78:1,186:1,338:1},Zsc);_.Ud=function $sc(a){Ysc(this)};_.Gd=function _sc(a){this.u=a.a.Z;this.t=a.a.Y;PMb(su(QRb(lZb(this.f.b).i,lVc),225),new Pjb(6/this.u));PMb(su(QRb(lZb(this.D.b).i,mVc),225),new Pjb(6/this.t))};_.nb=function atc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;gt((Ixb(),Hxb),(Sxb(),Rxb),this);this.b=new oQb(40,EGb(this.G.k),2,4000);this.u=this.G.k.Z;this.t=this.G.k.Y;this.c=new _Pb(this.u,this.t,-10000,10000);Y5b(this.b._,-1200,800,1200);$5b(this.c._,100);this.s=new n8b;lPb(this.s,this.c);this.d=new Nwb(this.b,this.G.c);X5b(this.d.v,0);this.d.s=1;this.d.A=1.2;Kwb(this.d,0.8);this.d.g=true;this.d.e=true;this.d.f=true;Iwb(this.d,0.15);l8b(this.H,new b8b(328965,2000,4000));lPb(this.H,new VXb(1118481));this.e=new wYb(16777215,1.15);Y5b(this.e._,500,2000,0);lPb(this.H,this.e);this.q=new PYb(16729088,1.5,0);X5b(this.q._,0);lPb(this.H,this.q);this.g=new lOb(256,256);DNb(this.g,(pEb(),kEb));BNb(this.g,(eEb(),cEb));yNb(this.g,(ACb(),yCb));zNb(this.g,false);this.o=new lOb(256,256);DNb(this.o,kEb);BNb(this.o,cEb);yNb(this.o,yCb);zNb(this.o,false);n=new oLc;u=n.i;PMb(su(u.a[UQc],225),new Pjb(0.05));k5b(su(su(u.a[IUc],225).d,297),256,256);PMb(su(u.a[nVc],225),this.g);s=new lOb(2048,2048);DNb(s,kEb);BNb(s,cEb);yNb(s,yCb);s.r=false;KNb(s,(HFb(),GFb));LNb(s,GFb);c=new RNb('./static/textures/terrain/grasslight-big.jpg',new dtc(this,s));KNb(c,GFb);LNb(c,GFb);d=new RNb('./static/textures/terrain/backgrounddetailed6.jpg',this);KNb(d,GFb);LNb(d,GFb);b=new RNb('./static/textures/terrain/grasslight-big-nm.jpg',this);KNb(b,GFb);LNb(b,GFb);t=new tyc;this.B=t.i;PMb(su(QRb(this.B,CUc),225),this.o);PMb(su(QRb(this.B,DUc),225),new Pjb(3.5));PMb(su(QRb(this.B,oVc),225),this.g);PMb(su(QRb(this.B,pVc),225),c);PMb(su(QRb(this.B,qVc),225),d);PMb(su(QRb(this.B,EUc),225),s);PMb(su(QRb(this.B,rVc),225),b);PMb(su(QRb(this.B,sVc),225),(Qib(),Qib(),Pib));PMb(su(QRb(this.B,tVc),225),Pib);PMb(su(QRb(this.B,aUc),225),Pib);e3b(su(su(QRb(this.B,gUc),225).d,293),16777215);e3b(su(su(QRb(this.B,hUc),225).d,293),16777215);e3b(su(su(QRb(this.B,fUc),225).d,293),1118481);PMb(su(QRb(this.B,HUc),225),new Pjb(30));PMb(su(QRb(this.B,uVc),225),new Pjb(375));k5b(su(su(QRb(this.B,vVc),225).d,297),6,6);this.A=new ktb;Iob(this.A,LUc,new RMb((iNb(),WMb),new Pjb(1)));Iob(this.A,wVc,new RMb(cNb,new o5b(1.5,1.5)));Iob(this.A,xVc,new RMb(cNb,new o5b(0,0)));this.k=new ktb;i=new s2b((ptc(),otc));wIb(lZb(i),this.A);i.c=false;i.b=true;Iob(this.k,yVc,i);j=new t2b(n);wIb(lZb(j),u);j.c=false;j.b=true;Iob(this.k,YTc,j);k=new t2b(t);wIb(lZb(k),this.B);k.c=true;k.b=true;Iob(this.k,'terrain',k);o=new FWb(this.u,this.t);p=new s_b;m_b(p,new h3b(0));this.r=new A7b(o,p);$5b(this.r._,-500);lPb(this.s,this.r);g=new GWb(6000,6000,64,64);VQb(g);this.v=new A7b(g,k);Y5b(this.v._,0,-125,0);u3b(this.v.cb,-1.5707963267948966);wPb(this.v,false);lPb(this.H,this.v);aHb(this.G.k,this.H.a.c,1);this.G.k.ab=true;this.G.k.bb=true;YGb(this.G.k,false);q=new cJc(this.H,this.b);f=new PIc(0.6);e=new fJc(new iJc);PMb(su(QRb(lZb(e.b).i,mUc),225),new Pjb(0.65));this.f=new fJc(new EKc);this.D=new fJc(new HLc);PMb(su(QRb(lZb(this.f.b).i,lVc),225),new Pjb(6/this.u));PMb(su(QRb(lZb(this.D.b).i,mVc),225),new Pjb(6/this.t));PMb(su(QRb(lZb(this.f.b).i,zVc),225),new Pjb(0.5));PMb(su(QRb(lZb(this.D.b).i,zVc),225),new Pjb(0.5));this.D.a=true;r=new lOb(this.u,this.t);DNb(s,jEb);BNb(s,cEb);yNb(s,yCb);s.f=false;s.r=false;a=new XIc(this.G.k,r);sqb(a.b,q);sqb(a.b,f);sqb(a.b,e);VIc(a,this.f);VIc(a,this.D);this.n=new Cqb;new Bzc('./static/models/animated/parrot.js',new gtc(this));new Bzc(kVc,new jtc(this));new Bzc('./static/models/animated/stork.js',new mtc(this));this.p=rh()};_.ob=function btc(a){var b,c,d,e,f;b=(rh()-this.p)*0.001;if(this.v.gb){Lwb(this.d);this.j=E3b(this.j+0.5*b*this.i,0.4,0.825);f=(this.j-0.4)/0.42499999999999993;e=0.95+f*-0.7;d3b(this.H.a.c,0.1,e,this.j);aHb(this.G.k,this.H.a.c,1);dYb(this.e,0.1+f*1.0499999999999998);NYb(this.q,0.9+f*0.6);PMb(su(QRb(this.B,DUc),225),new Pjb(0.6+f*2.9));if(this.C){this.a=E3b(this.a+-7.5E-4,0,0.05);PMb(su(Dob(this.A,LUc),225),new Pjb(su(su(Dob(this.A,LUc),225).d,150).a+b*this.a));g5b(su(su(Dob(this.A,xVc),225).d,297),b*0.05);l5b(su(su(QRb(this.B,AVc),225).d,297),4*su(su(Dob(this.A,xVc),225).d,297).c);$Sb(this.r,su(Dob(this.k,yVc),282));QGb(this.G.k,this.s,this.c,this.g,true);$Sb(this.r,su(Dob(this.k,YTc),282));QGb(this.G.k,this.s,this.c,this.o,true);this.C=false}for(c=0;c<this.n.b;c++){d=su(vqb(this.n,c),305);J7b(d,Au(1000*b));g5b(d._,d.d*b);d._.c>2000&&l5b(d._,-1500-Wkb()*500)}QGb(this.G.k,this.H,this.b,null,false)}this.p=rh()};_.a=0;_.i=0;_.j=0;_.p=0;_.t=0;_.u=0;_.w=0;_.C=false;bU(1242,1,{},dtc);_.Ud=function etc(a){Ysc(this.a);Xsc(this.a,new XKc,a,this.b)};bU(1243,1,{},gtc);_.Bf=function htc(a,b){wzc((su(a,339),su(b,242)));Wsc(this.a,su(b,242),500,-3500,500,700);Wsc(this.a,su(b,242),500,-3000-Wkb()*500,500,-200);Wsc(this.a,su(b,242),500,-3000-Wkb()*500,500,200);Wsc(this.a,su(b,242),500,-3000-Wkb()*500,500,1000)};bU(1244,1,{},jtc);_.Bf=function ktc(a,b){wzc((su(a,339),su(b,242)));Wsc(this.a,su(b,242),1000,-3000-Wkb()*500,350,40)};bU(1245,1,{},mtc);_.Bf=function ntc(a,b){wzc((su(a,339),su(b,242)));Wsc(this.a,su(b,242),1000,-3000-Wkb()*500,350,340)};var otc;bU(1246,1,{},ttc);_.Od=function utc(){return Ctc(),rtc};_.Pd=function vtc(){return Dtc(),stc};var rtc,stc;bU(1247,1,{},xtc);_.nc=function ytc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};bU(1248,1,{},Atc);_.nc=function Btc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};bU(1354,732,lOc,tyc);_.Ld=function uyc(){wIb(this,mNb());wIb(this,nNb());wIb(this,oNb());pIb(this,sVc,new RMb((iNb(),ZMb),(Qib(),Qib(),Oib)));pIb(this,tVc,new RMb(ZMb,Oib));pIb(this,aUc,new RMb(ZMb,Oib));pIb(this,BVc,new RMb(ZMb,Oib));pIb(this,pVc,new QMb(aNb));pIb(this,qVc,new QMb(aNb));pIb(this,rVc,new QMb(aNb));pIb(this,CUc,new QMb(aNb));pIb(this,EUc,new QMb(aNb));pIb(this,oVc,new QMb(aNb));pIb(this,DUc,new RMb(WMb,new Pjb(1)));pIb(this,CVc,new RMb(WMb,new Pjb(0)));pIb(this,uVc,new RMb(WMb,new Pjb(1)));pIb(this,gUc,new RMb(VMb,new h3b(15658734)));pIb(this,hUc,new RMb(VMb,new h3b(1118481)));pIb(this,fUc,new RMb(VMb,new h3b(328965)));pIb(this,HUc,new RMb(WMb,new Pjb(30)));pIb(this,mUc,new RMb(WMb,new Pjb(1)));pIb(this,'uRepeatBase',new RMb(cNb,new o5b(1,1)));pIb(this,vVc,new RMb(cNb,new o5b(1,1)));pIb(this,AVc,new RMb(cNb,new o5b(0,0)))};_.Md=function vyc(a){var b,c;c=new $qb(iu($R,UMc,1,[nUc,oUc]));b=new $qb(iu($R,UMc,1,[qUc,rUc,sUc]));yIb(this,GIb(a,iu(bS,UMc,173,[c,b])))};_.Nd=function wyc(a){var b,c;c=new $qb(iu($R,UMc,1,[tUc]));b=new $qb(iu($R,UMc,1,[uUc]));zIb(this,GIb(a,iu(bS,UMc,173,[c,b])))};var xyc;bU(1355,1,{},Cyc);_.Od=function Dyc(){return Lyc(),Ayc};_.Pd=function Eyc(){return Myc(),Byc};var Ayc,Byc;bU(1356,1,{},Gyc);_.nc=function Hyc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};bU(1357,1,{},Jyc);_.nc=function Kyc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};bU(1449,732,lOc,iJc);_.Ld=function jJc(){pIb(this,cUc,new QMb((iNb(),aNb)));pIb(this,mUc,new RMb(WMb,new Pjb(1)))};var kJc;bU(1450,1,{},pJc);_.Od=function qJc(){return yJc(),nJc};_.Pd=function rJc(){return zJc(),oJc};var nJc,oJc;bU(1451,1,{},tJc);_.nc=function uJc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};bU(1452,1,{},wJc);_.nc=function xJc(){return TUc};bU(1473,732,lOc,EKc);_.Ld=function FKc(){pIb(this,cUc,new QMb((iNb(),aNb)));pIb(this,lVc,new RMb(WMb,new Pjb(0.001953125)));pIb(this,zVc,new RMb(WMb,new Pjb(0.35)))};var GKc;bU(1474,1,{},LKc);_.Od=function MKc(){return UKc(),JKc};_.Pd=function NKc(){return VKc(),KKc};var JKc,KKc;bU(1475,1,{},PKc);_.nc=function QKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};bU(1476,1,{},SKc);_.nc=function TKc(){return TUc};bU(1479,732,lOc,XKc);_.Ld=function YKc(){pIb(this,cUc,new QMb((iNb(),aNb)))};var ZKc;bU(1480,1,{},cLc);_.Od=function dLc(){return lLc(),aLc};_.Pd=function eLc(){return mLc(),bLc};var aLc,bLc;bU(1481,1,{},gLc);_.nc=function hLc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};bU(1482,1,{},jLc);_.nc=function kLc(){return TUc};bU(1485,732,lOc,oLc);_.Ld=function pLc(){pIb(this,nVc,new QMb((iNb(),aNb)));pIb(this,IUc,new RMb(cNb,new o5b(512,512)));pIb(this,wVc,new RMb(cNb,new o5b(1,1)));pIb(this,UQc,new RMb(WMb,new Pjb(0.05)))};var qLc;bU(1486,1,{},vLc);_.Od=function wLc(){return ELc(),tLc};_.Pd=function xLc(){return FLc(),uLc};var tLc,uLc;bU(1487,1,{},zLc);_.nc=function ALc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};bU(1488,1,{},CLc);_.nc=function DLc(){return TUc};bU(1491,732,lOc,HLc);_.Ld=function ILc(){pIb(this,cUc,new QMb((iNb(),aNb)));pIb(this,mVc,new RMb(WMb,new Pjb(0.001953125)));pIb(this,zVc,new RMb(WMb,new Pjb(0.35)))};var JLc;bU(1492,1,{},OLc);_.Od=function PLc(){return XLc(),MLc};_.Pd=function QLc(){return YLc(),NLc};var MLc,NLc;bU(1493,1,{},SLc);_.nc=function TLc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};bU(1494,1,{},VLc);_.nc=function WLc(){return TUc};var pO=Djb(tTc,'TerrainDynamic$DemoScene',1241),lO=Djb(tTc,'TerrainDynamic$DemoScene$1',1242),mO=Djb(tTc,'TerrainDynamic$DemoScene$2',1243),nO=Djb(tTc,'TerrainDynamic$DemoScene$3',1244),oO=Djb(tTc,'TerrainDynamic$DemoScene$4',1245),cR=Djb(VUc,DVc,1485),aP=Djb(jTc,'TerrainShader',1354),GQ=Djb(VUc,'BleachBypassShader',1449),WQ=Djb(VUc,'HorizontalTiltShiftShader',1473),gR=Djb(VUc,'VerticalTiltShiftShader',1491),sO=Djb(tTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1246),qO=Djb(tTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1247),rO=Djb(tTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1248),bR=Djb(VUc,EVc,1486),_Q=Djb(VUc,FVc,1487),aR=Djb(VUc,GVc,1488),_O=Djb(jTc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1355),ZO=Djb(jTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1356),$O=Djb(jTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1357),FQ=Djb(VUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1450),DQ=Djb(VUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1451),EQ=Djb(VUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1452),VQ=Djb(VUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1474),TQ=Djb(VUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1475),UQ=Djb(VUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1476),fR=Djb(VUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1492),dR=Djb(VUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1493),eR=Djb(VUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1494),$Q=Djb(VUc,'LuminosityShader',1479),ZQ=Djb(VUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1480),XQ=Djb(VUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1481),YQ=Djb(VUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1482);MOc(xi)(38);