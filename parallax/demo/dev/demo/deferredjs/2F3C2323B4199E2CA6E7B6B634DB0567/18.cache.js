function utc(){}
function ytc(){}
function Btc(){}
function bwc(){}
function fwc(){}
function iwc(){}
function nkc(a){this.b=a}
function Dtc(){Dtc=JKc;stc=new ytc}
function qtc(){qtc=JKc;ptc=new utc}
function Etc(){Etc=JKc;ttc=new Btc}
function Zvc(){Zvc=JKc;Yvc=new bwc}
function kwc(){kwc=JKc;_vc=new fwc}
function lwc(){lwc=JKc;awc=new iwc}
function ntc(){cJb.call(this,(qtc(),ptc))}
function Uvc(){cJb.call(this,(Zvc(),Yvc))}
function jkc(){jac.call(this);this.e=0;this.f=0}
function ikc(a,b){var c,d,e,f,g,i;d=new rOb(dSc);d.n=4;N5b(d.C,0.998,0.998);N5b(d.B,0.001,0.001);lOb(d,(iGb(),hGb));mOb(d,hGb);_Nb(d,(bDb(),_Cb));e=new rOb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');N5b(e.C,0.998,0.998);N5b(e.B,0.001,0.001);lOb(e,hGb);mOb(e,hGb);_Nb(e,_Cb);c=new rOb('./static/models/obj/leeperrysmith/Map-COL.jpg');N5b(c.C,0.998,0.998);N5b(c.B,0.001,0.001);lOb(c,hGb);mOb(c,hGb);_Nb(c,_Cb);g=new Uvc;i=g.j;qNb(Xu(i.b[fSc],225),(pjb(),pjb(),ojb));qNb(Xu(i.b[gSc],225),ojb);qNb(Xu(i.b[hSc],225),a.c.f);qNb(Xu(i.b[iSc],225),c);qNb(Xu(i.b[jSc],225),d);qNb(Xu(i.b[kSc],225),e);H3b(Xu(Xu(i.b[lSc],225).e,293),10526880);H3b(Xu(Xu(i.b[mSc],225).e,293),10526880);H3b(Xu(Xu(i.b[nSc],225).e,293),10526880);qNb(Xu(i.b[oSc],225),new okb(0.145));qNb(Xu(i.b[pSc],225),new okb(0.75));qNb(Xu(i.b[qSc],225),new okb(16));n7b(Xu(Xu(i.b[rSc],225).e,301),0.001,0.001,0.998,0.998);f=new W2b(g);f.d=true;a.d=new b8b(b,f);P5b(a.d.ab,-50);y6b(a.d.fb,100);TPb(a.d,true);a.d.V=true;OPb(a.I,a.d)}
var fSc='enableBump',hSc='tBeckmann',oSc='uRoughness',pSc='uSpecularBrightness';KU(1121,1,uMc);_.Db=function gkc(){L9b(this.c,new jkc(this.b))};KU(1122,974,{323:1},jkc);_.ob=function kkc(){var a,b,c,d,e,f,g;this.b=new RQb(27,fHb(this.H.n),1,10000);B6b(this.b.ab,1200);OPb(this.I,new wYb(5592405));d=new qZb(16777215,1.5,1000);z6b(d.ab,0,0,600);OPb(this.I,d);f=new yZb(1);z6b(f.ab,0.05,0.05,1);OPb(this.I,f);f.ab.vf(700);f.T=true;f.u=true;f.J=2048;f.H=2048;f.B=200;f.A=1500;f.e=40;f.v=-0.005;f.F=0.15;a=new ZYb(16777215,0.85);z6b(a.ab,1,-0.5,1);G3b(a.M,0.6,1,0.85);OPb(this.I,a);a.ab.vf(500);a.T=true;a.J=2048;a.H=2048;a.B=200;a.A=1500;a.f=-500;a.g=500;a.i=500;a.e=-500;a.v=-0.005;a.F=0.15;b=new ZYb(16777215,0.85);z6b(b.ab,1,-0.5,-1);OPb(this.I,b);new _Gc(new ntc);c=new _Gc(new OHc);c.b=true;g=new OOb(512,512);eOb(g,(SEb(),MEb));cOb(g,(HEb(),FEb));_Nb(g,(bDb(),_Cb));g.g=false;this.c=new RGc(this.H.n,g);new vxc(eSc,new nkc(this));DHb(this.H.n,new K3b(5001561),1);e=new wGb(this.H.n,this.I);e.i=false;zHb(this.H.n,false);this.H.n.bb=true;this.H.n.cb=true};_.pb=function lkc(a){var b,c;b=this.e*0.001;c=this.f*0.001;if(this.d){Q3b(this.d.db,0.05*(b-this.d.db.e));P3b(this.d.db,0.05*(c-this.d.db.d))}$Gb(this.H.n,true);rHb(this.H.n,this.I,this.b,null,false)};_.e=0;_.f=0;KU(1123,1,{},nkc);_.Hf=function okc(a,b){ikc(this.b,Xu(b,242))};KU(1251,732,hMc,ntc);_.Sd=function otc(){};var ptc;KU(1252,1,{},utc);_.Vd=function vtc(){return Dtc(),stc};_.Wd=function wtc(){return Etc(),ttc};var stc,ttc;KU(1253,1,{},ytc);_.uc=function ztc(){return 'varying vec2 vUv;\n\nfloat PHBeckmann( float ndoth, float m ) {\n\n\tfloat alpha = acos( ndoth );\n\tfloat ta = tan( alpha );\n\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\n\treturn val;\n\n}\n\nfloat KSTextureCompute( vec2 tex ) {\n\n\t// Scale the value to fit within [0,1]  invert upon lookup.\n\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n\n}\n\nvoid main() {\n\n\tfloat x = KSTextureCompute( vUv );\n\n\tgl_FragColor = vec4( x, x, x, 1.0 );\n\n}\n'};KU(1254,1,{},Btc);_.uc=function Ctc(){return 'varying vec2 vUv;\n\nvoid main() {\n\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};KU(1300,732,hMc,Uvc);_.Sd=function Vvc(){ZIb(this,PNb());ZIb(this,QNb());ZIb(this,RNb());SIb(this,fSc,new sNb((LNb(),ANb),Wkb(0)));SIb(this,gSc,new sNb(ANb,Wkb(0)));SIb(this,iSc,new rNb(DNb));SIb(this,hSc,new rNb(DNb));SIb(this,mSc,new sNb(wNb,new K3b(15658734)));SIb(this,nSc,new sNb(wNb,new K3b(1118481)));SIb(this,lSc,new sNb(wNb,new K3b(328965)));SIb(this,sSc,new sNb(xNb,new okb(1)));SIb(this,oSc,new sNb(xNb,new okb(0.15)));SIb(this,pSc,new sNb(xNb,new okb(0.75)));SIb(this,jSc,new rNb(DNb));SIb(this,qSc,new sNb(xNb,new okb(1)));SIb(this,kSc,new rNb(DNb));SIb(this,rSc,new sNb(JNb,new r7b(0,0,1,1)));SIb(this,'uWrapRGB',new sNb(HNb,new F6b(0.75,0.375,0.1875)))};_.Td=function Wvc(a){var b,c;c=new Brb(Nu(HS,PKc,1,[tSc,uSc,vSc]));b=new Brb(Nu(HS,PKc,1,[wSc,xSc,ySc]));_Ib(this,hJb(a,Nu(KS,PKc,173,[c,b])))};_.Ud=function Xvc(a){var b,c;c=new Brb(Nu(HS,PKc,1,[zSc]));b=new Brb(Nu(HS,PKc,1,[ASc]));aJb(this,hJb(a,Nu(KS,PKc,173,[c,b])))};var Yvc;KU(1301,1,{},bwc);_.Vd=function cwc(){return kwc(),_vc};_.Wd=function dwc(){return lwc(),awc};var _vc,awc;KU(1302,1,{},fwc);_.uc=function gwc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float opacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n\t\t\t// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n\t\t\t// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * diffuse * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * specular * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += specular * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * ambient ) + specularTotal;\r\n\r\n[*]\r\n\r\n}\r\n'};KU(1303,1,{},iwc);_.uc=function jwc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var RM=ckb(wRc,'MaterialsBumpmapSkin$DemoScene',1122),QM=ckb(wRc,'MaterialsBumpmapSkin$DemoScene$1',1123),eP=ckb(pRc,'BeckmannShader',1251),dP=ckb(pRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',1252),bP=ckb(pRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',1253),cP=ckb(pRc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',1254),FP=ckb(pRc,'SkinSimpleShader',1300),EP=ckb(pRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',1301),CP=ckb(pRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',1302),DP=ckb(pRc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',1303);IMc(Ii)(18);