function G4b(){}
function O4b(){}
function Ucc(){}
function $cc(){}
function bdc(){}
function gdc(){}
function fdc(){}
function kdc(){}
function jdc(){}
function Jfc(){}
function Ufc(){}
function Rfc(){}
function Zfc(){}
function Yfc(){}
function bgc(){}
function agc(){}
function I4b(){VUb.call(this)}
function P4b(a,b){this.a=a;this.b=b}
function Zcc(){Zcc=pkc;Ycc=new bdc}
function ndc(){ndc=pkc;_cc=new gdc}
function odc(){odc=pkc;adc=new kdc}
function Qfc(){Qfc=pkc;Pfc=new Ufc}
function egc(){egc=pkc;Sfc=new Zfc}
function fgc(){fgc=pkc;Tfc=new bgc}
function Kfc(){Gsb.call(this,(Qfc(),Pfc))}
function Vcc(){Gsb.call(this,(Zcc(),Ycc))}
function H4b(a,b){var c,d,e,f,g,i;d=(UTb(),WTb(xHc,(_yb(),$yb),null));d.k=4;OFb(d.x,0.998,0.998);OFb(d.w,0.001,0.001);ryb(d,(_pb(),$pb));syb(d,$pb);iyb(d,(ypb(),wpb));e=WTb(BHc,$yb,null);OFb(e.x,0.998,0.998);OFb(e.w,0.001,0.001);ryb(e,$pb);syb(e,$pb);iyb(e,wpb);c=WTb(CHc,$yb,null);OFb(c.x,0.998,0.998);OFb(c.w,0.001,0.001);ryb(c,$pb);syb(c,$pb);iyb(c,wpb);g=new Kfc;i=g.i;Cxb(Is(i.a[DHc],134),(n5(),n5(),m5));Cxb(Is(i.a[EHc],134),m5);Cxb(Is(i.a[FHc],134),a.a.e);Cxb(Is(i.a[GHc],134),c);Cxb(Is(i.a[HHc],134),d);Cxb(Is(i.a[IHc],134),e);bBb(Is(Is(i.a[JHc],134).d,143),10526880);bBb(Is(Is(i.a[KHc],134).d,143),10526880);bBb(Is(Is(i.a[LHc],134).d,143),10526880);Cxb(Is(i.a[MHc],134),new L5(0.145));Cxb(Is(i.a[NHc],134),new L5(0.75));Cxb(Is(i.a[OHc],134),new L5(16));cHb(Is(Is(i.a[PHc],134).d,158),0.001,0.001,0.998,0.998);f=new jSb(g);f.c=true;a.b=new USb(b,f);a.b.W.d=-50;rGb(a.b._,100);a.b.M=true;a.b.N=true;Uzb(a.B,a.b)}
var aIc='#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 uAmbientColor;\r\nuniform vec3 uDiffuseColor;\r\nuniform vec3 uSpecularColor;\r\nuniform float uOpacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * uDiffuseColor * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * uSpecularColor * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// directional lights\r\n\t\t\t\t\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += uDiffuseColor * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += uSpecularColor * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * uAmbientColor ) + specularTotal;\r\n\r\n[*]\r\n\r\n}',CHc='./static/models/obj/leeperrysmith/Map-COL.jpg',BHc='./static/models/obj/leeperrysmith/Map-SPEC.jpg',eIc='BeckmannShader',fIc='BeckmannShader_Resources_default_StaticClientBundleGenerator',gIc='BeckmannShader_Resources_default_StaticClientBundleGenerator$1',hIc='BeckmannShader_Resources_default_StaticClientBundleGenerator$2',cIc='MaterialsBumpmapSkin$DemoScene',dIc='MaterialsBumpmapSkin$DemoScene$1',iIc='SkinSimpleShader',jIc='SkinSimpleShader_Resources_default_StaticClientBundleGenerator',kIc='SkinSimpleShader_Resources_default_StaticClientBundleGenerator$1',lIc='SkinSimpleShader_Resources_default_StaticClientBundleGenerator$2',DHc='enableBump',FHc='tBeckmann',MHc='uRoughness',NHc='uSpecularBrightness',THc='uWrapRGB',bIc='uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalMatrix * normal;\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n',QHc='varying vec2 vUv;\r\n\r\nfloat PHBeckmann( float ndoth, float m ) {\r\n\r\n\tfloat alpha = acos( ndoth );\r\n\tfloat ta = tan( alpha );\r\n\r\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\r\n\treturn val;\r\n\r\n}\r\n\r\nfloat KSTextureCompute( vec2 tex ) {\r\n\r\n\t// Scale the value to fit within [0,1]  invert upon lookup.\r\n\r\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tfloat x = KSTextureCompute( vUv );\r\n\r\n\tgl_FragColor = vec4( x, x, x, 1.0 );\r\n\r\n}\r\n';_=B4b.prototype;_.pb=function F4b(){RUb(this.b,new I4b(this.a))};_=I4b.prototype=G4b.prototype=new UUb;_.gC=function J4b(){return cG};_.td=function K4b(){xfb(this,new OAb(27,pgb(this.A.D),1,10000))};_.gb=function L4b(){var a,b,c,d,e,f,g,i;this.z.W.b=1200;Uzb(this.B,this.z);Uzb(this.B,new pNb(5592405));f=new BNb(16777215,1.5,1000);qGb(f.W,0,0,600);Uzb(this.B,f);g=new ENb(1);qGb(g.W,0.05,0.05,1);Uzb(this.B,g);g.W.me(700);g.M=true;g.u=true;g.E=2048;g.C=2048;g.y=200;g.x=1500;g.c=40;g.v=-0.005;g.A=0.15;b=new xNb(16777215,0.85);qGb(b.W,1,-0.5,1);aBb(b.H,0.6,0.3,1);Uzb(this.B,b);b.W.me(500);b.M=true;b.E=2048;b.C=2048;b.y=200;b.x=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.v=-0.005;b.A=0.15;c=new xNb(16777215,0.85);qGb(c.W,1,-0.5,-1);Uzb(this.B,c);new qic(new Vcc);d=new qic(new Ric);d.a=true;i=new Jyb(512,512);lyb(i,(Spb(),Mpb));kyb(i,(Gpb(),Epb));iyb(i,(ypb(),wpb));i.f=false;this.a=new hic(this.A,i);e=new xgc;try{igc(e,yHc,new P4b(this,e))}catch(a){a=FJ(a);if(Ks(a,41)){Jzb();GN(Izb,(mN(),kN),OFc)}else throw a}wrb(this.A,5001561,1);this.A.P=true;this.A.O=false;this.A.I=false;this.A.K=true;this.A.L=true;this.A.N=true};_.sd=function M4b(){};_.hb=function N4b(a){var b,c;b=this.c*0.001;c=this.d*0.001;if(this.b){KFb(this.b.Z,0.05*(b-this.b.Z.d));JFb(this.b.Z,0.05*(c-this.b.Z.c))}crb(this.A)};_.cM={224:1};_.a=null;_.b=null;_.c=0;_.d=0;_=P4b.prototype=O4b.prototype=new Kb;_.gC=function Q4b(){return bG};_.cf=function R4b(){H4b(this.a,this.b.b)};_.a=null;_.b=null;_=Vcc.prototype=Ucc.prototype=new ssb;_.gC=function Wcc(){return FH};_.xd=function Xcc(){};_.cM={132:1};var Ycc;_=bdc.prototype=$cc.prototype=new Kb;_.gC=function cdc(){return EH};_.Ad=function ddc(){return ndc(),_cc};_.Bd=function edc(){return odc(),adc};var _cc=null,adc=null;_=gdc.prototype=fdc.prototype=new Kb;_.gC=function hdc(){return CH};_.Zb=function idc(){return QHc};_=kdc.prototype=jdc.prototype=new Kb;_.gC=function ldc(){return DH};_.Zb=function mdc(){return RHc};_=Kfc.prototype=Jfc.prototype=new ssb;_.gC=function Lfc(){return KH};_.xd=function Mfc(){Csb(this,byb());Csb(this,cyb());Csb(this,dyb());vsb(this,DHc,new Exb((Yxb(),Nxb),n6(0)));vsb(this,EHc,new Exb(Nxb,n6(0)));vsb(this,GHc,new Dxb(Qxb));vsb(this,FHc,new Dxb(Qxb));vsb(this,KHc,new Exb(Jxb,new gBb(15658734)));vsb(this,LHc,new Exb(Jxb,new gBb(1118481)));vsb(this,JHc,new Exb(Jxb,new gBb(328965)));vsb(this,SHc,new Exb(Kxb,new L5(1)));vsb(this,MHc,new Exb(Kxb,new L5(0.15)));vsb(this,NHc,new Exb(Kxb,new L5(0.75)));vsb(this,HHc,new Dxb(Qxb));vsb(this,OHc,new Exb(Kxb,new L5(1)));vsb(this,IHc,new Dxb(Qxb));vsb(this,PHc,new Exb(Wxb,new fHb(0,0,1,1)));vsb(this,THc,new Exb(Uxb,new wGb(0.75,0.375,0.1875)))};_.yd=function Nfc(a){var b,c;c=new Obb(zs(RI,{88:1,100:1},1,[UHc,VHc,WHc]));b=new Obb(zs(RI,{88:1,100:1},1,[XHc,YHc,ZHc]));Esb(this,Msb(a,zs(TI,{88:1,100:1},107,[c,b])))};_.zd=function Ofc(a){var b,c;c=new Obb(zs(RI,{88:1,100:1},1,[$Hc]));b=new Obb(zs(RI,{88:1,100:1},1,[_Hc]));Fsb(this,Msb(a,zs(TI,{88:1,100:1},107,[c,b])))};_.cM={132:1};var Pfc;_=Ufc.prototype=Rfc.prototype=new Kb;_.gC=function Vfc(){return JH};_.Ad=function Wfc(){return egc(),Sfc};_.Bd=function Xfc(){return fgc(),Tfc};var Sfc=null,Tfc=null;_=Zfc.prototype=Yfc.prototype=new Kb;_.gC=function $fc(){return HH};_.Zb=function _fc(){return aIc};_=bgc.prototype=agc.prototype=new Kb;_.gC=function cgc(){return IH};_.Zb=function dgc(){return bIc};var cG=z5(FEc,cIc),bG=z5(FEc,dIc),FH=z5(uFc,eIc),EH=z5(uFc,fIc),CH=z5(uFc,gIc),DH=z5(uFc,hIc),KH=z5(uFc,iIc),JH=z5(uFc,jIc),HH=z5(uFc,kIc),IH=z5(uFc,lIc);rkc(Vd)(21);