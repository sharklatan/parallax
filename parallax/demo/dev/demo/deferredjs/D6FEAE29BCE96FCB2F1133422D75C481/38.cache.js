function Luc(){}
function Puc(){}
function Suc(){}
function SKc(){}
function zKc(){}
function DKc(){}
function GKc(){}
function WKc(){}
function ZKc(){}
function qyc(){}
function uyc(){}
function xyc(){}
function dJc(){}
function hJc(){}
function kJc(){}
function jLc(){}
function nLc(){}
function qLc(){}
function CLc(){}
function GLc(){}
function JLc(){}
function I$b(a,b){a.c=b}
function F9b(a,b){a.n=b}
function JIc(a,b){drb(a.c,b)}
function yuc(a){this.b=a}
function Buc(a){this.b=a}
function Euc(a){this.b=a}
function Huc(){Huc=DMc;Guc=new Luc}
function Uuc(){Uuc=DMc;Juc=new Puc}
function Vuc(){Vuc=DMc;Kuc=new Suc}
function OKc(){OKc=DMc;NKc=new SKc}
function vKc(){vKc=DMc;uKc=new zKc}
function IKc(){IKc=DMc;xKc=new DKc}
function JKc(){JKc=DMc;yKc=new GKc}
function _Kc(){_Kc=DMc;QKc=new WKc}
function _Ic(){_Ic=DMc;$Ic=new dJc}
function mJc(){mJc=DMc;bJc=new hJc}
function nJc(){nJc=DMc;cJc=new kJc}
function myc(){myc=DMc;lyc=new qyc}
function zyc(){zyc=DMc;oyc=new uyc}
function Ayc(){Ayc=DMc;pyc=new xyc}
function aLc(){aLc=DMc;RKc=new ZKc}
function fLc(){fLc=DMc;eLc=new jLc}
function sLc(){sLc=DMc;hLc=new nLc}
function tLc(){tLc=DMc;iLc=new qLc}
function yLc(){yLc=DMc;xLc=new CLc}
function LLc(){LLc=DMc;ALc=new GLc}
function MLc(){MLc=DMc;BLc=new JLc}
function vuc(a,b){this.b=a;this.c=b}
function vLc(){GJb.call(this,(yLc(),xLc))}
function cLc(){GJb.call(this,(fLc(),eLc))}
function hyc(){GJb.call(this,(myc(),lyc))}
function YIc(){GJb.call(this,(_Ic(),$Ic))}
function sKc(){GJb.call(this,(vKc(),uKc))}
function LKc(){GJb.call(this,(OKc(),NKc))}
function ouc(a){a.A+=1;a.A==3&&BQb(a.w,true)}
function puc(){Gbc.call(this);this.b=0;this.k=0;this.j=1;this.v=1000;this.u=1000;this.D=true}
function nuc(a,b,c,d){var e,f,g;g=new q4b(b);UNb(Lv(YSb(i_b(g).j,aUc),226),c);f=new kac;e=new wZb(new MXb(a.v,a.u),g);D8b(e.ab,-500);qQb(f,e);XHb(a.H.n,f,a.d,d,true)}
function muc(a,b,c,d,e,f){var g,i;g=new i2b;b2b(g,new l5b(16755285));g.k=true;g2b(g,(a0b(),Z_b));i=new H9b(b,g);i.e=c;F9b(i,Tv(600*Glb()));B8b(i.ab,d,e,f);A5b(i.db,1.5707963267948966);i.T=true;i.V=true;qQb(a.I,i);drb(a.o,i)}
var qVc='enableDiffuse1',rVc='enableDiffuse2',jVc='h',lVc='heightMap',wVc='heightmap',vVc='offset',xVc='r',pVc='tDetail',nVc='tDiffuse1',oVc='tDiffuse2',tVc='uRepeatOverlay',kVc='v';PV(1254,1,pOc);_.Qb=function kuc(){gbc(this.c,new puc(this.b))};PV(1255,984,{78:1,186:1,342:1},puc);_.Xd=function quc(a){ouc(this)};_.Jd=function ruc(a){this.v=a.b.ib;this.u=a.b.hb;UNb(Lv(YSb(i_b(this.g.c).j,jVc),226),new zkb(6/this.v));UNb(Lv(YSb(i_b(this.F.c).j,kVc),226),new zkb(6/this.u))};_.ob=function suc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u;Au((uyb(),tyb),(Eyb(),Dyb),this);this.c=new uRb(40,zGb(this.H.n),2,4000);this.v=this.H.n.ib;this.u=this.H.n.hb;this.d=new fRb(this.v,this.u,-10000,10000);B8b(this.c.ab,-1200,800,1200);D8b(this.d.ab,100);this.t=new kac;qQb(this.t,this.d);this.e=new zxb(this.c,this.H.d);A8b(this.e.w,0);this.e.t=1;this.e.B=1.2;wxb(this.e,0.8);this.e.i=true;this.e.f=true;this.e.g=true;uxb(this.e,0.15);iac(this.I,new $9b(328965,2000,4000));qQb(this.I,new OZb(1118481));this.f=new q$b(16777215,1.15);B8b(this.f.ab,500,2000,0);qQb(this.I,this.f);this.r=new L$b(16729088,1.5,0);A8b(this.r.ab,0);qQb(this.I,this.r);this.i=new qPb(256,256);IOb(this.i,(dFb(),$Eb));GOb(this.i,(UEb(),SEb));DOb(this.i,(oDb(),mDb));EOb(this.i,false);this.p=new qPb(256,256);IOb(this.p,$Eb);GOb(this.p,SEb);DOb(this.p,mDb);EOb(this.p,false);n=new cLc;u=n.j;UNb(Lv(u.b[SQc],226),new zkb(0.05));U7b(Lv(Lv(u.b[GUc],226).e,301),256,256);UNb(Lv(u.b[lVc],226),this.i);s=new qPb(2048,2048);IOb(s,$Eb);GOb(s,SEb);DOb(s,mDb);s.s=false;POb(s,(vGb(),uGb));QOb(s,uGb);c=new WOb('./static/textures/terrain/grasslight-big.jpg',new vuc(this,s));POb(c,uGb);QOb(c,uGb);d=new WOb('./static/textures/terrain/backgrounddetailed6.jpg',this);POb(d,uGb);QOb(d,uGb);b=new WOb('./static/textures/terrain/grasslight-big-nm.jpg',this);POb(b,uGb);QOb(b,uGb);t=new hyc;this.C=t.j;UNb(Lv(YSb(this.C,AUc),226),this.p);UNb(Lv(YSb(this.C,BUc),226),new zkb(3.5));UNb(Lv(YSb(this.C,mVc),226),this.i);UNb(Lv(YSb(this.C,nVc),226),c);UNb(Lv(YSb(this.C,oVc),226),d);UNb(Lv(YSb(this.C,CUc),226),s);UNb(Lv(YSb(this.C,pVc),226),b);UNb(Lv(YSb(this.C,qVc),226),(Ajb(),Ajb(),zjb));UNb(Lv(YSb(this.C,rVc),226),zjb);UNb(Lv(YSb(this.C,$Tc),226),zjb);h5b(Lv(Lv(YSb(this.C,eUc),226).e,298),16777215);h5b(Lv(Lv(YSb(this.C,fUc),226).e,298),16777215);h5b(Lv(Lv(YSb(this.C,dUc),226).e,298),1118481);UNb(Lv(YSb(this.C,FUc),226),new zkb(30));UNb(Lv(YSb(this.C,sVc),226),new zkb(375));U7b(Lv(Lv(YSb(this.C,tVc),226).e,301),6,6);this.B=new Ytb;tpb(this.B,JUc,new WNb((nOb(),_Nb),new zkb(1)));tpb(this.B,uVc,new WNb(hOb,new $7b(1.5,1.5)));tpb(this.B,vVc,new WNb(hOb,new $7b(0,0)));this.n=new Ytb;i=new p4b((Huc(),Guc));BJb(i_b(i),this.B);i.d=false;i.c=true;tpb(this.n,wVc,i);j=new q4b(n);BJb(i_b(j),u);j.d=false;j.c=true;tpb(this.n,WTc,j);k=new q4b(t);BJb(i_b(k),this.C);k.d=true;k.c=true;tpb(this.n,'terrain',k);o=new MXb(this.v,this.u);p=new p1b;j1b(p,new l5b(0));this.s=new wZb(o,p);D8b(this.s.ab,-500);qQb(this.t,this.s);g=new NXb(6000,6000,64,64);bSb(g);this.w=new wZb(g,k);B8b(this.w.ab,0,-125,0);z5b(this.w.db,-1.5707963267948966);BQb(this.w,false);qQb(this.I,this.w);fIb(this.H.n,this.I.b.d,1);this.H.n.Y=true;this.H.n.Z=true;AGb(this.H.n,false);q=new SIc(this.I,this.c);f=new DIc(0.6);e=new VIc(new YIc);UNb(Lv(YSb(i_b(e.c).j,kUc),226),new zkb(0.65));this.g=new VIc(new sKc);this.F=new VIc(new vLc);UNb(Lv(YSb(i_b(this.g.c).j,jVc),226),new zkb(6/this.v));UNb(Lv(YSb(i_b(this.F.c).j,kVc),226),new zkb(6/this.u));UNb(Lv(YSb(i_b(this.g.c).j,xVc),226),new zkb(0.5));UNb(Lv(YSb(i_b(this.F.c).j,xVc),226),new zkb(0.5));this.F.b=true;r=new qPb(this.v,this.u);IOb(s,ZEb);GOb(s,SEb);DOb(s,mDb);s.g=false;s.s=false;a=new LIc(this.H.n,r);drb(a.c,q);drb(a.c,f);drb(a.c,e);JIc(a,this.g);JIc(a,this.F);this.o=new nrb;new pzc('./static/models/animated/parrot.js',new yuc(this));new pzc(iVc,new Buc(this));new pzc('./static/models/animated/stork.js',new Euc(this));this.q=Ii()};_.pb=function tuc(a){var b,c,d,e,f;b=(Ii()-this.q)*0.001;if(this.w.hb){xxb(this.e);this.k=L5b(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;g5b(this.I.b.d,0.1,e,this.k);fIb(this.H.n,this.I.b.d,1);YZb(this.f,0.1+f*1.0499999999999998);I$b(this.r,0.9+f*0.6);UNb(Lv(YSb(this.C,BUc),226),new zkb(0.6+f*2.9));if(this.D){this.b=L5b(this.b+-7.5E-4,0,0.05);UNb(Lv(opb(this.B,JUc),226),new zkb(Lv(Lv(opb(this.B,JUc),226).e,150).b+b*this.b));P7b(Lv(Lv(opb(this.B,vVc),226).e,301),b*0.05);V7b(Lv(Lv(YSb(this.C,yVc),226).e,301),4*Lv(Lv(opb(this.B,vVc),226).e,301).d);gUb(this.s,Lv(opb(this.n,wVc),287));XHb(this.H.n,this.t,this.d,this.i,true);gUb(this.s,Lv(opb(this.n,WTc),287));XHb(this.H.n,this.t,this.d,this.p,true);this.D=false}for(c=0;c<this.o.c;c++){d=Lv(grb(this.o,c),309);G9b(d,Tv(1000*b));P7b(d.ab,d.e*b);d.ab.d>2000&&V7b(d.ab,-1500-Glb()*500)}XHb(this.H.n,this.I,this.c,null,false)}this.q=Ii()};_.b=0;_.j=0;_.k=0;_.q=0;_.u=0;_.v=0;_.A=0;_.D=false;PV(1256,1,{},vuc);_.Xd=function wuc(a){ouc(this.b);nuc(this.b,new LKc,a,this.c)};PV(1257,1,{},yuc);_.sf=function zuc(a,b){kzc((Lv(a,344),Lv(b,243)));muc(this.b,Lv(b,243),500,-3500,500,700);muc(this.b,Lv(b,243),500,-3000-Glb()*500,500,-200);muc(this.b,Lv(b,243),500,-3000-Glb()*500,500,200);muc(this.b,Lv(b,243),500,-3000-Glb()*500,500,1000)};PV(1258,1,{},Buc);_.sf=function Cuc(a,b){kzc((Lv(a,344),Lv(b,243)));muc(this.b,Lv(b,243),1000,-3000-Glb()*500,350,40)};PV(1259,1,{},Euc);_.sf=function Fuc(a,b){kzc((Lv(a,344),Lv(b,243)));muc(this.b,Lv(b,243),1000,-3000-Glb()*500,350,340)};var Guc;PV(1260,1,{},Luc);_.Rd=function Muc(){return Uuc(),Juc};_.Sd=function Nuc(){return Vuc(),Kuc};var Juc,Kuc;PV(1261,1,{},Puc);_.qc=function Quc(){return '//\n// Description : Array and textureless GLSL 3D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110409 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//\n\nuniform float time;\nvarying vec2 vUv;\n\nvec4 permute( vec4 x ) {\n\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n\treturn 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nfloat snoise( vec3 v ) {\n\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\n\n\t// First corner\n\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\n\tvec3 x0 = v - i + dot( i, C.xxx );\n\n\t// Other corners\n\n\tvec3 g = step( x0.yzx, x0.xyz );\n\tvec3 l = 1.0 - g;\n\tvec3 i1 = min( g.xyz, l.zxy );\n\tvec3 i2 = max( g.xyz, l.zxy );\n\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n\t// Permutations\n\n\ti = mod( i, 289.0 );\n\tvec4 p = permute( permute( permute(\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\n\n\t// Gradients\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n\tfloat n_ = 1.0 / 7.0; // N=7\n\n\tvec3 ns = n_ * D.wyz - D.xzx;\n\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\n\n\tvec4 x_ = floor( j * ns.z );\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\n\n\tvec4 x = x_ *ns.x + ns.yyyy;\n\tvec4 y = y_ *ns.x + ns.yyyy;\n\tvec4 h = 1.0 - abs( x ) - abs( y );\n\n\tvec4 b0 = vec4( x.xy, y.xy );\n\tvec4 b1 = vec4( x.zw, y.zw );\n\n\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\n\tvec4 sh = -step( h, vec4( 0.0 ) );\n\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n\n\tvec3 p0 = vec3( a0.xy, h.x );\n\tvec3 p1 = vec3( a0.zw, h.y );\n\tvec3 p2 = vec3( a1.xy, h.z );\n\tvec3 p3 = vec3( a1.zw, h.w );\n\n\t// Normalise gradients\n\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\n\tp0 *= norm.x;\n\tp1 *= norm.y;\n\tp2 *= norm.z;\n\tp3 *= norm.w;\n\n\t// Mix final noise value\n\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\n\tm = m * m;\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\n\n}\n\nfloat surface3( vec3 coord ) {\n\n\tfloat n = 0.0;\n\n\tn += 1.0 * abs( snoise( coord ) );\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\n\n\treturn n;\n\n}\n\nvoid main( void ) {\n\n\tvec3 coord = vec3( vUv, -time );\n\tfloat n = surface3( coord );\n\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\n\n}\n'};PV(1262,1,{},Suc);_.qc=function Tuc(){return 'varying vec2 vUv;\nuniform vec2 scale;\nuniform vec2 offset;\n\nvoid main( void ) {\n\n\tvUv = uv * scale + offset;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n'};PV(1323,736,bOc,hyc);_.Od=function iyc(){BJb(this,rOb());BJb(this,sOb());BJb(this,tOb());uJb(this,qVc,new WNb((nOb(),cOb),(Ajb(),Ajb(),yjb)));uJb(this,rVc,new WNb(cOb,yjb));uJb(this,$Tc,new WNb(cOb,yjb));uJb(this,zVc,new WNb(cOb,yjb));uJb(this,nVc,new VNb(fOb));uJb(this,oVc,new VNb(fOb));uJb(this,pVc,new VNb(fOb));uJb(this,AUc,new VNb(fOb));uJb(this,CUc,new VNb(fOb));uJb(this,mVc,new VNb(fOb));uJb(this,BUc,new WNb(_Nb,new zkb(1)));uJb(this,AVc,new WNb(_Nb,new zkb(0)));uJb(this,sVc,new WNb(_Nb,new zkb(1)));uJb(this,eUc,new WNb($Nb,new l5b(15658734)));uJb(this,fUc,new WNb($Nb,new l5b(1118481)));uJb(this,dUc,new WNb($Nb,new l5b(328965)));uJb(this,FUc,new WNb(_Nb,new zkb(30)));uJb(this,kUc,new WNb(_Nb,new zkb(1)));uJb(this,'uRepeatBase',new WNb(hOb,new $7b(1,1)));uJb(this,tVc,new WNb(hOb,new $7b(1,1)));uJb(this,yVc,new WNb(hOb,new $7b(0,0)))};_.Pd=function jyc(a){var b,c;c=new Mrb(Bv(LT,JMc,1,[lUc,mUc]));b=new Mrb(Bv(LT,JMc,1,[oUc,pUc,qUc]));DJb(this,LJb(a,Bv(OT,JMc,173,[c,b])))};_.Qd=function kyc(a){var b,c;c=new Mrb(Bv(LT,JMc,1,[rUc]));b=new Mrb(Bv(LT,JMc,1,[sUc]));EJb(this,LJb(a,Bv(OT,JMc,173,[c,b])))};var lyc;PV(1324,1,{},qyc);_.Rd=function ryc(){return zyc(),oyc};_.Sd=function syc(){return Ayc(),pyc};var oyc,pyc;PV(1325,1,{},uyc);_.qc=function vyc(){return 'uniform vec3 ambient;\r\nuniform vec3 diffuse;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\r\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += diffuse * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = -lVector;\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\r\n\r\n[*]\r\n\r\n}\r\n'};PV(1326,1,{},xyc);_.qc=function yyc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n[*]\r\n\r\n}\r\n'};PV(1418,736,bOc,YIc);_.Od=function ZIc(){uJb(this,aUc,new VNb((nOb(),fOb)));uJb(this,kUc,new WNb(_Nb,new zkb(1)))};var $Ic;PV(1419,1,{},dJc);_.Rd=function eJc(){return mJc(),bJc};_.Sd=function fJc(){return nJc(),cJc};var bJc,cJc;PV(1420,1,{},hJc);_.qc=function iJc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};PV(1421,1,{},kJc);_.qc=function lJc(){return RUc};PV(1442,736,bOc,sKc);_.Od=function tKc(){uJb(this,aUc,new VNb((nOb(),fOb)));uJb(this,jVc,new WNb(_Nb,new zkb(0.001953125)));uJb(this,xVc,new WNb(_Nb,new zkb(0.35)))};var uKc;PV(1443,1,{},zKc);_.Rd=function AKc(){return IKc(),xKc};_.Sd=function BKc(){return JKc(),yKc};var xKc,yKc;PV(1444,1,{},DKc);_.qc=function EKc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};PV(1445,1,{},GKc);_.qc=function HKc(){return RUc};PV(1448,736,bOc,LKc);_.Od=function MKc(){uJb(this,aUc,new VNb((nOb(),fOb)))};var NKc;PV(1449,1,{},SKc);_.Rd=function TKc(){return _Kc(),QKc};_.Sd=function UKc(){return aLc(),RKc};var QKc,RKc;PV(1450,1,{},WKc);_.qc=function XKc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};PV(1451,1,{},ZKc);_.qc=function $Kc(){return RUc};PV(1454,736,bOc,cLc);_.Od=function dLc(){uJb(this,lVc,new VNb((nOb(),fOb)));uJb(this,GUc,new WNb(hOb,new $7b(512,512)));uJb(this,uVc,new WNb(hOb,new $7b(1,1)));uJb(this,SQc,new WNb(_Nb,new zkb(0.05)))};var eLc;PV(1455,1,{},jLc);_.Rd=function kLc(){return sLc(),hLc};_.Sd=function lLc(){return tLc(),iLc};var hLc,iLc;PV(1456,1,{},nLc);_.qc=function oLc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};PV(1457,1,{},qLc);_.qc=function rLc(){return RUc};PV(1460,736,bOc,vLc);_.Od=function wLc(){uJb(this,aUc,new VNb((nOb(),fOb)));uJb(this,kVc,new WNb(_Nb,new zkb(0.001953125)));uJb(this,xVc,new WNb(_Nb,new zkb(0.35)))};var xLc;PV(1461,1,{},CLc);_.Rd=function DLc(){return LLc(),ALc};_.Sd=function ELc(){return MLc(),BLc};var ALc,BLc;PV(1462,1,{},GLc);_.qc=function HLc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};PV(1463,1,{},JLc);_.qc=function KLc(){return RUc};var ZP=nkb(qTc,'TerrainDynamic$DemoScene',1255),VP=nkb(qTc,'TerrainDynamic$DemoScene$1',1256),WP=nkb(qTc,'TerrainDynamic$DemoScene$2',1257),XP=nkb(qTc,'TerrainDynamic$DemoScene$3',1258),YP=nkb(qTc,'TerrainDynamic$DemoScene$4',1259),PS=nkb(TUc,BVc,1454),NQ=nkb(gTc,'TerrainShader',1323),rS=nkb(TUc,'BleachBypassShader',1418),HS=nkb(TUc,'HorizontalTiltShiftShader',1442),TS=nkb(TUc,'VerticalTiltShiftShader',1460),aQ=nkb(qTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',1260),$P=nkb(qTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',1261),_P=nkb(qTc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',1262),OS=nkb(TUc,CVc,1455),MS=nkb(TUc,DVc,1456),NS=nkb(TUc,EVc,1457),MQ=nkb(gTc,'TerrainShader_Resources_default_InlineClientBundleGenerator',1324),KQ=nkb(gTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',1325),LQ=nkb(gTc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',1326),qS=nkb(TUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',1419),oS=nkb(TUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',1420),pS=nkb(TUc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',1421),GS=nkb(TUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1443),ES=nkb(TUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1444),FS=nkb(TUc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1445),SS=nkb(TUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',1461),QS=nkb(TUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',1462),RS=nkb(TUc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',1463),LS=nkb(TUc,'LuminosityShader',1448),KS=nkb(TUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',1449),IS=nkb(TUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',1450),JS=nkb(TUc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',1451);DOc(Oj)(38);