function Rjc(){}
function Xjc(){}
function tuc(){}
function Cuc(){}
function zuc(){}
function Huc(){}
function Guc(){}
function Luc(){}
function Kuc(){}
function Kxc(){}
function Cxc(){}
function Nxc(){}
function Sxc(){}
function Rxc(){}
function Wxc(){}
function Vxc(){}
function Tjc(){Y7b.call(this)}
function Yjc(a,b){this.a=a;this.b=b}
function yuc(){yuc=xLc;xuc=new Cuc}
function Ouc(){Ouc=xLc;Auc=new Huc}
function Puc(){Puc=xLc;Buc=new Luc}
function Jxc(){Jxc=xLc;Ixc=new Nxc}
function Zxc(){Zxc=xLc;Lxc=new Sxc}
function $xc(){$xc=xLc;Mxc=new Wxc}
function Dxc(){tFb.call(this,(Jxc(),Ixc))}
function uuc(){tFb.call(this,(yuc(),xuc))}
function Sjc(a,b){var c,d,e,f,g,i;d=new nLb(RPc);d.k=4;kTb(d.x,0.998,0.998);kTb(d.w,0.001,0.001);kLb(d,(oDb(),nDb));lLb(d,nDb);aLb(d,(HAb(),FAb));e=new nLb('./static/models/obj/leeperrysmith/Map-SPEC.jpg');kTb(e.x,0.998,0.998);kTb(e.w,0.001,0.001);kLb(e,nDb);lLb(e,nDb);aLb(e,FAb);c=new nLb('./static/models/obj/leeperrysmith/Map-COL.jpg');kTb(c.x,0.998,0.998);kTb(c.w,0.001,0.001);kLb(c,nDb);lLb(c,nDb);aLb(c,FAb);g=new Dxc;i=g.i;pKb($q(i.a[TPc],166),(Qeb(),Qeb(),Peb));pKb($q(i.a[UPc],166),Peb);pKb($q(i.a[VPc],166),a.b.e);pKb($q(i.a[WPc],166),c);pKb($q(i.a[XPc],166),d);pKb($q(i.a[YPc],166),e);nOb($q($q(i.a[ZPc],166).d,178),10526880);nOb($q($q(i.a[$Pc],166).d,178),10526880);nOb($q($q(i.a[_Pc],166).d,178),10526880);pKb($q(i.a[aQc],166),new Ofb(0.145));pKb($q(i.a[bQc],166),new Ofb(0.75));pKb($q(i.a[cQc],166),new Ofb(16));AUb($q($q(i.a[dQc],166).d,194),0.001,0.001,0.998,0.998);f=new c5b(g);f.c=true;a.c=new Q5b(b,f);a.c.W.d=-50;PTb(a.c._,100);a.c.M=true;a.c.N=true;ZMb(a.D,a.c)}
var TPc='enableBump',VPc='tBeckmann',aQc='uRoughness',bQc='uSpecularBrightness';_=Mjc.prototype;_.vb=function Qjc(){U7b(this.b,new Tjc(this.a))};_=Tjc.prototype=Rjc.prototype=new X7b;_.gC=function Ujc(){return yG};_.mb=function Vjc(){var a,b,c,d,e,f,g,i,j;this.a=new YNb(27,TDb(this.C.n),1,10000);this.a.W.b=1200;ZMb(this.D,new B$b(5592405));f=new y_b(16777215,1.5,1000);OTb(f.W,0,0,600);ZMb(this.D,f);i=new M_b(1);OTb(i.W,0.05,0.05,1);ZMb(this.D,i);i.W.Ae(700);i.M=true;i.u=true;i.E=2048;i.C=2048;i.y=200;i.x=1500;i.c=40;i.v=-0.005;i.A=0.15;b=new e_b(16777215,0.85);OTb(b.W,1,-0.5,1);mOb(b.H,0.6,0.3,1);ZMb(this.D,b);b.W.Ae(500);b.M=true;b.E=2048;b.C=2048;b.y=200;b.x=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.v=-0.005;b.A=0.15;c=new e_b(16777215,0.85);OTb(c.W,1,-0.5,-1);ZMb(this.D,c);new WGc(new uuc);d=new WGc(new SHc);d.a=true;j=new ULb(512,512);eLb(j,(UBb(),OBb));cLb(j,(IBb(),GBb));aLb(j,(HAb(),FAb));j.f=false;this.b=new JGc(this.C.n,j);e=new Nyc;try{Ayc(e,SPc,new Yjc(this,e))}catch(a){a=uM(a);if(br(a,41)){OMb();dQ(NMb,(LP(),JP),APc)}else throw a}eEb(this.C.n,5001561,1);g=new HDb(this.C.n,this.D);g.f=false;this.C.n.N=false;this.C.n.P=true;this.C.n.Q=true;this.C.n.S=true};_.nb=function Wjc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){gTb(this.c.Z,0.05*(b-this.c.Z.d));fTb(this.c.Z,0.05*(c-this.c.Z.c))}QDb(this.C.n);YDb(this.C.n,this.D,this.a,null,false)};_.cM={261:1};_.a=null;_.b=null;_.c=null;_.d=0;_.e=0;_=Yjc.prototype=Xjc.prototype=new Jb;_.gC=function Zjc(){return xG};_.zf=function $jc(){Sjc(this.a,this.b.a)};_.a=null;_.b=null;_=uuc.prototype=tuc.prototype=new fFb;_.gC=function vuc(){return EI};_.Jd=function wuc(){};_.cM={164:1};var xuc;_=Cuc.prototype=zuc.prototype=new Jb;_.gC=function Duc(){return DI};_.Md=function Euc(){return Ouc(),Auc};_.Nd=function Fuc(){return Puc(),Buc};var Auc=null,Buc=null;_=Huc.prototype=Guc.prototype=new Jb;_.gC=function Iuc(){return BI};_.Yb=function Juc(){return 'varying vec2 vUv;\r\n\r\nfloat PHBeckmann( float ndoth, float m ) {\r\n\r\n\tfloat alpha = acos( ndoth );\r\n\tfloat ta = tan( alpha );\r\n\r\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\r\n\treturn val;\r\n\r\n}\r\n\r\nfloat KSTextureCompute( vec2 tex ) {\r\n\r\n\t// Scale the value to fit within [0,1]  invert upon lookup.\r\n\r\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tfloat x = KSTextureCompute( vUv );\r\n\r\n\tgl_FragColor = vec4( x, x, x, 1.0 );\r\n\r\n}\r\n'};_=Luc.prototype=Kuc.prototype=new Jb;_.gC=function Muc(){return CI};_.Yb=function Nuc(){return eQc};_=Dxc.prototype=Cxc.prototype=new fFb;_.gC=function Exc(){return RI};_.Jd=function Fxc(){pFb(this,QKb());pFb(this,RKb());pFb(this,SKb());iFb(this,TPc,new rKb((LKb(),AKb),zgb(0)));iFb(this,UPc,new rKb(AKb,zgb(0)));iFb(this,WPc,new qKb(DKb));iFb(this,VPc,new qKb(DKb));iFb(this,$Pc,new rKb(wKb,new sOb(15658734)));iFb(this,_Pc,new rKb(wKb,new sOb(1118481)));iFb(this,ZPc,new rKb(wKb,new sOb(328965)));iFb(this,fQc,new rKb(xKb,new Ofb(1)));iFb(this,aQc,new rKb(xKb,new Ofb(0.15)));iFb(this,bQc,new rKb(xKb,new Ofb(0.75)));iFb(this,XPc,new qKb(DKb));iFb(this,cQc,new rKb(xKb,new Ofb(1)));iFb(this,YPc,new qKb(DKb));iFb(this,dQc,new rKb(JKb,new DUb(0,0,1,1)));iFb(this,'uWrapRGB',new rKb(HKb,new UTb(0.75,0.375,0.1875)))};_.Kd=function Gxc(a){var b,c;c=new Inb(Rq(mL,{88:1,106:1},1,[gQc,hQc,iQc]));b=new Inb(Rq(mL,{88:1,106:1},1,[jQc,kQc,lQc]));rFb(this,zFb(a,Rq(qL,{88:1,106:1},117,[c,b])))};_.Ld=function Hxc(a){var b,c;c=new Inb(Rq(mL,{88:1,106:1},1,[mQc]));b=new Inb(Rq(mL,{88:1,106:1},1,[nQc]));sFb(this,zFb(a,Rq(qL,{88:1,106:1},117,[c,b])))};_.cM={164:1};var Ixc;_=Nxc.prototype=Kxc.prototype=new Jb;_.gC=function Oxc(){return QI};_.Md=function Pxc(){return Zxc(),Lxc};_.Nd=function Qxc(){return $xc(),Mxc};var Lxc=null,Mxc=null;_=Sxc.prototype=Rxc.prototype=new Jb;_.gC=function Txc(){return OI};_.Yb=function Uxc(){return '#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 uAmbientColor;\r\nuniform vec3 uDiffuseColor;\r\nuniform vec3 uSpecularColor;\r\nuniform float uOpacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * uDiffuseColor * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * uSpecularColor * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// directional lights\r\n\t\t\t\t\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += uDiffuseColor * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += uSpecularColor * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * uAmbientColor ) + specularTotal;\r\n\r\n[*]\r\n\r\n}'};_=Wxc.prototype=Vxc.prototype=new Jb;_.gC=function Xxc(){return PI};_.Yb=function Yxc(){return 'uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalMatrix * normal;\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n'};var yG=Dfb(pPc,'MaterialsBumpmapSkin$DemoScene',fE),xG=Dfb(pPc,'MaterialsBumpmapSkin$DemoScene$1',Xx),EI=Dfb(sPc,'BeckmannShader',oB),DI=Dfb(sPc,'BeckmannShader_Resources_default_InlineClientBundleGenerator',Xx),BI=Dfb(sPc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$1',Xx),CI=Dfb(sPc,'BeckmannShader_Resources_default_InlineClientBundleGenerator$2',Xx),RI=Dfb(sPc,'SkinSimpleShader',oB),QI=Dfb(sPc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator',Xx),OI=Dfb(sPc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$1',Xx),PI=Dfb(sPc,'SkinSimpleShader_Resources_default_InlineClientBundleGenerator$2',Xx);OLc(Wd)(23);