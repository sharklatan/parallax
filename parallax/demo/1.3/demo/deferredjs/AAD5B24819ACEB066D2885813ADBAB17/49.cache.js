function Psc(){}
function Zsc(){}
function btc(){}
function ftc(){}
function jtc(){}
function stc(){}
function ptc(){}
function xtc(){}
function wtc(){}
function Btc(){}
function Atc(){}
function mxc(){}
function xxc(){}
function uxc(){}
function Cxc(){}
function Bxc(){}
function Gxc(){}
function Fxc(){}
function kGc(){}
function tGc(){}
function qGc(){}
function yGc(){}
function xGc(){}
function CGc(){}
function BGc(){}
function WHc(){}
function dIc(){}
function aIc(){}
function iIc(){}
function hIc(){}
function mIc(){}
function lIc(){}
function rIc(){}
function AIc(){}
function xIc(){}
function FIc(){}
function EIc(){}
function JIc(){}
function IIc(){}
function OIc(){}
function XIc(){}
function UIc(){}
function _Ic(){}
function aJc(){}
function eJc(){}
function dJc(){}
function jJc(){}
function sJc(){}
function pJc(){}
function xJc(){}
function wJc(){}
function BJc(){}
function AJc(){}
function ZZb(a,b){a.u=b}
function J$b(a,b){a.c=b}
function j5b(a,b){a.i=b}
function UFc(a,b){gmb(a.c,b)}
function Tsc(){j7b.call(this)}
function otc(){otc=KKc;ntc=new stc}
function Etc(){Etc=KKc;qtc=new xtc}
function Ftc(){Ftc=KKc;rtc=new Btc}
function FGc(){FGc=KKc;rGc=new yGc}
function pGc(){pGc=KKc;oGc=new tGc}
function GGc(){GGc=KKc;sGc=new CGc}
function txc(){txc=KKc;sxc=new xxc}
function Jxc(){Jxc=KKc;vxc=new Cxc}
function Kxc(){Kxc=KKc;wxc=new Gxc}
function _Hc(){_Hc=KKc;$Hc=new dIc}
function pIc(){pIc=KKc;bIc=new iIc}
function qIc(){qIc=KKc;cIc=new mIc}
function wIc(){wIc=KKc;vIc=new AIc}
function MIc(){MIc=KKc;yIc=new FIc}
function NIc(){NIc=KKc;zIc=new JIc}
function TIc(){TIc=KKc;SIc=new XIc}
function hJc(){hJc=KKc;VIc=new aJc}
function iJc(){iJc=KKc;WIc=new eJc}
function oJc(){oJc=KKc;nJc=new sJc}
function EJc(){EJc=KKc;qJc=new xJc}
function FJc(){FJc=KKc;rJc=new BJc}
function $sc(a,b){this.b=a;this.c=b}
function ctc(a,b){this.b=a;this.c=b}
function gtc(a,b){this.b=a;this.c=b}
function ktc(a,b){this.b=a;this.c=b}
function nxc(){GEb.call(this,(txc(),sxc))}
function lGc(){GEb.call(this,(pGc(),oGc))}
function XHc(){GEb.call(this,(_Hc(),$Hc))}
function sIc(){GEb.call(this,(wIc(),vIc))}
function PIc(){GEb.call(this,(TIc(),SIc))}
function kJc(){GEb.call(this,(oJc(),nJc))}
function Ssc(a){a.x+=1;a.x==3&&(a.w.eb=true,undefined)}
function Rsc(a,b,c,d){var e,f,g;g=new p4b(b);CJb(Mq(q_b(g).j.b[_Oc],166),c);f=new _5b;e=new b5b(new ZXb(a.v,a.u),g);e.X.c=-500;kMb(f,e);jDb(a.D.o,f,a.d,d,true)}
function Qsc(a,b,c,d,e,f){var g,i;g=new x2b;r2b(g,new FNb(16755285));g.j=true;v2b(g,(m0b(),j0b));i=new l5b(b,g);i.c=c;j5b(i,Uq(600*Math.random()));_Sb(i.X,d,e,f);i.$.e=1.5707963267948966;i.N=true;i.O=true;kMb(a.E,i);gmb(a.o,i);X5b(a.E,a.D.o)}
var zQc='enableDiffuse1',AQc='enableDiffuse2',sQc='h',uQc='heightMap',DQc='heightmap',FQc='r',yQc='tDetail',wQc='tDiffuse1',xQc='tDiffuse2',CQc='uRepeatOverlay',tQc='v';_=Ksc.prototype;_.wb=function Osc(){f7b(this.c,new Tsc(this.b))};_=Tsc.prototype=Psc.prototype=new i7b;_.gC=function Usc(){return gI};_.Rd=function Vsc(a){Ssc(this)};_.Gd=function Wsc(a){this.v=a.b.p;this.u=a.b.o;CJb(Mq(q_b(this.g.c).j.b[sQc],166),new _eb(6/this.v));CJb(Mq(q_b(this.B.c).j.b[tQc],166),new _eb(6/this.u))};_.nb=function Xsc(){var a,b,c,d,e,f,g,i,j,k,n,o,p,q,r,s,t,u,v,w;lp((_ub(),$ub),(kvb(),jvb),this);this.c=new jNb(40,eDb(this.D.o),2,4000);this.v=this.D.o.p;this.u=this.D.o.o;this.d=new aNb(this.v,this.u,-10000,10000);_Sb(this.c.X,-1200,800,1200);this.d.X.c=100;this.t=new _5b;kMb(this.t,this.d);this.e=new Xtb(this.c,this.D.c);aTb(this.e.w,0);this.e.t=1;this.e.y=1.2;this.e.p=0.8;this.e.i=true;this.e.f=true;this.e.g=true;this.e.b=0.15;$5b(this.E,new L5b(328965,2000,4000));zNb(this.E.c.d,0.102,0.9,0.825);kMb(this.E,new OZb(1118481));this.f=new r$b(16777215,1.15);_Sb(this.f.X,500,2000,0);kMb(this.E,this.f);this.r=new L$b(16729088,1.5,0);aTb(this.r.X,0);kMb(this.E,this.r);this.i=new fLb(256,256);rKb(this.i,(fBb(),aBb));pKb(this.i,(VAb(),TAb));nKb(this.i,(Uzb(),Szb));this.p=new fLb(256,256);rKb(this.p,aBb);pKb(this.p,TAb);nKb(this.p,Szb);p=new PIc;w=p.j;CJb(Mq(w.b[ULc],166),new _eb(0.05));xSb(Mq(Mq(w.b[HPc],166).e,192),256,256);CJb(Mq(w.b[uQc],166),this.i);u=new fLb(2048,2048);rKb(u,aBb);pKb(u,TAb);nKb(u,Szb);xKb(u,(BCb(),ACb));yKb(u,ACb);d=new BKb('./static/textures/terrain/grasslight-big.jpg',new $sc(this,u));xKb(d,ACb);yKb(d,ACb);e=new BKb('./static/textures/terrain/backgrounddetailed6.jpg',this);xKb(e,ACb);yKb(e,ACb);c=new BKb('./static/textures/terrain/grasslight-big-nm.jpg',this);xKb(c,ACb);yKb(c,ACb);v=new nxc;this.z=v.j;CJb(Mq(this.z.b[WPc],166),this.p);CJb(Mq(this.z.b[XPc],166),new _eb(3.5));CJb(Mq(this.z.b[vQc],166),this.i);CJb(Mq(this.z.b[wQc],166),d);CJb(Mq(this.z.b[xQc],166),e);CJb(Mq(this.z.b[YPc],166),u);CJb(Mq(this.z.b[yQc],166),c);CJb(Mq(this.z.b[zQc],166),(beb(),beb(),aeb));CJb(Mq(this.z.b[AQc],166),aeb);CJb(Mq(this.z.b[ZOc],166),aeb);ANb(Mq(Mq(this.z.b[dPc],166).e,178),16777215);ANb(Mq(Mq(this.z.b[ePc],166).e,178),16777215);ANb(Mq(Mq(this.z.b[cPc],166).e,178),1118481);CJb(Mq(this.z.b[_Pc],166),new _eb(30));CJb(Mq(this.z.b[BQc],166),new _eb(375));xSb(Mq(Mq(this.z.b[CQc],166).e,192),6,6);this.y=new spb;kkb(this.y,LPc,new EJb((YJb(),KJb),new _eb(1)));kkb(this.y,fQc,new EJb(SJb,new BSb(1.5,1.5)));kkb(this.y,FPc,new EJb(SJb,new BSb(0,0)));this.n=new spb;k=new n4b((otc(),ntc));CEb(q_b(k),this.y);k.d=false;k.c=true;kkb(this.n,DQc,k);n=new p4b(p);CEb(q_b(n),w);n.d=false;n.c=true;kkb(this.n,EQc,n);o=new p4b(v);CEb(q_b(o),this.z);o.d=true;o.c=true;kkb(this.n,'terrain',o);q=new ZXb(this.v,this.u);r=new E1b;z1b(r,new FNb(0));this.s=new b5b(q,r);this.s.X.c=-500;kMb(this.t,this.s);i=new $Xb(6000,6000,64,64);fOb(i,_db);iOb(i);hOb(i);this.w=new b5b(i,o);_Sb(this.w.X,0,-125,0);this.w.$.d=-1.5707963267948966;this.w.eb=false;kMb(this.E,this.w);qDb(this.D.o,this.E.c.d);this.D.o.Q=true;this.D.o.R=true;this.D.o.O=false;s=new dGc(this.E,this.c);g=new MFc(0.6);f=new hGc(new lGc);CJb(Mq(q_b(f.c).j.b[vPc],166),new _eb(0.65));this.g=new hGc(new XHc);this.B=new hGc(new kJc);CJb(Mq(q_b(this.g.c).j.b[sQc],166),new _eb(6/this.v));CJb(Mq(q_b(this.B.c).j.b[tQc],166),new _eb(6/this.u));CJb(Mq(q_b(this.g.c).j.b[FQc],166),new _eb(0.5));CJb(Mq(q_b(this.B.c).j.b[FQc],166),new _eb(0.5));this.B.b=true;t=new fLb(this.v,this.u);rKb(u,_Ab);pKb(u,TAb);nKb(u,Szb);u.g=false;b=new WFc(this.D.o,t);gmb(b.c,s);gmb(b.c,g);gmb(b.c,f);UFc(b,this.g);UFc(b,this.B);j=new $xc;this.o=new smb;try{Nxc(j,'./static/models/animated/parrot.js',new ctc(this,j));Nxc(j,EOc,new gtc(this,j));Nxc(j,'./static/models/animated/stork.js',new ktc(this,j))}catch(a){a=eM(a);if(Pq(a,41)){_Lb();JP($Lb,(pP(),nP),FOc)}else throw a}X5b(this.E,this.D.o);this.q=Uc()};_.ob=function Ysc(a){var b,c,d,e,f;b=(Uc()-this.q)*0.001;if(this.w.eb){Vtb(this.e);this.k=VQb(this.k+0.5*b*this.j,0.4,0.825);f=(this.k-0.4)/0.42499999999999993;e=0.95+f*-0.7;zNb(this.E.c.d,0.1,e,this.k);qDb(this.D.o,this.E.c.d);ZZb(this.f,0.1+f*1.0499999999999998);J$b(this.r,0.9+f*0.6);CJb(Mq(this.z.b[XPc],166),new _eb(0.6+f*2.9));if(this.A){this.b=VQb(this.b+-7.5E-4,0,0.05);CJb(Mq(fkb(this.y,LPc),166),new _eb(Mq(Mq(fkb(this.y,LPc),166).e,95).b+b*this.b));sSb(Mq(Mq(fkb(this.y,FPc),166).e,192),b*0.05);ySb(Mq(Mq(this.z.b[GQc],166).e,192),4*Mq(Mq(fkb(this.y,FPc),166).e,192).d);iZb(this.s,Mq(fkb(this.n,DQc),224));jDb(this.D.o,this.t,this.d,this.i,true);iZb(this.s,Mq(fkb(this.n,EQc),224));jDb(this.D.o,this.t,this.d,this.p,true);this.A=false}for(c=0;c<this.o.c;++c){d=Mq(kmb(this.o,c),241);k5b(d,Uq(1000*b));sSb(d.X,d.c*b);d.X.d>2000&&ySb(d.X,-1500-Math.random()*500)}jDb(this.D.o,this.E,this.c,null,false)}this.q=Uc()};_.cM={38:1,131:1,273:1};_.b=0;_.c=null;_.d=null;_.e=null;_.f=null;_.g=null;_.i=null;_.j=1;_.k=0;_.n=null;_.o=null;_.p=null;_.q=0;_.r=null;_.s=null;_.t=null;_.u=1000;_.v=1000;_.w=null;_.x=0;_.y=null;_.z=null;_.A=true;_.B=null;_=$sc.prototype=Zsc.prototype=new Jb;_.gC=function _sc(){return cI};_.Rd=function atc(a){Ssc(this.b);Rsc(this.b,new sIc,a,this.c)};_.b=null;_.c=null;_=ctc.prototype=btc.prototype=new Jb;_.gC=function dtc(){return dI};_.zf=function etc(){var a;a=this.c.b;Txc(this.c);Qsc(this.b,a,500,-3500,500,700);Qsc(this.b,a,500,-3000-Math.random()*500,500,-200);Qsc(this.b,a,500,-3000-Math.random()*500,500,200);Qsc(this.b,a,500,-3000-Math.random()*500,500,1000)};_.b=null;_.c=null;_=gtc.prototype=ftc.prototype=new Jb;_.gC=function htc(){return eI};_.zf=function itc(){var a;a=this.c.b;Txc(this.c);Qsc(this.b,a,1000,-3000-Math.random()*500,350,40)};_.b=null;_.c=null;_=ktc.prototype=jtc.prototype=new Jb;_.gC=function ltc(){return fI};_.zf=function mtc(){var a;a=this.c.b;Txc(this.c);Qsc(this.b,a,1000,-3000-Math.random()*500,350,340)};_.b=null;_.c=null;var ntc;_=stc.prototype=ptc.prototype=new Jb;_.gC=function ttc(){return jI};_.Md=function utc(){return Etc(),qtc};_.Nd=function vtc(){return Ftc(),rtc};var qtc=null,rtc=null;_=xtc.prototype=wtc.prototype=new Jb;_.gC=function ytc(){return hI};_.Yb=function ztc(){return '//\r\n// Description : Array and textureless GLSL 3D simplex noise function.\r\n//      Author : Ian McEwan, Ashima Arts.\r\n//  Maintainer : ijm\r\n//     Lastmod : 20110409 (stegu)\r\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\r\n//               Distributed under the MIT License. See LICENSE file.\r\n//\r\n\r\nuniform float time;\r\nvarying vec2 vUv;\r\n\r\nvec4 permute( vec4 x ) {\r\n\r\n\treturn mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\r\n\r\n}\r\n\r\nvec4 taylorInvSqrt( vec4 r ) {\r\n\r\n\treturn 1.79284291400159 - 0.85373472095314 * r;\r\n\r\n}\r\n\r\nfloat snoise( vec3 v ) {\r\n\r\n\tconst vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );\r\n\tconst vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );\r\n\r\n\t// First corner\r\n\r\n\tvec3 i  = floor( v + dot( v, C.yyy ) );\r\n\tvec3 x0 = v - i + dot( i, C.xxx );\r\n\r\n\t// Other corners\r\n\r\n\tvec3 g = step( x0.yzx, x0.xyz );\r\n\tvec3 l = 1.0 - g;\r\n\tvec3 i1 = min( g.xyz, l.zxy );\r\n\tvec3 i2 = max( g.xyz, l.zxy );\r\n\r\n\tvec3 x1 = x0 - i1 + 1.0 * C.xxx;\r\n\tvec3 x2 = x0 - i2 + 2.0 * C.xxx;\r\n\tvec3 x3 = x0 - 1. + 3.0 * C.xxx;\r\n\r\n\t// Permutations\r\n\r\n\ti = mod( i, 289.0 );\r\n\tvec4 p = permute( permute( permute(\r\n \t\t   i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )\r\n\t\t   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )\r\n\t\t   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );\r\n\r\n\t// Gradients\r\n\t// ( N*N points uniformly over a square, mapped onto an octahedron.)\r\n\r\n\tfloat n_ = 1.0 / 7.0; // N=7\r\n\r\n\tvec3 ns = n_ * D.wyz - D.xzx;\r\n\r\n\tvec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)\r\n\r\n\tvec4 x_ = floor( j * ns.z );\r\n\tvec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)\r\n\r\n\tvec4 x = x_ *ns.x + ns.yyyy;\r\n\tvec4 y = y_ *ns.x + ns.yyyy;\r\n\tvec4 h = 1.0 - abs( x ) - abs( y );\r\n\r\n\tvec4 b0 = vec4( x.xy, y.xy );\r\n\tvec4 b1 = vec4( x.zw, y.zw );\r\n\r\n\r\n\tvec4 s0 = floor( b0 ) * 2.0 + 1.0;\r\n\tvec4 s1 = floor( b1 ) * 2.0 + 1.0;\r\n\tvec4 sh = -step( h, vec4( 0.0 ) );\r\n\r\n\tvec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\r\n\tvec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\r\n\r\n\tvec3 p0 = vec3( a0.xy, h.x );\r\n\tvec3 p1 = vec3( a0.zw, h.y );\r\n\tvec3 p2 = vec3( a1.xy, h.z );\r\n\tvec3 p3 = vec3( a1.zw, h.w );\r\n\r\n\t// Normalise gradients\r\n\r\n\tvec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );\r\n\tp0 *= norm.x;\r\n\tp1 *= norm.y;\r\n\tp2 *= norm.z;\r\n\tp3 *= norm.w;\r\n\r\n\t// Mix final noise value\r\n\r\n\tvec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );\r\n\tm = m * m;\r\n\treturn 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),\r\n\t\t  dot( p2, x2 ), dot( p3, x3 ) ) );\r\n\r\n}\r\n\r\nfloat surface3( vec3 coord ) {\r\n\r\n\tfloat n = 0.0;\r\n\r\n\tn += 1.0 * abs( snoise( coord ) );\r\n\tn += 0.5 * abs( snoise( coord * 2.0 ) );\r\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\r\n\tn += 0.125 * abs( snoise( coord * 8.0 ) );\r\n\r\n\treturn n;\r\n\r\n}\r\n\r\nvoid main( void ) {\r\n\r\n\tvec3 coord = vec3( vUv, -time );\r\n\tfloat n = surface3( coord );\r\n\r\n\tgl_FragColor = vec4( vec3( n, n, n ), 1.0 );\r\n\r\n}\r\n'};_=Btc.prototype=Atc.prototype=new Jb;_.gC=function Ctc(){return iI};_.Yb=function Dtc(){return 'varying vec2 vUv;\r\nuniform vec2 scale;\r\nuniform vec2 offset;\r\n\r\nvoid main( void ) {\r\n\r\n\tvUv = uv * scale + offset;\r\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n}\r\n'};_=nxc.prototype=mxc.prototype=new sEb;_.gC=function oxc(){return FI};_.Jd=function pxc(){CEb(this,bKb());CEb(this,cKb());CEb(this,dKb());vEb(this,zQc,new EJb((YJb(),NJb),(beb(),beb(),_db)));vEb(this,AQc,new EJb(NJb,_db));vEb(this,ZOc,new EJb(NJb,_db));vEb(this,HQc,new EJb(NJb,_db));vEb(this,wQc,new DJb(QJb));vEb(this,xQc,new DJb(QJb));vEb(this,yQc,new DJb(QJb));vEb(this,WPc,new DJb(QJb));vEb(this,YPc,new DJb(QJb));vEb(this,vQc,new DJb(QJb));vEb(this,XPc,new EJb(KJb,new _eb(1)));vEb(this,IQc,new EJb(KJb,new _eb(0)));vEb(this,BQc,new EJb(KJb,new _eb(1)));vEb(this,dPc,new EJb(JJb,new FNb(15658734)));vEb(this,ePc,new EJb(JJb,new FNb(1118481)));vEb(this,cPc,new EJb(JJb,new FNb(328965)));vEb(this,_Pc,new EJb(KJb,new _eb(30)));vEb(this,kPc,new EJb(KJb,new _eb(1)));vEb(this,'uRepeatBase',new EJb(SJb,new BSb(1,1)));vEb(this,CQc,new EJb(SJb,new BSb(1,1)));vEb(this,GQc,new EJb(SJb,new BSb(0,0)))};_.Kd=function qxc(a){var b,c;c=new Vmb(Dq(YK,{88:1,106:1},1,[lPc,mPc]));b=new Vmb(Dq(YK,{88:1,106:1},1,[oPc,pPc,qPc]));EEb(this,MEb(a,Dq(aL,{88:1,106:1},117,[c,b])))};_.Ld=function rxc(a){var b,c;c=new Vmb(Dq(YK,{88:1,106:1},1,[rPc]));b=new Vmb(Dq(YK,{88:1,106:1},1,[sPc]));FEb(this,MEb(a,Dq(aL,{88:1,106:1},117,[c,b])))};_.cM={164:1};var sxc;_=xxc.prototype=uxc.prototype=new Jb;_.gC=function yxc(){return EI};_.Md=function zxc(){return Jxc(),vxc};_.Nd=function Axc(){return Kxc(),wxc};var vxc=null,wxc=null;_=Cxc.prototype=Bxc.prototype=new Jb;_.gC=function Dxc(){return CI};_.Yb=function Exc(){return 'uniform vec3 uAmbientColor;\r\nuniform vec3 uDiffuseColor;\r\nuniform vec3 uSpecularColor;\r\nuniform float uShininess;\r\nuniform float uOpacity;\r\n\r\nuniform bool enableDiffuse1;\r\nuniform bool enableDiffuse2;\r\nuniform bool enableSpecular;\r\n\r\nuniform sampler2D tDiffuse1;\r\nuniform sampler2D tDiffuse2;\r\nuniform sampler2D tDetail;\r\nuniform sampler2D tNormal;\r\nuniform sampler2D tSpecular;\r\nuniform sampler2D tDisplacement;\r\n\r\nuniform float uNormalScale;\r\n\r\nuniform vec2 uRepeatOverlay;\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform vec2 uOffset;\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\r\n\r\n\tvec3 specularTex = vec3( 1.0 );\r\n\r\n\tvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\r\n\tvec2 uvBase = uRepeatBase * vUv;\r\n\r\n\tvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\r\n\tnormalTex.xy *= uNormalScale;\r\n\tnormalTex = normalize( normalTex );\r\n\r\n\tif( enableDiffuse1 && enableDiffuse2 ) {\r\n\r\n\t\tvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\r\n\t\tvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t\t#ifdef GAMMA_INPUT\r\n\r\n\t\t\tcolDiffuse1.xyz *= colDiffuse1.xyz;\r\n\t\t\tcolDiffuse2.xyz *= colDiffuse2.xyz;\r\n\r\n\t\t#endif\r\n\r\n\t\tgl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\r\n\r\n\t } else if( enableDiffuse1 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\r\n\r\n\t} else if( enableDiffuse2 ) {\r\n\r\n\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\r\n\r\n\t}\r\n\r\n\tif( enableSpecular )\r\n\t\tspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\r\n\r\n\tmat3 tsb = mat3( vTangent, vBinormal, vNormal );\r\n\tvec3 finalNormal = tsb * normalTex;\r\n\r\n\tvec3 normal = normalize( finalNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\t// point lights\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointDiffuse = vec3( 0.0 );\r\n\t\tvec3 pointSpecular = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\r\n\t\t\tfloat pointDistance = lDistance;\r\n\r\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\r\n\r\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\r\n\r\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\r\n\t\t\tpointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// directional lights\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirDiffuse = vec3( 0.0 );\r\n\t\tvec3 dirSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\r\n\r\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\r\n\r\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\r\n\r\n\t\t\tdirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\r\n\t\t\tdirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiDiffuse  = vec3( 0.0 );\r\n\t\tvec3 hemiSpecular = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\r\n\r\n\t\t\t// diffuse\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiDiffuse += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\r\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\r\n\r\n\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\r\n\r\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\r\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\r\n\t\t\themiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\r\n\r\n\t\t\themiSpecular += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// all lights contribution summation\r\n\r\n\tvec3 totalDiffuse = vec3( 0.0 );\r\n\tvec3 totalSpecular = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += dirDiffuse;\r\n\t\ttotalSpecular += dirSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += hemiDiffuse;\r\n\t\ttotalSpecular += hemiSpecular;\r\n\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\ttotalDiffuse += pointDiffuse;\r\n\t\ttotalSpecular += pointSpecular;\r\n\r\n\t#endif\r\n\r\n\t//"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\r\n\r\n[*]\r\n}'};_=Gxc.prototype=Fxc.prototype=new Jb;_.gC=function Hxc(){return DI};_.Yb=function Ixc(){return 'attribute vec4 tangent;\r\n\r\nuniform vec2 uRepeatBase;\r\n\r\nuniform sampler2D tNormal;\r\n\r\n#ifdef VERTEX_TEXTURES\r\n\r\n\tuniform sampler2D tDisplacement;\r\n\tuniform float uDisplacementScale;\r\n\tuniform float uDisplacementBias;\r\n\r\n#endif\r\n\r\nvarying vec3 vTangent;\r\nvarying vec3 vBinormal;\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvNormal = normalize( normalMatrix * normal );\r\n\r\n\t// tangent and binormal vectors\r\n\r\n\tvTangent = normalize( normalMatrix * tangent.xyz );\r\n\r\n\tvBinormal = cross( vNormal, vTangent ) * tangent.w;\r\n\tvBinormal = normalize( vBinormal );\r\n\r\n\t// texture coordinates\r\n\r\n\tvUv = uv;\r\n\r\n\tvec2 uvBase = uv * uRepeatBase;\r\n\r\n\t// displacement mapping\r\n\r\n\t#ifdef VERTEX_TEXTURES\r\n\r\n\t\tvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\r\n\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\r\n\t\tvec3 displacedPosition = normal * df + position;\r\n\r\n\t\tvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\r\n\r\n\t#else\r\n\r\n\t\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t#endif\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\r\n\tvNormal = normalMatrix * normalTex;\r\n\r\n\t[*]\r\n\r\n}\r\n'};_=lGc.prototype=kGc.prototype=new sEb;_.gC=function mGc(){return KJ};_.Jd=function nGc(){vEb(this,_Oc,new DJb((YJb(),QJb)));vEb(this,vPc,new EJb(KJb,new _eb(1)))};_.cM={164:1};var oGc;_=tGc.prototype=qGc.prototype=new Jb;_.gC=function uGc(){return JJ};_.Md=function vGc(){return FGc(),rGc};_.Nd=function wGc(){return GGc(),sGc};var rGc=null,sGc=null;_=yGc.prototype=xGc.prototype=new Jb;_.gC=function zGc(){return HJ};_.Yb=function AGc(){return 'uniform float opacity;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 base = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\r\n\tfloat lum = dot( lumCoeff, base.rgb );\r\n\tvec3 blend = vec3( lum );\r\n\r\n\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\r\n\r\n\tvec3 result1 = 2.0 * base.rgb * blend;\r\n\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\r\n\r\n\tvec3 newColor = mix( result1, result2, L );\r\n\r\n\tfloat A2 = opacity * base.a;\r\n\tvec3 mixRGB = A2 * newColor.rgb;\r\n\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\r\n\r\n\tgl_FragColor = vec4( mixRGB, base.a );\r\n\r\n}\r\n'};_=CGc.prototype=BGc.prototype=new Jb;_.gC=function DGc(){return IJ};_.Yb=function EGc(){return jPc};_=XHc.prototype=WHc.prototype=new sEb;_.gC=function YHc(){return $J};_.Jd=function ZHc(){vEb(this,_Oc,new DJb((YJb(),QJb)));vEb(this,sQc,new EJb(KJb,new _eb(0.001953125)));vEb(this,FQc,new EJb(KJb,new _eb(0.35)))};_.cM={164:1};var $Hc;_=dIc.prototype=aIc.prototype=new Jb;_.gC=function eIc(){return ZJ};_.Md=function fIc(){return pIc(),bIc};_.Nd=function gIc(){return qIc(),cIc};var bIc=null,cIc=null;_=iIc.prototype=hIc.prototype=new Jb;_.gC=function jIc(){return XJ};_.Yb=function kIc(){return 'uniform sampler2D tDiffuse;\r\nuniform float h;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat hh = h * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};_=mIc.prototype=lIc.prototype=new Jb;_.gC=function nIc(){return YJ};_.Yb=function oIc(){return jPc};_=sIc.prototype=rIc.prototype=new sEb;_.gC=function tIc(){return cK};_.Jd=function uIc(){vEb(this,_Oc,new DJb((YJb(),QJb)))};_.cM={164:1};var vIc;_=AIc.prototype=xIc.prototype=new Jb;_.gC=function BIc(){return bK};_.Md=function CIc(){return MIc(),yIc};_.Nd=function DIc(){return NIc(),zIc};var yIc=null,zIc=null;_=FIc.prototype=EIc.prototype=new Jb;_.gC=function GIc(){return _J};_.Yb=function HIc(){return 'uniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\r\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\r\n\r\n\tfloat v = dot( texel.xyz, luma );\r\n\r\n\tgl_FragColor = vec4( v, v, v, texel.w );\r\n\r\n}\r\n'};_=JIc.prototype=IIc.prototype=new Jb;_.gC=function KIc(){return aK};_.Yb=function LIc(){return jPc};_=PIc.prototype=OIc.prototype=new sEb;_.gC=function QIc(){return gK};_.Jd=function RIc(){vEb(this,uQc,new DJb((YJb(),QJb)));vEb(this,HPc,new EJb(SJb,new BSb(512,512)));vEb(this,fQc,new EJb(SJb,new BSb(1,1)));vEb(this,ULc,new EJb(KJb,new _eb(0.05)))};_.cM={164:1};var SIc;_=XIc.prototype=UIc.prototype=new Jb;_.gC=function YIc(){return fK};_.Md=function ZIc(){return hJc(),VIc};_.Nd=function $Ic(){return iJc(),WIc};var VIc=null,WIc=null;_=aJc.prototype=_Ic.prototype=new Jb;_.gC=function bJc(){return dK};_.Yb=function cJc(){return 'uniform float height;\r\nuniform vec2 resolution;\r\nuniform sampler2D heightMap;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tfloat val = texture2D( heightMap, vUv ).x;\r\n\r\n\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\r\n\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\r\n\r\n\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\r\n\r\n}\r\n'};_=eJc.prototype=dJc.prototype=new Jb;_.gC=function fJc(){return eK};_.Yb=function gJc(){return jPc};_=kJc.prototype=jJc.prototype=new sEb;_.gC=function lJc(){return kK};_.Jd=function mJc(){vEb(this,_Oc,new DJb((YJb(),QJb)));vEb(this,tQc,new EJb(KJb,new _eb(0.001953125)));vEb(this,FQc,new EJb(KJb,new _eb(0.35)))};_.cM={164:1};var nJc;_=sJc.prototype=pJc.prototype=new Jb;_.gC=function tJc(){return jK};_.Md=function uJc(){return EJc(),qJc};_.Nd=function vJc(){return FJc(),rJc};var qJc=null,rJc=null;_=xJc.prototype=wJc.prototype=new Jb;_.gC=function yJc(){return hK};_.Yb=function zJc(){return 'uniform sampler2D tDiffuse;\r\nuniform float v;\r\nuniform float r;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 sum = vec4( 0.0 );\r\n\r\n\tfloat vv = v * abs( r - vUv.y );\r\n\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\r\n\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\r\n\r\n\tgl_FragColor = sum;\r\n\r\n}\r\n'};_=BJc.prototype=AJc.prototype=new Jb;_.gC=function CJc(){return iK};_.Yb=function DJc(){return jPc};var gI=Qeb(wOc,'TerrainDynamic$DemoScene',RD),cI=Qeb(wOc,'TerrainDynamic$DemoScene$1',Hx),dI=Qeb(wOc,'TerrainDynamic$DemoScene$2',Hx),eI=Qeb(wOc,'TerrainDynamic$DemoScene$3',Hx),fI=Qeb(wOc,'TerrainDynamic$DemoScene$4',Hx),jI=Qeb(wOc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator',Hx),hI=Qeb(wOc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$1',Hx),iI=Qeb(wOc,'TerrainDynamic_Resources_default_InlineClientBundleGenerator$2',Hx),FI=Qeb(xOc,'TerrainShader',$A),EI=Qeb(xOc,'TerrainShader_Resources_default_InlineClientBundleGenerator',Hx),CI=Qeb(xOc,'TerrainShader_Resources_default_InlineClientBundleGenerator$1',Hx),DI=Qeb(xOc,'TerrainShader_Resources_default_InlineClientBundleGenerator$2',Hx),KJ=Qeb(UPc,'BleachBypassShader',$A),JJ=Qeb(UPc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator',Hx),HJ=Qeb(UPc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$1',Hx),IJ=Qeb(UPc,'BleachBypassShader_Resources_default_InlineClientBundleGenerator$2',Hx),$J=Qeb(UPc,'HorizontalTiltShiftShader',$A),ZJ=Qeb(UPc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator',Hx),XJ=Qeb(UPc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',Hx),YJ=Qeb(UPc,'HorizontalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',Hx),cK=Qeb(UPc,'LuminosityShader',$A),bK=Qeb(UPc,'LuminosityShader_Resources_default_InlineClientBundleGenerator',Hx),_J=Qeb(UPc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$1',Hx),aK=Qeb(UPc,'LuminosityShader_Resources_default_InlineClientBundleGenerator$2',Hx),gK=Qeb(UPc,JQc,$A),fK=Qeb(UPc,KQc,Hx),dK=Qeb(UPc,LQc,Hx),eK=Qeb(UPc,MQc,Hx),kK=Qeb(UPc,'VerticalTiltShiftShader',$A),jK=Qeb(UPc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator',Hx),hK=Qeb(UPc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$1',Hx),iK=Qeb(UPc,'VerticalTiltShiftShader_Resources_default_InlineClientBundleGenerator$2',Hx);_Kc(Wd)(49);