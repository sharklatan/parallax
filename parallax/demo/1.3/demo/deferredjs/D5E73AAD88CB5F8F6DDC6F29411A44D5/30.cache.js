function poc(){}
function pzc(){}
function bzc(){}
function kzc(){}
function hzc(){}
function ozc(){}
function tzc(){}
function szc(){}
function VIc(){}
function FKc(){}
function OKc(){}
function LKc(){}
function TKc(){}
function SKc(){}
function XKc(){}
function WKc(){}
function qoc(){s9b.call(this)}
function czc(){PGb.call(this,(gzc(),fzc))}
function GKc(){PGb.call(this,(KKc(),JKc))}
function KKc(){KKc=QNc;JKc=new OKc}
function $Kc(){$Kc=QNc;MKc=new TKc}
function _Kc(){_Kc=QNc;NKc=new XKc}
function gzc(){gzc=QNc;fzc=new kzc}
function wzc(){wzc=QNc;izc=new pzc}
function xzc(){xzc=QNc;jzc=new tzc}
function WIc(){this.b=new y6b(new GKc);LLb(kr(z1b(this.b).i.a[$bd],167),(kgb(),kgb(),igb));LLb(kr(z1b(this.b).i.a[_bd],167),new ihb(0.35));LLb(kr(z1b(this.b).i.a[acd],167),new ihb(0.95));LLb(kr(z1b(this.b).i.a[bcd],167),Vhb(2048));this.e=true;this.f=true}
var Qbd='./static/textures/lava/cloud.png',ccd='// control parameter\r\nuniform float time;\r\n\r\nuniform bool grayscale;\r\n\r\n// noise effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float nIntensity;\r\n\r\n// scanlines effect intensity value (0 = no effect, 1 = full effect)\r\nuniform float sIntensity;\r\n\r\n// scanlines effect count value (0 = no effect, 4096 = full effect)\r\nuniform float sCount;\r\n\r\nuniform sampler2D tDiffuse;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\t// sample the source\r\n\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\r\n\r\n\t// make some noise\r\n\tfloat x = vUv.x * vUv.y * time *  1000.0;\r\n\tx = mod( x, 13.0 ) * mod( x, 123.0 );\r\n\tfloat dx = mod( x, 0.01 );\r\n\r\n\t// add noise\r\n\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\r\n\r\n\t// get us a sine and cosine\r\n\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\r\n\r\n\t// add scanlines\r\n\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\r\n\r\n\t// interpolate between source and result by intensity\r\n\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\r\n\r\n\t// convert to grayscale if desired\r\n\tif( grayscale ) {\r\n\r\n\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\r\n\r\n\t}\r\n\r\n\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\r\n\r\n}\r\n',jcd='FilmPass',lcd='FilmShader',mcd='FilmShader_Resources_default_StaticClientBundleGenerator',ncd='FilmShader_Resources_default_StaticClientBundleGenerator$1',ocd='FilmShader_Resources_default_StaticClientBundleGenerator$2',ecd='LavaShader',fcd='LavaShader_Resources_default_StaticClientBundleGenerator',gcd='LavaShader_Resources_default_StaticClientBundleGenerator$1',hcd='LavaShader_Resources_default_StaticClientBundleGenerator$2',dcd='MaterialsShaderLava$DemoScene',$bd='grayscale',_bd='nIntensity',bcd='sCount',acd='sIntensity',Rbd='texture1',Tbd='texture2',Ybd='uniform float time;\r\nuniform vec2 resolution;\r\n\r\nuniform float fogDensity;\r\nuniform vec3 fogColor;\r\n\r\nuniform sampler2D texture1;\r\nuniform sampler2D texture2;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main( void ) {\r\n\r\n\tvec2 position = -1.0 + 2.0 * vUv;\r\n\r\n\tvec4 noise = texture2D( texture1, vUv );\r\n\tvec2 T1 = vUv + vec2( 1.5, -1.5 ) * time  *0.02;\r\n\tvec2 T2 = vUv + vec2( -0.5, 2.0 ) * time * 0.01;\r\n\r\n\tT1.x += noise.x * 2.0;\r\n\tT1.y += noise.y * 2.0;\r\n\tT2.x -= noise.y * 0.2;\r\n\tT2.y += noise.z * 0.2;\r\n\r\n\tfloat p = texture2D( texture1, T1 * 2.0 ).a;\r\n\r\n\tvec4 color = texture2D( texture2, T2 * 2.0 );\r\n\tvec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );\r\n\r\n\tif( temp.r > 1.0 ){ temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }\r\n\tif( temp.g > 1.0 ){ temp.rb += temp.g - 1.0; }\r\n\tif( temp.b > 1.0 ){ temp.rg += temp.b - 1.0; }\r\n\r\n\tgl_FragColor = temp;\r\n\r\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\tconst float LOG2 = 1.442695;\r\n\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\r\n\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\r\n\r\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\r\n\r\n}\r\n',Zbd='uniform vec2 uvScale;\r\nvarying vec2 vUv;\r\n\r\nvoid main()\r\n{\r\n\r\n\tvUv = uvScale * uv;\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n}';_=koc.prototype;_.vb=function ooc(){o9b(this.b,new qoc(this.a))};_=qoc.prototype=poc.prototype=new r9b;_.gC=function roc(){return vH};_.Nd=function soc(a){HUb(kr(kr(this.d.a[Pbd],167).d,193),a.a.o);IUb(kr(kr(this.d.a[Pbd],167).d,193),a.a.n)};_.mb=function toc(){var a,b,c,d,e,f,g;Lp((ixb(),hxb),(txb(),sxb),this);this.a=new sPb(35,nFb(this.C.n),1,3000);this.a.W.b=4;d=new y6b(new czc);this.d=z1b(d).i;f=new JMb(Qbd);GMb(f,(KEb(),JEb));HMb(f,JEb);LLb(kr(this.d.a[Rbd],167),f);g=new JMb(Sbd);GMb(g,JEb);HMb(g,JEb);LLb(kr(this.d.a[Tbd],167),g);this.b=new k7b(new y$b(0.65,0.3,30,30),d);this.b.Z.c=0.3;tOb(this.D,this.b);a=new _Ic(this.C.n);e=new jJc(this.D,this.a);b=new SIc(1.25);c=new WIc;c.a=true;pob(a.b,e);pob(a.b,b);pob(a.b,c);this.C.n.N=false;this.c=Uc()};_.nb=function uoc(a){var b;b=(Uc()-this.c)*0.001*5;LLb(kr(this.d.a[Ubd],167),new ihb(kr(kr(this.d.a[Ubd],167).d,96).a+0.2*b));BUb(this.b.Z,0.05*b);CUb(this.b.Z,0.0125*b);kFb(this.C.n);this.c=Uc();sFb(this.C.n,this.D,this.a,null,false)};_.cM={38:1,132:1};_.a=null;_.b=null;_.c=0;_.d=null;_=czc.prototype=bzc.prototype=new BGb;_.gC=function dzc(){return _I};_.Qd=function ezc(){EGb(this,Vbd,new NLb((fMb(),TLb),new ihb(0.45)));EGb(this,Wbd,new NLb(bMb,new oVb(0,0,0)));EGb(this,Ubd,new NLb(TLb,new ihb(1)));EGb(this,Pbd,new NLb(_Lb,new JUb));EGb(this,Xbd,new NLb(_Lb,new KUb(3,1)));EGb(this,Rbd,new MLb(ZLb));EGb(this,Tbd,new MLb(ZLb))};_.cM={165:1};var fzc;_=kzc.prototype=hzc.prototype=new Jb;_.gC=function lzc(){return $I};_.Td=function mzc(){return wzc(),izc};_.Ud=function nzc(){return xzc(),jzc};var izc=null,jzc=null;_=pzc.prototype=ozc.prototype=new Jb;_.gC=function qzc(){return YI};_.ac=function rzc(){return Ybd};_=tzc.prototype=szc.prototype=new Jb;_.gC=function uzc(){return ZI};_.ac=function vzc(){return Zbd};_=WIc.prototype=VIc.prototype=new NIc;_.gC=function XIc(){return hK};_.Og=function YIc(a,b,c){LLb(kr(z1b(this.b).i.a[kad],167),a.d);LLb(kr(z1b(this.b).i.a[Ubd],167),new ihb(kr(kr(z1b(this.b).i.a[Ubd],167).d,96).a+b));r_b(a.c,this.b);this.a?sFb(a.n,a.o,a.a,null,false):sFb(a.n,a.o,a.a,a.g,false)};_.cM={284:1};_.a=false;_.b=null;_=GKc.prototype=FKc.prototype=new BGb;_.gC=function HKc(){return CK};_.Qd=function IKc(){EGb(this,kad,new MLb((fMb(),ZLb)));EGb(this,Ubd,new NLb(TLb,new ihb(0)));EGb(this,_bd,new NLb(TLb,new ihb(0.5)));EGb(this,acd,new NLb(TLb,new ihb(0.05)));EGb(this,bcd,new NLb(WLb,Vhb(4096)));EGb(this,$bd,new NLb(WLb,(kgb(),kgb(),jgb)))};_.cM={165:1};var JKc;_=OKc.prototype=LKc.prototype=new Jb;_.gC=function PKc(){return BK};_.Td=function QKc(){return $Kc(),MKc};_.Ud=function RKc(){return _Kc(),NKc};var MKc=null,NKc=null;_=TKc.prototype=SKc.prototype=new Jb;_.gC=function UKc(){return zK};_.ac=function VKc(){return ccd};_=XKc.prototype=WKc.prototype=new Jb;_.gC=function YKc(){return AK};_.ac=function ZKc(){return vad};var vH=Zgb(S6c,dcd,xE),_I=Zgb(T7c,ecd,GB),$I=Zgb(T7c,fcd,ny),YI=Zgb(T7c,gcd,ny),ZI=Zgb(T7c,hcd,ny),hK=Zgb(icd,jcd,iK),CK=Zgb(kcd,lcd,GB),BK=Zgb(kcd,mcd,ny),zK=Zgb(kcd,ncd,ny),AK=Zgb(kcd,ocd,ny);fOc(Wd)(30);