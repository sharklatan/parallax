function mlc(){}
function slc(){}
function Qvc(){}
function Zvc(){}
function Wvc(){}
function cwc(){}
function bwc(){}
function gwc(){}
function fwc(){}
function Vzc(){}
function eAc(){}
function bAc(){}
function jAc(){}
function iAc(){}
function nAc(){}
function mAc(){}
function olc(){s9b.call(this)}
function tlc(a,b){this.a=a;this.b=b}
function Vvc(){Vvc=QNc;Uvc=new Zvc}
function jwc(){jwc=QNc;Xvc=new cwc}
function kwc(){kwc=QNc;Yvc=new gwc}
function aAc(){aAc=QNc;_zc=new eAc}
function qAc(){qAc=QNc;cAc=new jAc}
function rAc(){rAc=QNc;dAc=new nAc}
function Wzc(){PGb.call(this,(aAc(),_zc))}
function Rvc(){PGb.call(this,(Vvc(),Uvc))}
function nlc(a,b){var c,d,e,f,g,i;d=new JMb(bad);d.k=4;GUb(d.x,0.998,0.998);GUb(d.w,0.001,0.001);GMb(d,(KEb(),JEb));HMb(d,JEb);wMb(d,(bCb(),_Bb));e=new JMb(fad);GUb(e.x,0.998,0.998);GUb(e.w,0.001,0.001);GMb(e,JEb);HMb(e,JEb);wMb(e,_Bb);c=new JMb(gad);GUb(c.x,0.998,0.998);GUb(c.w,0.001,0.001);GMb(c,JEb);HMb(c,JEb);wMb(c,_Bb);g=new Wzc;i=g.i;LLb(kr(i.a[had],167),(kgb(),kgb(),jgb));LLb(kr(i.a[iad],167),jgb);LLb(kr(i.a[jad],167),a.b.e);LLb(kr(i.a[kad],167),c);LLb(kr(i.a[lad],167),d);LLb(kr(i.a[mad],167),e);JPb(kr(kr(i.a[nad],167).d,179),10526880);JPb(kr(kr(i.a[oad],167).d,179),10526880);JPb(kr(kr(i.a[pad],167).d,179),10526880);LLb(kr(i.a[qad],167),new ihb(0.145));LLb(kr(i.a[rad],167),new ihb(0.75));LLb(kr(i.a[sad],167),new ihb(16));WVb(kr(kr(i.a[tad],167).d,195),0.001,0.001,0.998,0.998);f=new y6b(g);f.c=true;a.c=new k7b(b,f);a.c.W.d=-50;jVb(a.c._,100);a.c.M=true;a.c.N=true;tOb(a.D,a.c)}
var Gad='#define USE_BUMPMAP\r\n#extension GL_OES_standard_derivatives : enable\r\n\r\nuniform bool enableBump;\r\nuniform bool enableSpecular;\r\n\r\nuniform vec3 uAmbientColor;\r\nuniform vec3 uDiffuseColor;\r\nuniform vec3 uSpecularColor;\r\nuniform float uOpacity;\r\n\r\nuniform float uRoughness;\r\nuniform float uSpecularBrightness;\r\n\r\nuniform vec3 uWrapRGB;\r\n\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tBeckmann;\r\n\r\nuniform sampler2D specularMap;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 ambientLightColor;\r\n\r\n#if MAX_DIR_LIGHTS > 0\r\n\r\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_HEMI_LIGHTS > 0\r\n\r\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\r\n\tuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\r\n\r\n#endif\r\n\r\n#if MAX_POINT_LIGHTS > 0\r\n\r\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\n// Fresnel term\r\n\r\nfloat fresnelReflectance( vec3 H, vec3 V, float F0 ) {\r\n\r\n\tfloat base = 1.0 - dot( V, H );\r\n\tfloat exponential = pow( base, 5.0 );\r\n\r\n\treturn exponential + F0 * ( 1.0 - exponential );\r\n\r\n}\r\n\r\n// Kelemen/Szirmay-Kalos specular BRDF\r\n\r\nfloat KS_Skin_Specular( vec3 N, \t\t// Bumped surface normal\r\n\t\t\t\t\t\tvec3 L, \t\t// Points to light\r\n\t\t\t\t\t\tvec3 V, \t\t// Points to eye\r\n\t\t\t\t\t\tfloat m,  \t// Roughness\r\n\t\t\t\t\t\tfloat rho_s \t// Specular brightness\r\n\t\t\t\t\t\t) {\r\n\r\n\tfloat result = 0.0;\r\n\tfloat ndotl = dot( N, L );\r\n\r\n\tif( ndotl > 0.0 ) {\r\n\r\n\t\tvec3 h = L + V; // Unnormalized half-way vector\r\n\t\tvec3 H = normalize( h );\r\n\r\n\t\tfloat ndoth = dot( N, H );\r\n\r\n\t\tfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\r\n\r\n\t\tfloat F = fresnelReflectance( H, V, 0.028 );\r\n\t\tfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\r\n\r\n\t\tresult = ndotl * rho_s * frSpec; // BRDF * dot(N,L) * rho_s\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( vec3( 1.0 ), uOpacity );\r\n\r\n\tvec4 colDiffuse = texture2D( tDiffuse, vUv );\r\n\tcolDiffuse.rgb *= colDiffuse.rgb;\r\n\r\n\tgl_FragColor = gl_FragColor * colDiffuse;\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\tvec3 viewPosition = normalize( vViewPosition );\r\n\r\n\tfloat specularStrength;\r\n\r\n\tif ( enableSpecular ) {\r\n\r\n\t\tvec4 texelSpecular = texture2D( specularMap, vUv );\r\n\t\tspecularStrength = texelSpecular.r;\r\n\r\n\t} else {\r\n\r\n\t\tspecularStrength = 1.0;\r\n\r\n\t}\r\n\r\n\t#ifdef USE_BUMPMAP\r\n\r\n\t\tif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\r\n\r\n\t#endif\r\n\r\n\t// point lights\r\n\r\n\tvec3 specularTotal = vec3( 0.0 );\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\r\n\t\tvec3 pointTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r\n\r\n\t\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\r\n\r\n\t\t\tfloat lDistance = 1.0;\r\n\r\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\r\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\r\n\r\n\t\t\tlVector = normalize( lVector );\r\n\r\n\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\r\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tpointTotal    += lDistance * uDiffuseColor * pointLightColor[ i ] * pointDiffuseWeight;\r\n\t\t\tspecularTotal += lDistance * uSpecularColor * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// directional lights\r\n\t\t\t\t\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\r\n\t\tvec3 dirTotal = vec3( 0.0 );\r\n\r\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\r\n\r\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r\n\r\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\r\n\r\n\t\t\tfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\r\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\r\n\t\t\tvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\r\n\r\n\t\t\tfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tdirTotal \t   += uDiffuseColor * directionalLightColor[ i ] * dirDiffuseWeight;\r\n\t\t\tspecularTotal += uSpecularColor * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// hemisphere lights\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\r\n\t\tvec3 hemiTotal = vec3( 0.0 );\r\n\r\n\t\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\r\n\t\t\tvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\r\n\r\n\t\t\tfloat dotProduct = dot( normal, lVector );\r\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\r\n\r\n\t\t\themiTotal += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\r\n\r\n\t\t\t// specular (sky light)\r\n\r\n\t\t\tfloat hemiSpecularWeight = 0.0;\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\t// specular (ground light)\r\n\r\n\t\t\tvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\r\n\t\t\themiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\r\n\r\n\t\t\tspecularTotal += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n\t// all lights contribution summation\r\n\r\n\tvec3 totalLight = vec3( 0.0 );\r\n\r\n\t#if MAX_DIR_LIGHTS > 0\r\n\t\ttotalLight += dirTotal;\r\n\t#endif\r\n\r\n\t#if MAX_POINT_LIGHTS > 0\r\n\t\ttotalLight += pointTotal;\r\n\t#endif\r\n\r\n\t#if MAX_HEMI_LIGHTS > 0\r\n\t\ttotalLight += hemiTotal;\r\n\t#endif\r\n\r\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * uAmbientColor ) + specularTotal;\r\n\r\n[*]\r\n\r\n}',gad='./static/models/obj/leeperrysmith/Map-COL.jpg',fad='./static/models/obj/leeperrysmith/Map-SPEC.jpg',Kad='BeckmannShader',Lad='BeckmannShader_Resources_default_StaticClientBundleGenerator',Mad='BeckmannShader_Resources_default_StaticClientBundleGenerator$1',Nad='BeckmannShader_Resources_default_StaticClientBundleGenerator$2',Iad='MaterialsBumpmapSkin$DemoScene',Jad='MaterialsBumpmapSkin$DemoScene$1',Oad='SkinSimpleShader',Pad='SkinSimpleShader_Resources_default_StaticClientBundleGenerator',Qad='SkinSimpleShader_Resources_default_StaticClientBundleGenerator$1',Rad='SkinSimpleShader_Resources_default_StaticClientBundleGenerator$2',had='enableBump',jad='tBeckmann',qad='uRoughness',rad='uSpecularBrightness',xad='uWrapRGB',Had='uniform vec4 offsetRepeat;\r\n\r\nvarying vec3 vNormal;\r\nvarying vec2 vUv;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n[*]\r\n\r\nvoid main() {\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tvec4 mPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n\tvViewPosition = -mvPosition.xyz;\r\n\r\n\tvNormal = normalMatrix * normal;\r\n\r\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n[*]\r\n\r\n}\r\n',uad='varying vec2 vUv;\r\n\r\nfloat PHBeckmann( float ndoth, float m ) {\r\n\r\n\tfloat alpha = acos( ndoth );\r\n\tfloat ta = tan( alpha );\r\n\r\n\tfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\r\n\treturn val;\r\n\r\n}\r\n\r\nfloat KSTextureCompute( vec2 tex ) {\r\n\r\n\t// Scale the value to fit within [0,1]  invert upon lookup.\r\n\r\n\treturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\r\n\r\n}\r\n\r\nvoid main() {\r\n\r\n\tfloat x = KSTextureCompute( vUv );\r\n\r\n\tgl_FragColor = vec4( x, x, x, 1.0 );\r\n\r\n}\r\n';_=hlc.prototype;_.vb=function llc(){o9b(this.b,new olc(this.a))};_=olc.prototype=mlc.prototype=new r9b;_.gC=function plc(){return QG};_.mb=function qlc(){var a,b,c,d,e,f,g,i,j;this.a=new sPb(27,nFb(this.C.n),1,10000);this.a.W.b=1200;tOb(this.D,new X_b(5592405));f=new U0b(16777215,1.5,1000);iVb(f.W,0,0,600);tOb(this.D,f);i=new g1b(1);iVb(i.W,0.05,0.05,1);tOb(this.D,i);i.W.He(700);i.M=true;i.u=true;i.E=2048;i.C=2048;i.y=200;i.x=1500;i.c=40;i.v=-0.005;i.A=0.15;b=new A0b(16777215,0.85);iVb(b.W,1,-0.5,1);IPb(b.H,0.6,0.3,1);tOb(this.D,b);b.W.He(500);b.M=true;b.E=2048;b.C=2048;b.y=200;b.x=1500;b.e=-500;b.f=500;b.g=500;b.d=-500;b.v=-0.005;b.A=0.15;c=new A0b(16777215,0.85);iVb(c.W,1,-0.5,-1);tOb(this.D,c);new nJc(new Rvc);d=new nJc(new jKc);d.a=true;j=new oNb(512,512);AMb(j,(oDb(),iDb));yMb(j,(cDb(),aDb));wMb(j,(bCb(),_Bb));j.f=false;this.b=new aJc(this.C.n,j);e=new eBc;try{TAc(e,cad,new tlc(this,e))}catch(a){a=NM(a);if(nr(a,41)){iOb();XQ(hOb,(DQ(),BQ),l8c)}else throw a}AFb(this.C.n,5001561,1);g=new bFb(this.C.n,this.D);g.f=false;this.C.n.N=false;this.C.n.P=true;this.C.n.Q=true;this.C.n.S=true};_.nb=function rlc(a){var b,c;b=this.d*0.001;c=this.e*0.001;if(this.c){CUb(this.c.Z,0.05*(b-this.c.Z.d));BUb(this.c.Z,0.05*(c-this.c.Z.c))}kFb(this.C.n);sFb(this.C.n,this.D,this.a,null,false)};_.cM={262:1};_.a=null;_.b=null;_.c=null;_.d=0;_.e=0;_=tlc.prototype=slc.prototype=new Jb;_.gC=function ulc(){return PG};_.Gf=function vlc(){nlc(this.a,this.b.a)};_.a=null;_.b=null;_=Rvc.prototype=Qvc.prototype=new BGb;_.gC=function Svc(){return WI};_.Qd=function Tvc(){};_.cM={165:1};var Uvc;_=Zvc.prototype=Wvc.prototype=new Jb;_.gC=function $vc(){return VI};_.Td=function _vc(){return jwc(),Xvc};_.Ud=function awc(){return kwc(),Yvc};var Xvc=null,Yvc=null;_=cwc.prototype=bwc.prototype=new Jb;_.gC=function dwc(){return TI};_.ac=function ewc(){return uad};_=gwc.prototype=fwc.prototype=new Jb;_.gC=function hwc(){return UI};_.ac=function iwc(){return vad};_=Wzc.prototype=Vzc.prototype=new BGb;_.gC=function Xzc(){return hJ};_.Qd=function Yzc(){LGb(this,kMb());LGb(this,lMb());LGb(this,mMb());EGb(this,had,new NLb((fMb(),WLb),Vhb(0)));EGb(this,iad,new NLb(WLb,Vhb(0)));EGb(this,kad,new MLb(ZLb));EGb(this,jad,new MLb(ZLb));EGb(this,oad,new NLb(SLb,new OPb(15658734)));EGb(this,pad,new NLb(SLb,new OPb(1118481)));EGb(this,nad,new NLb(SLb,new OPb(328965)));EGb(this,wad,new NLb(TLb,new ihb(1)));EGb(this,qad,new NLb(TLb,new ihb(0.15)));EGb(this,rad,new NLb(TLb,new ihb(0.75)));EGb(this,lad,new MLb(ZLb));EGb(this,sad,new NLb(TLb,new ihb(1)));EGb(this,mad,new MLb(ZLb));EGb(this,tad,new NLb(dMb,new ZVb(0,0,1,1)));EGb(this,xad,new NLb(bMb,new oVb(0.75,0.375,0.1875)))};_.Rd=function Zzc(a){var b,c;c=new cpb(br(FL,{89:1,107:1},1,[yad,zad,Aad]));b=new cpb(br(FL,{89:1,107:1},1,[Bad,Cad,Dad]));NGb(this,VGb(a,br(JL,{89:1,107:1},118,[c,b])))};_.Sd=function $zc(a){var b,c;c=new cpb(br(FL,{89:1,107:1},1,[Ead]));b=new cpb(br(FL,{89:1,107:1},1,[Fad]));OGb(this,VGb(a,br(JL,{89:1,107:1},118,[c,b])))};_.cM={165:1};var _zc;_=eAc.prototype=bAc.prototype=new Jb;_.gC=function fAc(){return gJ};_.Td=function gAc(){return qAc(),cAc};_.Ud=function hAc(){return rAc(),dAc};var cAc=null,dAc=null;_=jAc.prototype=iAc.prototype=new Jb;_.gC=function kAc(){return eJ};_.ac=function lAc(){return Gad};_=nAc.prototype=mAc.prototype=new Jb;_.gC=function oAc(){return fJ};_.ac=function pAc(){return Had};var QG=Zgb(S6c,Iad,xE),PG=Zgb(S6c,Jad,ny),WI=Zgb(T7c,Kad,GB),VI=Zgb(T7c,Lad,ny),TI=Zgb(T7c,Mad,ny),UI=Zgb(T7c,Nad,ny),hJ=Zgb(T7c,Oad,GB),gJ=Zgb(T7c,Pad,ny),eJ=Zgb(T7c,Qad,ny),fJ=Zgb(T7c,Rad,ny);fOc(Wd)(23);